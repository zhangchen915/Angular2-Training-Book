{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/bootstrapping/bootstrapping.html",[]],["body/bootstrapping/bootstrapping.html",[0,2.3,1,0.615,2,9.451,3,6.3]],["title/Change-detection/angular_1_vs_angular_2.html",[]],["body/Change-detection/angular_1_vs_angular_2.html",[0,2.179,1,0.643,4,9.872,5,0.509,6,5.345,7,0.815,8,1.015,9,7.317,10,6.234,11,8.018,12,8.018,13,8.018,14,6.004,15,8.018,16,5.345,17,5.22,18,4.902,19,5.345]],["title/Change-detection/additional_resources.html",[]],["body/Change-detection/additional_resources.html",[0,2.195,1,0.651,5,0.415,20,8.19,21,8.19,22,4.84,23,7.775,24,8.19,25,3.874,26,5.215,27,7.001,28,10.797,29,10.797,30,8.765,31,5.006,32,8.19,33,4.39,34,6.132,35,6.367]],["title/bootstrapping/file_structure.html",[]],["body/bootstrapping/file_structure.html",[0,1.947,1,0.649,5,0.51,7,0.788,8,0.597,36,4.49,37,3.994,38,6.107,39,8.156,40,0.9,41,0.883,42,0.682,43,0.733,44,0.781,45,2.219,46,1.584,47,2.399,48,1.459,49,3.584,50,4.559,51,1.43,52,4.715,53,4.715,54,1.29,55,1.23,56,3.733,57,5.362,58,3.314,59,0.568,60,0.59,61,0.658,62,3.338,63,5.197,64,4.245,65,3.451,66,3.415,67,2.033,68,4.568,69,3.869,70,3.224,71,4.848,72,4.715,73,3.07,74,4.302,75,4.715,76,6.34,77,4.715,78,6.897,79,4.715,80,4.715,81,1.257,82,1.107,83,3.751,84,4.715,85,3.143,86,4.715,87,4.715]],["title/bootstrapping/bootstrapping_providers.html",[]],["body/bootstrapping/bootstrapping_providers.html",[0,1.816,1,0.475,5,0.491,7,0.602,8,0.923,37,4.224,40,0.688,41,0.717,42,0.722,43,0.775,44,0.826,45,2.295,47,2.537,54,1.364,55,1.301,56,4.004,59,0.878,60,0.913,61,1.019,62,4.502,63,4.224,64,3.45,65,3.936,66,5.283,67,3.145,68,3.489,69,3.145,81,1.944,82,1.713,88,3.837,89,10.244,90,1.058,91,7.294]],["title/Change-detection/Change_Detection.html",[]],["body/Change-detection/Change_Detection.html",[0,2.112,1,0.536,5,0.493,7,0.828,9,7.513,17,5.36,22,3.984,92,8.234,93,8.234,94,5.134,95,5.134,96,3.939,97,6.165,98,8.234,99,6.401,100,8.234,101,8.234,102,8.234,103,8.234,104,8.234,105,5.36,106,8.234]],["title/Change-detection/change_detection_strategy_onpush.html",[]],["body/Change-detection/change_detection_strategy_onpush.html",[0,1.836,1,0.399,5,0.515,7,0.506,22,4.015,40,0.578,41,0.603,42,0.606,43,0.651,44,0.694,46,1.408,54,1.146,55,1.093,56,3.243,81,1.633,82,1.439,107,6.735,108,7.836,109,4.764,110,4.975,111,5.239,112,6.128,113,8.18,114,3.333,115,5.592,116,6.45,117,7.092,118,9.611,119,6.1,120,5.283,121,7.092,122,7.092,123,3.333,124,5.239,125,4.589]],["title/Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush",[126,5.176]],["body/Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush",[1,0.396,5,0.502,7,0.502,22,2.942,40,0.573,41,0.598,42,0.602,43,0.646,44,0.688,46,1.396,54,1.137,55,1.084,56,2.376,81,1.62,82,1.428,107,4.935,108,7.811,109,4.726,110,4.935,111,5.197,113,8.165,115,5.547,116,6.415,117,7.054,119,6.083,120,5.254,121,7.054,122,7.054,124,5.197,125,4.552,127,6.08,128,6.08,129,6.08,130,6.08,131,6.08,132,6.08,133,6.08,134,6.08,135,6.08,136,6.08,137,8.98,138,6.08,139,6.08,140,6.08,141,6.08,142,6.08,143,6.08,144,6.08,145,6.08,146,6.08,147,6.08,148,6.08,149,6.08,150,6.08,151,6.08,152,6.08,153,6.08]],["title/Change-detection/change_detector_classes.html",[]],["body/Change-detection/change_detector_classes.html",[0,1.34,1,0.447,5,0.521,6,2.371,7,0.641,8,0.705,22,1.721,27,3.04,40,0.525,41,0.548,42,0.551,43,0.592,44,0.63,45,0.732,46,1.279,47,1.237,54,0.665,55,0.993,56,2.684,59,0.671,60,0.697,61,0.497,90,0.516,96,3.717,108,7.271,109,2.765,110,4.521,113,8.062,114,1.934,116,6.558,117,6.642,120,6.338,121,7.649,122,8.276,154,3.556,155,3.556,156,7.211,157,6.866,158,3.556,159,0.556,160,0.589,161,0.624,162,0.68,163,0.74,164,0.79,165,0.821,166,0.894,167,0.948,168,0.982,169,1.013,170,1.086,171,null,172,2.589,173,3.556,174,3.556,175,3.556,176,3.556,177,3.556,178,2.663,179,3.04,180,3.556,181,3.04,182,3.245,183,3.533,184,3.556,185,3.556,186,3.556,187,3.556,188,3.556,189,6.11,190,2.315,191,3.556,192,3.556,193,2.663,194,2.663,195,1.701]],["title/Change-detection/enforcing_immutability.html",[]],["body/Change-detection/enforcing_immutability.html",[0,0.666,1,0.435,5,0.516,7,0.683,8,0.683,22,2.61,27,2.918,34,6.584,36,2.222,40,0.63,41,0.658,42,0.662,43,0.71,44,0.757,45,1.811,46,1.745,47,2.326,48,1.668,51,1.636,54,1.009,55,0.962,56,1.334,59,0.65,60,0.675,61,0.753,90,0.782,108,5.198,109,2.654,110,2.771,111,2.918,113,7.288,116,4.193,120,4.257,124,2.918,156,2.918,159,0.843,160,0.893,161,0.947,162,1.031,163,1.123,164,1.199,165,1.246,166,1.356,167,1.437,172,3.353,181,2.918,189,4.843,193,2.556,194,5.006,196,4.039,197,1.516,198,1.242,199,3.178,200,3.236,201,4.962,202,2.129,203,4.611,204,2.04,205,1.823,206,2.771,207,3.363,208,5.394,209,3.115,210,5.394,211,3.115,212,3.414,213,1.856,214,1.884,215,2.174,216,3.115,217,2.556,218,3.115,219,3.307,220,1.633,221,2.654,222,3.414,223,3.414,224,3.115,225,3.115,226,2.129,227,3.115,228,5.428,229,3.414,230,3.115,231,3.115,232,5.394,233,3.414,234,3.115,235,3.115,236,3.115,237,3.414,238,3.414,239,3.115,240,2.939,241,1.856,242,3.062,243,2.334,244,2.334,245,2.087,246,2.918,247,4.922,248,3.115,249,3.414,250,3.414,251,3.414]],["title/Components/access_child_components_from_template.html",[]],["body/Components/access_child_components_from_template.html",[1,0.615,5,0.508,7,0.779,8,0.667,36,3.428,40,0.818,41,0.854,42,0.859,43,0.922,44,0.982,45,1.084,46,1.993,47,1.831,48,2.31,49,1.976,54,1.397,55,1.332,56,2.058,59,0.899,60,0.659,61,0.735,81,1.99,82,1.754,90,0.763,105,3.428,159,0.823,220,3.573,240,2.315,252,7.045,253,6.063,254,5.294,255,5.266,256,5.409,257,3.428,258,5.266,259,4.48,260,3.875,261,3.021,262,2.71,263,2.641,264,4.979,265,2.641,266,8.679,267,6.457,268,5.409,269,5.249,270,4.501,271,5.266,272,5.266,273,9.444,274,5.266,275,5.266,276,5.266,277,5.266,278,4.805,279,4.805]],["title/Components/app_structure_with_components.html",[]],["body/Components/app_structure_with_components.html",[0,1.317,1,0.439,5,0.502,7,0.557,40,0.636,41,0.664,42,0.668,43,0.717,44,0.764,49,3.704,59,0.813,254,5.533,267,8.311,280,12.155,281,6.034,282,7.582]],["title/Components/components.html",[]],["body/Components/components.html",[0,1.902,1,0.675,5,0.51,7,0.718,8,0.832,40,0.82,41,0.855,42,0.861,43,0.924,44,0.744,46,1.998,51,2.638,59,0.792,60,0.823,195,3.145,260,3.163,283,3.874,284,4.762,285,6.575,286,8.697,287,8.697,288,3.685,289,8.697,290,5.62,291,4.923,292,5.337,293,8.697,294,8.697,295,6.299,296,5.797,297,8.697,298,6.575,299,5.62,300,6.575,301,5.999,302,5.337]],["title/Components/creating_components.html",[]],["body/Components/creating_components.html",[0,1.341,1,0.447,5,0.514,7,0.567,8,0.87,40,0.647,41,0.676,42,0.68,43,0.73,44,0.777,45,1.415,46,2.513,47,3.113,48,2.769,51,2.715,54,1.285,55,1.225,59,0.827,60,0.86,61,0.959,90,0.996,159,1.073,171,null,172,2.289,241,3.736,260,3.256,303,6.869,304,5.098,305,8.167,306,6.869,307,4.828,308,6.869,309,6.869,310,6.869,311,6.869]],["title/Components/passing_data_into_components.html",[]],["body/Components/passing_data_into_components.html",[0,2.017,1,0.632,3,4.346,5,0.513,6,4.346,7,0.714,40,0.815,41,0.851,42,0.645,43,0.692,44,0.738,45,1.342,46,1.986,47,2.267,48,2.016,51,1.977,54,1.219,55,1.163,59,0.785,60,0.816,172,2.172,240,4.543,260,3.76,267,7.354,304,6.126,305,5.948,307,4.582,312,6.519,313,6.519,314,7.392,315,6.519,316,6.519]],["title/Components/responding_to_component_events.html",[]],["body/Components/responding_to_component_events.html",[0,0.804,1,0.587,3,2.746,5,0.509,7,0.745,8,0.953,25,1.949,36,2.682,40,0.85,41,0.887,42,0.831,43,0.892,44,0.852,45,1.55,46,2.18,47,2.619,48,2.329,49,1.546,51,1.25,54,1.408,55,1.343,56,1.61,59,0.907,60,0.943,61,1.051,81,1.662,82,1.465,90,1.092,159,1.176,160,1.247,161,1.095,162,0.787,163,0.858,164,0.915,198,2.269,204,3.177,219,2.716,220,3.602,240,3.31,242,4.346,252,5.064,267,6.168,268,4.518,317,4.12,318,4.161,319,4.12,320,4.12,321,4.12,322,5.064,323,8.114,324,5.347,325,5.315,326,3.759,327,5.064,328,5.692,329,8.004,330,4.158,331,1.274,332,4.12,333,2.569,334,6.238,335,2.12,336,7.529,337,4.12,338,3.759,339,4.384,340,3.522,341,4.12]],["title/Components/projection.html",[]],["body/Components/projection.html",[0,1.132,1,0.595,5,0.509,7,0.787,8,1.012,40,0.862,41,0.85,42,0.855,43,0.849,44,0.905,45,1.195,46,1.986,47,2.018,48,2.196,51,2.153,54,1.085,55,1.843,59,0.963,60,1.001,61,0.991,81,0.999,82,0.88,83,2.038,90,1.029,159,0.585,172,1.249,219,2.526,240,1.647,242,4.732,244,2.562,245,2.291,252,5.763,253,5.763,267,6.252,342,3.747,343,6.924,344,7.099,345,7.099,346,5.802,347,9.535,348,2.208,349,6.507,350,3.747,351,3.747,352,3.747,353,3.419,354,2.498,355,2.913,356,2.714,357,5.561,358,5.617,359,2.498,360,3.747,361,3.747,362,3.747,363,6.721,364,6.307,365,7.099,366,2.337]],["title/Components/structuring_applications_with_components.html",[]],["body/Components/structuring_applications_with_components.html",[5,0.494,367,9.224,368,7.171,369,9.224,370,7.171,371,9.224,372,6.005]],["title/Components/using_other_components.html",[]],["body/Components/using_other_components.html",[1,0.445,5,0.513,7,0.564,8,0.866,40,0.645,41,0.673,42,0.677,43,0.726,44,0.774,45,2.25,47,2.379,54,1.279,55,1.22,59,0.824,60,0.856,61,0.955,65,4.203,67,3.848,68,3.271,90,0.992,159,1.068,160,1.133,161,1.2,162,1.307,163,1.424,373,9.934,374,9.934,375,9.934,376,6.839,377,6.839,378,8.924,379,6.839,380,6.839]],["title/Components/two_way_data_binding.html",[]],["body/Components/two_way_data_binding.html",[1,0.518,5,0.512,7,0.811,8,0.729,22,2.787,40,0.75,41,0.782,42,0.787,43,0.845,44,0.9,45,1.186,46,1.827,47,2.003,48,1.782,54,1.077,55,1.027,59,0.694,60,0.721,61,0.804,81,1.535,82,1.353,90,0.835,105,5.93,159,0.9,160,0.954,161,1.011,198,2.095,204,2.179,219,3.462,220,3.804,240,4.531,242,3.642,260,2.893,267,3.938,268,4.172,318,2.854,322,4.676,324,5.8,325,5.366,326,5.256,327,6.456,328,7.257,329,8.367,333,3.592,349,4.605,357,4.204,381,5.76,382,5.76,383,5.76,384,5.76]],["title/Di/angular2_di.html",[]],["body/Di/angular2_di.html",[0,2.066,1,0.672,5,0.513,7,0.572,8,0.877,40,0.653,41,0.681,42,0.686,43,0.736,44,0.784,45,1.427,46,1.88,47,2.41,54,0.887,55,1.783,59,0.834,60,0.868,61,0.968,65,4.05,67,3.881,69,2.987,88,2.911,90,1.005,159,0.741,160,0.786,161,0.833,162,0.907,163,0.988,164,1.054,165,1.096,166,1.193,167,1.264,171,null,385,4.744,386,3.089,387,3.688,388,4.744,389,4.329,390,3.537,391,8.527,392,3.722,393,7.256,394,8.825,395,8.825]],["title/Di/angular2_di.html#Angular-2’s-DI",[0,0.518,386,1.726,396,2.652]],["body/Di/angular2_di.html#Angular-2’s-DI",[0,1.57,1,0.441,5,0.506,7,0.559,8,0.858,40,0.639,41,0.666,42,0.67,43,0.72,44,0.767,45,1.395,46,1.847,54,0.861,55,1.764,59,0.816,60,0.848,61,0.946,65,4,67,3.825,69,2.921,88,2.86,90,0.982,159,0.719,160,0.762,161,0.808,162,0.879,163,0.958,164,1.023,165,1.063,166,1.157,167,1.226,171,null,387,3.578,390,3.493,391,8.467,392,3.682,393,7.187,394,8.741,395,8.741,397,4.602,398,4.602,399,4.602,400,4.199,401,4.602,402,4.602,403,4.602,404,4.602,405,3.008,406,4.602,407,4.602,408,4.602,409,4.602,410,3.234,411,2.626,412,4.602,413,4.602,414,3.736,415,4.602,416,4.602,417,1.878,418,4.602,419,4.602,420,4.602,421,4.602,422,4.602,423,2.996,424,4.602,425,4.602,426,4.602,427,4.602,428,4.602,429,4.602,430,4.602,431,4.602]],["title/Di/avoiding_collisions_opaque_token.html",[]],["body/Di/avoiding_collisions_opaque_token.html",[0,1.517,1,0.63,5,0.513,7,0.799,8,0.45,25,4.424,37,2.059,40,0.913,41,0.952,42,0.885,43,0.95,44,0.63,45,1.414,47,1.237,54,1.941,55,1.668,59,0.428,60,0.445,61,0.497,65,2.905,69,2.401,81,1.484,82,1.308,88,3,90,0.516,96,3.717,171,null,183,1.83,205,1.202,260,1.294,263,1.784,331,2.403,386,2.315,390,3.577,432,7.859,433,5.57,434,3.245,435,2.731,436,9.252,437,6.7,438,5.869,439,4.761,440,6.265,441,3.245,442,5.869,443,3.245,444,5.082,445,6.265,446,3.556,447,6.265,448,3.556,449,3.713,450,5.082,451,2.499,452,4.521,453,2.371,454,3.04,455,2.765,456,3.556,457,3.556,458,3.556,459,3.245,460,5.082,461,5.082,462,3.245,463,3.245,464,3.245]],["title/Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken",[465,5.176]],["body/Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken",[1,0.599,5,0.513,7,0.76,8,0.547,25,3.057,37,2.5,40,0.868,41,0.905,42,0.766,43,0.823,44,0.489,45,1.331,54,1.874,55,1.642,59,0.52,60,0.541,61,0.603,65,3.276,69,2.786,81,1.15,82,1.014,88,3.274,90,0.626,96,3.091,171,null,390,3.176,417,2.636,432,3.504,434,3.939,435,1.887,436,8.804,437,4.838,438,5.524,439,3.69,440,5.896,441,3.939,442,5.524,443,3.939,444,5.896,445,7.066,447,7.066,449,4.307,450,5.896,453,2.878,466,4.317,467,4.317,468,5.896,469,4.317,470,4.317,471,4.317,472,4.317,473,4.317,474,4.317,475,5.896,476,5.896,477,4.317,478,4.317,479,4.317,480,4.317,481,3.034,482,4.317,483,4.317,484,4.317,485,4.317,486,4.317,487,4.317,488,4.317,489,4.317,490,7.744,491,4.317,492,4.317,493,4.317,494,4.317,495,4.317,496,4.317,497,4.317,498,4.317,499,4.317,500,4.317]],["title/Di/avoiding_collisions_opaque_token.html#OpaqueToken",[432,4.202]],["body/Di/avoiding_collisions_opaque_token.html#OpaqueToken",[1,0.597,5,0.51,7,0.756,40,0.864,41,0.901,42,0.907,43,0.973,44,0.659,45,1.2,54,1.846,55,1.429,81,1.552,82,1.368,96,3.834,171,null,183,2.998,205,1.969,260,2.119,331,3.053,390,3.646,411,2.258,432,8.401,435,3.022,436,9.142,438,4.98,439,4.98,442,4.98,459,5.316,460,7.313,461,7.313,462,5.316,463,5.316,464,5.316,468,5.316,475,7.313,476,7.313,501,5.826,502,5.826,503,5.826,504,5.826,505,5.826]],["title/Di/di.html",[]],["body/Di/di.html",[0,2.206,1,0.694,5,0.378,386,5.934,506,9.114,507,9.114,508,9.114,509,9.114,510,9.114,511,9.114]],["title/Di/di_framework.html",[]],["body/Di/di_framework.html",[1,0.532,5,0.516,7,0.767,40,0.564,41,0.589,42,0.592,43,0.636,331,3.524,386,5.315,387,7.224,435,3.148,512,8.578,513,8.931,514,9.838,515,7.45,516,6.353,517,2.052,518,5.985,519,5.116,520,5.461,521,5.461,522,1.758,523,5.985,524,5.985,525,5.116,526,5.985]],["title/Di/inject_and_injectable.html",[]],["body/Di/inject_and_injectable.html",[0,1.992,1,0.68,5,0.513,7,0.628,8,0.963,40,0.717,41,0.748,42,0.752,43,0.808,44,0.861,45,2.102,46,1.945,47,2.644,48,1.953,49,3.177,51,1.916,54,1.422,55,1.356,59,0.916,60,0.952,61,0.882,81,1.116,82,0.983,90,0.916,96,3.637,159,0.987,171,null,172,1.395,197,1.859,261,1.694,386,2.726,389,3.821,390,4.169,391,8.273,393,5.344,394,6.499,395,6.499,512,4.909,513,3.579,527,4.187,528,3.033,529,4.187,530,4.187,531,6.938,532,4.187,533,4.187,534,4.187,535,4.187,536,4.187,537,4.187,538,1.959,539,3.821,540,5.763,541,8.467,542,2.245,543,4.187,544,6.315,545,2.467,546,3.579,547,4.187]],["title/Di/injection_beyond_classes.html",[]],["body/Di/injection_beyond_classes.html",[0,1.967,1,0.707,5,0.516,7,0.684,8,0.434,40,0.781,41,0.815,42,0.82,43,0.881,44,0.938,45,2.152,46,2.024,47,2.883,48,1.061,49,3.781,51,1.04,54,1.551,55,1.478,59,0.917,60,0.84,61,0.479,65,4.163,81,1.442,82,1.271,88,3.99,90,0.497,171,null,198,1.247,203,4.627,265,3.364,390,2,391,6.849,435,1.001,449,5.076,522,1.008,539,4.939,540,6.119,546,2.931,548,7.615,549,6.949,550,3.608,551,6.949,552,6.949,553,3.429,554,6.949,555,3.429,556,4.394,557,3.92,558,7.761,559,3.429,560,3.129]],["title/Di/injection_beyond_classes.html#类以外的注入",[561,5.176]],["body/Di/injection_beyond_classes.html#类以外的注入",[0,0.992,1,0.519,5,0.515,7,0.658,8,0.401,40,0.751,41,0.784,42,0.789,43,0.847,44,0.902,45,2.108,46,1.954,48,0.98,49,3.598,51,0.961,54,1.491,55,1.422,59,0.877,60,0.797,61,0.442,65,4.056,81,1.354,82,1.193,88,3.934,90,0.459,171,null,198,1.152,203,4.343,265,3.192,390,1.877,391,6.615,405,1.406,410,2.226,411,3.09,417,2.596,435,0.925,449,4.853,481,2.226,522,0.931,546,2.707,549,6.644,550,3.387,551,6.644,552,6.644,554,6.644,556,4.125,557,3.68,558,5.91,560,2.89,562,3.167,563,3.167,564,3.167,565,3.167,566,3.167,567,3.167,568,5.081,569,3.167,570,3.167,571,3.167,572,3.167,573,3.167,574,3.167,575,7.281,576,5.081,577,6.363,578,3.167,579,3.167,580,3.167,581,3.167,582,3.167,583,3.167,584,3.167,585,3.167,586,3.167,587,3.167,588,3.167,589,3.167,590,3.167,591,3.167,592,6.363,593,3.167,594,2.294,595,3.167,596,3.167,597,3.167,598,3.167,599,3.167,600,3.167,601,3.167,602,3.167,603,3.167,604,3.167,605,3.167,606,3.167,607,3.167,608,3.167,609,3.167,610,2.89,611,3.167,612,2.462]],["title/Di/the_injector_tree.html",[]],["body/Di/the_injector_tree.html",[0,1.279,1,0.586,5,0.514,7,0.599,8,0.919,14,3.292,17,1.727,40,0.684,41,0.714,42,0.719,43,0.771,44,0.822,45,2.041,46,2.131,47,2.526,48,1.742,49,2.725,50,1.347,51,1.708,54,1.358,55,1.295,59,0.875,60,0.909,61,0.915,62,2.127,63,1.536,64,1.255,65,2.382,66,1.921,67,1.143,68,1.269,69,1.143,81,0.707,82,0.623,88,3.2,90,0.95,119,1.536,159,1.023,160,0.933,161,0.772,162,1.076,163,0.915,164,0.977,165,1.015,166,1.105,167,1.172,168,1.214,169,1.252,170,1.342,171,null,172,0.884,198,2.048,219,4.143,265,5.194,295,4.744,343,5.502,386,1.727,387,5.645,390,2.683,435,0.774,522,0.779,556,2.153,557,4.078,558,3.569,613,2.42,614,2.42,615,2.153,616,4.012,617,2.42,618,4.012,619,2.42,620,2.42,621,2.42,622,2.42,623,2.42,624,1.378,625,5.138,626,5.977,627,2.652,628,9.557,629,6.55,630,3.292,631,1.563,632,2.42,633,1.986,634,2.42,635,2.42,636,1.813,637,4.012,638,2.42,639,4.012,640,4.571,641,5.138,642,2.42,643,2.42,644,3.957,645,1.986,646,2.652,647,2.42,648,0.872,649,0.922,650,0.972,651,0.995,652,1.011,653,1.073,654,2.652,655,2.42,656,2.652,657,2.42,658,4.012,659,2.652]],["title/Di/the_injector_tree.html#注入树",[660,5.176]],["body/Di/the_injector_tree.html#注入树",[0,0.808,1,0.454,5,0.513,7,0.576,8,0.883,14,3.101,17,1.607,40,0.658,41,0.686,42,0.69,43,0.741,44,0.79,45,1.999,46,2.077,48,1.655,49,2.35,50,1.254,51,1.623,54,1.305,55,1.244,59,0.84,60,0.874,61,0.875,62,2.004,65,2.263,67,1.064,68,1.181,69,1.064,81,0.658,82,0.58,88,3.113,90,0.908,119,1.43,159,0.978,160,0.886,161,0.727,162,1.022,163,0.862,164,0.92,165,0.956,166,1.041,167,1.104,168,1.144,169,1.179,170,1.264,171,null,172,0.823,198,1.946,219,4.045,265,5.102,295,4.536,343,4.401,386,1.607,387,4.869,390,2.578,405,1.839,411,2.705,435,0.721,481,1.735,522,0.725,556,2.004,557,3.874,558,3.362,594,1.788,614,2.253,615,2.004,616,3.779,617,2.253,618,3.779,619,2.253,620,2.253,621,2.253,622,2.253,623,2.253,624,1.298,625,4.881,626,5.714,628,9.395,630,3.101,631,1.454,632,2.253,633,1.848,634,2.253,635,2.253,636,1.688,637,3.779,638,2.253,639,2.253,640,4.342,641,4.881,642,2.253,643,2.253,644,3.759,645,1.848,647,2.253,648,0.811,649,0.859,650,0.905,651,0.926,652,0.941,653,0.998,655,2.253,657,2.253,658,3.779,661,2.469,662,2.469,663,2.469,664,2.469,665,1.919,666,2.469,667,2.469,668,2.469,669,2.469,670,2.469,671,2.469,672,2.469,673,2.469,674,2.469,675,2.469,676,2.469,677,2.469,678,4.141,679,2.469,680,2.469,681,2.469,682,2.469,683,2.469,684,2.469,685,2.469,686,2.469,687,2.469,688,2.469,689,2.469,690,2.469,691,2.469,692,2.469,693,2.469,694,2.469,695,1.454,696,1.572,697,1.919,698,2.469,699,2.469,700,2.469,701,2.469,702,2.469,703,2.469,704,5.349,705,4.141,706,2.469,707,2.469,708,2.469,709,2.469,710,2.469,711,2.469,712,2.469,713,2.469,714,2.469,715,2.469]],["title/Di/what_is_di.html",[]],["body/Di/what_is_di.html",[0,0.765,1,0.606,5,0.512,7,0.728,8,1.036,40,0.832,41,0.868,42,0.81,43,0.869,44,0.926,55,1.574,59,0.986,60,1.025,171,null,172,2.433,331,3.17,392,4.151,512,6.86,513,9.988,514,10.702,515,3.577,516,6.934,519,5.134,520,5.48,521,5.48,531,3.577,538,1.834,716,6.006,717,3.92,718,3.92,719,3.92,720,3.92,721,3.92,722,3.92,723,2.755,724,3.92]],["title/Directives/attribute_directives.html",[]],["body/Directives/attribute_directives.html",[0,1.868,5,0.478,725,9.569]],["title/Directives/directives.html",[]],["body/Directives/directives.html",[0,2.244,1,0.749,5,0.487,19,5.833,46,2.01,288,5.834,726,8.75,727,8.75,728,6.803]],["title/Directives/directives.html#指令",[729,4.202]],["body/Directives/directives.html#指令",[19,5.867,665,6.842,728,6.842,730,8.801,731,8.801,732,8.801,733,8.801,734,8.801,735,8.801,736,8.801,737,8.801,738,8.801,739,8.801,740,8.801,741,8.801,742,8.801,743,8.801,744,8.801,745,8.801]],["title/Directives/ng_class_directive.html",[]],["body/Directives/ng_class_directive.html",[1,0.513,5,0.505,7,0.576,8,0.884,40,0.658,41,0.687,42,0.691,43,0.741,44,0.79,46,1.603,48,2.159,49,2.62,51,2.117,54,1.306,55,1.789,59,0.841,60,0.874,61,0.975,81,1.86,82,1.639,83,1.985,90,1.012,123,1.985,159,1.091,160,1.156,161,1.225,162,1.334,163,1.453,164,1.551,165,1.612,166,1.755,167,1.515,168,1.57,169,1.619,170,1.114,172,1.216,183,2.925,195,2.719,199,2.15,219,3.937,220,1.746,221,2.837,241,3.796,243,4.773,244,3.886,245,3.474,262,3.592,340,3.12,349,4.042,355,2.837,356,2.643,357,3.69,358,4.906,542,1.956,624,1.144,648,1.199,649,1.269,650,1.338,651,1.37,652,1.392,653,1.476,746,6.001,747,3.649,748,5.186,749,3.649,750,5.186,751,3.33,752,3.12,753,3.33,754,5.186,755,5.22,756,3.33,757,3.649,758,4.614,759,2.962,760,2.324,761,5.666,762,2.643,763,3.12,764,2.376,765,3.33,766,3.33,767,3.649,768,1.62,769,4.544,770,6.369,771,7.792,772,3.649,773,3.33,774,3.33,775,2.962,776,3.33,777,3.33,778,3.33,779,3.33,780,4.418,781,4.614,782,5.227,783,3.33,784,2.962,785,3.33,786,3.33,787,3.33,788,2.732,789,3.33,790,3.649]],["title/Directives/ng_class_directive.html#NgClass-指令",[729,2.847,746,2.465]],["body/Directives/ng_class_directive.html#NgClass-指令",[55,1.717,746,6.768,791,9.63,792,9.63]],["title/Directives/ng_class_directive.html#绑定一个字符串",[793,5.176]],["body/Directives/ng_class_directive.html#绑定一个字符串",[1,0.417,5,0.504,7,0.529,8,0.811,40,0.604,41,0.63,42,0.634,43,0.681,44,0.725,46,1.472,48,1.983,51,1.944,54,1.199,55,1.831,59,0.772,60,0.803,61,0.895,81,1.708,82,1.505,90,0.929,159,1.001,160,1.062,161,1.125,162,1.225,163,1.334,164,1.424,165,1.48,166,1.611,167,1.708,168,1.771,169,1.826,219,3.723,241,3.486,243,4.383,244,4.383,245,3.918,262,4.952,349,3.712,357,3.388,358,4.505,746,4.505,748,7.803,750,7.803,751,5.849,752,5.479,753,5.849,754,7.803,755,3.918,756,5.849,794,6.41,795,6.41,796,3.712,797,6.41,798,6.41,799,6.41,800,6.41,801,3.997,802,6.41]],["title/Directives/ng_class_directive.html#绑定一个数组",[803,5.176]],["body/Directives/ng_class_directive.html#绑定一个数组",[1,0.447,5,0.505,7,0.567,8,0.87,40,0.647,41,0.676,42,0.68,43,0.73,44,0.777,46,1.578,48,2.125,51,2.084,54,1.285,55,1.596,59,0.827,60,0.86,61,0.959,81,1.831,82,1.613,90,0.996,159,1.073,160,1.138,161,1.206,162,1.313,163,1.43,164,1.526,165,1.587,166,1.727,219,3.896,241,3.736,349,3.978,357,3.631,358,4.828,746,4.828,755,4.199,758,5.576,759,5.576,760,4.374,761,7.266,762,4.975,763,5.872,764,4.472,765,6.268,766,6.268,796,3.978,804,6.869,805,6.869,806,6.869,807,6.869,808,6.869]],["title/Directives/ng_class_directive.html#绑定一个对象",[809,5.176]],["body/Directives/ng_class_directive.html#绑定一个对象",[1,0.355,5,0.5,7,0.45,8,0.69,40,0.514,41,0.536,42,0.54,43,0.579,44,0.617,46,1.252,48,1.687,51,1.654,54,1.02,55,1.365,59,0.657,60,0.683,61,0.761,81,1.453,82,1.281,90,0.791,159,0.852,160,0.903,161,0.957,162,1.042,163,1.135,164,1.212,165,1.259,166,1.371,167,1.453,168,1.506,169,1.553,170,1.665,183,2.806,195,3.662,219,3.332,220,2.609,241,2.965,243,5.234,244,3.728,245,3.333,340,4.661,349,3.158,355,4.239,356,3.949,357,2.882,358,3.832,405,2.421,542,2.923,624,1.709,648,1.792,649,1.897,650,1.999,651,2.046,652,2.079,653,2.205,746,3.832,755,5.407,761,4.426,768,2.421,769,5.759,770,8.072,771,9.219,773,4.975,774,4.975,775,4.426,776,4.975,777,4.975,778,4.975,779,4.975,780,5.951,781,6.214,782,6.623,783,4.975,784,4.426,785,4.975,786,4.975,787,4.975,788,4.083,789,4.975,796,3.158,810,5.453,811,5.453,812,5.453,813,4.975,814,5.453,815,5.453,816,5.453,817,5.453]],["title/Directives/ng_if_directive.html",[]],["body/Directives/ng_if_directive.html",[1,0.586,5,0.512,7,0.743,8,0.713,40,0.848,41,0.77,42,0.557,43,0.598,44,0.638,46,1.294,48,1.742,49,2.114,51,3.293,54,1.054,55,1.005,56,2.202,58,5.504,59,0.678,60,0.705,61,0.787,82,1.839,90,0.817,159,0.88,160,0.933,161,0.989,162,1.076,163,1.173,195,2.695,220,2.695,221,4.379,242,3.586,304,4.46,542,3.019,818,8.018,819,5.633,820,5.633,821,4.815,822,5.633,823,6.155,824,5.633,825,5.633,826,5.633,827,2.862,828,4.379,829,4.535,830,5.633,831,4.08,832,5.633,833,5.633,834,4.573,835,7.145,836,5.633,837,7.831,838,7.831,839,5.633,840,5.633]],["title/Directives/ng_switch_directives.html",[]],["body/Directives/ng_switch_directives.html",[1,0.336,5,0.503,7,0.426,8,0.653,40,0.486,41,0.507,42,0.51,43,0.548,44,0.584,46,1.185,48,1.596,49,4.063,50,2.621,51,1.565,54,0.965,55,0.92,56,2.017,59,0.621,60,0.646,61,0.72,81,1.375,82,1.212,90,0.748,159,0.806,160,0.854,161,0.906,162,0.986,163,1.074,164,1.146,165,1.192,166,1.297,167,1.375,168,1.425,169,1.469,170,1.575,198,3.122,204,1.952,242,4.285,323,6.292,349,6.472,364,3.217,522,1.516,624,1.617,648,1.695,649,1.794,650,1.891,841,7.596,842,5.159,843,4.708,844,9.666,845,5.159,846,5.159,847,7.361,848,5.159,849,5.159,850,7.361,851,5.159,852,5.159,853,8.582,854,5.159,855,5.159,856,5.159,857,5.159,858,4.708,859,5.159,860,4.708,861,4.708,862,3.626,863,7.361,864,5.159]],["title/Directives/ng_for_directive.html",[]],["body/Directives/ng_for_directive.html",[0,0.716,1,0.515,5,0.51,7,0.578,8,0.887,10,1.665,31,1.309,40,0.66,41,0.689,42,0.693,43,0.744,44,0.793,46,1.609,48,1.766,49,3.213,50,1.865,51,2.398,54,0.901,55,0.859,56,1.435,59,0.844,60,0.877,61,0.797,81,1.712,82,2.298,90,0.698,120,6.542,123,1.164,159,0.753,160,0.798,161,0.846,162,0.92,163,1.003,164,1.07,165,0.848,166,0.923,167,0.571,168,0.591,169,0.61,170,0.654,190,5.574,195,2.731,198,1.335,201,1.284,204,1.822,205,1.628,207,1.335,220,1.756,240,0.941,263,4.747,269,2.58,270,1.83,331,0.662,522,0.629,624,0.671,648,0.704,649,0.745,650,0.785,651,0.804,652,0.817,653,0.866,746,3.386,768,0.951,821,1.83,865,3.489,866,7.092,867,6.422,868,5.86,869,3.67,870,3.138,871,9.375,872,5.709,873,5.209,874,5.709,875,3.67,876,3.67,877,3.67,878,7.006,879,7.006,880,3.67,881,3.349,882,3.138,883,2.51,884,3.349,885,4.396,886,3.349,887,3.67,888,7.006,889,7.006,890,3.349,891,3.67,892,3.349,893,2.51,894,1.954,895,3.67,896,3.607,897,1.738,898,1.551,899,5.989,900,5.86,901,3.349,902,1.954,903,1.954,904,2.141,905,6.393,906,2.141,907,3.004,908,0.98,909,1.002,910,1.036,911,1.117,912,1.148,913,1.182,914,1.164,915,1.182,916,1.182,917,1.148,918,1.2,919,1.24,920,1.284,921,2.141,922,2.141,923,1.954,924,1.954,925,2.141,926,1.427,927,2.141,928,2.141,929,2.141,930,2.141,931,2.141,932,2.141,933,3.67,934,3.67,935,2.141,936,1.954,937,1.551,938,1.914,939,1.335,940,1.954,941,1.954,942,1.954,943,1.954,944,1.954,945,1.954,946,1.954,947,1.954,948,1.954,949,1.309,950,1.511,951,1.394,952,2.141,953,1.505]],["title/Directives/ng_for_directive.html#局部变量",[954,5.176]],["body/Directives/ng_for_directive.html#局部变量",[0,0.513,1,0.424,5,0.51,7,0.538,8,0.825,40,0.614,41,0.641,42,0.645,43,0.692,44,0.737,46,1.003,48,1.35,49,1.638,51,1.976,54,0.817,55,0.778,56,1.028,59,0.785,60,0.816,61,0.782,81,1.491,82,2.172,90,0.633,120,6.177,123,1.43,159,0.682,160,0.723,161,0.766,162,0.834,163,0.909,164,0.97,165,0.607,166,0.661,167,0.701,168,0.726,169,0.749,170,0.803,190,4.242,198,1.588,201,1.577,204,1.651,205,1.475,207,1.64,220,2.088,240,1.156,263,4.867,269,3.068,270,2.248,331,0.813,522,0.773,594,1.904,624,0.824,648,0.864,649,0.915,650,0.964,651,0.987,652,1.003,653,1.063,746,3.933,768,1.167,796,1.523,821,2.248,866,6.873,868,5.107,871,8.852,873,3.983,881,2.399,882,2.248,884,2.399,885,2.399,886,2.399,890,2.399,892,2.399,896,4.19,897,2.135,898,1.904,899,6.664,900,6.595,901,3.983,902,2.399,905,7.113,907,3.49,908,1.204,909,1.23,910,1.272,911,1.371,912,1.409,913,1.451,914,1.43,915,1.451,916,1.451,917,1.409,918,1.474,919,1.523,920,1.577,923,2.399,924,2.399,936,2.399,937,1.904,938,1.371,939,1.64,940,2.399,941,2.399,942,2.399,943,2.399,944,2.399,945,2.399,946,2.399,947,2.399,948,2.399,949,1.607,950,1.797,951,1.712,953,1.848,955,2.629,956,2.629,957,2.629,958,2.629,959,2.629,960,2.629,961,3.731,962,5.596,963,2.629,964,2.629,965,2.629,966,2.629,967,2.629,968,2.629,969,2.629,970,2.629,971,2.629,972,2.629,973,2.629,974,2.629,975,2.629,976,2.629,977,1.753,978,2.629,979,2.629,980,2.629,981,2.629,982,2.629,983,2.629,984,6.515,985,2.629,986,2.629,987,2.629,988,2.629,989,2.629,990,4.365,991,4.365,992,2.629,993,2.629,994,2.629,995,4.365,996,4.365,997,2.629,998,2.629,999,2.629,1000,5.596,1001,5.596,1002,2.629,1003,2.629,1004,2.629,1005,2.629,1006,2.629,1007,5.596,1008,5.596,1009,2.629,1010,2.629,1011,2.629,1012,2.629,1013,2.629,1014,2.629,1015,1.969,1016,2.629,1017,2.629,1018,2.248,1019,2.629,1020,2.629,1021,2.629,1022,2.629,1023,2.629,1024,2.629]],["title/Directives/ng_style_directive.html",[]],["body/Directives/ng_style_directive.html",[0,1.43,1,0.557,5,0.51,7,0.605,8,0.927,40,0.691,41,0.721,42,0.725,43,0.778,44,0.829,46,1.683,48,2.266,49,2.749,51,2.222,54,1.37,55,1.307,59,0.882,60,0.917,61,1.023,81,1.366,82,2.008,83,2.787,90,1.062,159,1.145,160,1.213,161,1.286,162,1.4,163,1.067,164,1.139,219,4.061,241,5.367,244,5.009,245,4.478,246,6.262,349,4.242,356,5.306,357,3.872,358,5.149,755,4.478,760,4.665,761,5.947,762,5.306,763,6.262,1025,9.034,1026,7.326,1027,7.326,1028,8.513,1029,6.685,1030,5.125,1031,5.125,1032,4.676,1033,2.919,1034,5.125,1035,4.676]],["title/Directives/ng_style_directive.html#NgStyle-指令",[729,2.847,1025,2.998]],["body/Directives/ng_style_directive.html#NgStyle-指令",[0,0.99,1,0.474,5,0.504,7,0.6,8,0.921,40,0.686,41,0.715,42,0.72,43,0.773,44,0.823,46,1.671,48,2.25,51,2.206,54,1.361,55,1.297,59,0.876,60,0.911,61,1.016,81,1.352,82,1.192,90,1.055,159,1.136,160,1.205,161,1.277,162,1.39,163,1.056,164,1.127,219,4.043,241,5.346,245,4.446,349,4.212,356,5.268,357,3.845,358,5.112,417,2.07,796,4.212,1025,8.746,1028,8.474,1029,6.637,1032,4.63,1035,4.63,1036,5.074,1037,5.074,1038,5.074,1039,5.905,1040,7.274,1041,6.637,1042,7.274,1043,7.274,1044,7.274,1045,7.274,1046,7.274,1047,7.274,1048,7.274,1049,5.074,1050,5.074,1051,5.074,1052,5.074,1053,5.074,1054,5.074,1055,5.074,1056,5.074,1057,5.074,1058,5.074,1059,5.074,1060,5.074,1061,5.074,1062,5.074]],["title/Directives/structural_directives.html",[]],["body/Directives/structural_directives.html",[0,1.796,1,0.676,5,0.511,7,0.817,8,0.743,19,6.132,40,0.867,41,0.905,42,0.91,43,0.977,44,1.041,46,2.113,48,2.846,49,3.024,51,3.33,59,1.108,60,0.735,82,1.892,83,3.192,95,5.736,190,3.822,219,4.666,288,6.009,796,3.399,818,4.251,841,4.765,1039,4.765,1063,4.395,1064,5.356,1065,5.87,1066,5.87,1067,4.563]],["title/Directives/structural_directives.html#结构指令",[1068,5.176]],["body/Directives/structural_directives.html#结构指令",[0,1.577,1,0.6,5,0.488,7,0.761,8,0.746,19,6.145,40,0.869,41,0.907,42,0.912,43,0.979,44,1.043,46,2.117,48,2.851,51,3.334,59,1.11,60,0.738,95,5.748,190,3.836,219,4.672,288,6.016,405,2.616,417,3.296,423,3.836,796,5.338,818,4.268,841,4.784,1039,7.483,1064,5.377,1067,4.581,1069,5.893,1070,5.893,1071,5.893,1072,5.893,1073,5.893,1074,5.893,1075,5.893,1076,5.893,1077,5.893,1078,5.893,1079,5.893,1080,5.893,1081,5.893,1082,5.893,1083,5.893,1084,5.893,1085,5.893,1086,5.893]],["title/Directives/using_multiple_structural_directives.html",[]],["body/Directives/using_multiple_structural_directives.html",[0,0.872,1,0.569,5,0.505,7,0.771,8,0.839,40,0.88,41,0.652,42,0.656,43,0.704,44,0.75,45,0.92,46,1.815,47,1.554,48,2.051,49,2.488,50,3.368,51,2.968,54,0.836,55,0.797,56,1.746,59,0.798,60,0.83,61,0.624,81,1.767,82,1.557,90,0.648,120,5.033,159,0.698,160,0.74,161,0.784,162,0.854,163,0.93,164,0.993,165,1.032,166,1.123,167,1.191,168,1.234,169,1.272,170,1.364,190,5.693,198,2.875,242,4.48,282,4.419,323,3.819,349,6.262,364,2.786,522,1.313,624,1.4,648,1.468,649,1.554,650,1.638,651,1.677,652,1.704,653,1.807,768,1.984,818,3.236,841,3.627,843,4.077,844,9.266,858,4.077,860,4.077,861,4.077,865,3.236,896,3.345,903,4.077,908,2.046,909,2.09,910,2.162,911,2.33,912,2.395,913,2.466,914,2.43,915,2.466,916,2.466,917,2.395,1087,4.468,1088,4.468,1089,4.468,1090,4.468,1091,4.468,1092,4.468,1093,4.468,1094,4.468,1095,4.468,1096,4.468,1097,7.904]],["title/ES6&TypeScript/ES6&TypeScript.html",[]],["body/ES6&TypeScript/ES6&TypeScript.html",[0,1.801,43,0.98,528,6.681,538,4.315,1098,7.171,1099,9.224,1100,9.224,1101,9.224,1102,9.224,1103,9.224,1104,9.224]],["title/ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features",[43,0.226,528,1.544,538,0.997,1098,1.657]],["body/ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features",[0,1.845,1105,9.451,1106,9.451,1107,9.451,1108,9.451,1109,9.451,1110,9.451]],["title/ES6&TypeScript/es6/arrow_functions.html",[]],["body/ES6&TypeScript/es6/arrow_functions.html",[1,0.596,5,0.52,7,0.882,8,0.81,40,0.863,41,0.84,42,0.633,43,0.679,44,0.724,55,1.14,59,0.77,60,0.801,61,0.893,90,0.927,159,0.999,160,0.705,171,null,197,1.89,199,3.767,200,3.836,205,2.885,299,5.466,331,1.978,516,6.55,517,2.633,519,5.466,522,1.251,1111,2.11,1112,5.835,1113,6.572,1114,5.466,1115,5.835,1116,5.835,1117,5.835,1118,4.694,1119,4.89,1120,7.007,1121,5.835,1122,5.835,1123,3.884,1124,5.835,1125,5.835,1126,5.466,1127,3.884,1128,3.884,1129,2.602,1130,3.456,1131,2.654,1132,4.257,1133,4.257]],["title/ES6&TypeScript/es6/arrow_functions.html#箭头函数",[1134,4.723]],["body/ES6&TypeScript/es6/arrow_functions.html#箭头函数",[1,0.585,5,0.516,7,0.873,8,0.785,40,0.847,41,0.823,42,0.614,43,0.659,44,0.702,55,1.106,59,0.747,60,0.776,61,0.866,90,0.899,159,0.969,160,0.677,171,null,199,3.653,200,3.72,205,2.826,299,5.3,331,1.918,405,3.326,516,6.495,517,2.568,522,1.201,1111,2.025,1112,5.658,1113,6.47,1114,5.3,1115,5.658,1116,5.658,1117,5.658,1118,4.58,1119,4.77,1120,6.836,1121,5.658,1122,5.658,1123,3.729,1124,5.658,1125,5.658,1127,3.729,1128,3.729,1130,3.318,1131,2.548,1135,4.087,1136,4.087,1137,4.087,1138,4.087,1139,4.087,1140,4.087,1141,4.087,1142,4.087,1143,4.087,1144,4.087,1145,4.087,1146,4.087,1147,4.087,1148,4.087,1149,6.2,1150,6.2,1151,6.2,1152,4.087,1153,4.087,1154,4.087,1155,4.087,1156,4.087,1157,4.087,1158,4.087,1159,4.087,1160,4.087,1161,3.729,1162,4.087,1163,4.087,1164,3.729,1165,4.087,1166,4.087,1167,4.087,1168,4.087]],["title/ES6&TypeScript/es6/classes.html",[]],["body/ES6&TypeScript/es6/classes.html",[1,0.611,5,0.515,7,0.775,40,0.697,41,0.728,42,0.732,43,0.786,44,0.837,55,1.32,59,0.891,171,null,197,4.169,331,2.904,512,8.017,525,8.026,1169,7.399,1170,6.752,1171,6.752,1172,6.752,1173,6.42,1174,6.752,1175,6.752,1176,6.752]],["title/ES6&TypeScript/es6/classes.html#类",[1177,5.176]],["body/ES6&TypeScript/es6/classes.html#类",[1,0.602,5,0.497,7,0.763,40,0.681,41,0.711,42,0.715,43,0.767,44,0.818,55,1.289,59,0.87,171,null,197,3.208,331,2.86,417,2.948,512,7.189,525,7.905,1161,6.593,1170,6.593,1171,6.593,1172,6.593,1173,6.323,1174,6.593,1175,6.593,1176,6.593,1178,7.225,1179,7.225,1180,7.225,1181,7.225,1182,7.225,1183,6.593,1184,7.225,1185,7.225,1186,7.225,1187,7.225,1188,7.225,1189,7.225,1190,7.225,1191,7.225,1192,7.225,1193,7.905]],["title/ES6&TypeScript/es6/constants_and_block_scoped_variables.html",[]],["body/ES6&TypeScript/es6/constants_and_block_scoped_variables.html",[1,0.619,5,0.519,7,0.808,8,0.677,22,2.587,40,0.923,41,0.861,42,0.992,43,0.802,44,0.931,59,0.644,60,0.831,61,0.471,90,0.49,114,2.908,159,0.527,160,0.559,197,1.499,200,6.418,204,3.112,205,1.807,219,2.328,260,2.993,435,3.159,517,1.833,1111,1.673,1113,5.984,1114,4.57,1129,2.064,1194,3.376,1195,4.156,1196,6.638,1197,5.347,1198,4.539,1199,3.982,1200,3.376,1201,5.347,1202,3.376,1203,5.347,1204,3.376,1205,3.376,1206,3.376,1207,3.376,1208,3.376,1209,3.376,1210,3.376,1211,2.751,1212,5.347,1213,3.081,1214,5.347,1215,3.376,1216,3.081,1217,4.227,1218,3.081,1219,5.674,1220,3.376,1221,2.741,1222,3.376,1223,6.151,1224,5.347,1225,2.741,1226,5.347,1227,3.872,1228,2.716,1229,4.57,1230,4.57,1231,4.57,1232,3.081,1233,3.376,1234,3.081]],["title/ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量",[1235,5.176]],["body/ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量",[1,0.517,5,0.498,7,0.655,22,3.84,40,0.748,41,0.78,42,0.785,43,0.843,44,0.898,114,4.316,260,3.568,435,2.864,1217,5.053,1223,7.817,1225,6.442,1227,5.747,1228,4.031,1229,6.784,1230,6.784,1231,6.784,1236,7.241,1237,7.241,1238,7.935,1239,7.935,1240,7.935]],["title/ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用",[1241,5.176]],["body/ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用",[1,0.504,5,0.5,7,0.638,22,3.743,40,0.729,41,0.761,42,0.765,43,0.822,44,0.875,59,0.932,60,0.969,114,4.207,219,4.203,260,3.512,435,2.819,1217,4.925,1223,6.785,1227,5.602,1228,3.93,1229,6.612,1230,6.612,1231,6.612,1232,7.058,1234,7.058,1236,7.058,1237,7.058,1242,7.735,1243,7.735,1244,7.735,1245,7.735]],["title/ES6&TypeScript/es6/delegation.html",[]],["body/ES6&TypeScript/es6/delegation.html",[1,0.407,5,0.503,7,0.516,8,0.792,40,0.589,41,0.615,42,0.619,43,0.664,44,0.708,55,1.5,59,0.753,60,0.783,61,0.873,90,0.907,159,0.977,160,1.036,161,1.098,162,1.195,163,1.302,164,1.39,165,1.444,166,1.572,167,1.666,168,1.727,169,1.781,170,1.909,171,null,205,2.842,331,2.602,435,2.456,624,1.96,648,2.055,649,2.175,762,6.883,950,3.462,1111,3.099,1246,8.936,1247,7.901,1248,8.491,1249,6.679,1250,5.706,1251,7.388,1252,5.706,1253,5.076,1254,5.076]],["title/ES6&TypeScript/es6/delegation.html#委托",[1255,5.176]],["body/ES6&TypeScript/es6/delegation.html#委托",[1,0.387,5,0.506,7,0.49,8,0.752,40,0.56,41,0.584,42,0.588,43,0.631,44,0.672,55,1.448,59,0.715,60,0.744,61,0.829,90,0.861,159,0.928,160,0.983,161,1.042,162,1.135,163,1.236,164,1.32,165,1.372,166,1.493,167,1.583,168,1.64,169,1.691,170,1.813,171,null,205,2.744,331,2.512,414,4.821,435,2.371,624,1.861,648,1.951,649,2.065,762,6.703,950,3.343,1111,2.943,1246,8.841,1247,7.735,1248,7.195,1249,6.505,1250,5.419,1251,6.313,1252,5.419,1253,4.821,1254,4.821,1256,5.938,1257,5.938,1258,5.938,1259,5.938,1260,5.938,1261,5.938,1262,5.938,1263,5.419,1264,5.419,1265,5.938,1266,5.419,1267,5.419]],["title/ES6&TypeScript/es6/destructuring.html",[]],["body/ES6&TypeScript/es6/destructuring.html",[1,0.615,5,0.519,7,0.779,8,0.581,31,5.415,40,0.835,41,0.79,42,0.876,43,0.718,44,0.765,59,0.814,60,0.574,193,6.632,194,6.632,204,1.736,205,2.285,262,2.361,278,7.325,279,8.083,304,4.572,335,4.131,517,3.037,950,1.889,1063,5.062,1111,2.274,1198,6.057,1268,8.02,1269,4.924,1270,4.588,1271,6.761,1272,8.858,1273,3.725,1274,6.761,1275,4.588,1276,8.858,1277,8.028,1278,8.028,1279,6.761,1280,4.588,1281,6.761,1282,4.588,1283,4.588,1284,4.588,1285,4.588]],["title/ES6&TypeScript/es6/es6.html",[]],["body/ES6&TypeScript/es6/es6.html",[5,0.513,1111,4.49,1286,9.061,1287,4.603]],["title/ES6&TypeScript/es6/es6.html#ES6",[1111,2.565]],["body/ES6&TypeScript/es6/es6.html#ES6",[1134,8.317,1193,9.114,1287,4.63,1288,9.114,1289,9.114,1290,9.114,1291,8.317,1292,9.114,1293,9.114,1294,9.114,1295,9.114,1296,9.114]],["title/ES6&TypeScript/es6/es6_modules.html",[]],["body/ES6&TypeScript/es6/es6_modules.html",[1,0.529,5,0.516,7,0.67,8,0.752,18,3.63,40,0.765,41,0.799,42,0.804,43,0.631,44,0.672,45,1.223,49,2.229,54,1.731,58,5.708,59,0.715,60,0.744,200,3.562,205,2.744,435,2.371,517,2.784,950,2.445,1111,4.93,1199,4.479,1228,3.017,1287,3.017,1297,5.419,1298,7.41,1299,5.419,1300,7.41,1301,7.41,1302,5.938,1303,5.938,1304,5.419,1305,7.911,1306,3.183,1307,7.41,1308,5.938,1309,5.938,1310,6.803,1311,4.301,1312,5.419,1313,4.174]],["title/ES6&TypeScript/es6/es6_modules.html#ES6-模块",[1111,1.738,1314,2.998]],["body/ES6&TypeScript/es6/es6_modules.html#ES6-模块",[1,0.525,5,0.485,7,0.665,18,4.928,40,0.76,41,0.793,42,0.798,54,2.006,417,3.289,435,2.892,1297,7.355,1298,9.037,1299,7.355,1300,9.037,1301,9.037,1314,6.89,1315,8.061,1316,8.061,1317,8.061,1318,8.061,1319,8.061,1320,8.061,1321,8.061,1322,8.061]],["title/ES6&TypeScript/es6/es6_modules.html#模块系统",[1323,4.723]],["body/ES6&TypeScript/es6/es6_modules.html#模块系统",[45,1.9,1304,8.417,1305,7.885,1306,4.944,1324,9.224,1325,9.224,1326,9.224,1327,9.224,1328,9.224,1329,9.224,1330,9.224]],["title/ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块",[1331,5.176]],["body/ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块",[1,0.475,5,0.508,7,0.602,8,0.923,40,0.688,41,0.717,42,0.722,43,0.775,44,0.826,59,0.878,60,0.913,200,4.376,205,3.144,517,3.189,594,5.283,950,3.003,1199,4.957,1228,3.705,1287,3.705,1307,8.489,1310,7.377,1311,5.283,1312,6.656,1332,7.294,1333,7.294,1334,7.294,1335,7.294,1336,7.294,1337,7.294,1338,7.294,1339,7.294,1340,7.294]],["title/ES6&TypeScript/es6/inheritance.html",[]],["body/ES6&TypeScript/es6/inheritance.html",[1,0.374,5,0.514,7,0.474,8,0.892,40,0.542,41,0.565,42,0.569,43,0.611,44,0.65,55,1.256,59,0.692,60,0.72,61,0.803,90,0.833,123,3.831,159,0.898,160,0.952,161,1.009,162,1.098,163,1.196,164,1.277,165,1.327,166,1.445,167,1.532,168,1.588,169,1.637,170,1.755,171,null,197,3.128,205,2.683,331,2.179,517,2.722,624,1.801,648,1.889,649,1.999,650,1.357,651,1.389,652,1.412,653,1.497,762,7.459,768,1.644,907,3.584,908,1.695,909,1.732,910,1.792,938,2.997,950,3.269,1111,1.835,1119,3.66,1246,8.153,1247,8.835,1248,7.073,1249,7.238,1251,7.073,1253,4.666,1254,4.666,1341,3.702,1342,3.66,1343,3.378,1344,3.378,1345,5.244,1346,4.598,1347,5.719,1348,3.378,1349,3.378,1350,3.378,1351,3.378,1352,3.378,1353,3.378,1354,2.181,1355,3.831,1356,3.702,1357,2.772]],["title/ES6&TypeScript/es6/inheritance.html#继承",[1358,5.176]],["body/ES6&TypeScript/es6/inheritance.html#继承",[1359,9.69,1360,9.69,1361,9.69]],["title/ES6&TypeScript/es6/inheritance.html#子类化",[1362,5.176]],["body/ES6&TypeScript/es6/inheritance.html#子类化",[417,3.396,1119,5.3,1246,8.79,1247,9.005,1248,6.47,1251,6.47,1342,5.3,1363,8.323,1364,8.323,1365,8.323,1366,8.323,1367,8.323,1368,8.323,1369,8.323,1370,8.323,1371,8.323,1372,8.323,1373,8.323,1374,8.323,1375,8.323,1376,7.595,1377,8.323]],["title/ES6&TypeScript/es6/inheritance.html#对象初始化",[1378,5.176]],["body/ES6&TypeScript/es6/inheritance.html#对象初始化",[1,0.386,5,0.513,7,0.49,8,0.916,40,0.56,41,0.584,42,0.587,43,0.631,44,0.672,55,1.29,59,0.715,60,0.743,61,0.829,90,0.861,123,3.933,159,0.927,160,0.983,161,1.042,162,1.134,163,1.236,164,1.319,165,1.371,166,1.492,167,1.582,168,1.64,169,1.691,170,1.812,171,null,197,1.714,205,2.744,331,2.237,517,2.783,624,1.861,648,1.951,649,2.065,650,1.415,651,1.449,652,1.472,653,1.561,762,7.545,768,1.714,907,3.702,908,1.768,909,1.806,910,1.868,938,3.095,950,3.342,1111,1.913,1119,2.458,1246,7.493,1247,8.56,1248,6.312,1249,7.322,1251,6.312,1253,4.819,1254,4.819,1263,3.523,1264,3.523,1342,2.458,1343,3.523,1344,3.523,1345,5.417,1346,4.702,1347,5.871,1348,3.523,1349,3.523,1350,3.523,1351,3.523,1352,3.523,1353,3.523,1354,2.275,1355,3.957,1357,2.891,1379,3.861,1380,3.861,1381,3.861,1382,3.861,1383,3.861,1384,3.861,1385,3.861,1386,3.861,1387,3.861]],["title/ES6&TypeScript/es6/refresher_on_this.html",[]],["body/ES6&TypeScript/es6/refresher_on_this.html",[1,0.615,5,0.519,7,0.855,8,0.667,40,0.704,41,0.735,42,0.739,43,0.793,44,0.845,55,1.332,59,0.899,60,0.935,81,1.403,82,1.237,197,2.338,200,4.48,205,3.37,281,4.566,302,4.274,304,4.254,516,5.113,517,1.805,522,1.547,950,4.264,1388,8.618,1389,4.805,1390,4.805,1391,4.805,1392,4.805,1393,4.805,1394,7.919,1395,6.747,1396,4.805,1397,4.805,1398,4.805,1399,4.805,1400,6.815,1401,3.943,1402,4.805,1403,3.102,1404,3.943,1405,3.102,1406,5.266]],["title/ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this",[1407,5.176]],["body/ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this",[1,0.604,5,0.503,7,0.843,8,0.64,40,0.684,41,0.714,42,0.718,43,0.771,44,0.821,55,1.294,59,0.874,60,0.909,81,1.348,82,1.188,200,4.353,205,3.318,281,4.436,302,4.105,405,2.245,410,3.554,516,5,517,1.734,522,1.486,950,4.207,1388,8.461,1389,4.615,1390,4.615,1391,4.615,1392,4.615,1393,4.615,1394,6.621,1396,4.615,1397,4.615,1398,4.615,1399,4.615,1400,6.621,1401,3.787,1402,4.615,1403,2.98,1404,3.787,1405,2.98,1408,5.057,1409,5.057,1410,5.057,1411,5.057,1412,7.256,1413,5.057,1414,5.057,1415,5.057,1416,5.057,1417,5.057,1418,4.323,1419,5.057,1420,5.057,1421,5.057,1422,5.057,1423,5.057,1424,5.057,1425,5.057,1426,5.057,1427,5.057,1428,5.057,1429,5.057,1430,5.057,1431,5.057,1432,5.057,1433,5.057,1434,5.057,1435,5.057,1436,5.057,1437,5.433,1438,5.057,1439,5.057,1440,5.057,1441,5.057,1442,5.057,1443,5.057,1444,5.057,1445,5.057,1446,5.057,1447,5.057,1448,5.057,1449,5.057,1450,5.057,1451,5.057,1452,5.057,1453,5.057]],["title/ES6&TypeScript/es6/spread_and_rest.html",[]],["body/ES6&TypeScript/es6/spread_and_rest.html",[1,0.661,5,0.519,7,0.838,8,0.48,40,0.977,41,0.791,42,0.979,43,0.924,44,0.911,59,0.705,60,0.475,61,0.53,90,0.55,119,2.197,159,0.593,160,0.628,161,0.666,197,2.601,198,2.926,201,6.089,202,5.972,204,3.043,205,1.979,219,2.55,241,2.063,291,4.386,435,1.71,517,2.452,522,1.721,528,4.242,907,4.461,926,5.363,950,1.562,1063,4.386,1111,1.88,1118,4.373,1173,4.005,1454,3.243,1455,3.243,1456,3.243,1457,3.243,1458,5.007,1459,2.949,1460,4.553,1461,3.813,1462,5.007,1463,3.243,1464,4.755,1465,4.755,1466,3.08,1467,2.127,1468,2.47,1469,1.795,1470,3.904,1471,1.978,1472,3.08,1473,3.794,1474,4.755,1475,4.755,1476,4.755,1477,3.652,1478,3.904]],["title/ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数",[1479,5.176]],["body/ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数",[1,0.656,5,0.518,7,0.831,8,0.468,40,0.97,41,0.78,42,0.97,43,0.912,44,0.898,59,0.691,60,0.462,61,0.516,90,0.536,119,2.139,159,0.577,160,0.612,161,0.648,198,2.885,201,5.69,202,5.354,204,3,205,1.939,219,2.497,241,2.008,410,2.596,423,3.735,435,1.675,517,2.411,522,1.686,528,4.155,907,4.386,926,3.824,950,1.52,1063,4.295,1111,1.83,1118,4.3,1173,3.922,1454,3.157,1455,3.157,1456,3.157,1457,3.157,1458,4.904,1459,2.871,1462,4.904,1463,3.157,1464,4.657,1465,4.657,1466,2.998,1467,2.07,1468,2.404,1469,1.747,1470,3.824,1471,1.926,1472,2.998,1474,4.657,1475,4.657,1476,4.657,1477,3.577,1478,3.824,1480,3.693,1481,3.693,1482,3.693,1483,3.693,1484,3.693,1485,3.37,1486,3.37,1487,3.37,1488,5.234,1489,5.234,1490,5.234,1491,4.657,1492,4.657,1493,5.234,1494,5.234,1495,3.37,1496,3.157,1497,3.157,1498,3.157,1499,3.157,1500,3.157,1501,3.157,1502,3.157,1503,2.998,1504,3.157]],["title/ES6&TypeScript/es6/spread_and_rest.html#扩展语句",[1485,4.723]],["body/ES6&TypeScript/es6/spread_and_rest.html#扩展语句",[1,0.658,5,0.518,7,0.835,8,0.474,40,0.974,41,0.786,42,0.975,43,0.918,44,0.905,59,0.699,60,0.469,61,0.523,90,0.543,119,2.17,159,0.585,160,0.621,161,0.658,198,2.907,201,5.72,202,5.391,204,3.023,205,1.961,219,2.526,241,2.038,410,2.634,423,3.777,435,1.694,517,2.434,522,1.705,528,4.202,907,4.426,926,3.867,950,1.543,1063,4.344,1111,1.857,1118,4.34,1173,3.967,1454,3.203,1455,3.203,1456,3.203,1457,3.203,1458,4.959,1459,2.913,1462,4.959,1463,3.203,1464,4.71,1465,4.71,1466,3.042,1467,2.101,1468,2.44,1469,1.773,1470,3.867,1471,1.954,1472,3.042,1474,4.71,1475,4.71,1476,4.71,1477,3.618,1478,3.867,1486,3.419,1487,3.419,1488,5.294,1489,5.294,1490,5.294,1491,4.71,1492,4.71,1493,5.294,1494,5.294,1495,3.419,1496,3.203,1497,3.203,1498,3.203,1499,3.203,1500,3.203,1501,3.203,1502,3.203,1503,3.042,1504,3.203]],["title/ES6&TypeScript/es6/spread_and_rest.html#剩余参数",[1496,4.425]],["body/ES6&TypeScript/es6/spread_and_rest.html#剩余参数",[1,0.657,5,0.515,7,0.833,8,0.618,40,0.952,41,0.897,42,0.958,43,0.884,44,0.8,59,0.852,60,0.611,61,0.681,90,0.708,159,0.762,160,0.808,161,0.857,198,3.318,201,4.99,202,5.187,204,3.45,205,2.39,219,3.079,241,2.654,410,3.43,423,4.604,435,1.425,517,2.851,522,2.078,528,5.122,907,4.41,950,2.009,1063,5.296,1111,2.418,1118,5.085,1464,5.741,1465,5.741,1466,3.962,1467,2.736,1468,3.177,1469,2.308,1470,4.715,1471,2.545,1472,3.962,1474,5.741,1475,5.741,1476,5.741,1477,4.41,1478,4.715,1497,4.172,1498,4.172,1499,4.172,1500,4.172,1501,4.172,1502,4.172,1503,3.962,1504,4.172]],["title/ES6&TypeScript/es6/template_strings.html",[]],["body/ES6&TypeScript/es6/template_strings.html",[1,0.745,5,0.517,7,0.925,40,0.956,41,0.997,42,0.489,43,0.525,44,0.559,172,3.058,197,2.195,200,5.504,205,3.101,260,3.689,262,4.722,265,2.48,304,5.226,517,1.695,522,1.452,914,3.882,917,3.826,950,2.939,1111,2.449,1198,5.729,1216,6.514,1505,7.133,1506,6.514,1507,5.795,1508,4.51,1509,8.373,1510,4.51,1511,6.514,1512,4.51,1513,3.218,1514,4.51,1515,4.013]],["title/ES6&TypeScript/es6/template_strings.html#模板字符串",[1291,4.723]],["body/ES6&TypeScript/es6/template_strings.html#模板字符串",[1,0.744,5,0.512,7,0.924,40,0.954,41,0.995,42,0.486,43,0.522,44,0.556,172,3.048,200,5.488,205,3.092,260,3.681,262,4.708,265,2.464,304,4.755,517,1.684,522,1.443,917,3.809,950,2.925,1164,4.482,1198,5.708,1505,7.112,1506,6.483,1507,3.987,1508,4.482,1509,8.348,1510,4.482,1511,6.483,1512,4.482,1513,3.197,1514,4.482,1515,3.987,1516,4.911,1517,4.524,1518,7.576,1519,4.911,1520,4.911,1521,7.105,1522,4.482,1523,4.911,1524,4.911,1525,4.911,1526,4.911,1527,4.911,1528,4.911,1529,4.911,1530,4.911]],["title/ES6&TypeScript/typescript/class_decorators.html",[]],["body/ES6&TypeScript/typescript/class_decorators.html",[1,0.335,5,0.509,7,0.424,8,0.651,40,0.485,41,0.506,42,0.509,43,0.546,44,0.582,55,1.31,59,0.619,60,0.644,61,0.718,90,0.746,159,0.803,160,0.852,161,0.903,162,0.983,163,1.07,164,1.143,165,1.188,166,1.293,167,1.37,168,1.42,169,1.464,170,1.57,171,null,172,1.713,200,5.138,202,4.579,205,1.738,215,3.274,304,2.929,307,6.02,325,3.029,331,2.89,435,1.501,517,3.388,522,3.02,624,1.612,644,3.614,648,1.69,649,1.788,650,1.885,651,1.93,652,1.961,653,2.08,768,2.283,908,2.355,939,3.206,950,3.846,1131,3.206,1173,6.389,1195,3.997,1347,5.961,1460,5.709,1531,3.85,1532,4.781,1533,5.71,1534,4.692,1535,3.348,1536,4.692,1537,4.692,1538,4.692,1539,4.174,1540,4.692,1541,4.692,1542,4.692,1543,4.174,1544,4.174,1545,3.516,1546,3.997,1547,4.692,1548,4.692,1549,4.174,1550,4.692,1551,4.692]],["title/ES6&TypeScript/typescript/class_decorators.html#类装饰器",[1552,5.176]],["body/ES6&TypeScript/typescript/class_decorators.html#类装饰器",[1,0.324,5,0.51,7,0.411,8,0.63,40,0.469,41,0.489,42,0.492,43,0.528,44,0.563,55,1.279,59,0.599,60,0.623,61,0.695,90,0.721,159,0.777,160,0.824,161,0.873,162,0.951,163,1.036,164,1.106,165,1.149,166,1.251,167,1.326,168,1.374,169,1.417,170,1.519,171,null,172,1.658,200,5.045,202,4.472,205,1.681,215,3.168,307,5.91,325,2.931,331,2.847,435,1.453,517,3.344,522,2.986,624,1.559,644,3.497,648,1.635,649,1.73,650,1.824,651,1.867,652,1.897,653,2.012,768,2.209,801,3.102,908,2.278,939,3.102,950,3.789,1131,3.102,1173,6.293,1347,5.822,1437,3.725,1460,5.575,1531,3.725,1532,4.669,1533,5.606,1534,4.54,1535,3.239,1536,4.54,1537,4.54,1538,4.54,1539,4.039,1540,4.54,1541,4.54,1542,4.54,1543,4.039,1544,4.039,1545,3.402,1546,3.868,1547,4.54,1548,4.54,1549,4.039,1550,4.54,1551,4.54,1553,4.975,1554,4.975,1555,4.975,1556,4.975,1557,4.975,1558,4.975,1559,4.975]],["title/ES6&TypeScript/typescript/decorators.html",[]],["body/ES6&TypeScript/typescript/decorators.html",[0,1.246,1,0.416,5,0.516,46,2.354,55,1.138,67,4.419,114,3.471,123,5.222,172,3.2,197,2.834,198,2.322,261,4.145,538,2.986,1346,3.696,1477,3.98,1532,6.672,1560,6.383,1561,6.383,1562,5.825,1563,7.781,1564,5.657,1565,5.825,1566,7.795,1567,7.465,1568,5.825,1569,5.825,1570,7.781,1571,5.825,1572,5.182,1573,6.383]],["title/ES6&TypeScript/typescript/decorators.html#装饰器",[1574,4.723]],["body/ES6&TypeScript/typescript/decorators.html#装饰器",[5,0.499,46,2.358,55,1.143,67,4.426,114,3.486,123,5.233,172,3.207,198,2.332,261,4.152,1346,3.712,1477,3.997,1503,5.203,1532,6.683,1562,5.849,1563,7.803,1564,5.667,1565,5.849,1566,7.811,1567,7.481,1568,5.849,1569,5.849,1570,7.803,1571,5.849,1572,5.203,1575,6.41,1576,6.41,1577,6.41,1578,6.41,1579,6.41,1580,6.41,1581,6.41,1582,6.41,1583,6.41,1584,6.41,1585,6.41,1586,6.41,1587,6.41,1588,6.41,1589,5.203,1590,6.41,1591,6.41,1592,6.41,1593,6.41,1594,6.41,1595,6.41]],["title/ES6&TypeScript/typescript/generics.html",[]],["body/ES6&TypeScript/typescript/generics.html",[1,0.563,5,0.498,7,0.714,40,0.816,198,3.147,517,2.966,522,2.542,1173,5.916,1535,5.632,1596,7.895,1597,7.804,1598,8.652]],["title/ES6&TypeScript/typescript/generics.html#泛型",[1599,5.176]],["body/ES6&TypeScript/typescript/generics.html#泛型",[1,0.56,5,0.427,7,0.71,40,0.811,198,3.13,417,3.51,517,2.949,522,2.528,1173,5.883,1596,7.85,1597,7.792,1600,8.603,1601,8.603,1602,8.603,1603,8.603,1604,8.603,1605,8.603,1606,8.603]],["title/ES6&TypeScript/typescript/interfaces.html",[]],["body/ES6&TypeScript/typescript/interfaces.html",[1,0.559,5,0.515,7,0.708,8,0.932,25,3.482,40,0.809,41,0.844,42,0.849,43,0.912,44,0.971,59,0.886,60,0.922,61,0.72,90,0.748,159,0.806,160,0.854,161,0.906,172,2.86,197,2.291,199,3.04,205,2.9,261,2.977,304,4.193,517,1.769,538,2.414,1033,4.193,1199,4.528,1219,4.41,1228,2.621,1403,5.513,1405,4.337,1564,4.737,1607,5.159,1608,5.245,1609,7.831,1610,9.029,1611,4.708,1612,3.359,1613,6.717,1614,5.464,1615,5.975,1616,4.188,1617,7.831,1618,4.708,1619,4.708,1620,3.863,1621,7.361,1622,3.236]],["title/ES6&TypeScript/typescript/interfaces.html#接口",[1623,4.425]],["body/ES6&TypeScript/typescript/interfaces.html#接口",[1,0.544,5,0.516,7,0.689,8,0.9,40,0.787,41,0.821,42,0.826,43,0.887,44,0.945,59,0.856,60,0.89,61,0.686,90,0.712,159,0.767,160,0.813,161,0.862,172,2.782,199,2.894,205,2.821,261,2.874,517,1.684,1033,4.047,1199,4.427,1228,2.495,1403,5.39,1405,4.186,1437,5.32,1518,5.32,1564,4.608,1608,5.128,1609,7.618,1611,4.482,1612,3.197,1613,6.483,1614,5.316,1615,5.768,1616,3.987,1617,7.618,1618,4.482,1619,4.482,1620,3.678,1622,3.124,1623,4.198,1624,4.911,1625,4.911,1626,4.911,1627,4.911,1628,4.911,1629,4.911,1630,4.911,1631,4.911,1632,4.911,1633,7.82,1634,4.911,1635,4.911,1636,4.911,1637,4.911,1638,4.911,1639,4.482]],["title/ES6&TypeScript/typescript/linting.html",[]],["body/ES6&TypeScript/typescript/linting.html",[1,0.46,5,0.513,7,0.583,8,0.894,40,0.665,41,0.694,42,0.698,43,0.75,44,0.799,59,0.85,60,0.884,61,0.986,214,5.029,215,5.801,1640,7.395,1641,7.059,1642,7.787,1643,7.491,1644,7.059,1645,7.059,1646,7.059,1647,7.059,1648,4.159,1649,7.059,1650,4.514,1651,5.943,1652,6.166,1653,5.286,1654,4.961]],["title/ES6&TypeScript/typescript/shapes.html",[]],["body/ES6&TypeScript/typescript/shapes.html",[1,0.453,5,0.51,7,0.575,8,0.881,40,0.656,41,0.685,42,0.689,43,0.74,44,0.788,55,1.61,59,0.839,60,0.872,61,0.972,90,1.01,159,1.088,160,1.153,161,1.222,162,1.33,171,null,172,3.009,197,3.092,261,4.288,331,2.154,517,2.387,538,4.224,1219,5.952,1608,3.903,1612,4.533,1622,4.661,1655,6.353,1656,6.963,1657,6.963,1658,9.675,1659,4.761]],["title/ES6&TypeScript/typescript/shapes.html#Shapes",[1655,4.723]],["body/ES6&TypeScript/typescript/shapes.html#Shapes",[1,0.439,5,0.51,7,0.557,8,0.854,40,0.636,41,0.664,42,0.668,43,0.717,44,0.764,55,1.204,59,0.813,60,0.845,61,0.942,90,0.978,159,1.054,160,1.118,161,1.185,162,1.289,171,null,172,2.948,261,4.237,331,2.087,517,2.313,538,3.157,1608,3.783,1612,4.393,1622,4.606,1639,6.158,1658,9.559,1659,4.614,1660,6.748,1661,6.748,1662,6.748,1663,6.748,1664,6.748,1665,6.748,1666,6.748,1667,6.158,1668,6.748,1669,6.748,1670,6.748,1671,6.748,1672,6.748]],["title/ES6&TypeScript/typescript/typeScript.html",[]],["body/ES6&TypeScript/typescript/typeScript.html",[1,0.579,5,0.511,7,0.923,40,1.055,41,1.034,42,0.88,43,0.945,44,0.771,159,1.39,198,3.237,201,6.306,517,3.05,522,2.615,538,3.185,907,6.977,1651,5.243,1673,6.808,1674,6.808,1675,6.808,1676,6.808,1677,4.538]],["title/ES6&TypeScript/typescript/typeScript_start.html",[]],["body/ES6&TypeScript/typescript/typeScript_start.html",[1,0.667,5,0.503,7,0.891,40,0.877,41,0.915,42,0.722,43,0.775,55,1.659,171,null,172,3.1,213,3.967,214,4.026,516,6.714,538,4.793,1111,4.61,1461,4.749,1612,6.057,1678,7.294,1679,7.294,1680,7.294,1681,5.921,1682,7.294,1683,7.294,1684,7.953]],["title/ES6&TypeScript/typescript/type_inference.html",[]],["body/ES6&TypeScript/typescript/type_inference.html",[1,0.659,5,0.505,7,0.755,8,0.622,40,0.787,41,0.483,42,0.703,43,0.522,44,0.804,55,0.876,59,0.591,60,0.615,61,0.992,90,0.712,114,2.671,159,0.767,160,1.177,161,0.862,162,0.938,163,1.022,164,1.091,165,1.134,166,1.235,167,1.309,172,1.637,198,3.681,261,4.787,291,5.32,331,1.519,435,1.434,1111,2.434,1199,4.896,1217,5.825,1313,3.452,1477,3.063,1535,3.197,1564,3.922,1608,3.983,1612,4.626,1651,4.186,1685,4.911,1686,4.911,1687,3.818,1688,7.105,1689,8.298,1690,7.88,1691,4.911,1692,7.105,1693,4.911,1694,4.911,1695,4.482,1696,4.482,1697,4.911,1698,4.911,1699,8.348,1700,8.348,1701,8.348,1702,4.911,1703,4.911,1704,4.911,1705,4.198,1706,4.911]],["title/ES6&TypeScript/typescript/property_decorators.html",[]],["body/ES6&TypeScript/typescript/property_decorators.html",[1,0.5,5,0.514,7,0.633,8,0.972,40,0.723,41,0.755,42,0.759,43,0.815,44,0.869,55,1.369,59,0.924,60,0.961,61,1.072,90,1.113,123,4.173,159,0.855,160,0.906,161,0.961,162,1.046,172,3.371,183,3.949,205,2.593,259,4.604,260,3.224,331,2.374,435,1.598,452,7.799,517,3.038,522,2.255,1129,3.345,1213,4.993,1218,4.993,1532,4.996,1549,7.195,1597,5.116,1650,5.197,1707,7.002,1708,3.412,1709,3.412,1710,4.442,1711,7.002,1712,4.678,1713,4.678,1714,5.746,1715,4.993,1716,4.993,1717,4.993]],["title/ES6&TypeScript/typescript/property_decorators.html#属性装饰器",[1718,5.176]],["body/ES6&TypeScript/typescript/property_decorators.html#属性装饰器",[1,0.486,5,0.514,7,0.616,8,0.946,40,0.704,41,0.735,42,0.739,43,0.793,44,0.845,55,1.332,59,0.899,60,0.935,61,1.043,90,1.083,123,4.062,159,0.823,160,0.872,161,0.924,162,1.006,172,3.323,183,3.843,205,2.524,259,4.48,260,2.717,331,2.31,405,2.338,435,1.537,452,7.667,517,2.975,522,2.194,1221,6.063,1532,4.862,1549,7.045,1597,4.979,1650,4.68,1707,6.815,1708,3.283,1709,3.283,1710,4.274,1711,6.815,1712,4.501,1713,4.501,1714,5.592,1715,4.805,1716,4.805,1717,4.805,1719,5.266,1720,5.266,1721,5.266,1722,5.266,1723,5.266,1724,5.266,1725,5.266,1726,5.266,1727,5.266,1728,5.266,1729,5.266]],["title/ES6&TypeScript/typescript/type_keyword.html",[]],["body/ES6&TypeScript/typescript/type_keyword.html",[1,0.593,5,0.515,7,0.752,8,0.668,40,0.858,41,0.854,42,0.859,43,0.867,44,0.846,59,0.9,60,0.66,61,0.463,90,0.481,114,1.804,123,2.868,159,0.518,160,0.549,161,0.582,172,3.035,198,3.313,261,4.403,291,3.948,517,3.122,522,2.197,538,1.552,652,2.011,823,2.269,1111,1.644,1118,2.028,1126,5.61,1199,2.552,1217,4.178,1228,3.798,1269,2.75,1354,1.955,1403,3.107,1404,3.948,1477,2.069,1505,7.347,1564,4.127,1608,2.956,1684,4.508,1730,5.988,1731,3.318,1732,3.027,1733,6.822,1734,7.444,1735,4.812,1736,3.027,1737,3.027,1738,4.812,1739,3.027,1740,5.988,1741,4.812,1742,3.027,1743,3.027,1744,3.027,1745,3.027,1746,3.027,1747,5.988,1748,4.508,1749,2.693,1750,2.332,1751,4.812,1752,4.812,1753,3.027,1754,4.812,1755,3.027,1756,3.027,1757,2.212,1758,3.027,1759,6.822,1760,2.332,1761,3.027,1762,3.027,1763,3.027,1764,3.027,1765,3.027,1766,3.027,1767,3.027,1768,3.318,1769,4.812,1770,3.358,1771,4.812,1772,7.925,1773,3.027,1774,3.318,1775,2.113,1776,2.693]],["title/ES6&TypeScript/typescript/type_keyword.html#类型关键字",[1777,5.176]],["body/ES6&TypeScript/typescript/type_keyword.html#类型关键字",[1,0.582,5,0.516,7,0.738,8,0.643,40,0.843,41,0.837,42,0.842,43,0.847,44,0.824,59,0.877,60,0.636,61,0.442,90,0.459,114,1.722,123,2.763,159,0.495,160,0.525,161,0.556,172,2.835,198,3.095,261,4.361,291,3.804,517,3.065,522,2.139,652,1.938,823,2.165,1118,1.936,1126,4.343,1199,2.459,1217,4.051,1228,3.699,1269,1.651,1354,1.866,1403,2.994,1404,3.804,1477,1.975,1505,7.224,1564,4.019,1608,2.848,1684,4.343,1695,2.89,1696,2.89,1730,5.806,1732,2.89,1733,6.644,1734,4.636,1735,2.89,1736,2.89,1737,2.89,1738,2.89,1739,2.89,1740,4.636,1741,4.636,1742,2.89,1743,2.89,1744,2.89,1745,2.89,1746,2.89,1747,5.806,1748,4.343,1749,2.571,1750,2.226,1751,4.636,1752,4.636,1753,2.89,1754,4.636,1755,2.89,1756,2.89,1757,2.111,1758,2.89,1759,5.806,1760,2.226,1761,2.89,1762,2.89,1763,2.89,1764,2.89,1765,2.89,1766,2.89,1767,2.89,1769,4.636,1770,3.235,1771,4.636,1772,7.764,1773,2.89,1775,2.017,1778,3.167,1779,3.167,1780,3.167,1781,3.167,1782,3.167,1783,3.167,1784,6.363,1785,6.363,1786,3.167,1787,3.167,1788,3.167,1789,3.167,1790,3.167,1791,3.167,1792,3.167,1793,3.167,1794,3.167,1795,3.167,1796,3.167,1797,3.167,1798,3.167,1799,3.167,1800,3.167,1801,3.167,1802,3.167,1803,3.167]],["title/ES6&TypeScript/typescript/typescript_classes.html",[]],["body/ES6&TypeScript/typescript/typescript_classes.html",[1,0.53,5,0.515,7,0.672,40,0.768,41,0.801,42,0.59,43,0.633,44,0.675,55,1.861,59,0.718,60,0.746,96,4.436,171,null,172,3.09,198,2.169,260,2.962,331,3.331,392,3.711,538,3.809,1199,2.885,1223,5.723,1268,8.742,1612,3.881,1659,4.076,1804,10.77,1805,10.433,1806,8.143,1807,9.966,1808,5.961]],["title/ES6&TypeScript/typescript/typescript_features.html",[]],["body/ES6&TypeScript/typescript/typescript_features.html",[1,0.573,5,0.518,7,0.726,8,0.572,40,0.829,41,0.783,42,0.662,43,0.845,44,0.757,59,0.805,60,0.837,61,0.631,90,0.655,159,0.706,160,0.749,161,0.794,172,3.128,183,3.441,195,2.163,198,3.414,199,2.663,202,2.819,205,2.26,260,1.644,281,4.088,304,2.575,354,4.458,517,2.292,538,3.723,542,5.031,755,4.088,760,4.258,950,1.861,1129,2.763,1249,3.177,1405,2.663,1564,3.691,1610,6.102,1612,5.181,1614,4.258,1620,3.385,1650,3.314,1757,3.013,1809,4.521,1810,4.521,1811,3.864,1812,3.864,1813,3.864,1814,5.428,1815,4.843,1816,3.864,1817,3.514,1818,3.864,1819,6.803,1820,3.514,1821,3.177,1822,3.864,1823,6.803,1824,3.864,1825,4.521,1826,6.803,1827,7.518,1828,4.843]],["title/ES6&TypeScript/typescript/typescript_features.html#TypeScript特性",[1829,5.176]],["body/ES6&TypeScript/typescript/typescript_features.html#TypeScript特性",[1,0.567,5,0.513,7,0.719,8,0.561,40,0.821,41,0.773,42,0.652,43,0.835,44,0.745,59,0.793,60,0.825,61,0.619,90,0.642,159,0.692,160,0.734,161,0.777,172,3.101,183,3.389,195,2.119,198,3.167,199,2.61,202,2.762,205,2.226,260,1.611,281,4.026,354,4.391,405,1.967,517,2.258,542,4.988,755,4.026,760,4.194,801,2.762,950,1.823,1129,2.708,1221,3.595,1249,3.113,1405,2.61,1437,3.316,1517,2.82,1518,3.316,1564,3.636,1612,5.119,1614,4.194,1620,3.316,1623,3.786,1633,5.63,1757,2.953,1811,3.786,1812,3.786,1813,3.786,1814,5.347,1815,4.77,1816,3.786,1817,3.443,1818,3.786,1819,6.722,1820,3.443,1821,3.113,1822,3.786,1823,6.722,1824,3.786,1826,6.722,1827,7.443,1830,4.429,1831,6.01,1832,4.429,1833,4.429,1834,4.042,1835,4.042,1836,4.042,1837,4.042,1838,4.042,1839,4.042,1840,4.042,1841,4.042,1842,4.042,1843,4.042,1844,4.042,1845,4.042,1846,4.042,1847,4.042,1848,4.042,1849,6.01,1850,4.042,1851,4.042,1852,4.042,1853,4.042,1854,4.042,1855,4.042,1856,4.042]],["title/ES6&TypeScript/typescript/typescript_features.html#类型",[1831,4.723]],["body/ES6&TypeScript/typescript/typescript_features.html#类型",[1,0.572,5,0.513,7,0.725,8,0.571,40,0.828,41,0.781,42,0.66,43,0.844,44,0.755,59,0.804,60,0.835,61,0.629,90,0.654,159,0.704,160,0.746,161,0.791,172,3.124,183,3.434,195,2.156,198,3.194,199,2.656,202,2.811,205,2.255,260,1.64,281,4.079,354,4.448,405,2.001,517,2.287,542,5.025,755,4.079,760,4.249,801,2.811,950,1.855,1129,2.755,1221,3.659,1249,3.168,1405,2.656,1437,3.375,1517,2.87,1518,3.375,1564,3.683,1612,5.172,1614,4.249,1620,3.375,1633,5.704,1757,3.005,1811,3.853,1812,3.853,1813,3.853,1814,5.417,1815,4.833,1816,3.853,1817,3.504,1818,3.853,1819,6.791,1820,3.504,1821,3.168,1822,3.853,1823,6.791,1824,3.853,1826,6.791,1827,7.507,1834,4.113,1835,4.113,1836,4.113,1837,4.113,1838,4.113,1839,4.113,1840,4.113,1841,4.113,1842,4.113,1843,4.113,1844,4.113,1845,4.113,1846,4.113,1847,4.113,1848,4.113,1849,6.088,1850,4.113,1851,4.113,1852,4.113,1853,4.113,1854,4.113,1855,4.113,1856,4.113]],["title/ES6&TypeScript/typescript/typings.html",[]],["body/ES6&TypeScript/typescript/typings.html",[0,1.362,1,0.589,5,0.516,7,0.746,8,0.606,40,0.776,41,0.471,42,0.474,43,0.741,44,0.542,59,0.577,60,0.6,61,0.669,90,0.694,159,0.748,160,0.793,161,0.841,172,2.742,195,2.291,198,2.538,199,2.821,204,1.812,205,1.618,213,3.794,214,2.643,215,3.049,261,1.937,331,1.481,517,2.821,522,1.407,538,4.496,542,2.567,624,2.186,1113,5.626,1129,2.927,1199,3.982,1228,2.433,1313,3.366,1564,3.851,1614,4.442,1814,6.68,1857,4.789,1858,8.613,1859,4.789,1860,8.229,1861,6.976,1862,6.976,1863,7.034,1864,6.976,1865,6.976,1866,6.976,1867,8.229,1868,4.789,1869,4.789,1870,4.789,1871,4.789,1872,4.789,1873,4.789,1874,3.586,1875,4.789,1876,4.789,1877,4.789,1878,4.789,1879,4.094,1880,4.789,1881,4.789]],["title/ES6&TypeScript/typescript/working_with_tsc.html",[]],["body/ES6&TypeScript/typescript/working_with_tsc.html",[0,0.89,1,0.613,5,0.513,7,0.864,8,0.577,40,0.634,41,0.449,42,0.451,43,0.484,44,0.516,54,1.259,59,0.549,60,0.571,61,0.637,88,1.622,90,0.661,159,0.713,160,0.755,161,0.801,183,3.464,195,3.827,197,2.989,201,4.038,205,2.275,206,3.702,211,4.162,435,1.965,538,4.407,1111,2.26,1195,3.546,1199,2.207,1518,3.415,1532,2.969,1535,2.969,1612,7.075,1648,5.808,1653,3.415,1654,3.205,1712,3.899,1713,3.899,1882,9.42,1883,9.42,1884,4.561,1885,4.561,1886,4.561,1887,2.687,1888,3.899,1889,4.561,1890,4.561,1891,3.415,1892,4.561,1893,6.731,1894,5.233,1895,5.754,1896,2.641,1897,4.561,1898,4.561,1899,4.561,1900,4.561,1901,4.561,1902,4.561,1903,3.899,1904,4.561,1905,4.561,1906,6.142,1907,4.561,1908,3.119,1909,4.561,1910,4.561,1911,8,1912,4.561,1913,4.561,1914,4.561,1915,4.561,1916,4.561,1917,8,1918,4.561,1919,4.561,1920,4.561,1921,3.899,1922,3.205]],["title/ES6&TypeScript/typescript/parameter_decorators.html",[]],["body/ES6&TypeScript/typescript/parameter_decorators.html",[0,1.473,1,0.619,5,0.484,7,0.785,8,0.955,40,0.711,41,0.742,42,0.747,43,0.801,44,0.854,55,1.346,59,0.909,60,0.945,61,1.054,172,3.167,183,3.883,198,2.745,202,4.705,205,3.212,206,6.125,304,5.414,325,4.445,331,2.334,390,2.787,517,2.587,542,4.044,1532,4.912,1566,6.125,1572,6.125,1923,8.673,1924,6.885,1925,6.885,1926,6.885,1927,6.885,1928,6.885,1929,7.545]],["title/ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器",[1930,5.176]],["body/ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器",[1,0.479,5,0.499,7,0.773,8,0.932,40,0.694,41,0.724,42,0.729,43,0.782,44,0.833,55,1.313,59,0.887,60,0.922,61,1.028,172,3.119,183,3.789,198,2.679,202,4.592,205,3.163,206,5.978,304,4.194,325,4.339,331,2.278,390,2.72,517,2.524,542,3.947,1437,5.514,1532,4.794,1566,5.978,1572,5.978,1923,8.541,1924,6.719,1925,6.719,1926,6.719,1927,6.719,1928,6.719,1931,7.364,1932,7.364,1933,7.364,1934,7.364]],["title/Form/form.html",[]],["body/Form/form.html",[0,1.779,5,0.499,7,0.752,25,4.311,105,5.934,254,5.109,1935,9.114,1936,6.601]],["title/Form/form.html#Forms",[254,2.901]],["body/Form/form.html#Forms",[0,1.79,105,5.969,1936,6.641,1937,9.169,1938,9.169,1939,9.169,1940,9.169,1941,9.169,1942,9.169,1943,9.169,1944,9.169,1945,9.169]],["title/Form/getting-started.html",[]],["body/Form/getting-started.html",[0,1.201,1,0.614,5,0.505,7,0.778,8,0.779,25,2.91,40,0.784,41,0.818,42,0.609,43,0.654,44,0.696,45,2.079,46,1.413,54,1.151,55,1.097,56,3.684,59,0.741,60,0.77,61,0.859,62,2.977,63,3.563,64,2.91,65,2.603,67,2.653,68,2.943,69,2.653,70,4.207,71,4.324,73,4.006,90,0.892,159,0.961,160,1.019,161,1.08,162,1.176,240,4.439,259,6.057,260,3.955,261,3.365,262,4.281,263,4.173,1946,5.614,1947,7.058,1948,4.995,1949,4.456,1950,6.153,1951,5.416,1952,6.153]],["title/Form/getting-started.html#入门",[1953,5.176]],["body/Form/getting-started.html#入门",[0,1.168,1,0.605,5,0.505,7,0.767,8,0.758,25,2.831,40,0.77,41,0.803,42,0.592,43,0.636,44,0.677,45,2.056,54,1.119,55,1.067,56,3.632,59,0.721,60,0.749,61,0.836,62,2.896,64,2.831,65,2.532,67,2.58,68,2.863,69,2.58,70,4.092,73,3.896,90,0.868,159,0.935,160,0.991,161,1.051,162,1.144,240,4.388,259,5.988,260,3.922,261,3.302,262,4.201,263,4.096,695,3.526,1589,4.858,1946,5.461,1947,6.958,1948,4.858,1951,5.315,1954,5.985,1955,5.985,1956,5.985,1957,4.334,1958,4.481,1959,5.461,1960,5.461,1961,5.985,1962,5.985,1963,5.985]],["title/Form/nested-form-data.html",[]],["body/Form/nested-form-data.html",[0,1.409,1,0.515,5,0.515,7,0.52,8,0.798,25,1.477,40,0.594,41,0.62,42,0.624,43,0.669,44,0.713,59,0.759,60,0.789,61,0.88,88,1.11,90,0.914,105,4.701,159,0.985,160,1.044,161,1.106,162,1.204,163,1.312,164,1.4,165,1.455,166,1.584,167,1.339,168,1.387,169,0.889,170,0.953,193,3.761,194,3.761,198,1.136,207,3.132,240,4.064,242,1.43,254,4.048,256,3.638,257,2.032,259,6.448,260,3.982,261,3.739,262,4.35,263,3.97,451,5.942,624,0.978,648,1.026,897,4.077,1817,2.427,1896,1.808,1964,6.589,1965,4.583,1966,2.849,1967,6.589,1968,2.849,1969,2.194,1970,4.583,1971,2.849,1972,4.583,1973,2.849,1974,2.849,1975,2.849,1976,2.849,1977,2.849,1978,2.849,1979,2.849,1980,2.849,1981,4.583,1982,2.135,1983,2.849,1984,2.849,1985,2.849,1986,2.849,1987,2.849,1988,2.849,1989,2.849,1990,2.849,1991,2.849,1992,2.849,1993,2.849,1994,2.849,1995,2.849,1996,8.706,1997,6.589,1998,5.75,1999,5.75,2000,5.75,2001,5.75,2002,7.714,2003,2.849,2004,2.849,2005,2.669,2006,2.849,2007,3.122]],["title/Form/nested-form-data.html#嵌套表单数据",[2008,5.176]],["body/Form/nested-form-data.html#嵌套表单数据",[1,0.407,5,0.514,7,0.517,8,0.792,40,0.59,41,0.616,42,0.619,43,0.665,44,0.708,59,0.754,60,0.784,61,0.874,88,1.099,90,0.908,105,4.673,159,0.978,160,1.037,161,1.099,162,1.196,163,1.303,164,1.391,165,1.446,166,1.573,167,1.328,168,1.376,169,0.88,170,0.944,193,3.73,194,3.73,198,1.124,207,3.106,240,4.048,242,1.415,254,4.024,256,3.608,257,2.012,259,6.434,260,3.974,261,3.725,262,4.331,263,3.601,451,5.915,624,0.969,648,1.016,897,4.044,1817,2.402,1896,1.79,1964,6.55,1965,4.546,1966,2.82,1967,6.55,1968,2.82,1969,2.172,1970,4.546,1971,2.82,1972,4.546,1973,2.82,1974,2.82,1975,2.82,1976,2.82,1977,2.82,1978,2.82,1979,2.82,1980,2.82,1981,4.546,1982,2.113,1983,2.82,1984,2.82,1985,2.82,1986,2.82,1987,2.82,1988,2.82,1989,2.82,1990,2.82,1991,2.82,1992,2.82,1993,2.82,1994,2.82,1995,2.82,1996,8.676,1997,6.55,1998,5.711,1999,5.711,2000,5.711,2001,5.711,2002,7.184,2003,2.82,2004,2.82,2006,2.82,2009,3.09,2010,3.09,2011,3.09,2012,3.09,2013,3.09,2014,3.09,2015,3.09,2016,3.09,2017,2.82,2018,3.09,2019,3.09,2020,3.09,2021,3.09,2022,3.09,2023,3.09,2024,3.09,2025,3.09,2026,3.09]],["title/Form/reactive-forms.html",[]],["body/Form/reactive-forms.html",[5,0.492]],["title/Form/reactive-forms.html#响应式-模型驱动的表单",[2027,5.176]],["body/Form/reactive-forms.html#响应式-模型驱动的表单",[2028,9.69,2029,9.69,2030,9.69]],["title/Form/reactive-forms_basics.html",[]],["body/Form/reactive-forms_basics.html",[1,0.423,5,0.517,7,0.537,8,0.551,40,0.613,41,0.64,42,0.643,43,0.691,44,0.736,45,1.339,46,1.494,47,1.514,48,1.347,49,1.634,50,3.954,54,0.814,55,0.776,56,1.702,59,0.783,60,0.814,61,0.608,81,1.16,82,1.023,88,1.548,90,0.631,159,0.68,160,0.721,161,0.764,162,0.832,163,0.906,164,0.967,165,1.006,166,1.094,167,1.16,168,1.203,169,1.24,171,null,205,1.471,220,3.111,240,2.859,252,3.534,254,3.645,257,2.834,259,5.179,260,2.365,261,3.148,262,2.24,263,3.262,264,2.902,268,3.153,331,2.011,392,1.621,950,3.204,1936,6.253,1947,3.26,1948,3.534,1949,3.153,1951,6.722,2031,6.712,2032,7.9,2033,4.869,2034,2.902,2035,6.871,2036,5.279,2037,3.534,2038,3.153,2039,4.71,2040,3.534,2041,3.534,2042,2.902,2043,4.354,2044,3.973,2045,3.973,2046,3.973]],["title/Form/reactive-forms_basics.html#响应式表单基础",[2047,5.176]],["body/Form/reactive-forms_basics.html#响应式表单基础",[1,0.415,5,0.51,7,0.527,8,0.537,40,0.601,41,0.628,42,0.631,43,0.678,44,0.722,45,1.314,46,1.466,48,1.313,50,2.157,54,0.794,55,0.757,56,1.659,59,0.768,60,0.799,61,0.593,81,1.131,82,0.997,90,0.616,159,0.663,160,0.703,161,0.745,162,0.811,163,0.884,164,0.943,165,0.981,166,1.067,167,1.131,168,1.173,169,1.209,171,null,205,1.435,220,3.053,240,2.805,254,3.577,257,2.764,259,5.114,260,2.321,261,3.101,262,2.185,263,3.201,264,2.83,268,3.075,331,1.974,392,1.581,405,3.404,411,1.646,417,1.732,423,2.764,796,2.458,950,3.156,977,2.83,1936,6.175,1947,3.179,1948,3.446,1951,6.671,1958,3.179,2031,6.628,2032,7.854,2033,4.778,2034,2.83,2035,6.824,2036,5.18,2037,3.446,2038,3.075,2039,4.621,2040,3.446,2041,3.446,2042,2.83,2044,3.874,2045,3.874,2046,3.874,2048,4.245,2049,4.245,2050,4.245,2051,4.245,2052,4.245,2053,4.245,2054,4.254,2055,3.629,2056,4.245,2057,4.245,2058,4.245,2059,4.245,2060,4.245,2061,4.245,2062,4.245,2063,4.245,2064,4.245,2065,4.245,2066,4.245,2067,4.245,2068,4.245,2069,4.245,2070,4.245,2071,4.245,2072,4.245]],["title/Form/reactive-forms_custom_validation.html",[]],["body/Form/reactive-forms_custom_validation.html",[0,0.712,1,0.615,5,0.519,7,0.746,8,0.884,40,0.853,41,0.89,42,0.895,43,0.741,44,0.79,50,2.887,59,0.841,60,0.874,61,0.975,81,1.86,82,1.639,90,0.824,159,0.888,160,0.941,172,1.894,195,3.769,204,2.15,240,3.464,242,3.608,331,2.159,435,1.659,517,3.1,522,2.775,1228,4.594,1760,2.565,2032,6.839,2033,5.9,2034,4.653,2035,5.13,2042,2.433,2073,5.186,2074,5.186,2075,3.33,2076,3.33,2077,5.666,2078,2.962,2079,4.614,2080,3.649,2081,3.33,2082,3.33,2083,3.33,2084,3.649,2085,5.186,2086,5.186,2087,3.33,2088,3.33,2089,5.186,2090,3.33,2091,5.186,2092,3.33,2093,3.649,2094,3.649,2095,3.33,2096,6.369,2097,3.33,2098,3.33,2099,5.186,2100,3.33,2101,3.33,2102,3.33]],["title/Form/reactive-forms_custom_validation.html#自定义验证响应式表单",[2103,5.176]],["body/Form/reactive-forms_custom_validation.html#自定义验证响应式表单",[0,0.688,1,0.58,5,0.517,7,0.736,8,0.864,40,0.84,41,0.877,42,0.882,43,0.725,44,0.772,50,2.809,59,0.822,60,0.855,61,0.953,81,1.819,82,1.603,90,0.802,159,0.864,160,0.916,172,1.843,195,3.698,204,2.092,240,3.398,242,3.54,331,2.111,417,2.256,435,1.615,517,3.055,522,2.739,1228,4.267,2032,6.75,2033,5.788,2034,4.55,2035,5.033,2042,2.349,2054,4.55,2073,5.046,2074,5.046,2075,3.215,2076,3.215,2077,5.54,2078,2.86,2079,4.489,2081,3.215,2082,3.215,2083,3.215,2085,5.046,2086,5.046,2087,3.215,2088,3.215,2089,5.046,2090,3.215,2091,5.046,2092,3.215,2095,3.215,2096,6.228,2097,3.215,2098,3.215,2099,5.046,2100,3.215,2101,3.215,2102,3.215,2104,3.524,2105,3.524,2106,3.524,2107,3.524,2108,3.524,2109,3.524,2110,3.524,2111,3.524,2112,3.524,2113,3.524,2114,3.524,2115,3.524,2116,3.524,2117,3.524,2118,3.524,2119,3.524,2120,3.524,2121,3.524,2122,3.524,2123,3.524,2124,3.524,2125,3.524,2126,3.524,2127,3.524,2128,3.524,2129,3.524,2130,3.524,2131,3.524,2132,3.524]],["title/Form/reactive-forms_validation.html",[]],["body/Form/reactive-forms_validation.html",[0,0.688,1,0.444,5,0.514,7,0.456,8,0.7,40,0.521,41,0.544,42,0.765,43,0.587,44,0.626,45,1.139,46,1.27,47,1.226,54,0.659,55,0.628,56,1.377,59,0.666,60,0.692,61,0.772,81,0.939,82,0.828,90,0.802,159,0.864,160,0.916,161,0.971,162,1.057,163,1.151,164,1.229,165,1.277,166,1.39,167,1.474,168,1.528,169,1.575,170,1.688,171,null,195,1.686,205,1.191,220,2.645,240,2.431,242,5.127,254,3.1,257,2.294,259,4.637,260,2.011,261,2.76,262,1.813,263,2.774,264,2.349,331,1.71,392,1.312,624,1.733,648,1.817,649,1.226,650,1.292,651,1.322,652,1.344,653,1.425,768,1.564,908,1.613,909,1.648,910,1.705,911,1.837,912,1.889,913,1.945,914,1.916,915,1.945,916,1.945,917,1.889,918,1.975,919,2.04,950,2.81,1659,3.781,1687,4.299,1936,4.005,1949,2.552,1951,6.74,2031,4.299,2032,6.083,2033,4.14,2034,2.349,2035,6.74,2036,4.489,2037,2.86,2038,2.552,2039,4.005,2040,2.86,2041,2.86,2042,2.349,2077,4.489,2078,2.86,2079,6.818,2133,3.215,2134,3.215,2135,3.215,2136,4.005,2137,4.489,2138,3.524,2139,2.86,2140,2.638,2141,3.524,2142,3.317,2143,3.215,2144,3.215,2145,3.524,2146,3.215,2147,3.215,2148,2.86]],["title/Form/reactive-forms_validation.html#验证响应式表单",[2149,5.176]],["body/Form/reactive-forms_validation.html#验证响应式表单",[0,0.674,1,0.354,5,0.513,7,0.449,8,0.689,40,0.513,41,0.535,42,0.756,43,0.578,44,0.616,45,1.121,46,1.25,54,0.646,55,0.616,56,1.349,59,0.655,60,0.681,61,0.76,81,0.92,82,0.811,90,0.789,159,0.85,160,0.901,161,0.955,162,1.04,163,1.133,164,1.209,165,1.257,166,1.368,167,1.45,168,1.503,169,1.55,170,1.661,171,null,205,1.167,220,2.603,240,2.392,242,5.108,254,3.05,257,2.247,259,4.585,260,1.979,261,2.724,262,1.776,263,2.73,264,2.301,331,1.683,392,1.285,405,1.533,411,1.338,624,1.706,648,1.788,649,1.201,650,1.265,651,1.296,652,1.316,653,1.396,768,1.533,908,1.581,909,1.615,910,1.671,911,1.8,912,1.85,913,1.906,914,1.877,915,1.906,916,1.906,917,1.85,918,1.935,919,1.999,950,2.773,1659,3.721,1687,4.23,1936,3.941,1951,6.703,1958,2.585,2031,4.23,2032,6.024,2033,4.074,2034,2.301,2035,6.703,2036,4.417,2037,2.802,2038,2.5,2039,3.941,2040,2.802,2041,2.802,2042,2.301,2054,3.627,2077,4.417,2078,2.802,2079,6.752,2133,3.15,2134,3.15,2135,3.15,2136,3.941,2137,4.417,2139,2.802,2140,2.585,2142,3.264,2143,3.15,2144,3.15,2146,3.15,2147,3.15,2148,2.802,2150,3.452,2151,3.452,2152,3.452,2153,3.452,2154,3.452,2155,3.452,2156,3.452,2157,2.802,2158,3.452,2159,3.452,2160,3.452,2161,3.452]],["title/Form/template-driven_forms.html",[]],["body/Form/template-driven_forms.html",[0,1.28,1,0.604,5,0.512,7,0.717,8,0.558,38,3.297,40,0.739,41,0.771,42,0.775,43,0.832,44,0.887,45,1.351,46,1.506,47,1.532,48,1.362,49,1.653,54,0.824,55,0.785,58,3.095,59,0.944,60,0.981,61,0.615,90,0.639,105,4.27,159,0.688,160,0.729,205,1.488,220,4.153,240,3.817,254,5.935,256,5.676,257,2.867,259,6.215,260,3.158,261,3.936,262,3.375,263,4.657,264,4.372,268,3.189,451,7.441,1346,2.55,1622,1.936,1949,3.189,2034,2.936,2035,7.12,2042,4.372,2162,2.936,2163,3.189,2164,8.881,2165,5.324,2166,4.089,2167,3.575,2168,4.018,2169,3.764,2170,4.018,2171,4.018,2172,3.575]],["title/Form/template-driven_forms.html#模版驱动表单",[2173,5.176]],["body/Form/template-driven_forms.html#模版驱动表单",[0,0.843,1,0.504,5,0.513,7,0.71,8,0.547,38,3.232,40,0.73,41,0.762,42,0.766,43,0.823,44,0.876,45,1.331,46,1.484,48,1.335,54,0.808,55,0.77,58,3.034,59,0.933,60,0.97,61,0.603,90,0.626,105,4.207,159,0.674,160,0.715,205,1.459,220,4.113,240,3.779,254,5.773,256,5.609,257,2.81,259,6.178,260,3.127,261,3.908,262,3.325,263,4.618,264,4.307,268,3.127,411,1.673,451,7.401,665,3.356,796,2.5,1346,2.5,1622,1.898,1958,3.232,2034,2.878,2035,7.088,2042,2.878,2162,2.878,2163,3.127,2164,8.816,2165,5.245,2166,4.029,2167,3.504,2168,3.939,2170,3.939,2171,3.939,2172,3.504,2174,4.317,2175,4.317,2176,4.317,2177,4.317,2178,4.317,2179,4.317,2180,4.317,2181,4.317,2182,6.462]],["title/Form/template-model-binding.html",[]],["body/Form/template-model-binding.html",[0,0.791,1,0.583,5,0.512,7,0.687,8,1.054,40,0.785,41,0.819,42,0.824,43,0.885,44,0.943,45,1.715,46,1.913,47,2.144,54,1.153,55,1.099,59,1.003,60,1.043,61,0.861,90,0.894,105,5.832,159,0.963,160,0.671,161,0.712,172,2.484,205,2.52,220,3.984,240,3.661,254,4.669,256,6.832,257,2.64,259,6.061,260,2.712,261,3.623,262,2.086,263,3.74,264,4.108,451,7.417,780,3.152,950,1.669,1949,4.464,1951,6.578,2034,2.703,2042,2.703,2165,5.003,2166,3.843,2167,6.761,2169,5.268,2172,3.291,2183,3.036,2184,3.7,2185,5.624,2186,5.624,2187,5.624,2188,4.054,2189,3.7,2190,3.7,2191,3.7,2192,4.054,2193,4.054,2194,4.054,2195,4.054,2196,3.7]],["title/Form/template-model-binding.html#使用-Model-绑定",[801,1.653,2183,1.986,2197,2.652]],["body/Form/template-model-binding.html#使用-Model-绑定",[1,0.533,5,0.514,7,0.675,8,1.036,40,0.771,41,0.805,42,0.81,43,0.869,44,0.926,45,1.685,46,1.88,54,1.124,55,1.071,59,0.986,60,1.025,61,0.839,90,0.871,105,5.328,159,0.938,160,0.649,161,0.688,172,2.433,205,2.468,220,3.915,240,3.598,254,4.588,256,6.743,257,2.552,259,5.997,260,2.656,261,3.569,262,2.017,263,3.663,264,4.004,411,2.328,451,7.352,950,1.614,1951,6.508,1958,4.497,2034,2.613,2042,2.613,2054,2.613,2165,4.876,2166,3.745,2167,6.644,2169,5.134,2172,3.182,2184,3.577,2185,5.48,2186,5.48,2187,5.48,2189,3.577,2190,3.577,2196,3.577,2198,3.92,2199,3.92,2200,3.92,2201,3.92,2202,3.92,2203,3.92,2204,3.92,2205,3.92,2206,3.577,2207,3.92,2208,3.92,2209,3.92,2210,3.92]],["title/Form/validating_forms.html",[]],["body/Form/validating_forms.html",[1,0.555,5,0.507,7,0.704,8,0.808,40,0.602,41,0.628,42,0.95,43,0.678,44,0.722,59,0.769,60,0.799,61,0.891,197,2.834,240,4.695,261,4.319,262,5.496,1273,7.795,1471,3.328,2005,7.29,2140,4.78,2142,5.76,2211,8.303,2212,5.993,2213,7.19,2214,7.423,2215,7.781,2216,4.962,2217,5.825,2218,5.825,2219,5.825,2220,6.383,2221,6.383,2222,5.182,2223,5.825]],["title/Form/validating_forms.html#验证模板驱动的表单",[2224,5.176]],["body/Form/validating_forms.html#验证模板驱动的表单",[1,0.557,5,0.497,7,0.706,8,0.811,40,0.604,41,0.63,42,0.952,43,0.681,44,0.725,59,0.772,60,0.803,61,0.895,240,4.702,261,4.325,262,5.503,1273,7.811,1471,3.342,2055,5.479,2140,4.8,2142,5.773,2211,8.314,2212,6.01,2213,7.205,2214,7.435,2215,7.803,2216,4.983,2217,5.849,2218,5.849,2219,5.849,2222,5.203,2223,5.849,2225,6.41,2226,6.41,2227,6.41,2228,6.41,2229,6.41,2230,6.41,2231,6.41,2232,6.41,2233,6.41]],["title/Form/visual_cues_for_users.html",[]],["body/Form/visual_cues_for_users.html",[0,1.564,1,0.522,5,0.505,7,0.662,8,0.738,40,0.755,41,0.788,42,0.793,43,0.851,44,0.907,59,0.702,60,0.729,61,0.814,90,0.845,159,0.91,160,0.965,161,1.023,162,1.113,163,1.213,240,3.523,243,5.48,245,4.9,265,5.191,333,3.633,348,4.722,357,5.653,366,3.633,760,3.709,782,6.001,844,4.729,1659,7.076,1815,4.219,2005,4.98,2148,6.506,2191,7.313,2211,8.314,2234,9.443,2235,5.826,2236,5.316,2237,4.362,2238,5.316,2239,4.219,2240,7.313,2241,5.316,2242,7.313,2243,4.094,2244,7.313]],["title/Form/visual_cues_for_users.html#用户的视觉提示",[2245,5.176]],["body/Form/visual_cues_for_users.html#用户的视觉提示",[0,1.1,1,0.51,5,0.508,7,0.646,8,0.713,40,0.738,41,0.77,42,0.775,43,0.832,44,0.886,59,0.678,60,0.705,61,0.787,90,0.817,159,0.88,160,0.933,161,0.989,162,1.076,163,1.173,240,3.443,243,5.354,245,4.787,265,5.129,333,3.512,348,4.614,357,5.594,405,2.501,760,3.587,782,5.863,844,4.573,1659,6.991,1815,4.08,2148,6.357,2206,7.145,2211,8.228,2234,9.329,2236,5.14,2237,4.218,2238,5.14,2239,4.08,2240,7.145,2241,5.14,2242,7.145,2243,3.959,2244,7.145,2246,5.633,2247,5.633,2248,5.633,2249,5.633,2250,5.633,2251,5.633,2252,5.633]],["title/Http/cancel_request.html",[]],["body/Http/cancel_request.html",[1,0.46,5,0.514,7,0.583,8,0.894,40,0.665,41,0.694,42,0.698,43,0.75,44,0.799,46,1.621,54,1.32,55,1.259,59,0.85,60,0.884,61,0.986,81,1.881,82,1.658,90,1.024,159,1.103,160,1.169,161,1.239,205,2.386,330,6.073,435,2.061,827,3.586,950,2.906,1404,5.286,2253,6.441,2254,5.286,2255,5.286,2256,5.73,2257,7.059,2258,7.059,2259,3.586,2260,7.059,2261,7.059,2262,7.059,2263,5.112,2264,7.059]],["title/Http/catching-rejections.html",[]],["body/Http/catching-rejections.html",[1,0.391,5,0.508,7,0.496,8,0.761,40,0.566,41,0.591,42,0.594,43,0.638,44,0.68,45,1.686,47,2.09,54,1.124,55,1.072,59,0.724,60,0.752,61,0.839,90,0.871,159,0.939,160,0.995,161,1.055,162,1.148,163,1.251,164,1.335,165,1.388,166,1.51,167,1.601,168,1.66,169,1.711,170,1.834,171,null,205,3.147,265,3.014,390,3.024,392,2.237,393,4.223,435,1.754,522,1.765,624,1.883,648,1.974,827,3.052,950,2.473,1199,5.224,1404,4.499,1951,5.329,2035,6.062,2259,3.052,2263,5.929,2265,6.364,2266,4.351,2267,6.008,2268,6.998,2269,6.008,2270,6.008,2271,6.008,2272,6.13,2273,6.008,2274,6.008,2275,6.008,2276,6.008,2277,6.008,2278,6.008]],["title/Http/http.html",[]],["body/Http/http.html",[1,0.479,5,0.501,7,0.773,8,0.932,40,0.694,41,0.724,42,0.729,43,0.782,44,0.833,45,1.928,54,1.378,55,1.313,56,3.659,59,0.887,60,0.922,61,1.028,62,3.564,65,3.116,67,3.175,68,3.523,69,3.175,88,2.619,90,1.068,159,1.151,160,1.22,283,4.339,827,5.227,2265,5.725,2266,6.779,2279,7.364,2280,8.001,2281,7.364,2282,7.364,2283,5.725,2284,7.364]],["title/Http/interceptor.html",[]],["body/Http/interceptor.html",[1,0.49,5,0.509,7,0.621,8,0.952,40,0.709,41,0.74,42,0.744,43,0.799,44,0.852,45,2.062,47,1.85,54,1.407,55,1.342,56,2.941,59,0.906,60,0.942,61,1.051,62,2.575,65,2.251,67,2.294,68,2.545,69,2.294,88,2.675,90,1.091,159,1.175,160,1.246,161,0.934,162,1.017,163,1.108,164,1.182,165,1.229,171,null,195,2.545,205,1.798,331,1.646,335,2.738,363,5.849,390,2.779,392,1.981,393,5.288,435,1.553,522,1.563,550,3.547,827,3.822,950,2.19,1113,3.638,2243,3.739,2266,5.449,2280,4.548,2285,3.739,2286,5.015,2287,7.964,2288,4.855,2289,6.865,2290,6.107,2291,2.152,2292,4.319,2293,6.865,2294,4.855,2295,4.855,2296,4.855,2297,4.855,2298,4.855,2299,5.32,2300,4.855,2301,4.855,2302,4.855,2303,4.855,2304,4.855,2305,5.32]],["title/Http/interceptor.html#Http-拦截器",[827,1.781,2306,3.507]],["body/Http/interceptor.html#Http-拦截器",[1,0.48,5,0.509,7,0.609,8,0.934,40,0.696,41,0.726,42,0.73,43,0.784,44,0.835,45,2.04,47,1.8,54,1.38,55,1.316,56,2.884,59,0.889,60,0.924,61,1.03,62,2.505,65,2.19,67,2.232,68,2.476,69,2.232,88,2.624,90,1.07,159,1.153,160,1.222,161,0.909,162,0.989,163,1.078,164,1.15,165,1.196,171,null,195,2.476,205,1.749,331,1.601,335,2.664,363,5.736,390,2.726,392,1.927,393,5.186,417,2.112,435,1.512,481,3.638,522,1.521,550,3.451,950,2.131,1376,4.724,2243,3.638,2266,5.344,2280,4.425,2285,3.638,2286,4.919,2287,7.845,2288,4.724,2289,6.733,2290,5.99,2291,2.094,2292,4.202,2293,6.733,2294,4.724,2295,4.724,2296,4.724,2297,4.724,2298,4.724,2300,4.724,2301,4.724,2302,4.724,2303,4.724,2304,4.724,2307,5.177,2308,5.177,2309,5.177,2310,5.177,2311,5.177,2312,5.177,2313,5.177,2314,4.724,2315,5.177]],["title/Http/http_with_rxjs.html",[]],["body/Http/http_with_rxjs.html",[5,0.476,2316,5.67,2317,8.624,2318,8.624,2319,8.079]],["title/Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性",[2320,5.176]],["body/Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性",[2317,8.678,2318,8.678,2319,8.13,2321,9.51,2322,9.51,2323,9.51]],["title/Http/making_requests.html",[]],["body/Http/making_requests.html",[1,0.409,5,0.506,7,0.518,8,0.795,25,2.97,40,0.592,41,0.618,42,0.621,43,0.667,44,0.711,45,1.961,47,2.184,54,1.174,55,1.12,59,0.756,60,0.786,61,0.877,90,0.91,159,0.981,160,1.04,161,1.102,162,1.2,163,1.307,164,1.395,165,1.45,171,null,172,2.092,261,2.539,331,1.942,390,3.116,392,2.338,435,1.833,522,1.845,827,5.172,1467,4.727,1775,5.37,2162,4.185,2259,4.284,2265,6.556,2266,4.547,2291,2.539,2324,6.279,2325,7.209,2326,6.279,2327,6.279,2328,6.279,2329,8.434,2330,5.729,2331,4.881,2332,4.727,2333,6.279,2334,4.185,2335,6.279,2336,6.279,2337,5.367,2338,5.097,2339,6.279]],["title/Http/progress.html",[]],["body/Http/progress.html",[1,0.432,5,0.505,7,0.547,8,0.84,40,0.625,41,0.652,42,0.656,43,0.704,44,0.751,59,0.799,60,0.83,61,0.926,90,0.962,159,1.036,160,1.098,161,1.164,162,1.267,163,1.381,164,1.474,165,1.532,166,1.667,195,4.184,205,3.307,331,2.051,435,1.936,827,3.369,950,4.029,1770,4.223,2162,4.421,2256,7.1,2259,3.369,2290,5.383,2340,7.981,2341,6.051,2342,6.051,2343,6.051,2344,7.601,2345,8.93,2346,6.051,2347,6.051,2348,7.981,2349,6.051,2350,6.051,2351,6.051,2352,5.383,2353,6.051]],["title/Http/progress.html#HTTP-进度事件",[827,1.781,2354,3.2]],["body/Http/progress.html#HTTP-进度事件",[1,0.417,5,0.51,7,0.529,8,0.811,40,0.604,41,0.63,42,0.634,43,0.681,44,0.725,59,0.772,60,0.803,61,0.895,90,0.929,159,1.001,160,1.062,161,1.125,162,1.225,163,1.334,164,1.424,165,1.48,166,1.611,195,3.066,205,3.252,331,1.983,435,1.872,950,3.961,1770,4.081,2162,4.273,2256,6.942,2259,3.256,2290,5.203,2340,7.803,2341,5.849,2342,5.849,2343,5.849,2344,7.516,2345,8.781,2346,5.849,2347,5.849,2348,7.803,2349,5.849,2350,5.849,2351,5.849,2352,5.203,2353,5.849,2354,5.849,2355,5.849,2356,6.41,2357,6.41]],["title/Http/catch_and_release.html",[]],["body/Http/catch_and_release.html",[1,0.476,5,0.516,7,0.603,8,0.925,40,0.689,41,0.719,42,0.723,43,0.776,44,0.827,45,1.757,47,1.777,54,1.367,55,1.303,59,0.88,60,0.915,61,1.021,81,1.361,82,1.2,90,1.06,159,1.142,160,1.21,161,1.283,162,1.396,163,1.521,164,1.624,165,1.18,171,null,172,2.435,291,5.472,331,2.261,390,3.153,392,1.902,522,2.896,636,3.492,827,2.595,1199,3.537,1467,2.863,1770,3.252,2265,5.681,2266,3.699,2272,6.39,2291,2.066,2325,6.247,2331,5.681,2334,4.872,2358,4.146,2359,5.293,2360,6.669,2361,6.669,2362,7.308,2363,8.534,2364,7.308,2365,3.825,2366,5.108]],["title/Immutable/deleting_keys.html",[]],["body/Immutable/deleting_keys.html",[1,0.387,5,0.508,7,0.49,8,0.752,40,0.56,41,0.584,42,0.588,43,0.631,44,1.047,59,0.715,60,0.744,61,0.829,90,0.861,113,5.882,159,1.269,160,0.983,161,1.042,162,1.135,163,1.236,164,1.32,165,1.372,166,1.493,167,1.583,168,1.64,189,5.882,205,2.007,260,3.913,281,3.63,866,5.553,1467,5.188,1622,2.611,2140,7.45,2367,5.938,2368,5.938,2369,4.821,2370,6.081,2371,6.081,2372,7.41,2373,7.41,2374,7.41,2375,7.41,2376,7.41,2377,7.41,2378,7.41,2379,7.41,2380,5.076,2381,5.419,2382,3.959,2383,5.419,2384,5.419,2385,5.419,2386,5.938,2387,5.419,2388,3.866]],["title/Immutable/immutable-js.html",[]],["body/Immutable/immutable-js.html",[5,0.399,196,8.241,2389,9.63]],["title/Immutable/immutable.html",[]],["body/Immutable/immutable.html",[196,8.3]],["title/Immutable/javascript-solutions.html",[]],["body/Immutable/javascript-solutions.html",[197,4.33,1111,4.832]],["title/Immutable/lists.html",[]],["body/Immutable/lists.html",[1,0.53,5,0.512,7,0.74,8,0.595,31,4.207,34,3.52,40,0.649,41,0.462,42,0.465,43,0.499,44,0.532,59,0.566,60,0.589,61,0.656,90,0.682,114,2.556,159,0.734,160,0.779,161,0.825,162,0.898,163,0.979,164,1.045,165,1.086,166,1.182,167,1.253,168,1.299,169,1.339,170,1.435,189,7.217,197,2.087,204,1.778,205,1.589,260,3.625,281,4.207,522,2.022,624,1.473,648,1.545,649,1.635,650,1.723,651,1.764,652,1.793,653,1.901,764,3.06,768,2.087,866,6.127,1273,3.816,1467,5.023,1469,2.224,1821,3.304,2332,2.635,2369,5.587,2380,8.518,2388,3.06,2390,4.289,2391,4.701,2392,2.046,2393,4.701,2394,4.018,2395,6.882,2396,6.882,2397,8.518,2398,6.882,2399,6.882,2400,6.882,2401,6.882,2402,6.882,2403,4.701,2404,6.882,2405,6.882,2406,4.701,2407,6.882,2408,6.882,2409,3.304,2410,4.701,2411,6.882,2412,4.289,2413,4.701,2414,4.701,2415,4.701,2416,3.816,2417,4.701]],["title/Immutable/map_merge.html",[]],["body/Immutable/map_merge.html",[1,0.475,5,0.501,7,0.602,8,0.923,40,0.688,41,0.717,42,0.722,43,0.775,44,0.826,59,0.878,60,0.913,61,1.019,90,1.058,159,1.14,160,1.208,205,2.465,236,6.656,262,5.271,264,6.202,333,4.548,652,3.548,1249,6.538,2388,4.749,2418,7.294,2419,7.294,2420,6.235,2421,4.846,2422,7.294,2423,9.303,2424,9.303,2425,7.294,2426,7.294,2427,9.303,2428,7.294]],["title/Immutable/maps.html",[]],["body/Immutable/maps.html",[1,0.423,5,0.515,7,0.536,8,0.822,34,6.457,40,0.612,41,0.638,42,0.642,43,0.69,44,1.096,45,1.337,59,1.166,60,0.813,61,0.906,90,0.941,159,1.014,172,2.163,197,3.829,205,2.914,228,7.861,260,2.361,452,5.269,866,7.055,1467,5.428,2332,3.639,2370,4.86,2371,4.86,2388,5.614,2420,5.549,2429,8.376,2430,7.861,2431,6.491,2432,6.491,2433,6.491]],["title/Immutable/maps_are_iterable.html",[]],["body/Immutable/maps_are_iterable.html",[1,0.634,5,0.518,7,0.758,8,1.063,10,3.855,18,4.374,25,2.346,40,0.674,41,0.704,42,0.708,43,0.76,44,0.81,59,0.862,60,0.896,61,0.693,88,2.544,90,0.719,159,0.775,160,0.821,161,0.871,162,0.948,166,1.247,183,3.682,195,4.016,201,5.035,202,5.234,204,3.175,205,1.676,228,6.814,435,2.451,522,1.457,542,2.658,652,2.729,1098,5.562,1467,4.011,1468,3.228,1469,2.346,2420,4.239,2434,4.959,2435,9.189,2436,5.182,2437,4.658,2438,7.155,2439,4.959,2440,4.959,2441,3.391,2442,4.959,2443,4.959,2444,7.155,2445,4.959,2446,4.959,2447,4.959,2448,4.959,2449,4.959,2450,4.959,2451,4.959,2452,4.959,2453,7.155]],["title/Immutable/nested-objects.html",[]],["body/Immutable/nested-objects.html",[1,0.404,5,0.511,7,0.512,8,0.785,40,0.584,41,0.61,42,0.613,43,0.659,44,1.071,59,0.747,60,0.776,61,0.866,90,0.899,113,7.038,159,1.375,160,1.027,161,1.088,162,1.185,163,1.291,164,1.378,165,1.432,166,1.559,167,1.652,168,1.713,169,1.766,170,1.893,189,6.056,205,2.095,228,3.999,260,3.89,281,3.011,624,0.955,866,5.718,1467,4.382,1622,3.676,2140,7.276,2332,1.708,2369,5.033,2370,6.261,2371,6.261,2372,7.63,2373,7.63,2374,7.63,2375,6.497,2376,6.497,2377,6.497,2378,6.497,2379,8.867,2380,8.089,2381,8.634,2382,5.574,2383,7.63,2384,7.63,2385,7.63,2387,5.657,2388,4.036,2416,2.474,2454,7.12,2455,4.926,2456,3.047,2457,3.047,2458,3.047,2459,4.926,2460,3.047,2461,3.047]],["title/Immutable/object_assign.html",[]],["body/Immutable/object_assign.html",[1,0.563,5,0.502,7,0.714,8,0.825,40,0.815,41,0.851,42,0.856,43,0.919,44,1.251,59,1.331,60,1.083,61,0.91,123,4.703,205,3.493,260,3.146,866,6.635,1217,6.179,2370,6.475,2371,6.475,2388,6.728,2429,8.39,2430,7.02,2462,7.02,2463,5.573,2464,7.392,2465,7.891,2466,6.519]],["title/Http/retry.html",[]],["body/Http/retry.html",[1,0.436,5,0.513,7,0.552,8,0.847,40,0.829,41,0.658,42,0.662,43,0.711,44,0.757,45,2.024,47,2.327,54,1.251,55,1.193,59,0.806,60,0.838,61,0.934,90,0.97,159,1.045,160,1.108,161,1.174,162,1.278,171,null,172,2.229,204,2.531,390,3.25,392,2.491,522,1.966,827,3.398,1467,3.75,1770,4.259,2265,6.838,2266,4.845,2291,2.706,2316,4.013,2319,7.519,2325,5.718,2331,5.2,2334,4.459,2358,5.43,2359,4.845,2360,6.104,2361,6.104,2365,5.009,2467,6.689,2468,6.689]],["title/Immutable/object_freeze.html",[]],["body/Immutable/object_freeze.html",[1,0.457,5,0.503,7,0.58,8,0.89,40,0.662,41,0.691,42,0.695,43,0.746,44,1.204,59,1.094,60,0.88,61,0.981,90,1.019,123,4.94,196,5.261,205,3.07,260,2.556,866,4.804,1199,3.4,1217,4.474,1313,4.938,1395,7.061,1874,5.261,2216,5.462,2370,5.261,2371,5.261,2388,5.913,2429,7.373,2430,5.704,2462,5.704,2463,6.007,2464,6.007,2465,6.412,2469,9.709,2470,7.027,2471,7.027,2472,9.083]],["title/Immutable/performance.html",[]],["body/Immutable/performance.html",[5,0.492]],["title/Immutable/persistent_and_transient_data_structures.html",[]],["body/Immutable/persistent_and_transient_data_structures.html",[1,0.325,5,0.494,7,0.412,8,0.632,19,6.782,34,7.618,40,0.47,41,0.491,42,0.494,43,0.53,44,0.565,45,1.028,59,0.601,60,0.625,61,0.697,82,1.172,88,1.775,90,0.724,159,0.78,160,0.827,161,0.876,162,0.954,163,1.039,196,3.737,199,2.941,204,1.888,205,2.429,209,7.687,265,2.504,281,5.15,331,1.544,338,6.559,522,2.112,939,3.112,1033,2.843,1130,4.052,1198,3.413,1269,2.603,1405,5.994,1546,3.88,1650,3.562,1690,4.052,2038,3.615,2212,3.508,2263,3.615,2369,4.052,2388,4.68,2390,6.559,2392,2.173,2412,4.554,2469,4.554,2473,9.217,2474,9.768,2475,4.991,2476,4.991,2477,7.075,2478,4.267,2479,3.737,2480,4.991,2481,4.052,2482,3.88,2483,4.991,2484,6.676,2485,4.267,2486,4.991,2487,4.991,2488,4.052,2489,4.267,2490,4.991,2491,2.638,2492,4.991,2493,4.991,2494,8.425,2495,4.991,2496,4.991,2497,7.188,2498,4.991,2499,2.89,2500,4.267,2501,4.991,2502,7.188,2503,4.267,2504,3.88,2505,3.413,2506,4.991,2507,4.991,2508,4.991,2509,3.112,2510,4.267,2511,4.267]],["title/Immutable/the_case_for_immutability.html",[]],["body/Immutable/the_case_for_immutability.html",[5,0.491,827,4.861]],["title/Immutable/what_is_immutability.html",[]],["body/Immutable/what_is_immutability.html",[1,0.577,5,0.516,7,0.731,8,0.972,40,0.835,41,0.755,42,0.877,43,0.815,44,1.145,59,1.218,60,0.961,123,4.82,172,2.557,189,3.963,197,3.407,198,2.792,199,3.224,205,2.995,260,2.792,304,4.371,307,5.393,325,4.521,517,1.876,542,2.933,866,6.06,894,4.993,1129,3.345,1228,2.78,1567,4.254,1614,4.886,1620,4.097,2370,5.746,2371,5.746,2388,3.563,2429,7.195,2430,6.23,2463,4.678,2464,4.678,2512,7.674,2513,9.607,2514,5.472]],["title/i18n/i18n.html",[]],["body/i18n/i18n.html",[5,0.399,2515,7.817,2516,9.63,2517,9.63]],["title/i18n/i18n.html#i18n的目的是",[2518,5.176]],["body/i18n/i18n.html#i18n的目的是",[2519,9.69,2520,9.69,2521,9.69]],["title/i18n/import-translation-files.html",[]],["body/i18n/import-translation-files.html",[0,1.834,5,0.474,357,4.965,2491,4.965,2522,9.394,2523,8.03]],["title/i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中",[2524,5.176]],["body/i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中",[2525,9.451,2526,8.624,2527,9.451,2528,9.451,2529,9.451,2530,9.451,2531,9.451]],["title/i18n/import-using-aot.html",[]],["body/i18n/import-using-aot.html",[5,0.509,7,0.698,40,0.798,85,7.3,2437,5.508,2491,4.472,2532,8.461,2533,6.868,2534,7.72,2535,6.868,2536,7.72,2537,7.72,2538,7.72,2539,7.72]],["title/i18n/import-using-aot.html#使用AoT编译器导入翻译文件",[2540,5.176]],["body/i18n/import-using-aot.html#使用AoT编译器导入翻译文件",[5,0.353,7,0.702,85,5.671,417,3.471,2437,5.539,2533,6.906,2534,7.763,2535,6.906,2536,7.763,2537,7.763,2538,7.763,2539,7.763,2541,8.508,2542,8.508,2543,8.508,2544,8.508,2545,8.508,2546,8.508,2547,8.508,2548,8.508,2549,8.508,2550,8.508,2551,8.508,2552,8.508,2553,8.508]],["title/i18n/import-using-jit.html",[]],["body/i18n/import-using-jit.html",[1,0.358,5,0.508,7,0.453,8,0.695,40,0.518,41,0.54,42,0.543,43,0.583,44,0.622,45,2.162,47,1.91,54,1.027,55,0.979,59,0.661,60,0.688,61,0.767,62,3.723,63,4.455,64,3.639,65,3.255,67,2.368,68,2.627,69,2.368,70,3.755,71,3.86,73,3.575,81,1.464,82,1.29,88,3.422,90,0.796,159,0.858,160,0.91,161,0.964,162,1.049,163,1.143,164,1.22,165,1.268,166,1.381,167,1.464,168,1.517,169,1.564,170,1.677,262,2.826,304,5.058,435,1.604,449,5.919,624,1.721,648,1.805,649,1.91,650,2.013,827,2.79,1305,4.695,1306,2.944,1513,3.575,1652,3.357,1887,3.236,2392,2.391,2554,4.695,2555,5.492,2556,5.492,2557,9.243,2558,8.103,2559,8.103,2560,5.011,2561,4.458,2562,3.755,2563,3.497,2564,5.492,2565,7.02,2566,5.492,2567,5.492,2568,5.492]],["title/i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中",[2569,3.507,2570,3.507]],["body/i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中",[1,0.342,5,0.512,7,0.433,8,0.664,40,0.495,41,0.516,42,0.519,43,0.557,44,0.594,45,2.131,54,0.982,55,0.936,59,0.632,60,0.657,61,0.733,62,3.605,64,2.482,65,3.152,67,2.262,68,2.51,69,2.262,70,3.588,73,3.416,81,1.398,82,1.232,88,3.353,90,0.761,159,0.82,160,0.869,161,0.921,162,1.003,163,1.092,164,1.166,165,1.212,166,1.319,167,1.398,168,1.45,169,1.495,170,1.602,262,2.7,304,4.934,411,2.034,417,2.141,435,1.532,449,5.775,624,1.645,648,1.724,649,1.825,650,1.924,695,4.39,696,3.341,1513,3.416,1652,3.208,1957,3.801,2392,2.284,2557,9.087,2558,7.904,2559,7.904,2560,4.788,2561,4.26,2563,3.341,2565,6.798,2571,5.247,2572,5.247,2573,5.247,2574,5.247,2575,5.247,2576,5.247,2577,5.247,2578,5.247,2579,5.247,2580,5.247,2581,5.247,2582,5.247,2583,5.247,2584,5.247,2585,5.247]],["title/i18n/marking-text-in-templates.html",[]],["body/i18n/marking-text-in-templates.html",[5,0.505,7,0.735,363,6.921,2586,8.536,2587,8.124,2588,8.124,2589,8.124,2590,8.124,2591,8.903]],["title/i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译",[2592,5.176]],["body/i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译",[5,0.371,7,0.739,363,6.961,2586,8.565,2587,8.171,2588,8.171,2589,8.171,2590,8.171,2593,8.955,2594,8.955,2595,8.955,2596,8.955,2597,8.955,2598,8.955,2599,8.955]],["title/i18n/process-and-roles.html",[]],["body/i18n/process-and-roles.html",[0,1.822,5,0.487,1760,6.562,2515,7.579,2600,9.336,2601,9.336]],["title/i18n/process-and-roles.html#过程-amp-角色",[2602,5.176]],["body/i18n/process-and-roles.html#过程-amp-角色",[2603,9.394,2604,9.394,2605,9.394,2606,9.394,2607,9.394,2608,9.394,2609,9.394,2610,9.394]],["title/i18n/translation-text-extraction.html",[]],["body/i18n/translation-text-extraction.html",[0,1.821,1,0.477,5,0.503,7,0.77,63,4.244,213,3.986,214,4.045,215,4.667,219,4.062,357,5.427,359,4.885,2437,6.075,2515,5.949,2523,9.24,2535,5.949,2611,6.276,2612,9.368,2613,9.863,2614,6.687,2615,6.687,2616,5.308,2617,8.515,2618,6.687,2619,7.329,2620,5.697]],["title/i18n/translation-text-extraction.html#使用-Angular-i18n-工具",[0,0.416,801,1.329,2515,1.731,2621,2.132]],["body/i18n/translation-text-extraction.html#使用-Angular-i18n-工具",[1,0.486,5,0.31,7,0.78,63,4.327,213,4.063,214,4.124,215,4.757,219,4.112,357,4.993,359,4.981,1517,6.015,2437,6.15,2523,8.856,2535,6.065,2611,4.567,2612,6.818,2613,8.62,2614,6.818,2615,6.818,2616,5.411,2617,8.62,2618,6.818,2622,7.472,2623,6.818,2624,7.472,2625,7.472,2626,7.472,2627,7.472,2628,7.472,2629,7.472,2630,7.472,2631,7.472,2632,7.472,2633,7.472,2634,7.472,2635,7.472,2636,7.472,2637,7.472,2638,7.472,2639,7.472,2640,7.472]],["title/compare.html",[]],["body/compare.html",[0,1.661,1,0.554,5,0.504,8,1.296,90,1.234,162,1.626,613,7.763,653,3.441,2641,5.979,2642,6.906,2643,6.614,2644,6.906,2645,6.906,2646,6.906,2647,6.906,2648,7.763]],["title/compare.html#与其他框架比较",[2649,5.176]],["body/compare.html#与其他框架比较",[0,1.67,1,0.557,8,1.3,90,1.24,653,3.46,2641,6.013,2642,6.945,2643,6.651,2644,6.945,2645,6.945,2646,6.945,2647,6.945,2648,7.806,2650,8.555,2651,8.555,2652,8.555,2653,8.555,2654,8.555,2655,8.555,2656,8.555,2657,8.555,2658,7.806,2659,8.555]],["title/further-reading.html",[]],["body/further-reading.html",[0,2.22,1,0.645,3,2.791,5,0.174,22,2.026,25,1.981,26,2.666,30,6.172,41,0.412,42,0.981,64,1.981,82,0.983,226,2.611,241,2.277,265,2.101,282,2.791,292,3.399,335,2.155,517,2.165,538,4.638,631,2.467,633,3.135,939,5.665,1131,2.611,1306,2.245,1535,2.726,1648,2.467,1708,2.611,1828,3.033,1887,2.467,1891,3.135,1896,4.403,2142,2.512,2162,4.21,2166,2.611,2183,3.135,2212,2.943,2291,3.863,2316,6.384,2392,3.955,2394,3.579,2436,3.033,2441,2.863,2477,3.033,2482,3.255,2660,3.821,2661,6.212,2662,3.399,2663,4.021,2664,6.582,2665,3.821,2666,3.821,2667,6.132,2668,2.863,2669,3.399,2670,3.135,2671,4.438,2672,3.821,2673,3.399,2674,3.821,2675,3.821,2676,3.399,2677,3.821,2678,3.821,2679,3.821,2680,3.399,2681,2.943,2682,5.911,2683,3.135,2684,6.132,2685,3.821,2686,3.399,2687,6.499,2688,3.821,2689,3.135,2690,3.821,2691,3.821,2692,3.821,2693,3.399,2694,2.56,2695,4.729,2696,3.821,2697,2.943,2698,2.943,2699,3.399,2700,3.135,2701,3.861,2702,3.579,2703,3.821,2704,3.399,2705,3.821,2706,2.943,2707,5.763,2708,5.763,2709,3.821,2710,2.863,2711,3.399,2712,2.277,2713,3.399,2714,2.943,2715,3.821,2716,2.899,2717,4.822,2718,3.399,2719,2.311,2720,5.344,2721,3.255,2722,2.347,2723,3.821,2724,2.277,2725,3.135,2726,3.821,2727,3.399,2728,3.821,2729,5.763,2730,3.821,2731,5.763,2732,3.579]],["title/further-reading.html#进一步阅读和参考",[2733,5.176]],["body/further-reading.html#进一步阅读和参考",[]],["title/further-reading.html#Angular",[0,1.01]],["body/further-reading.html#Angular",[0,2.303,1,0.724,25,3.754,241,4.316,282,5.29,335,4.084,538,3.713,939,6.116,1648,4.675,1896,4.595,2441,5.426,2660,7.241,2661,7.28,2662,6.442,2663,5.053,2664,6.169,2665,7.241,2666,7.241,2667,7.104,2668,5.426,2669,6.442,2670,5.942,2671,5.577,2672,7.241,2673,6.442]],["title/further-reading.html#TypeScript",[538,2.422]],["body/further-reading.html#TypeScript",[64,4.116,226,5.425,538,5.485,1708,5.425,1887,5.126,2212,6.115,2394,7.438,2661,5.949,2674,7.939,2675,7.939,2676,7.063,2677,7.939,2678,7.939,2679,7.939,2680,7.063,2681,6.115,2682,6.764]],["title/further-reading.html#General-Coding-Practice-and-Functional-Programming",[517,0.611,1535,1.16,1896,1.032,2683,1.335,2684,1.291]],["body/further-reading.html#General-Coding-Practice-and-Functional-Programming",[517,3.28,2664,7.439,2684,6.931,2685,8.732,2686,7.768]],["title/further-reading.html#RxJS-Reactive-Programming-and-Observables",[2291,0.862,2316,1.279,2684,1.544,2687,1.822]],["body/further-reading.html#RxJS-Reactive-Programming-and-Observables",[22,3.115,30,5.225,41,0.633,42,1.112,82,1.512,265,3.229,631,3.792,939,6.013,1131,4.014,1828,4.662,1891,4.82,1896,3.727,2142,3.861,2162,4.291,2183,4.82,2291,4.332,2316,6.936,2392,4.662,2477,4.662,2482,5.004,2661,4.401,2663,4.099,2664,5.004,2682,6.666,2684,4.662,2687,7.33,2688,5.873,2689,4.82,2690,5.873,2691,5.873,2692,5.873,2693,5.225,2694,3.935,2695,6.421,2696,5.873,2697,4.524,2698,4.524,2699,5.225,2700,4.82,2701,3.935,2702,5.502,2703,5.873,2704,5.225,2705,5.873,2706,4.524,2707,7.825,2708,7.825,2709,5.873,2710,4.401,2711,5.225,2712,3.5,2713,5.225,2714,4.524,2715,5.873]],["title/further-reading.html#Redux-and-ngrx",[2716,1.337,2717,1.997]],["body/further-reading.html#Redux-and-ngrx",[292,7.144,2436,6.374,2664,6.842,2667,7.564,2701,5.38,2716,3.983,2717,6.343,2718,7.144,2719,4.858,2720,7.34,2721,6.842,2722,4.933,2723,8.03,2724,4.786]],["title/further-reading.html#Keeping-up-to-date",[633,1.986,2166,1.653,2725,1.986]],["body/further-reading.html#Keeping-up-to-date",[0,2.359,1,0.669,3,5.703,30,8.336,2162,5.703,2720,6.013,2726,7.806,2727,6.945,2728,7.806,2729,9.37,2730,7.806,2731,9.37,2732,7.313]],["title/further-reading.html#Other",[]],["body/further-reading.html#Other",[1,0.627,26,6.131,1306,5.162,2671,6.768]],["title/glossary.html",[]],["body/glossary.html",[5,0.426,46,1.965,65,3.62,240,3.761,288,4.796,325,5.04,390,3.794,1471,6.404,2734,6.651,2735,5.703,2736,6.406,2737,6.406]],["title/glossary.html#词汇表",[2738,5.176]],["body/glossary.html#词汇表",[]],["title/glossary.html#装饰器",[1574,4.723]],["body/glossary.html#装饰器",[46,1.987,65,3.66,240,3.803,288,4.85,325,5.097,390,3.819,1471,6.414,2734,6.726,2735,5.767,2736,6.478,2737,6.478]],["title/plus.html",[]],["body/plus.html",[0,1.779,5,0.499,88,3.791,2661,6.232,2739,8.317,2740,7.791,2741,8.317]],["title/plus.html#插件",[2742,4.425]],["body/plus.html#插件",[0,1.79,88,3.26,423,5.969,2661,6.269,2739,8.367,2740,7.838,2741,8.367,2743,9.169,2744,9.169,2745,9.169,2746,9.169,2747,9.169]],["title/practice.html",[]],["body/practice.html",[1,0.582,5,0.496,7,0.737,8,0.703,40,0.731,41,0.762,42,0.549,43,0.59,44,0.628,46,1.275,48,1.717,51,1.684,55,0.99,59,0.669,60,0.695,61,0.775,83,4.216,90,0.805,159,0.867,160,0.919,161,0.974,162,1.061,163,1.156,164,1.234,165,1.282,166,1.396,171,null,200,3.33,204,2.932,242,3.55,288,3.112,295,5.614,302,4.506,349,5.172,357,4.721,358,3.902,392,2.067,818,4.021,834,4.506,835,7.073,939,3.462,949,3.394,1067,4.316,2263,4.021,2437,3.614,2643,6.026,2748,5.551,2749,10.17,2750,7.515,2751,7.752,2752,5.448,2753,4.316,2754,5.551,2755,4.157,2756,4.021,2757,7.752,2758,7.752,2759,5.066,2760,5.551,2761,5.551,2762,5.551,2763,3.902,2764,3.796,2765,5.551,2766,5.551,2767,6.626,2768,5.551,2769,5.551,2770,5.551,2771,5.551,2772,4.021,2773,5.551,2774,5.551,2775,5.551,2776,5.551,2777,4.316]],["title/vs_react.html",[]],["body/vs_react.html",[0,2.325,1,0.732,5,0.52,16,3.338,538,2.343,2421,2.369,2641,7.901,2716,1.91,2724,2.723,2740,7.215,2778,5.008,2779,4.569,2780,5.008,2781,5.008,2782,5.008,2783,5.008,2784,4.569,2785,4.569,2786,5.008,2787,5.008,2788,5.008,2789,5.008,2790,5.008,2791,5.008,2792,4.281,2793,5.008,2794,5.008,2795,5.008,2796,4.569,2797,3.424,2798,5.008,2799,5.008,2800,5.008,2801,5.008,2802,5.008,2803,5.008,2804,5.008,2805,5.008,2806,5.008,2807,5.008,2808,7.205,2809,5.008,2810,5.008,2811,5.008,2812,5.008]],["title/vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发",[1,0.139,2813,2.132,2814,1.822,2815,2.132]],["body/vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发",[0,2.061,1,0.606,5,0.354,16,3.405,417,2.084,538,2.39,2641,6.927,2716,1.948,2724,2.778,2779,4.661,2784,4.661,2785,4.661,2796,4.661,2797,3.492,2816,5.108,2817,5.108,2818,5.108,2819,5.108,2820,5.108,2821,5.108,2822,5.108,2823,5.108,2824,5.108,2825,5.108,2826,5.108,2827,5.108,2828,5.108,2829,5.108,2830,5.108,2831,7.308,2832,5.108,2833,5.108,2834,5.108,2835,5.108,2836,5.108,2837,5.108,2838,5.108,2839,5.108,2840,7.308,2841,6.669,2842,5.108,2843,5.108,2844,5.108,2845,5.108,2846,5.108,2847,5.108,2848,5.108,2849,5.108,2850,5.108,2851,5.108,2852,5.108,2853,5.108,2854,5.108,2855,6.247,2856,5.108,2857,5.108,2858,5.108,2859,5.108,2860,5.108,2861,5.108,2862,5.108,2863,5.108,2864,5.108,2865,5.108,2866,5.108,2867,5.108,2868,5.108,2869,5.108,2870,5.108,2871,5.108,2872,5.108,2873,5.108,2874,4.661,2875,5.108,2876,5.108,2877,5.108,2878,5.108,2879,5.108,2880,5.108,2881,5.108,2882,5.108,2883,5.108,2884,5.108,2885,5.108,2886,5.108,2887,5.108,2888,5.108,2889,5.108,2890,5.108,2891,5.108,2892,5.108,2893,5.108,2894,5.108,2895,5.108,2896,5.108,2897,5.108,2898,5.108,2899,5.108,2900,5.108,2901,5.108,2902,5.108,2903,7.308,2904,5.108,2905,5.108,2906,5.108,2907,5.108,2908,5.108,2909,5.108,2910,5.108,2911,7.308,2912,7.308,2913,7.308,2914,5.108,2915,5.108,2916,5.108,2917,5.108,2918,5.108,2919,5.108,2920,5.108,2921,5.108,2922,5.108,2923,5.108]],["title/vs_vue2.html",[]],["body/vs_vue2.html",[5,0.455,16,6.379,283,5.638,2924,8.18]],["title/vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2",[16,1.421,283,1.256,2924,1.822,2925,2.132]],["body/vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2",[2926,9.814]],["title/why_angular_2.html",[]],["body/why_angular_2.html",[0,2.322,1,0.731,3,5.855,5,0.503,6,2.587,7,0.492,8,0.754,14,2.905,16,2.587,22,1.878,23,3.016,33,2.08,42,0.384,46,1.667,51,1.177,55,1.063,88,1.38,178,2.905,197,1.723,254,2.175,263,1.946,283,3.511,288,4.067,292,3.15,296,4.837,301,3.541,517,2.043,538,3.394,545,3.511,636,2.653,652,1.48,781,3.15,1111,4.034,1507,3.15,1648,4.796,1677,2.587,1760,2.727,2038,2.81,2291,1.569,2392,3.159,2641,5.721,2642,6.608,2643,3.016,2644,3.15,2645,3.15,2646,3.15,2647,3.15,2667,2.81,2712,2.11,2924,3.317,2927,3.88,2928,3.541,2929,3.541,2930,3.541,2931,3.541,2932,3.541,2933,3.541,2934,3.541,2935,3.541,2936,3.541,2937,3.541,2938,3.541,2939,3.541,2940,3.541,2941,3.541,2942,3.541,2943,3.541,2944,3.541,2945,3.88,2946,3.88,2947,5.438,2948,5.438,2949,5.438,2950,3.541,2951,3.541,2952,5.438,2953,3.541,2954,3.541,2955,3.541,2956,3.541,2957,3.88,2958,3.88,2959,3.88,2960,2.21,2961,3.88,2962,3.88,2963,3.541,2964,3.88,2965,3.88,2966,3.88,2967,3.88,2968,3.88,2969,3.88,2970,3.88,2971,3.88,2972,3.88,2973,3.88,2974,3.88,2975,3.88,2976,3.88,2977,3.88,2978,3.541,2979,3.88,2980,3.88,2981,3.88,2982,3.88,2983,3.88,2984,1.9,2985,3.15,2986,2.81,2987,3.88,2988,3.88,2989,3.88,2990,3.541,2991,3.541,2992,5.438,2993,3.541,2994,3.15,2995,3.15,2996,5.959,2997,3.15]],["title/why_angular_2.html#Why-Angular-2",[0,0.685,1,0.228]],["body/why_angular_2.html#Why-Angular-2",[0,1.834,665,7.303,2998,9.394,2999,9.394,3000,9.394,3001,9.394,3002,9.394,3003,9.394]],["title/why_angular_2.html#数据说话⚡️",[3004,5.176]],["body/why_angular_2.html#数据说话⚡️",[0,2.07,1,0.548,8,1.065,33,3.352,42,0.619,283,3.684,417,2.551,636,4.276,652,2.385,2641,7.143,2642,8.251,2643,4.861,2644,5.076,2645,5.076,2646,5.076,2647,5.076,2658,5.706,2667,4.529,2712,3.401,2928,5.706,2929,5.706,2930,5.706,2931,5.706,2932,5.706,2933,5.706,2934,5.706,2935,5.706,2936,5.706,2937,5.706,2938,5.706,2939,5.706,2940,5.706,2941,5.706,2942,5.706,2943,5.706,2944,5.706,2947,7.674,2948,7.674,2949,7.674,2950,5.706,2951,5.706,2952,7.674,2953,5.706,2954,5.706,2955,5.706,2956,5.706,2960,3.562,3005,6.253,3006,6.253,3007,6.253,3008,6.253,3009,6.253,3010,6.253,3011,6.253,3012,6.253,3013,6.253,3014,6.253,3015,6.253,3016,6.253,3017,6.253,3018,6.253,3019,6.253,3020,6.253,3021,6.253,3022,6.253,3023,6.253,3024,6.253,3025,6.253,3026,6.253,3027,6.253,3028,6.253,3029,6.253,3030,6.253,3031,6.253]],["title/why_angular_2.html#Angular-2-的优点",[0,0.518,1,0.173,3032,2.652]],["body/why_angular_2.html#Angular-2-的优点",[0,2.31,1,0.569,6,4.421,22,3.209,23,5.155,46,1.523,51,2.012,88,2.358,254,3.717,296,4.421,400,6.051,538,3.103,545,3.907,781,5.383,2038,4.803,2291,2.682,2874,6.051,2963,6.051,2978,6.051,2984,3.247,2985,5.383,3033,6.632,3034,6.632,3035,6.632,3036,6.632,3037,6.632,3038,6.632,3039,6.632,3040,6.632,3041,6.632,3042,6.632,3043,6.632,3044,6.632,3045,6.632,3046,6.632,3047,6.632,3048,6.632,3049,6.632,3050,6.632,3051,6.632,3052,6.632,3053,6.632,3054,6.632,3055,6.632,3056,6.632,3057,6.632,3058,6.632,3059,6.632,3060,6.632,3061,6.632,3062,6.632,3063,6.632,3064,6.632,3065,6.632,3066,6.632,3067,6.632,3068,6.632,3069,6.632,3070,6.632,3071,6.632,3072,6.632,3073,6.632,3074,6.632,3075,6.632,3076,6.632]],["title/why_angular_2.html#Angular-1-amp-2-之间的差异",[0,0.348,1,0.116,7,0.147,1760,1.253,3077,1.782]],["body/why_angular_2.html#Angular-1-amp-2-之间的差异",[0,2,1,0.475,3,6.202,16,4.862,46,2.137,55,1.659,178,5.461,288,5.742,296,6.202,517,3.189,538,4.352,545,4.297,1111,5.347,1323,6.656,1507,5.921,1648,6.357,2392,4.46,2990,6.656,2991,6.656,2992,8.489,2993,6.656,2994,5.921,2995,5.921,2997,5.921,3078,7.294,3079,7.294,3080,7.294,3081,7.294,3082,7.294,3083,7.294,3084,7.294,3085,7.294,3086,6.235,3087,9.303,3088,7.294]],["title/Accessibility/accessibility.html",[]],["body/Accessibility/accessibility.html",[0,2.133,1,0.711,3089,9.51,3090,9.51]],["title/Accessibility/accessibility.html#Angular-2中的Web辅助功能",[0,0.685,3091,3.507]],["body/Accessibility/accessibility.html#Angular-2中的Web辅助功能",[3092,9.63,3093,8.787,3094,8.787,3095,8.787]],["title/Advanced-angular/advanced-angular.html",[]],["body/Advanced-angular/advanced-angular.html",[0,2.244,1,0.711,5,0.394]],["title/Advanced-angular/aot.html",[]],["body/Advanced-angular/aot.html",[0,1.827,1,0.479,5,0.305,64,3.483,85,6.859,283,4.339,453,4.909,764,4.794,1532,4.794,1887,5.515,2139,5.978,2484,5.333,2491,4.948,2554,6.295,2616,5.333,2960,4.194,3096,7.364,3097,7.364,3098,7.364,3099,7.364,3100,7.364,3101,7.364,3102,7.364,3103,7.364,3104,7.364,3105,5.035,3106,7.598,3107,7.364,3108,8.001,3109,6.719,3110,5.514,3111,5.725,3112,5.978,3113,6.295,3114,5.978,3115,6.719,3116,4.689,3117,5.978,3118,6.719,3119,7.364,3120,7.364,3121,5.514,3122,7.364,3123,7.364,3124,7.364,3125,7.364]],["title/Advanced-angular/aot.html#Angular-2-的-AoT",[0,0.416,1,0.139,85,1.421,481,1.498]],["body/Advanced-angular/aot.html#Angular-2-的-AoT",[0,1.466,64,3.552,85,5.005,283,4.424,453,5.005,764,4.888,1532,4.888,1887,5.583,2139,6.095,2484,5.438,2491,3.969,2526,6.851,2554,6.418,2616,5.438,2960,4.276,3105,5.134,3106,6.095,3108,6.418,3109,6.851,3110,5.622,3111,5.837,3112,6.095,3113,6.418,3114,6.095,3115,6.851,3116,4.781,3117,6.095,3118,6.851,3121,5.622,3126,7.508,3127,7.508,3128,7.508,3129,7.508,3130,7.508,3131,7.508,3132,7.508,3133,7.508,3134,7.508,3135,7.508,3136,7.508,3137,7.508,3138,7.508,3139,7.508,3140,7.508,3141,7.508,3142,7.508,3143,7.508,3144,7.508]],["title/Advanced-angular/aot_config.html",[]],["body/Advanced-angular/aot_config.html",[0,1.697,1,0.344,5,0.515,7,0.618,8,0.669,18,3.23,40,0.498,41,0.52,42,0.523,43,0.561,44,0.598,45,1.948,54,0.988,59,0.636,60,0.662,61,0.738,85,4.991,90,0.766,159,0.826,160,0.875,161,0.927,162,1.01,163,1.1,164,1.174,165,1.22,213,4.071,214,2.916,331,1.634,366,3.295,538,2.472,926,3.522,1199,2.557,1306,4.661,1313,3.713,1648,3.113,1650,2.618,1651,4.411,1652,5.316,1654,3.713,1687,4.107,1887,3.113,2533,7.678,2563,3.364,2960,3.009,3145,5.284,3146,8.994,3147,4.821,3148,7.487,3149,7.487,3150,4.821,3151,5.284,3152,4.107,3153,4.821,3154,4.821,3155,3.613,3156,7.934,3157,3.44,3158,4.821,3159,5.284,3160,4.821,3161,5.284,3162,4.821,3163,5.284,3164,5.284,3165,5.284]],["title/Advanced-angular/aot_config.html#AoT-配置",[85,2.338,3166,2.847]],["body/Advanced-angular/aot_config.html#AoT-配置",[5,0.311,18,4.59,45,2.138,417,3.866,801,4.682,1199,3.633,1313,5.277,1654,5.277,1687,5.837,1887,4.424,2314,6.851,2533,8.428,3146,8.428,3147,6.851,3150,6.851,3153,6.851,3154,6.851,3167,7.508,3168,7.508,3169,7.508,3170,7.508,3171,7.508,3172,7.508,3173,7.508,3174,7.508,3175,6.095,3176,9.476,3177,9.476,3178,7.508,3179,7.508,3180,7.508,3181,7.508,3182,7.508,3183,7.508,3184,7.508,3185,7.508,3186,7.508,3187,7.508,3188,7.508,3189,7.508]],["title/Advanced-angular/aot_config.html#配置-ngtools-webpack",[3146,2.847,3166,2.847]],["body/Advanced-angular/aot_config.html#配置-ngtools-webpack",[1,0.412,5,0.505,7,0.7,8,0.801,40,0.597,41,0.623,42,0.626,43,0.672,44,0.716,45,1.304,54,1.184,59,0.762,60,0.793,61,0.884,90,0.918,159,0.989,160,1.048,161,1.111,162,1.21,163,1.318,164,1.407,165,1.462,213,3.443,214,3.494,331,1.958,417,2.583,538,2.962,926,4.22,1266,7.738,1267,5.776,1517,4.031,1648,3.73,1650,3.137,1651,4.996,1652,5.846,2563,4.031,2960,3.606,3146,7.763,3155,4.329,3156,8.726,3157,4.121,3158,5.776,3160,5.776,3162,5.776,3190,6.33,3191,6.33,3192,6.33,3193,6.33,3194,8.48,3195,6.33,3196,6.33,3197,6.33,3198,6.33,3199,6.33,3200,6.33,3201,6.33,3202,6.33,3203,6.33,3204,6.33]],["title/Advanced-angular/aot_limitations.html",[]],["body/Advanced-angular/aot_limitations.html",[5,0.38,85,7.781,3111,7.128,3205,9.169,3206,9.169,3207,9.169,3208,9.169,3209,9.169,3210,9.169]],["title/Advanced-angular/aot_limitations.html#AoT-局限",[85,2.338,3211,3.507]],["body/Advanced-angular/aot_limitations.html#AoT-局限",[3212,9.28,3213,9.28,3214,9.28,3215,9.28,3216,9.28,3217,9.28,3218,9.28,3219,9.28,3220,9.28,3221,9.28]],["title/Advanced-angular/creating_a_structural_directive.html",[]],["body/Advanced-angular/creating_a_structural_directive.html",[0,1.799,1,0.646,5,0.509,7,0.667,8,1.023,40,0.761,41,0.795,42,0.799,43,0.858,44,0.914,46,1.354,48,2.499,49,2.211,50,2.993,51,2.451,54,1.511,55,1.441,56,2.303,59,0.973,60,1.011,61,1.128,81,2.153,82,1.897,90,1.171,159,0.921,171,null,198,2.144,240,2.591,242,3.699,282,6.145,288,4.528,392,3.008,769,5.259,865,4.268,1564,3.253,2332,4.528,3222,6.906,3223,5.893,3224,4.784,3225,8.051,3226,6.558,3227,5.037,3228,4.141,3229,5.037,3230,5.377,3231,5.893]],["title/Advanced-angular/creating_a_structural_directive.html#创建结构指令",[3232,5.176]],["body/Advanced-angular/creating_a_structural_directive.html#创建结构指令",[1,0.516,5,0.503,7,0.655,8,1.004,40,0.748,41,0.78,42,0.785,43,0.843,44,0.898,46,1.318,48,2.454,51,2.406,54,1.484,55,1.415,56,2.243,59,0.955,60,0.993,61,1.108,81,2.114,82,1.863,90,1.15,159,0.897,171,null,198,2.087,240,2.523,242,3.632,282,6.06,288,4.446,392,2.953,417,2.341,769,5.164,796,3.323,961,4.905,977,3.825,1564,3.167,2332,4.446,3222,4.905,3224,4.658,3225,7.379,3226,6.439,3227,4.905,3228,4.033,3229,4.905,3233,5.738,3234,5.738,3235,5.738,3236,5.738,3237,5.738,3238,5.738,3239,5.738,3240,5.738,3241,5.738,3242,5.738,3243,5.738,3244,5.738,3245,5.738,3246,5.738,3247,5.738,3248,5.738,3249,5.738,3250,5.738,3251,5.738,3252,5.738,3253,5.738]],["title/Advanced-angular/creating_an_attribute_directive.html",[]],["body/Advanced-angular/creating_an_attribute_directive.html",[1,0.62,5,0.512,7,0.786,8,1.009,40,0.897,41,0.936,42,0.942,43,0.969,44,0.976,46,0.857,48,2.466,49,1.399,51,1.753,54,1.491,55,1.422,59,1.039,60,0.998,61,0.988,81,2.537,82,2.236,90,1.026,159,1.106,160,1.172,161,1.242,162,0.713,220,4.706,221,4.493,240,3.111,288,4.468,333,4.413,435,1.688,522,1.096,813,5.274,937,5.126,1227,2.701,2344,6.062,2734,6.197,3254,7.8,3255,7.374,3256,5.78,3257,3.729,3258,3.729,3259,3.729,3260,3.729,3261,9.837,3262,7.077,3263,3.729,3264,5.126,3265,9.518,3266,6.05,3267,3.729,3268,5.78,3269,5.78,3270,5.78,3271,3.729,3272,3.729,3273,3.403]],["title/Advanced-angular/directives.html",[]],["body/Advanced-angular/directives.html",[0,2.148,1,0.627,5,0.399]],["title/Advanced-angular/directives.html#Angular-指令",[0,0.685,729,2.847]],["body/Advanced-angular/directives.html#Angular-指令",[0,1.904,3274,9.752]],["title/Advanced-angular/listening_to_an_element_host.html",[]],["body/Advanced-angular/listening_to_an_element_host.html",[1,0.604,5,0.511,6,3.371,7,0.765,8,0.64,40,0.874,41,0.912,42,0.918,43,0.771,44,0.821,48,2.245,54,0.946,55,1.294,59,0.609,60,0.633,61,0.706,90,0.733,159,0.79,160,0.838,161,0.888,162,0.966,163,1.053,164,1.124,165,1.168,171,null,219,3.695,242,4.246,262,5.052,288,4.068,295,6.716,333,3.153,392,2.702,755,3.091,780,6.598,1228,2.569,2344,5.965,2701,3.091,2734,6.598,2750,8.525,2752,5.1,2755,3.787,2756,3.663,2759,4.615,3264,3.663,3275,5.057,3276,5.057,3277,5.057,3278,4.323,3279,6.621,3280,5.057,3281,5.057,3282,5.057,3283,9.325,3284,4.323,3285,5.057,3286,5.057,3287,4.615,3288,5.057,3289,4.615]],["title/Advanced-angular/listening_to_an_element_host.html#Host元素",[3290,5.176]],["body/Advanced-angular/listening_to_an_element_host.html#Host元素",[1,0.613,5,0.475,7,0.777,40,0.888,41,0.926,42,0.932,219,4.5,242,4.976,262,5.769,295,7.87,780,8.035,3279,6.785,3283,9.915,3289,6.785,3291,7.435,3292,7.435,3293,7.435,3294,6.356,3295,7.435,3296,7.435,3297,7.435,3298,7.435,3299,7.435,3300,7.435]],["title/Advanced-angular/providing_context_variables_to_directives.html",[]],["body/Advanced-angular/providing_context_variables_to_directives.html",[1,0.471,5,0.514,7,0.598,8,0.916,40,0.682,41,0.712,42,0.716,43,0.769,44,0.819,46,1.158,48,2.239,49,1.892,50,2.561,51,1.529,54,1.354,55,1.291,58,3.543,59,0.872,60,0.906,61,1.011,81,1.343,82,1.184,90,0.731,159,0.788,160,0.835,161,0.885,162,0.963,163,1.049,164,1.12,165,1.164,166,1.267,167,1.343,168,1.392,169,1.436,170,1.539,171,null,190,3.282,197,2.238,198,2.633,240,2.216,242,4.24,282,4.826,288,2.825,331,1.559,392,3.154,624,1.58,769,4.713,865,3.651,1211,3.725,1564,2.782,2332,2.825,2491,2.664,3222,7.915,3224,4.092,3225,6.877,3226,5.877,3227,4.309,3229,4.309,3230,4.599,3301,8.471,3302,9.259,3303,5.041,3304,4.599,3305,5.041,3306,8.471,3307,5.041,3308,5.041,3309,5.041,3310,5.041]],["title/Advanced-angular/setting_properties_in_a_directive.html",[]],["body/Advanced-angular/setting_properties_in_a_directive.html",[1,0.41,5,0.515,7,0.52,8,0.798,40,0.594,41,0.62,42,0.624,43,0.67,44,0.714,45,1.298,47,2.193,48,1.95,54,1.179,55,1.124,59,0.759,60,0.789,61,0.88,90,0.914,159,0.985,160,1.044,161,1.107,162,1.205,183,3.244,195,4.046,220,4.046,288,4.741,542,3.379,2734,7.419,2750,7.419,3311,11.368,3312,6.304,3313,6.304,3314,6.304,3315,5.389,3316,6.304,3317,10.198,3318,6.304,3319,6.304,3320,6.304,3321,6.304,3322,6.304]],["title/Advanced-angular/view_containers_and_embedded_views.html",[]],["body/Advanced-angular/view_containers_and_embedded_views.html",[1,0.441,5,0.509,7,0.559,8,0.858,40,0.639,41,0.667,42,0.671,43,0.72,44,0.767,45,1.396,47,2.358,48,2.097,54,1.268,55,1.209,59,0.816,60,0.849,61,0.947,90,0.983,159,1.059,160,1.123,161,1.19,162,1.295,163,1.411,164,1.506,165,1.566,166,1.704,171,null,198,2.466,240,3.901,288,4.974,392,3.304,1211,3.488,1564,3.741,2332,3.799,2491,3.583,3224,5.502,3225,8.842,3226,8.519,3228,6.236,3304,6.185,3323,6.778,3324,6.778]],["title/Angular-CLI/adding-third-party-libraries.html",[]],["body/Angular-CLI/adding-third-party-libraries.html",[5,0.448,214,5.154,2611,5.707,2721,7.258,3325,9.336,3326,9.336,3327,9.336,3328,7.258]],["title/Angular-CLI/cli.html",[]],["body/Angular-CLI/cli.html",[0,2.248,1,0.68,5,0.488,1640,7.144,2611,5.38,3329,8.801,3330,8.801,3331,8.801,3332,8.801,3333,8.801,3334,8.801]],["title/Angular-CLI/command-overview.html",[]],["body/Angular-CLI/command-overview.html",[0,1.068,5,0.227,18,4.691,22,3.714,49,4.042,178,4.097,198,2.792,325,3.224,348,4.521,357,5.692,359,5.116,827,2.78,862,3.846,893,5.247,1269,2.853,1310,3.742,1471,2.853,1640,7.195,1643,3.846,1650,5.013,1708,3.412,1748,4.678,1891,4.097,1896,4.444,1922,3.846,2166,3.412,2212,5.393,2332,3.067,2392,4.927,2437,3.563,2611,5.418,2616,3.963,2663,3.484,2667,3.963,2668,3.742,2720,3.846,2960,5.762,3157,3.563,3335,4.678,3336,8.863,3337,5.966,3338,4.254,3339,5.472,3340,3.846,3341,3.742,3342,4.097,3343,5.472,3344,6.56,3345,4.993,3346,4.678,3347,3.648,3348,4.254,3349,4.521,3350,4.254,3351,3.648,3352,7.674,3353,5.472,3354,4.678,3355,4.254,3356,3.021,3357,8.513,3358,5.472,3359,6.23,3360,7.002,3361,3.742,3362,5.472,3363,8.863,3364,3.963,3365,5.472]],["title/Angular-CLI/creating-an-app.html",[]],["body/Angular-CLI/creating-an-app.html",[1,0.566,5,0.499,49,3.893,260,3.165,331,2.691,357,4.599,2611,6.341,3347,5.8,3366,8.701,3367,8.701,3368,8.701,3369,8.701,3370,8.701]],["title/Angular-CLI/creating-components.html",[]],["body/Angular-CLI/creating-components.html",[0,1.582,1,0.528,5,0.506,46,2.722,49,3.041,83,4.407,260,3.614,357,4.283,1311,5.869,1535,6.469,2611,4.954,3371,8.103,3372,8.103,3373,8.103,3374,8.103,3375,8.103]],["title/Angular-CLI/creating-other-things.html",[]],["body/Angular-CLI/creating-other-things.html",[1,0.424,5,0.402,18,6.895,46,2.631,49,2.446,55,1.542,83,4.703,260,4.103,282,4.346,288,4.847,331,2.016,357,5.962,366,5.392,545,5.095,1311,4.721,1461,7.197,1478,7.369,1535,5.63,1650,5.478,2611,3.985,2735,5.765,2984,4.234,3376,6.519,3377,9.704,3378,6.519,3379,6.519,3380,6.519,3381,6.519]],["title/Angular-CLI/creating-routes.html",[]],["body/Angular-CLI/creating-routes.html",[0,1.822,1,0.608,5,0.448,260,3.396,357,4.935,1461,6.078,2984,5.294]],["title/Angular-CLI/init.html",[]],["body/Angular-CLI/init.html",[0,1.698,5,0.493,49,3.265,241,4.732,348,6.111,357,4.599,366,5.425,1311,6.302,1531,6.515,2668,5.949,3382,8.701,3383,6.764,3384,8.701,3385,7.438,3386,8.701]],["title/Angular-CLI/linting.html",[]],["body/Angular-CLI/linting.html",[0,1.769,5,0.491,357,4.789,1640,9.151,1643,6.368,3345,8.268,3387,9.061,3388,9.061]],["title/Angular-CLI/serving-the-app.html",[]],["body/Angular-CLI/serving-the-app.html",[5,0.499,357,5.872,827,4.445,1922,6.15,2611,5.349,3357,9.019,3359,7.103,3389,8.75,3390,7.985,3391,8.75]],["title/Angular-CLI/setup.html",[]],["body/Angular-CLI/setup.html",[0,2.206,1,0.593,5,0.469,213,4.957,214,5.031,1461,5.934,2611,6.517,3392,9.114]],["title/Angular-CLI/testing.html",[]],["body/Angular-CLI/testing.html",[0,1.633,5,0.51,357,5.356,437,7.587,538,3.915,2611,6.194,3351,5.579,3360,9.246,3390,7.636,3393,8.368,3394,6.793,3395,7.154,3396,8.368]],["title/Modules/directive-duplications.html",[]],["body/Modules/directive-duplications.html",[0,1.537,1,0.636,5,0.514,7,0.769,8,0.997,40,0.878,41,0.916,42,0.922,43,0.926,44,0.987,45,1.919,46,1.516,47,2.74,48,2.436,49,1.667,51,1.347,54,1.631,55,1.555,56,3.079,59,0.949,60,0.986,61,0.922,62,2.15,65,1.879,67,2.846,68,2.125,69,1.915,81,1.184,82,1.043,83,2.416,90,0.644,171,null,267,3.037,288,4.888,354,4.4,755,2.715,2562,3.037,2586,5.358,2752,6.862,2755,4.942,2756,6.315,3278,7.454,3284,5.642,3287,6.023,3397,6.023,3398,8.502,3399,7.187,3400,4.442,3401,8.502,3402,3.122,3403,4.053,3404,3.122]],["title/Modules/directive-duplications.html#指令复制",[3405,5.176]],["body/Modules/directive-duplications.html#指令复制",[0,0.829,1,0.625,5,0.51,7,0.754,8,0.971,40,0.862,41,0.899,42,0.904,43,0.906,44,0.965,45,1.882,46,1.466,47,1.477,48,2.371,51,1.288,54,1.595,55,1.52,56,2.997,59,0.923,60,0.96,61,0.891,62,2.054,65,1.796,67,2.751,68,2.031,69,1.83,81,1.131,82,0.997,90,0.616,171,null,288,4.779,354,2.83,411,2.473,417,1.732,1041,3.874,2562,2.903,2586,3.446,2752,6.748,2755,4.778,2756,6.175,3278,5.455,3284,3.629,3397,5.822,3398,8.34,3399,6.996,3401,8.34,3402,2.984,3403,3.874,3406,4.245,3407,4.245,3408,4.245,3409,3.874,3410,4.245,3411,6.381,3412,6.381,3413,4.245,3414,4.245,3415,4.245,3416,4.245,3417,4.245,3418,4.245,3419,4.245,3420,4.245,3421,4.245,3422,4.245,3423,4.245,3424,4.245,3425,3.874,3426,4.245,3427,4.245,3428,4.245,3429,4.245,3430,4.245,3431,4.245,3432,4.245,3433,4.245,3434,4.245,3435,4.245,3436,4.245,3437,4.245,3438,4.245,3439,4.245,3440,4.245,3441,4.245]],["title/Modules/feature-modules.html",[]],["body/Modules/feature-modules.html",[0,1.148,1,0.555,5,0.519,7,0.666,8,0.951,36,1.838,37,2.68,38,2.114,40,0.761,41,0.794,42,0.798,43,0.857,44,0.913,45,2.164,46,0.648,47,2.046,49,1.059,51,0.856,54,1.723,55,1.339,56,3.477,59,0.972,60,1.01,61,1.049,62,3.634,63,1.635,64,1.335,65,3.896,66,2.045,67,2.934,68,2.214,69,2.536,76,2.195,81,1.233,82,1.087,88,2.42,90,0.853,159,0.919,160,0.974,161,1.033,162,0.884,163,0.964,164,0.627,165,0.652,267,1.93,522,0.829,769,4.43,1982,7.005,2562,1.93,3402,3.253,3442,2.292,3443,2.292,3444,5.817,3445,2.292,3446,5.029,3447,6.624,3448,2.413,3449,5.29,3450,2.576,3451,6.915,3452,2.576,3453,6.273,3454,2.576,3455,8.299,3456,2.576,3457,2.823,3458,3.466,3459,1.93,3460,5.095,3461,2.576]],["title/Modules/feature-modules.html#创建功能模块",[3462,5.176]],["body/Modules/feature-modules.html#创建功能模块",[1,0.514,5,0.506,7,0.652,8,0.886,36,2.387,37,2.123,38,2.746,40,0.745,41,0.777,42,0.782,43,0.839,44,0.894,45,2.154,46,0.842,49,1.376,51,1.112,54,1.601,55,1.249,56,3.345,59,0.951,60,0.989,61,0.978,62,3.823,65,3.342,67,2.46,68,1.754,69,2.46,76,2.85,81,0.977,82,0.861,88,1.304,90,0.827,159,0.891,160,0.945,161,1.001,162,0.701,163,0.763,267,2.507,405,2.533,411,2.211,417,2.857,695,2.16,696,2.335,697,2.85,769,5.143,1982,6.87,2562,2.507,3402,4.009,3442,2.977,3443,2.977,3444,5.985,3445,2.977,3446,4.876,3447,6.653,3449,5.443,3451,4.435,3453,6.141,3455,7.316,3456,3.346,3463,3.667,3464,3.667,3465,3.667,3466,3.667,3467,3.667,3468,3.667,3469,3.667,3470,3.667,3471,3.667,3472,9.46,3473,9.062,3474,7.002,3475,3.667,3476,3.667,3477,3.134,3478,6.389,3479,3.346,3480,3.346,3481,3.346,3482,3.667,3483,3.667,3484,3.667,3485,3.667,3486,3.667,3487,3.667,3488,3.346,3489,3.667,3490,3.667,3491,3.667,3492,3.667,3493,3.667,3494,3.667,3495,3.667,3496,3.667,3497,3.667,3498,3.667,3499,3.667,3500,3.667,3501,3.667,3502,3.667,3503,3.667,3504,3.667,3505,3.667,3506,3.667,3507,3.667,3508,3.667,3509,3.667]],["title/Modules/feature-modules.html#服务和懒加载",[3510,5.176]],["body/Modules/feature-modules.html#服务和懒加载",[1,0.465,5,0.498,7,0.589,8,0.904,37,2.862,40,0.673,41,0.702,42,0.706,43,0.758,44,0.808,45,2.004,54,1.716,55,1.273,56,3.275,59,0.86,60,0.894,61,0.997,62,2.392,65,4.117,67,3.078,68,2.365,69,2.131,81,1.317,82,1.161,88,2.979,90,0.717,159,0.772,160,0.819,161,0.868,162,0.945,163,1.029,164,1.098,165,1.142,411,1.916,417,2.017,522,1.452,612,3.843,1982,3.38,3444,4.225,3446,4.225,3447,3.843,3449,3.843,3451,7.883,3453,5.549,3455,8.668,3458,5.345,3459,3.38,3460,6.871,3461,4.51,3511,4.943,3512,4.943,3513,4.943,3514,4.943,3515,4.943,3516,4.943,3517,4.51,3518,4.943,3519,4.943,3520,4.943,3521,4.943,3522,4.943,3523,4.943,3524,4.943,3525,4.943,3526,4.943,3527,4.943,3528,4.943,3529,4.943,3530,4.943,3531,4.943,3532,4.943,3533,4.943,3534,4.943,3535,4.943,3536,4.225,3537,4.943,3538,4.943,3539,4.943,3540,4.943,3541,4.943,3542,4.943,3543,4.943,3544,4.943,3545,4.943,3546,4.51,3547,4.943,3548,4.943,3549,4.943,3550,4.943,3551,4.943]],["title/Modules/introduction.html",[]],["body/Modules/introduction.html",[0,1.995,1,0.705,5,0.518,7,0.701,8,0.533,25,1.992,36,2.741,37,2.438,40,0.8,41,0.835,42,0.755,43,0.81,44,0.863,45,2.259,46,1.457,47,2.653,48,1.302,49,1.58,50,2.139,51,1.277,54,1.427,55,1.361,56,3.741,59,0.764,60,0.527,61,0.588,62,4.632,63,3.672,64,3,65,4.325,66,3.049,67,3.927,68,4.357,69,3.927,70,2.879,71,2.959,73,2.741,74,3.842,76,3.273,190,2.741,304,2.398,307,2.959,818,3.049,2562,2.879,3402,2.959,3404,2.959,3447,4.93,3552,3.599,3553,3.049,3554,4.21,3555,4.21,3556,4.21,3557,4.21]],["title/Modules/introduction.html#一个模块的基本使用",[3558,5.176]],["body/Modules/introduction.html#一个模块的基本使用",[0,0.875,1,0.57,5,0.506,7,0.653,8,0.567,36,2.917,37,2.595,40,0.746,41,0.779,42,0.783,43,0.841,44,0.896,45,2.229,46,1.526,48,1.386,51,1.359,54,1.481,55,1.412,56,3.829,59,0.8,60,0.561,61,0.626,62,4.74,65,4.405,67,4.032,68,4.474,69,3.775,190,2.917,405,1.99,411,3.069,417,3.816,423,2.917,612,3.483,695,2.64,696,2.853,697,3.483,796,2.595,818,3.245,977,2.987,1517,2.853,2562,3.064,3402,3.149,3425,4.089,3447,5.165,3536,3.83,3559,4.481,3560,4.481,3561,4.481,3562,4.481,3563,4.481,3564,4.481,3565,4.481,3566,4.481,3567,4.481,3568,4.481,3569,4.481,3570,4.481,3571,4.481,3572,4.481,3573,4.481,3574,4.481,3575,4.481,3576,4.481,3577,4.481,3578,4.481,3579,4.481,3580,4.481,3581,4.481,3582,4.481,3583,4.481,3584,4.481,3585,4.481,3586,4.481,3587,4.481,3588,4.481,3589,4.481,3590,4.481,3591,4.481,3592,4.481,3593,4.481,3594,4.481,3595,4.481,3596,4.481,3597,4.481,3598,4.481,3599,4.481,3600,4.481]],["title/Modules/introduction.html#引导应用程序",[3601,5.176]],["body/Modules/introduction.html#引导应用程序",[1,0.548,5,0.49,7,0.694,40,0.793,41,0.828,45,2.094,64,3.98,69,3.628,70,5.753,73,5.478,76,6.541,695,4.958,1957,6.094,3602,8.414,3603,8.414,3604,8.414,3605,8.414,3606,8.414,3607,8.414,3608,8.414,3609,8.414]],["title/Modules/lazy-load-di.html",[]],["body/Modules/lazy-load-di.html",[1,0.559,5,0.514,7,0.826,8,0.816,40,0.809,41,0.844,42,0.849,43,0.912,44,0.875,45,1.988,46,1.972,47,2.689,51,1.956,54,1.606,55,1.531,59,0.931,60,0.807,61,0.9,65,1.821,69,1.856,81,1.147,82,1.011,88,2.749,90,0.935,96,3.085,159,1.007,160,1.068,161,1.132,162,1.232,163,1.342,164,0.957,165,0.994,171,null,204,1.628,219,2.807,220,3.085,318,3.195,386,4.198,390,2.382,3610,5.433,3611,7.56,3612,3.025,3613,5.512,3614,3.928,3615,4.532,3616,3.495,3617,3.68,3618,5.013,3619,5.884,3620,5.234,3621,5.234,3622,6.969,3623,5.234,3624,3.223,3625,3.223,3626,5.433,3627,3.223,3628,4.305,3629,3.347]],["title/Modules/lazy-load-di.html#延迟加载和依赖注入树",[3630,5.176]],["body/Modules/lazy-load-di.html#延迟加载和依赖注入树",[1,0.539,5,0.512,7,0.806,8,0.774,40,0.781,41,0.815,42,0.82,43,0.88,44,0.838,45,1.935,46,1.903,51,1.855,54,1.55,55,1.477,59,0.892,60,0.766,61,0.854,65,1.697,69,1.73,81,1.069,82,0.942,88,2.634,90,0.887,96,2.925,159,0.955,160,1.013,161,1.073,162,1.168,163,1.273,164,0.892,165,0.927,171,null,204,1.518,219,2.662,220,2.925,318,3.03,390,2.259,405,1.781,411,2.871,417,1.637,481,2.82,2855,3.43,3517,3.661,3610,5.206,3611,7.465,3612,2.82,3614,3.661,3615,4.297,3616,3.257,3617,3.43,3618,4.753,3620,4.963,3621,4.963,3622,6.724,3623,4.963,3624,3.004,3625,3.004,3626,5.206,3627,3.004,3629,3.119,3631,4.012,3632,4.012,3633,4.012,3634,4.012,3635,5.226,3636,4.012,3637,3.661,3638,4.012,3639,4.012,3640,4.012,3641,5.579,3642,4.012,3643,4.012,3644,4.012,3645,4.012,3646,4.012,3647,4.012,3648,4.012,3649,4.012,3650,4.012,3651,4.012,3652,4.012,3653,4.012,3654,4.012,3655,4.012]],["title/Modules/lazy-loading-module.html",[]],["body/Modules/lazy-loading-module.html",[1,0.567,5,0.516,7,0.749,8,0.977,36,1.934,37,1.72,40,0.821,41,0.856,42,0.862,43,0.925,44,0.873,45,2.251,46,2.265,47,3.029,48,0.919,49,1.115,50,1.509,51,1.848,54,1.629,55,1.376,56,3.404,59,0.929,60,0.966,61,0.851,62,2.948,63,1.72,64,1.405,65,2.968,66,2.152,67,2.08,68,1.421,69,2.08,81,0.792,82,0.698,90,0.883,159,0.754,160,0.799,161,0.521,162,0.568,163,0.618,164,0.66,165,0.686,435,2.048,2724,1.616,2984,5.007,3356,4.258,3404,2.088,3458,5.252,3460,2.224,3553,2.152,3610,5.422,3612,2.088,3615,6.12,3616,2.412,3617,2.539,3618,3.751,3624,5.776,3625,5.776,3626,6.376,3627,2.224,3629,2.309,3656,4.825,3657,2.971,3658,3.391,3659,2.971,3660,2.971,3661,2.088,3662,2.088,3663,2.711,3664,3.495,3665,3.391,3666,1.98,3667,1.98,3668,2.412,3669,6.401,3670,4.825,3671,2.224,3672,4.825,3673,2.971,3674,2.711,3675,2.711,3676,2.711,3677,2.711,3678,2.711,3679,2.971]],["title/Modules/lazy-loading-module.html#延迟加载模块",[3680,5.176]],["body/Modules/lazy-loading-module.html#延迟加载模块",[1,0.547,5,0.513,7,0.724,8,0.933,36,1.776,37,1.58,40,0.791,41,0.826,42,0.831,43,0.892,44,0.835,45,2.213,46,2.089,48,0.844,51,1.742,54,1.57,55,1.315,56,3.281,59,0.888,60,0.923,61,0.802,62,2.779,65,2.819,67,1.94,68,1.305,69,1.94,81,0.727,82,0.641,90,0.833,159,0.703,160,0.745,161,0.479,162,0.521,163,0.568,164,0.606,165,0.63,405,1.998,411,3.254,417,3.008,435,1.946,695,1.607,696,1.737,697,2.12,796,1.58,977,1.818,2054,2.999,2724,1.483,2814,3.846,2984,4.892,3175,2.214,3356,4.07,3404,1.917,3458,4.99,3460,2.042,3553,1.976,3610,5.182,3612,1.917,3615,5.9,3616,2.214,3624,3.369,3625,4.3,3626,6.167,3627,2.042,3658,3.162,3661,1.917,3662,1.917,3663,2.489,3664,3.259,3666,1.818,3667,1.818,3669,6.081,3671,2.042,3674,2.489,3675,2.489,3676,2.489,3677,2.489,3678,2.489,3681,2.728,3682,2.728,3683,2.728,3684,2.728,3685,2.728,3686,4.5,3687,2.728,3688,2.728,3689,2.728,3690,2.728,3691,2.728,3692,2.728,3693,2.728,3694,2.728,3695,2.728,3696,2.999,3697,4.5,3698,2.214,3699,4.5,3700,4.5,3701,2.728,3702,2.728,3703,2.728,3704,4.5,3705,2.728,3706,2.728,3707,2.728,3708,2.728,3709,2.728,3710,2.728,3711,2.728,3712,2.728,3713,2.728,3714,2.728,3715,4.5,3716,2.728,3717,2.728,3718,2.728,3719,2.728,3720,2.728,3721,2.728,3722,2.728,3723,2.728,3724,2.728,3725,2.728,3726,2.728,3727,2.728,3728,2.728,3729,2.728,3730,2.728,3731,2.728,3732,2.728,3733,4.5,3734,2.728,3735,2.728,3736,2.728]],["title/Modules/modules.html",[]],["body/Modules/modules.html",[0,1.738,5,0.464,17,5.796,94,5.551,95,5.551,828,6.921,2392,3.876,3737,8.124,3738,8.124,3739,8.124,3740,8.124,3741,8.903,3742,7.227,3743,7.227,3744,8.124]],["title/Modules/modules.html#模块",[1314,4.425]],["body/Modules/modules.html#模块",[5,0.438,17,5.83,94,5.584,95,5.584,828,6.961,2392,3.898,3737,8.171,3738,8.171,3739,8.171,3740,8.171,3742,7.269,3743,7.269,3744,8.171,3745,8.955,3746,8.955]],["title/Modules/multiple-elements.html",[]],["body/Modules/multiple-elements.html",[0,1.068,1,0.577,5,0.511,7,0.689,8,0.971,40,0.787,41,0.912,42,0.826,43,0.886,44,0.944,45,2.124,46,1.762,47,2.902,48,1.692,49,2.539,50,1.766,51,1.659,54,1.561,55,1.488,56,3.261,59,1.005,60,0.961,61,0.945,62,2.647,63,2.013,64,1.644,65,2.315,66,2.517,67,1.499,68,1.663,69,1.499,81,0.926,82,0.816,88,2.406,90,0.981,159,1.057,160,0.906,161,0.96,162,1.045,163,1.139,164,1.216,165,0.803,166,0.874,171,null,172,2.557,204,1.315,219,1.513,260,1.264,335,2.815,390,2.021,392,1.294,435,1.015,522,1.607,769,5.432,949,2.125,1461,2.263,1982,7.052,2562,2.376,2735,3.647,3402,2.443,3404,2.443,3442,2.821,3443,2.821,3445,2.821,3449,5.965,3450,3.171,3451,7.208,3452,4.992,3453,6.487,3454,3.171,3553,2.517,3747,3.845,3748,3.171,3749,6.173,3750,6.173,3751,3.171,3752,3.171,3753,3.476,3754,4.096,3755,3.171,3756,6.173,3757,3.171,3758,4.992,3759,4.992,3760,3.171,3761,3.171,3762,3.171]],["title/Modules/multiple-elements.html#将组件，管道和服务添加到模块",[3763,5.176]],["body/Modules/multiple-elements.html#将组件，管道和服务添加到模块",[0,0.625,1,0.557,5,0.514,7,0.661,8,0.927,40,0.755,41,0.841,42,0.793,43,0.851,44,0.907,45,2.076,46,1.682,47,1.113,48,1.585,49,1.201,51,1.554,54,1.499,55,1.429,56,3.132,59,0.965,60,0.917,61,0.895,62,2.479,65,2.168,67,1.38,68,1.531,69,1.38,81,0.853,82,0.752,88,2.278,90,0.929,159,1.001,160,0.849,161,0.899,162,0.979,163,1.067,164,1.138,165,0.739,166,0.804,171,null,172,2.441,204,1.211,219,1.393,260,1.164,335,2.636,390,1.893,392,1.191,411,2.839,417,2.09,435,0.934,522,1.505,695,1.885,696,2.038,697,2.488,769,4.768,796,2.967,949,1.956,977,2.133,1461,2.083,1982,6.138,2562,2.188,2735,3.415,3402,2.249,3404,2.249,3442,2.598,3443,2.598,3445,2.598,3449,5.694,3451,6.979,3453,6.229,3478,6.683,3479,2.92,3480,4.675,3481,2.92,3553,2.318,3747,3.601,3748,2.92,3749,5.846,3750,4.675,3751,2.92,3752,2.92,3754,3.836,3755,2.92,3756,5.846,3757,2.92,3758,4.675,3759,4.675,3760,2.92,3761,2.92,3762,2.92,3764,3.2,3765,3.2,3766,3.2,3767,3.2,3768,3.2,3769,3.2,3770,3.2,3771,3.2,3772,3.2,3773,3.2,3774,2.92,3775,3.2,3776,3.2,3777,3.2,3778,3.2,3779,3.2,3780,3.2,3781,3.2,3782,3.2,3783,3.2,3784,3.2,3785,3.2,3786,3.2,3787,3.2]],["title/Modules/shared-di-tree.html",[]],["body/Modules/shared-di-tree.html",[1,0.573,5,0.514,7,0.726,8,1.113,37,3.124,40,0.829,41,0.865,42,0.87,43,0.934,44,0.995,45,2.15,47,1.877,54,1.645,55,1.569,59,1.059,60,1.101,61,1.228,65,4.258,69,3.276,81,1.438,82,1.267,88,2.702,90,0.782,318,2.673,386,5.726,522,1.585,3458,5.689,3459,3.689,3460,7.149,3610,6.181,3611,5.863,3612,3.792,3613,4.612,3615,3.792,3626,3.792,3788,8.475,3789,4.38,3790,6.933,3791,4.923]],["title/Modules/shared-di-tree.html#共享相同的依赖注入树",[3792,5.176]],["body/Modules/shared-di-tree.html#共享相同的依赖注入树",[1,0.558,5,0.511,7,0.707,8,1.084,37,2.978,40,0.807,41,0.842,42,0.848,43,0.91,44,0.969,45,2.116,54,1.602,55,1.528,59,1.032,60,1.073,61,1.196,65,4.181,69,3.166,81,1.37,82,1.208,88,2.611,90,0.746,318,2.548,405,2.283,411,1.993,522,1.511,3458,5.499,3459,3.516,3460,6.996,3610,6.02,3611,5.71,3612,3.614,3615,3.614,3626,3.614,3635,4.395,3788,8.342,3789,4.174,3791,4.692,3793,5.142,3794,5.142,3795,5.142,3796,5.142,3797,5.142,3798,5.142,3799,5.142,3800,5.142,3801,5.142,3802,5.142,3803,5.142,3804,4.692,3805,5.142,3806,5.142,3807,5.142,3808,5.142,3809,4.692,3810,5.142,3811,5.142,3812,5.142,3813,5.142]],["title/Modules/shared-modules-di.html",[]],["body/Modules/shared-modules-di.html",[1,0.566,5,0.516,7,0.767,8,0.994,37,2.558,40,0.82,41,0.855,42,0.86,43,0.924,44,0.984,45,2.135,46,1.51,47,2.286,51,1.34,54,1.626,55,1.551,59,0.945,60,0.983,61,1.096,65,3.679,67,2.834,69,3.384,81,1.177,82,1.037,88,1.57,90,0.953,96,2.113,159,1.027,160,1.088,161,1.154,162,0.844,163,0.919,171,null,219,1.923,220,2.113,318,2.188,386,4.279,3610,5.517,3611,6.912,3612,3.104,3613,3.775,3615,5.517,3618,3.433,3619,4.03,3620,3.585,3621,3.585,3622,5.335,3623,3.585,3624,3.307,3625,3.307,3626,6.111,3627,3.307,3629,3.433,3788,8.192,3789,3.585,3790,5.997,3814,4.416]],["title/Modules/shared-modules-di.html#共享模块和依赖注入",[3815,5.176]],["body/Modules/shared-modules-di.html#共享模块和依赖注入",[1,0.55,5,0.512,7,0.749,8,0.961,37,2.418,40,0.797,41,0.832,42,0.837,43,0.898,44,0.957,45,2.1,46,1.448,51,1.267,54,1.582,55,1.508,59,0.914,60,0.95,61,1.06,65,3.577,67,2.717,69,3.273,81,1.113,82,0.981,88,1.485,90,0.914,96,1.998,159,0.985,160,1.044,161,1.106,162,0.798,163,0.869,171,null,219,1.818,220,1.998,318,2.069,405,3.754,411,2.443,417,2.571,612,3.246,3610,5.335,3611,6.797,3612,2.935,3615,5.335,3618,3.246,3620,3.39,3621,3.39,3622,5.116,3623,3.39,3624,3.127,3625,3.127,3626,5.942,3627,3.127,3629,3.246,3635,3.57,3641,3.81,3788,8.04,3789,3.39,3804,3.81,3809,3.81,3816,4.176,3817,4.176,3818,4.176,3819,4.176,3820,4.176,3821,4.176,3822,3.81,3823,4.176,3824,4.176,3825,4.176,3826,4.176,3827,4.176,3828,4.176,3829,4.176,3830,4.176,3831,4.176,3832,4.176,3833,4.176,3834,4.176,3835,4.176,3836,4.176]],["title/Observables/cold_vs_hot_observables.html",[]],["body/Observables/cold_vs_hot_observables.html",[1,0.505,5,0.519,7,0.64,8,0.704,16,2.365,25,1.678,40,0.731,41,0.763,42,0.55,43,0.591,44,0.629,59,0.67,60,0.696,61,0.776,81,1.482,82,1.306,90,0.806,159,0.869,160,0.921,161,0.976,162,1.062,163,1.157,164,1.235,165,1.284,166,1.398,167,1.482,168,1.536,169,1.583,170,1.698,201,3.335,204,2.593,205,2.622,265,4.484,331,1.72,435,1.623,624,2.432,648,1.827,649,1.934,650,2.038,651,2.086,652,1.353,653,1.435,950,2.289,1211,5.424,1515,4.513,2291,4.534,2316,2.128,3837,5.073,3838,7.52,3839,3.399,3840,4.322,3841,4.753,3842,5.073,3843,6.032,3844,7.081,3845,4.753,3846,3.548,3847,3.548,3848,3.033,3849,3.237,3850,3.237,3851,5.073,3852,5.073,3853,3.237,3854,4.322,3855,3.237,3856,3.548,3857,3.237]],["title/Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable",[16,1.421,2291,0.862,3858,2.132,3859,2.132]],["body/Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable",[1,0.499,5,0.517,7,0.632,8,0.691,40,0.722,41,0.754,42,0.54,43,0.58,44,0.618,59,0.658,60,0.684,61,0.763,81,1.455,82,1.283,90,0.792,159,0.853,160,0.904,161,0.959,162,1.043,163,1.137,164,1.213,165,1.261,166,1.373,167,1.455,168,1.508,169,1.555,170,1.667,201,3.276,204,2.066,205,2.59,265,4.441,331,1.689,417,3.127,435,1.594,624,1.712,648,1.795,649,1.899,650,2.002,651,2.049,652,1.322,653,1.403,950,2.248,1211,5.393,1418,2.964,1515,4.433,2291,4.481,2814,2.964,3837,4.983,3838,7.461,3839,3.338,3840,4.245,3841,4.668,3842,4.983,3843,5.957,3844,6.992,3845,4.668,3849,3.164,3850,3.164,3851,3.164,3852,4.983,3853,3.164,3854,4.245,3855,3.164,3857,3.164,3860,3.468,3861,3.468,3862,3.468,3863,3.468,3864,3.468,3865,3.468,3866,3.468,3867,3.468,3868,3.468,3869,3.468,3870,3.468,3871,3.468,3872,3.468,3873,3.468,3874,3.468,3875,3.468,3876,3.468,3877,3.468,3878,3.468,3879,3.468,3880,3.468,3881,3.468,3882,3.468,3883,3.468,3884,3.468,3885,3.468,3886,3.468,3887,3.468,3888,3.468,3889,3.468,3890,3.468]],["title/Observables/disposing_subscriptions_and_releasing_resources.html",[]],["body/Observables/disposing_subscriptions_and_releasing_resources.html",[1,0.337,5,0.514,7,0.427,8,0.655,40,0.488,41,0.509,42,0.512,43,0.55,44,0.586,54,0.968,55,0.923,59,0.623,60,0.648,61,0.723,90,0.751,159,0.809,160,0.857,161,0.909,162,0.989,163,1.078,164,1.15,165,1.196,166,1.301,167,1.38,168,1.43,169,1.474,170,1.581,172,2.865,183,2.664,195,2.476,199,3.05,205,1.749,265,4.701,331,1.601,392,3.489,522,1.521,542,2.775,624,1.623,648,1.701,649,1.8,650,1.898,651,1.943,652,1.974,653,2.094,768,2.298,908,2.37,909,2.422,910,2.505,911,2.699,1199,2.505,1211,4.424,1405,4.347,1614,3.296,1858,4.202,2253,6.733,2254,3.876,2259,4.761,2291,3.79,2316,3.105,2499,2.998,3383,4.024,3838,4.024,3839,3.165,3840,4.024,3843,4.024,3891,8.552,3892,5.177,3893,3.228,3894,5.177,3895,5.99,3896,5.177,3897,4.425,3898,5.177,3899,5.177,3900,5.177,3901,5.177,3902,5.177,3903,5.177]],["title/Observables/error_handling.html",[]],["body/Observables/error_handling.html",[1,0.387,5,0.516,7,0.49,8,1.028,40,0.56,41,0.584,42,0.588,43,0.631,44,0.672,49,2.229,54,1.111,55,1.059,59,0.715,60,0.744,61,0.829,90,0.861,159,0.928,160,0.983,161,1.042,162,1.135,163,1.236,164,1.32,165,1.372,166,1.493,167,1.583,168,1.64,169,1.691,170,1.813,171,null,198,2.954,265,4.074,331,2.512,392,2.211,624,1.861,648,1.951,1199,4.815,1211,4.763,1354,3.499,1405,4.785,2263,4.301,2291,4.024,3838,6.313,3840,4.616,3843,4.616,3845,5.076,3897,5.076,3904,7.41,3905,5.938,3906,5.938,3907,5.076,3908,5.938,3909,4.446,3910,5.419]],["title/Observables/observables.html",[]],["body/Observables/observables.html",[0,2.217,5,0.445,827,4.686,2291,4.342,3911,9.224,3912,9.224,3913,9.224]],["title/Observables/observables_array_operations.html",[]],["body/Observables/observables_array_operations.html",[1,0.323,5,0.516,7,0.409,8,0.628,10,5.562,25,3.971,40,0.467,41,0.488,42,0.708,43,0.527,44,0.561,54,0.928,55,0.884,59,0.597,60,0.621,61,0.693,81,1.322,82,1.68,90,0.719,159,0.775,171,null,260,1.804,269,3.485,392,1.846,538,2.32,827,3.635,1223,5.029,1225,4.026,1287,2.519,1357,3.713,1405,2.922,1467,5.462,1468,6.813,1471,3.731,1545,4.892,1749,4.026,1770,3.158,2214,3.592,2237,3.713,2254,3.713,2259,2.519,2291,4.481,2316,5.035,2359,3.592,2365,3.713,2484,3.592,2488,4.026,2681,3.485,2698,3.485,3907,4.239,3914,3.713,3915,4.026,3916,5.808,3917,3.713,3918,4.525,3919,4.525,3920,4.525,3921,4.525,3922,4.525,3923,4.239,3924,4.525,3925,7.175,3926,4.525,3927,7.659,3928,4.239,3929,4.959,3930,4.959,3931,4.239,3932,4.525]],["title/Observables/observables_array_operations.html#Observables-数组操作",[2291,1.418,3933,3.507]],["body/Observables/observables_array_operations.html#Observables-数组操作",[1,0.321,5,0.498,7,0.407,8,0.624,10,5.536,25,3.369,40,0.464,41,0.485,42,0.705,43,0.523,44,0.558,54,0.922,55,0.879,59,0.593,60,0.617,61,0.688,81,1.313,82,1.673,90,0.714,159,0.77,171,null,392,1.835,405,3.162,417,2.01,827,3.618,1223,5.005,1225,4,1287,2.503,1357,3.689,1405,2.903,1467,5.448,1468,6.8,1471,3.714,1545,4.87,1749,4,1770,3.137,2214,3.569,2237,3.689,2254,3.689,2259,2.503,2291,4.325,2316,4.272,2359,3.569,2365,3.689,2484,3.569,2681,3.463,2698,3.463,3907,4.212,3914,3.689,3915,4,3916,5.781,3917,3.689,3918,4.496,3919,4.496,3920,4.496,3921,4.496,3922,4.496,3923,4.212,3925,7.149,3926,4.496,3927,4.496,3928,4.212,3931,4.212,3932,4.496,3934,4.212,3935,4.927,3936,4.927,3937,4.927,3938,4.927,3939,4.927,3940,4.927,3941,4.927,3942,4.927,3943,4.927,3944,4.927,3945,4.927,3946,4.927,3947,4.927,3948,4.927,3949,4.927,3950,4.927,3951,4.927,3952,4.927,3953,4.927,3954,4.927,3955,4.927,3956,4.927,3957,4.927,3958,4.927,3959,4.496,3960,4.927,3961,4.927,3962,4.496,3963,4.927,3964,4.927,3965,4.927,3966,4.927,3967,4.927,3968,4.927,3969,4.927,3970,3.369,3971,4.927,3972,4.927,3973,4.927]],["title/Observables/observables_vs_promises.html",[]],["body/Observables/observables_vs_promises.html",[5,0.469,16,6.076,1287,5.416,2291,4.712,3974,9.114,3975,9.114,3976,9.114]],["title/Observables/summary.html",[]],["body/Observables/summary.html",[0,1.698,1,0.566,5,0.46,25,4.907,41,0.856,42,0.861,82,2.044,1545,7.093,2291,4.482,2316,6.649,2392,3.788,2702,7.438,3977,7.438]],["title/Observables/using_observables.html",[]],["body/Observables/using_observables.html",[0,0.606,1,0.468,5,0.513,7,0.518,8,0.633,40,0.592,41,0.492,42,0.495,43,0.531,44,0.566,45,1.029,46,1.441,47,1.079,48,0.96,49,1.164,51,0.941,54,0.935,55,0.891,59,0.602,60,0.626,61,0.698,90,0.725,159,0.781,160,0.828,161,0.877,162,0.955,163,1.04,164,1.111,165,1.154,166,1.256,167,1.332,168,1.381,169,1.424,170,1.526,171,null,195,2.391,198,2.617,199,4.239,220,1.484,242,2.874,265,4.229,331,1.941,392,3.434,516,1.828,542,3.857,624,1.567,648,1.642,649,1.738,650,1.832,651,1.876,652,1.906,653,2.021,752,5.365,768,2.219,865,2.247,893,2.122,908,2.289,909,2.338,910,2.419,911,2.606,912,2.679,913,2.759,914,2.718,915,1.713,916,1.713,917,3.364,918,3.518,919,1.797,920,1.861,1130,5.095,1199,1.502,1211,4.339,1287,2.539,1354,1.828,1405,4.239,2214,2.247,2254,3.742,2259,1.576,2291,4.041,2292,2.519,2316,1.861,2344,2.181,2392,2.176,3361,2.122,3383,3.885,3838,5.594,3839,3.055,3840,3.885,3841,4.273,3843,3.885,3891,4.561,3893,1.935,3895,5.841,3897,2.652,3904,5.727,3909,2.323,3910,2.831,3978,3.103,3979,1.935,3980,2.02,3981,1.976,3982,2.02,3983,2.122,3984,2.122,3985,2.122,3986,2.831,3987,2.831,3988,6.276,3989,7.195,3990,3.103,3991,3.103,3992,3.103,3993,3.103,3994,3.103,3995,3.103,3996,3.103,3997,3.103,3998,4.998,3999,3.103,4000,3.103,4001,3.103,4002,3.103,4003,3.103,4004,3.103,4005,2.802,4006,3.885,4007,2.652,4008,3.103,4009,3.103,4010,1.861,4011,3.103,4012,3.103,4013,3.103]],["title/Observables/using_observables_from_other_sources.html",[]],["body/Observables/using_observables_from_other_sources.html",[1,0.54,5,0.507,7,0.506,8,0.776,40,0.577,41,0.603,42,0.606,43,0.651,44,0.693,45,2.014,46,1.905,47,2.131,48,1.895,49,2.299,51,1.858,54,1.146,55,1.093,59,0.738,60,0.767,61,0.855,90,0.888,159,0.957,160,1.015,161,1.075,162,1.171,163,1.275,164,1.361,165,1.415,166,1.54,167,1.633,168,1.692,169,1.745,170,1.87,171,null,172,1.34,240,1.768,242,2.805,254,4.159,261,1.627,265,3.073,331,1.244,372,2.619,392,2.281,451,5.83,624,1.92,648,2.013,649,2.131,650,1.475,651,1.51,652,1.534,653,1.627,768,1.786,827,4.535,865,2.913,908,1.842,909,1.882,910,1.947,911,2.098,1405,5.26,1467,2.255,1468,2.619,1936,4.437,1949,2.913,2031,4.762,2032,5.373,2254,4.587,2256,3.265,2259,3.112,2291,3.355,2316,2.413,2330,3.671,2344,4.305,2358,3.265,2359,2.913,2392,1.751,3923,5.237,3924,3.671,3925,3.439,3928,3.439,3931,3.439,3986,3.671,3987,3.671,4014,4.023,4015,4.023,4016,4.023,4017,4.023,4018,3.012,4019,6.126,4020,4.023,4021,4.023,4022,4.023,4023,4.023,4024,4.023,4025,4.023,4026,4.023,4027,4.023,4028,4.023,4029,6.126,4030,4.023,4031,4.023,4032,4.023,4033,7.419,4034,4.023,4035,4.023,4036,4.023,4037,4.023,4038,4.023]],["title/Pipes/custom_pipes.html",[]],["body/Pipes/custom_pipes.html",[0,0.737,1,0.522,5,0.517,7,0.589,8,1.016,40,0.55,41,0.574,42,0.577,43,0.62,44,0.66,45,1.202,46,1.34,47,2.029,48,1.168,49,1.417,50,1.918,51,1.145,54,1.091,55,1.041,56,1.476,59,0.703,60,0.731,61,0.815,81,1.006,82,0.887,90,0.846,159,0.912,160,0.966,161,1.252,162,0.721,163,0.786,164,0.839,165,0.872,166,0.949,167,1.006,168,1.043,169,1.075,170,1.153,172,1.258,197,1.676,198,1.373,201,2.265,219,3.493,242,2.672,260,2.122,331,1.168,335,1.943,435,2.678,522,1.109,542,2.024,557,6.924,764,3.799,865,2.734,950,1.554,1460,4.536,1513,2.458,2166,2.354,2479,2.827,2725,2.827,2735,4.754,3108,3.227,3113,3.227,3350,6.238,3754,5.34,3839,2.308,4039,5.324,4040,3.227,4041,3.775,4042,3.775,4043,3.775,4044,3.775,4045,3.775,4046,5.324,4047,3.775,4048,3.775,4049,3.775,4050,3.775,4051,3.775,4052,3.775,4053,3.775,4054,3.775,4055,5.324,4056,3.445,4057,3.445,4058,5.324,4059,5.789,4060,3.445,4061,3.445,4062,5.324,4063,3.445,4064,3.445,4065,3.445,4066,5.324,4067,5.324,4068,3.445,4069,5.012,4070,3.445,4071,3.445,4072,5.324,4073,5.324,4074,3.445,4075,3.064,4076,3.445,4077,3.445,4078,3.445,4079,3.445]],["title/Pipes/custom_pipes.html#自定义管道",[4080,5.176]],["body/Pipes/custom_pipes.html#自定义管道",[0,0.721,1,0.458,5,0.517,7,0.581,8,1.004,40,0.541,41,0.564,42,0.568,43,0.609,44,0.649,45,1.181,46,1.318,48,1.142,51,1.12,54,1.073,55,1.023,56,1.444,59,0.691,60,0.718,61,0.801,81,0.984,82,0.867,90,0.832,159,0.896,160,0.95,161,1.235,162,0.706,163,0.769,164,0.821,165,0.853,166,0.928,167,0.984,168,1.02,169,1.052,170,1.128,172,1.231,198,1.343,219,3.452,242,2.627,260,2.087,331,1.142,335,1.9,411,2.224,435,2.654,522,1.085,542,1.98,557,6.869,764,3.735,796,2.139,950,1.52,961,3.157,977,2.462,1418,3.157,1460,4.46,1492,2.998,1513,2.404,2166,2.303,2479,2.765,2725,2.765,2735,4.689,3086,3.157,3350,6.165,3754,5.267,3839,2.258,4039,5.234,4046,5.234,4055,3.37,4056,3.37,4057,3.37,4058,5.234,4059,5.71,4060,3.37,4061,3.37,4062,5.234,4063,3.37,4064,3.37,4065,3.37,4066,5.234,4067,5.234,4068,3.37,4069,4.943,4070,3.37,4071,3.37,4072,5.234,4073,5.234,4074,3.37,4075,2.998,4076,3.37,4077,3.37,4078,3.37,4079,3.37,4081,3.693,4082,3.693,4083,3.693,4084,3.693,4085,3.693,4086,3.693,4087,3.693,4088,3.693,4089,3.693,4090,3.693,4091,3.693,4092,3.693,4093,3.693,4094,3.693,4095,3.693,4096,3.693,4097,3.693,4098,3.693,4099,3.693,4100,3.693,4101,3.693,4102,3.693,4103,3.693,4104,3.693,4105,3.693,4106,3.693,4107,3.693]],["title/Pipes/pipes.html",[]],["body/Pipes/pipes.html",[0,2.127,1,0.66,3,5.579,5,0.489,17,5.448,94,5.218,95,5.218,96,4.003,97,6.266,1468,5.448,2735,6.755,3854,6.506,4108,8.368,4109,8.368,4110,8.368,4111,8.368,4112,8.368,4113,8.368,4114,8.368]],["title/Pipes/using_pipes.html",[]],["body/Pipes/using_pipes.html",[1,0.614,5,0.509,7,0.778,40,0.817,41,0.979,42,0.857,43,0.92,44,0.98,45,1.784,46,2.376,47,3.013,48,2.68,51,2.628,54,1.62,55,1.545,59,1.043,60,1.085,81,1.985,82,1.75,195,3.564,198,3.151,219,3.771,2712,5.626,3106,6.048,4115,9.302,4116,7.405,4117,7.904,4118,7.904,4119,5.247,4120,5.247,4121,5.247,4122,5.247,4123,5.247,4124,6.798,4125,6.798,4126,4.788]],["title/Pipes/using_pipes.html#链接管道",[4127,4.723]],["body/Pipes/using_pipes.html#链接管道",[1,0.489,5,0.5,7,0.62,40,0.708,41,0.932,42,0.743,43,0.798,44,0.85,45,1.546,46,2.177,48,2.322,51,2.278,54,1.404,55,1.339,59,0.904,60,0.94,81,2.001,82,1.763,195,3.592,198,2.731,411,2.91,2712,4.083,3106,6.095,4115,8.428,4117,6.851,4118,6.851,4124,6.851,4125,6.851,4126,6.851,4127,6.851,4128,7.508,4129,5.622,4130,7.508,4131,7.508,4132,7.508]],["title/Pipes/stateful_and_async_pipes.html",[]],["body/Pipes/stateful_and_async_pipes.html",[0,1.261,1,0.504,5,0.515,7,0.533,8,0.98,40,0.609,41,0.636,42,0.639,43,0.686,44,0.731,46,0.992,48,1.335,49,1.62,50,2.193,51,1.31,54,1.209,55,1.152,56,1.687,59,0.778,60,0.809,61,0.902,81,1.722,82,1.518,90,0.937,159,1.01,160,1.07,161,1.134,162,1.235,163,0.899,164,0.959,165,0.997,166,1.085,167,1.15,168,1.193,169,1.23,170,1.318,172,1.439,183,3.325,198,3.349,204,1.633,219,1.879,260,1.57,324,2.749,331,1.335,335,3.325,392,2.406,435,1.26,522,1.268,624,1.353,636,2.952,648,1.419,827,2.193,829,3.742,1211,2.221,1228,3.282,1287,3.282,1513,2.81,2259,2.193,2291,1.746,2663,2.749,2712,2.348,2735,4.307,3754,3.232,3839,2.639,4005,3.622,4006,3.356,4007,3.69,4069,3.034,4075,3.504,4115,3.504,4116,3.69,4133,4.317,4134,7.066,4135,5.896,4136,4.317,4137,4.317,4138,3.939,4139,5.245,4140,3.939,4141,5.896,4142,3.939,4143,3.939,4144,3.939,4145,4.317,4146,3.939,4147,8.4,4148,3.939,4149,9.398,4150,3.939,4151,3.939,4152,3.939]],["title/Pipes/stateful_and_async_pipes.html#AsyncPipe",[4134,4.723]],["body/Pipes/stateful_and_async_pipes.html#AsyncPipe",[1,0.414,5,0.513,7,0.525,8,1.077,40,0.599,41,0.625,42,0.629,43,0.675,44,0.719,46,1.46,48,1.966,51,1.928,54,1.189,55,1.134,56,2.485,59,0.766,60,0.796,61,0.888,81,1.694,82,1.493,90,0.922,159,0.993,160,1.053,161,1.116,162,1.215,204,2.405,219,2.767,331,1.966,636,4.346,796,3.681,829,4.924,977,4.237,1211,3.271,1287,4.32,1513,4.138,1517,4.048,2291,2.571,2712,3.457,3839,3.886,4005,4.767,4006,4.942,4007,5.434,4075,5.16,4115,5.16,4116,5.434,4135,7.76,4138,5.8,4139,6.903,4140,5.8,4153,6.357,4154,6.357,4155,6.357,4156,6.357,4157,6.357]],["title/Pipes/stateful_and_async_pipes.html#实现有状态管道",[4158,5.176]],["body/Pipes/stateful_and_async_pipes.html#实现有状态管道",[1,0.376,5,0.509,7,0.477,8,0.732,40,0.545,41,0.569,42,0.572,43,0.614,44,0.654,54,1.082,55,1.031,59,0.696,60,0.724,61,0.807,81,1.541,82,1.358,90,0.838,159,0.903,160,0.958,161,1.015,162,1.105,163,1.204,164,1.285,165,1.335,166,1.453,167,1.541,168,1.597,169,1.647,170,1.765,172,1.927,183,4.103,198,3.754,260,2.103,324,3.681,335,4.103,392,2.969,435,1.688,522,1.699,624,1.812,648,1.9,1228,4.05,2259,2.937,2663,3.681,2735,5.315,3536,4.942,3754,4.329,4069,4.063,4141,7.275,4142,5.276,4143,5.276,4144,5.276,4146,5.276,4147,9.417,4148,5.276,4149,10.166,4150,5.276,4151,5.276,4152,5.276,4159,5.782,4160,5.782,4161,5.276,4162,5.782,4163,5.782,4164,5.782]],["title/Project-setup/installation_and_usage.html",[]],["body/Project-setup/installation_and_usage.html",[1,0.534,5,0.51,7,0.791,8,0.879,40,0.655,41,0.683,42,0.687,43,0.738,44,0.786,45,0.98,46,1.093,47,1.655,49,3.077,59,0.836,60,0.869,61,0.665,63,4.021,64,3.285,71,3.345,83,2.588,90,0.69,159,0.744,160,0.788,161,0.835,162,0.909,163,0.991,164,1.058,165,1.099,166,1.196,167,1.268,168,1.315,169,1.355,197,2.113,213,2.588,214,2.627,260,1.731,325,4.091,411,1.845,435,1.39,437,3.563,455,3.7,926,3.172,1111,2.358,1306,5.884,1643,3.345,1651,2.804,1652,4.245,1922,4.881,2563,3.03,2716,3.437,2719,2.627,3111,7.007,3155,3.254,3356,4.526,3448,4.068,3665,3.345,4018,3.563,4165,4.759,4166,4.342,4167,4.759,4168,4.759,4169,6.656,4170,4.759,4171,4.759,4172,4.342,4173,4.759,4174,3.563,4175,4.342,4176,4.342,4177,4.342,4178,3.7,4179,3.863,4180,4.342,4181,3.863,4182,4.759,4183,4.759,4184,4.342,4185,3.863,4186,5.637,4187,4.342,4188,5.637,4189,5.637,4190,4.342,4191,4.759,4192,3.863,4193,4.759,4194,4.759]],["title/Project-setup/installation_and_usage.html#安装",[4195,5.176]],["body/Project-setup/installation_and_usage.html#安装",[7,0.726,83,4.786,213,4.786,214,4.858,926,5.867,1306,5.598,1643,6.185,1651,5.185,1652,6.384,2563,5.604,3155,6.018,3294,7.523,4166,8.03,4196,8.801,4197,8.03,4198,8.03,4199,8.03]],["title/Project-setup/installation_and_usage.html#设置和使用",[4197,4.723]],["body/Project-setup/installation_and_usage.html#设置和使用",[3155,6.626,4198,8.842,4199,8.842]],["title/Project-setup/installation_and_usage.html#Bundle",[3111,4.024]],["body/Project-setup/installation_and_usage.html#Bundle",[1,0.405,5,0.486,7,0.783,8,0.788,40,0.587,41,0.613,42,0.616,43,0.662,44,0.705,45,1.283,46,1.43,49,3.559,59,0.75,60,0.78,61,0.87,64,2.946,90,0.903,159,0.973,160,1.031,161,1.093,162,1.19,163,1.296,164,1.384,165,1.438,166,1.566,167,1.66,168,1.72,169,1.774,411,3.251,435,1.818,695,4.942,696,3.965,1957,4.51,3477,5.324,3696,4.151,4169,7.699,4172,5.683,4174,4.663,4200,6.228,4201,6.228,4202,6.228,4203,6.228,4204,6.228,4205,6.228,4206,6.228,4207,6.228,4208,6.228,4209,6.228,4210,6.228,4211,6.228,4212,6.228,4213,6.228,4214,6.228,4215,5.683,4216,5.683,4217,4.51,4218,5.683,4219,5.683,4220,5.055,4221,7.653,4222,5.683,4223,5.055,4224,5.683,4225,5.683,4226,4.151,4227,4.151,4228,5.683,4229,6.228,4230,6.228,4231,6.228,4232,6.228,4233,6.228]],["title/Project-setup/installation_and_usage.html#输出配置",[4234,5.176]],["body/Project-setup/installation_and_usage.html#输出配置",[1,0.455,5,0.482,7,0.577,8,0.885,40,0.659,41,0.688,42,0.692,43,0.743,44,0.792,59,0.842,60,0.876,325,5.336,417,2.854,1517,4.454,1922,4.916,3356,4.999,4161,6.382,4184,6.382,4185,5.678,4186,7.352,4188,7.352,4189,7.352,4192,5.678,4235,6.995,4236,6.995,4237,6.995,4238,6.995,4239,6.995,4240,6.995,4241,6.995,4242,6.995,4243,6.995,4244,6.995,4245,6.995,4246,6.995,4247,6.995,4248,6.382,4249,6.382,4250,6.382,4251,6.995,4252,6.995,4253,6.995,4254,6.995,4255,6.995,4256,6.995,4257,6.995,4258,6.995,4259,6.995,4260,6.995,4261,6.995,4262,6.995,4263,6.995]],["title/Project-setup/loaders.html",[]],["body/Project-setup/loaders.html",[1,0.474,5,0.52,7,0.727,8,0.494,40,0.686,41,0.716,42,0.72,43,0.414,44,0.441,45,1.232,49,2.245,59,0.47,60,0.488,61,0.545,83,2.121,90,0.565,159,0.609,160,0.646,161,0.685,162,0.745,163,0.812,164,0.867,197,1.732,241,3.958,366,5.09,435,2.125,538,3.405,1306,2.09,1513,3.895,1643,4.205,1648,2.298,1650,5.266,1651,5.88,1652,7.138,1653,5.45,1654,5.115,1776,3.166,1908,2.667,2142,2.339,2720,2.741,2753,3.032,3157,2.539,4192,3.166,4264,3.9,4265,3.9,4266,3.559,4267,3.559,4268,3.9,4269,3.559,4270,3.559,4271,3.559,4272,6.297,4273,3.166,4274,3.166,4275,3.166,4276,3.166,4277,3.166,4278,3.166,4279,3.166,4280,3.9,4281,3.9,4282,3.9,4283,3.9,4284,5.983,4285,3.9,4286,3.559]],["title/Project-setup/loaders.html#Loaders",[1652,3.164]],["body/Project-setup/loaders.html#Loaders",[1651,6.37,1652,5.707,2855,7.981,4287,9.336,4288,8.519,4289,9.336,4290,9.336,4291,9.336]],["title/Project-setup/loaders.html#Inline",[1776,4.202]],["body/Project-setup/loaders.html#Inline",[5,0.468,7,0.831,49,3.778,241,4.502,423,6.554,435,2.939,1643,5.818,1651,4.877,1652,6.899,4266,7.554,4267,7.554,4292,8.278,4293,8.278,4294,8.278,4295,8.278,4296,8.278,4297,8.278,4298,8.278,4299,8.278,4300,8.278]],["title/Project-setup/loaders.html#Webpack-配置",[1306,1.88,3166,2.847]],["body/Project-setup/loaders.html#Webpack-配置",[1,0.496,5,0.517,7,0.629,8,0.532,40,0.718,41,0.749,42,0.754,43,0.446,44,0.475,45,1.303,59,0.506,60,0.526,61,0.586,83,2.283,90,0.609,159,0.656,160,0.695,161,0.737,162,0.802,163,0.874,164,0.933,197,1.864,241,3.441,366,3.946,405,1.864,410,2.951,417,3.107,435,1.226,1513,2.733,1648,2.474,1650,5.36,1651,4.995,1652,7.002,1653,5.703,1654,5.352,1908,2.871,2142,2.519,2720,2.951,2753,3.264,3157,2.733,3970,2.871,4192,3.408,4269,3.831,4270,3.831,4272,4.12,4273,3.408,4274,3.408,4275,3.408,4276,3.408,4277,3.408,4278,3.408,4279,3.408,4286,3.831,4301,4.199,4302,4.199,4303,4.199,4304,4.199,4305,4.199,4306,4.199,4307,3.831,4308,3.831,4309,3.831,4310,3.831,4311,8.3,4312,4.199,4313,4.199,4314,4.199,4315,4.199,4316,4.199,4317,4.199,4318,4.199,4319,4.199,4320,4.199,4321,4.199,4322,4.199,4323,4.199,4324,4.199,4325,4.199,4326,4.199,4327,4.199,4328,6.328,4329,4.199,4330,4.199,4331,4.199,4332,4.199,4333,4.199,4334,4.199]],["title/Project-setup/npm_scripts_integration.html",[]],["body/Project-setup/npm_scripts_integration.html",[1,0.447,5,0.511,7,0.567,40,0.647,41,0.676,42,0.68,43,0.73,44,0.777,213,6.212,1306,5.654,1310,6.12,1908,4.697,1922,6.29,2162,4.579,2611,4.199,2712,3.736,2960,5.671,3155,4.697,3347,5.966,3349,5.273,4335,9.085,4336,9.085,4337,9.625,4338,6.268,4339,6.869,4340,6.268]],["title/Project-setup/npm_scripts_integration.html#NPM-脚本集成",[213,1.907,4341,3.507]],["body/Project-setup/npm_scripts_integration.html#NPM-脚本集成",[1,0.447,5,0.437,7,0.567,40,0.647,41,0.676,42,0.68,43,0.73,44,0.777,213,4.867,1306,3.682,1310,6.12,1517,4.374,1908,4.697,1922,6.29,2162,4.579,2712,3.736,2960,5.671,3155,4.697,3294,5.872,3347,5.966,3349,5.273,4335,9.085,4336,9.085,4337,9.625,4338,6.268,4340,6.268,4342,6.869,4343,6.869,4344,6.869,4345,6.869,4346,6.869,4347,6.869,4348,6.869,4349,6.869,4350,6.869,4351,6.869,4352,6.869,4353,6.869,4354,6.869,4355,6.869,4356,6.869,4357,6.869,4358,6.869,4359,6.869,4360,6.869,4361,6.869,4362,6.869,4363,6.869,4364,6.869,4365,6.869,4366,6.869]],["title/Project-setup/plugins.html",[]],["body/Project-setup/plugins.html",[1,0.554,5,0.501,7,0.702,40,0.802,41,0.837,42,0.842,51,2.581,57,6.614,83,5.566,183,4.378,331,2.632,390,3.143,1306,4.56,2563,5.417,3355,6.614,4367,6.906,4368,7.763]],["title/Project-setup/plugins.html#插件",[2742,4.425]],["body/Project-setup/plugins.html#插件",[1,0.557,5,0.456,7,0.706,40,0.806,41,0.841,42,0.847,51,2.595,83,4.653,183,4.402,331,2.646,390,3.161,417,3.491,1306,4.586,2563,5.447,3355,6.651,4367,6.945,4369,8.555,4370,8.555,4371,8.555,4372,8.555,4373,7.806,4374,7.806]],["title/Project-setup/project-setup.html",[]],["body/Project-setup/project-setup.html",[0,1.868,1,0.623,5,0.397,1306,5.878]],["title/Project-setup/project-setup.html#项目设置",[4375,5.176]],["body/Project-setup/project-setup.html#项目设置",[4376,9.63,4377,9.63,4378,9.63,4379,9.63]],["title/Project-setup/summary.html",[]],["body/Project-setup/summary.html",[1,0.217,5,0.516,7,0.276,8,0.423,40,0.315,41,0.328,42,0.33,43,0.355,44,0.378,47,1.161,49,1.253,51,1.013,54,0.625,57,2.596,59,0.402,60,0.418,61,0.466,63,3.069,64,2.507,71,2.347,83,2.882,90,0.484,159,0.522,160,0.553,161,0.586,162,0.638,163,0.695,164,0.742,165,0.771,166,0.839,167,0.89,168,0.922,169,0.951,170,1.02,183,2.728,325,1.967,331,2.039,366,2.082,390,1.234,435,2.543,455,2.596,624,1.047,648,1.097,649,1.161,650,1.224,651,1.253,652,1.273,653,1.351,759,2.711,768,1.483,908,1.529,909,1.562,910,1.616,911,1.741,912,1.79,913,1.843,914,1.816,915,1.843,916,1.843,917,1.79,918,1.872,919,1.934,920,2.003,1111,1.655,1306,4.022,1354,1.967,1395,2.596,1467,1.872,1513,2.174,1643,2.347,1648,3.123,1650,4.835,1651,4.421,1652,5.964,1653,2.5,1654,2.347,1677,2.226,1922,2.347,2142,3.953,2392,1.454,2563,4.778,2667,2.419,2668,2.283,2712,1.816,2714,2.347,2716,2.861,2719,1.843,2753,2.596,3155,2.283,3157,2.174,3355,2.596,3356,3.638,3448,2.855,3665,2.347,3979,2.082,3980,2.174,3981,2.126,3982,2.174,3983,2.283,3984,2.283,3985,2.283,4005,1.872,4018,2.5,4169,4.303,4174,2.5,4175,3.047,4176,3.047,4177,3.047,4178,2.596,4179,2.711,4180,3.047,4181,2.711,4185,2.711,4186,2.711,4187,3.047,4188,2.711,4189,2.711,4190,3.047,4271,3.047,4272,5.328,4273,2.711,4274,2.711,4275,2.711,4276,2.711,4277,2.711,4278,2.711,4279,2.711,4367,4.303,4368,3.047,4380,2.347,4381,2.347,4382,2.347,4383,2.347,4384,2.347,4385,2.5,4386,2.5,4387,2.5,4388,2.5,4389,2.5,4390,2.5,4391,2.5,4392,2.5,4393,2.5,4394,2.5,4395,2.5,4396,2.5,4397,2.5,4398,2.5,4399,2.711,4400,2.711,4401,2.711,4402,2.711,4403,2.711,4404,2.711,4405,2.711,4406,2.711,4407,3.047,4408,3.047,4409,3.339,4410,3.047,4411,3.047,4412,3.047,4413,3.047,4414,2.347,4415,2.711,4416,3.047,4417,3.047]],["title/Project-setup/summary.html#总结",[4418,5.176]],["body/Project-setup/summary.html#总结",[1,0.211,5,0.517,7,0.267,8,0.41,40,0.305,41,0.319,42,0.321,43,0.344,44,0.367,49,1.216,51,0.983,54,0.606,59,0.39,60,0.406,61,0.453,64,1.533,83,1.762,90,0.47,159,0.506,160,0.537,161,0.569,162,0.619,163,0.675,164,0.72,165,0.748,166,0.815,167,0.864,168,0.895,169,0.923,170,0.989,183,2.663,325,1.909,331,1.999,366,2.021,390,1.197,411,1.256,435,2.51,624,1.016,648,1.065,649,1.127,650,1.188,651,1.216,652,1.236,653,1.311,695,3.049,696,2.063,759,2.631,768,1.439,908,1.484,909,1.516,910,1.568,911,1.69,912,1.737,913,1.789,914,1.762,915,1.789,916,1.789,917,1.737,918,1.817,919,1.877,920,1.944,1306,2.774,1354,1.909,1648,3.049,1650,4.787,1651,3.049,1652,5.906,1653,2.426,1654,2.278,1957,2.347,2142,3.876,2563,4.114,2712,1.762,2714,2.278,2753,2.519,3155,2.216,3157,2.11,3355,2.519,3356,3.566,3477,2.77,3696,2.16,3979,2.021,3980,2.11,3981,2.063,3982,2.11,3983,2.216,3984,2.216,3985,2.216,4005,1.817,4169,2.631,4174,2.426,4185,2.631,4186,2.631,4188,2.631,4189,2.631,4215,2.957,4216,2.957,4217,2.347,4218,2.957,4219,2.957,4220,2.631,4221,4.722,4222,2.957,4223,2.631,4224,2.957,4225,2.957,4226,2.16,4227,2.16,4228,2.957,4248,2.957,4249,2.957,4250,2.957,4273,2.631,4274,2.631,4275,2.631,4276,2.631,4277,2.631,4278,2.631,4279,2.631,4307,2.957,4308,2.957,4309,2.957,4310,2.957,4311,7.358,4367,4.201,4373,2.957,4374,2.957,4380,2.278,4381,2.278,4382,2.278,4383,2.278,4384,2.278,4385,2.426,4386,2.426,4387,2.426,4388,2.426,4389,2.426,4390,2.426,4391,2.426,4392,2.426,4393,2.426,4394,2.426,4395,2.426,4396,2.426,4397,2.426,4398,2.426,4399,2.631,4400,2.631,4401,2.631,4402,2.631,4403,2.631,4404,2.631,4405,2.631,4406,2.631,4407,2.957,4408,2.957,4410,2.957,4411,2.957,4412,2.957,4413,2.957,4414,2.278,4415,2.631,4419,3.241,4420,3.241,4421,3.241,4422,3.241,4423,2.77,4424,3.241,4425,3.241,4426,3.241,4427,3.241,4428,3.241,4429,2.957,4430,2.957,4431,2.957,4432,2.957,4433,2.957]],["title/Project-setup/summary.html#更进一步",[4434,5.176]],["body/Project-setup/summary.html#更进一步",[3409,8.842,4435,9.69,4436,9.69]],["title/Project-setup/webpack.html",[]],["body/Project-setup/webpack.html",[0,1.758,1,0.586,5,0.439,83,4.898,197,3.999,366,5.617,372,5.864,1306,5.675,4437,9.007,4438,9.007,4439,9.007,4440,8.219,4441,9.007]],["title/Project-setup/webpack.html#Webpack",[1306,2.775]],["body/Project-setup/webpack.html#Webpack",[0,1.769,5,0.441,366,5.65,4440,8.268,4442,9.061,4443,9.061,4444,9.061,4445,9.061,4446,9.061,4447,9.061,4448,9.061,4449,9.061,4450,9.061]],["title/Routing/aux-routes.html",[]],["body/Routing/aux-routes.html",[0,1.08,1,0.58,5,0.502,7,0.638,8,0.7,40,0.729,41,0.544,42,0.547,43,0.588,44,0.626,45,1.139,46,2.417,47,1.924,48,1.711,49,2.076,51,1.678,54,1.035,55,0.987,56,2.162,59,0.666,60,0.693,61,0.772,81,1.474,82,1.299,90,0.802,159,0.864,160,0.916,161,0.971,162,1.057,163,1.151,164,1.229,165,1.278,166,1.391,167,1.474,168,1.528,169,1.575,170,1.689,242,4.819,245,4.727,353,7.055,354,3.687,355,6.011,356,5.6,516,4.556,624,1.734,775,6.277,782,5.79,1815,6.456,2724,4.205,3658,5.434,3661,3.888,3662,7.138,4451,7.055,4452,5.047,4453,4.142,4454,5.047,4455,4.49,4456,5.034,4457,7.732,4458,8.134,4459,5.047,4460,7.732,4461,5.531,4462,5.531,4463,5.047,4464,5.531]],["title/Routing/aux-routes.html#使用辅助路由",[4465,5.176]],["body/Routing/aux-routes.html#使用辅助路由",[0,1.061,1,0.497,5,0.493,7,0.63,8,0.688,40,0.72,41,0.534,42,0.538,43,0.577,44,0.615,45,1.119,46,2.2,48,1.681,51,1.648,54,1.016,55,0.969,56,2.124,59,0.654,60,0.68,61,0.759,81,1.448,82,1.276,90,0.788,159,0.849,160,0.9,161,0.954,162,1.038,163,1.131,164,1.207,165,1.255,166,1.366,167,1.448,168,1.501,169,1.547,170,1.659,242,4.791,245,4.668,354,3.622,355,5.936,356,5.53,411,2.106,516,4.499,594,3.935,624,1.703,775,6.199,782,5.718,1015,5.718,1815,6.394,2724,4.153,3658,5.367,3661,3.819,3662,7.091,4453,4.068,4455,4.411,4456,4.971,4458,4.958,4459,4.958,4463,4.958,4466,5.433,4467,5.433,4468,5.433,4469,5.433,4470,5.433,4471,6.199,4472,4.411,4473,4.958,4474,7.636,4475,7.636,4476,7.636,4477,5.433,4478,7.636,4479,5.433,4480,5.433,4481,5.433,4482,5.433,4483,5.433,4484,5.433,4485,5.433,4486,5.433]],["title/Routing/child_routes.html",[]],["body/Routing/child_routes.html",[0,0.518,1,0.51,5,0.515,7,0.599,8,0.829,14,1.986,31,2.688,33,1.422,40,0.684,41,0.644,42,0.648,43,0.696,44,0.741,45,0.905,46,2.277,47,0.922,48,0.82,50,1.347,51,0.805,54,1.225,55,0.784,59,0.789,60,0.82,61,0.786,81,1.746,82,1.538,90,0.637,159,0.687,160,0.728,161,0.772,162,0.84,163,0.915,164,0.977,165,1.015,166,0.667,167,0.707,168,0.733,169,0.755,170,0.81,171,null,172,0.884,198,2.048,226,1.654,263,3.927,281,4.004,335,1.365,339,3.09,343,3.957,348,2.59,392,2.439,435,1.284,624,0.831,631,1.563,648,0.872,649,0.922,650,0.972,651,0.995,652,1.011,653,1.073,788,1.986,949,2.688,951,2.862,1198,3.006,1269,2.292,1477,1.654,1478,5.783,1531,1.986,1760,3.09,1775,4.624,2436,1.921,2441,1.813,2712,5.29,2724,4.257,2732,2.267,2763,3.957,2984,5.387,3340,5.502,3356,5.253,3658,3.09,3661,1.864,3662,3.957,3665,1.864,3666,3.753,3667,3.753,3668,4.571,3747,3.09,4272,4.264,4456,3.666,4487,2.652,4488,4.216,4489,2.42,4490,2.42,4491,7.693,4492,4.813,4493,3.184,4494,5.645,4495,3.292,4496,4.744,4497,2.42,4498,2.652,4499,2.652,4500,2.652,4501,2.42,4502,1.986,4503,4.078,4504,2.153,4505,2.153,4506,3.184,4507,4.012,4508,2.42,4509,2.42,4510,2.652,4511,1.986,4512,3.292,4513,2.153]],["title/Routing/child_routes.html#定义子路由",[4514,5.176]],["body/Routing/child_routes.html#定义子路由",[1,0.421,5,0.513,7,0.534,8,0.819,40,0.61,41,0.636,42,0.64,43,0.687,44,0.732,45,1.068,46,2.325,48,1.005,51,0.985,54,1.21,55,0.579,59,0.779,60,0.81,61,0.724,81,1.381,82,1.218,90,0.471,159,0.507,160,0.538,161,0.57,162,0.621,163,0.676,164,0.722,165,0.75,166,0.816,167,0.865,168,0.897,169,0.925,170,0.992,171,null,172,1.082,198,1.886,226,2.025,263,2.601,335,1.671,343,3.643,348,1.913,392,1.209,405,1.442,411,1.259,435,1.514,481,2.282,624,1.018,631,1.913,648,1.067,649,1.13,650,1.19,651,1.219,652,1.238,653,1.313,949,1.985,951,2.114,1478,5.381,1760,3.643,1775,4.12,2054,4.924,2712,4.017,2724,4.017,2763,3.643,2984,4.734,3340,5.191,3356,5.587,3658,3.643,3661,2.282,3662,4.547,3666,4.313,3667,4.313,3696,2.165,3698,5.252,3747,3.643,3962,2.963,4129,6.761,4488,4.845,4489,2.963,4490,2.963,4491,7.355,4492,2.776,4493,3.754,4494,6.275,4495,3.882,4496,3.754,4497,2.963,4501,2.963,4502,2.432,4503,2.352,4504,2.636,4505,2.636,4506,2.352,4515,3.247,4516,3.247,4517,3.247,4518,3.247,4519,3.247,4520,3.247,4521,3.247,4522,3.247,4523,3.247,4524,3.247,4525,3.247,4526,3.247,4527,5.996,4528,4.73,4529,5.184,4530,5.184,4531,3.247,4532,3.247,4533,3.247,4534,3.247,4535,3.247,4536,3.247,4537,3.247,4538,2.776,4539,3.247,4540,3.247,4541,3.247,4542,4.73,4543,3.247,4544,3.247,4545,3.247,4546,3.247,4547,2.636]],["title/Routing/child_routes.html#访问父路由的参数",[4548,5.176]],["body/Routing/child_routes.html#访问父路由的参数",[1,0.426,5,0.506,7,0.54,8,0.829,40,0.617,41,0.644,42,0.648,43,0.695,44,0.741,54,1.225,55,1.168,59,0.788,60,0.82,61,0.914,81,1.745,82,1.538,90,0.949,159,1.023,160,1.084,161,1.149,162,1.251,163,1.363,164,1.455,165,1.512,171,null,198,2.381,263,3.284,339,4.601,343,4.601,348,3.857,392,3.621,949,4.002,951,4.262,1477,4.082,1775,5.522,2441,4.476,2712,3.56,2724,4.716,2984,5.273,3340,4.601,4491,5.596,4496,6.281,4503,6.281,4506,4.741,4507,7.913,4508,5.974,4509,5.974,4547,5.314,4549,6.547,4550,6.547,4551,6.547]],["title/Routing/child_routes.html#链接",[4552,5.176]],["body/Routing/child_routes.html#链接",[1,0.466,5,0.502,7,0.591,14,5.36,31,4.376,33,3.837,40,0.675,46,2.111,50,3.636,81,1.908,82,1.681,339,5.031,410,5.031,788,5.36,1198,4.894,1269,3.732,1531,5.36,2436,5.184,2763,5.031,2984,5.552,4456,6.61,4511,5.36,4512,6.883,4513,5.81,4547,5.81,4553,7.158,4554,7.158,4555,7.158,4556,7.158,4557,7.158,4558,5.36,4559,7.158,4560,5.81,4561,7.158,4562,7.158,4563,7.158,4564,7.158,4565,7.158]],["title/Routing/config.html",[]],["body/Routing/config.html",[1,0.474,5,0.515,7,0.702,8,0.642,31,4.446,38,3.799,40,0.686,41,0.715,42,0.502,43,0.539,44,0.574,45,1.498,46,2.521,54,1.361,55,0.905,56,2.843,59,0.611,60,0.635,61,0.709,62,2.455,65,2.147,67,2.188,68,2.427,69,2.188,73,3.303,90,0.736,159,0.793,160,0.84,161,0.891,162,0.97,163,1.056,164,1.127,165,1.172,166,1.276,167,1.352,168,1.402,169,1.445,170,1.549,435,2.483,624,1.59,648,1.667,1269,3.793,1531,3.799,1757,3.382,2409,6.527,2499,2.938,2763,3.566,2984,5.519,3356,5.427,3664,5.268,3665,3.566,3666,3.382,3667,3.382,3671,3.799,4272,3.303,4566,4.63,4567,5.074,4568,6.61,4569,6.61,4570,4.63]],["title/Routing/config.html#配置路由",[4571,5.176]],["body/Routing/config.html#配置路由",[]],["title/Routing/config.html#Base-标签",[1960,3.2,2409,2.465]],["body/Routing/config.html#Base-标签",[7,0.771,2409,8.021,4566,8.519,4572,9.336,4573,9.336,4574,9.336,4575,9.336]],["title/Routing/config.html#路由定义对象",[4576,5.176]],["body/Routing/config.html#路由定义对象",[1,0.479,5,0.492,7,0.608,40,0.694,41,0.724,46,2.363,417,3.005,435,2.15,1015,7.009,1757,4.909,2499,4.264,2763,5.175,2984,5.473,3356,5.68,3666,4.909,3667,4.909,4558,5.514,4560,5.978,4568,5.725,4569,5.725,4577,7.364,4578,7.364,4579,7.364,4580,7.364,4581,7.364,4582,7.364,4583,7.364,4584,7.364,4585,7.364,4586,7.364,4587,7.364,4588,7.364,4589,7.364,4590,7.364,4591,7.364,4592,7.364]],["title/Routing/config.html#RouterModule",[3664,3.749]],["body/Routing/config.html#RouterModule",[1,0.407,5,0.51,7,0.516,8,0.792,40,0.589,41,0.615,42,0.619,43,0.664,44,0.708,45,1.732,46,1.932,54,1.573,55,1.115,56,3.287,59,0.753,60,0.783,61,0.873,62,3.026,65,2.646,67,2.696,68,2.991,69,2.696,73,4.071,90,0.907,159,0.977,160,1.036,161,1.098,162,1.195,163,1.302,164,1.39,165,1.444,166,1.572,167,1.666,168,1.727,169,1.781,170,1.909,435,2.456,624,1.96,648,2.055,1015,6.298,2355,5.706,2984,5.348,3356,4.642,3664,4.529,3671,4.682,3696,4.168,4558,4.682,4560,5.076,4568,6.538,4569,6.538,4570,5.706,4593,6.253,4594,6.253]],["title/Routing/query_params.html",[]],["body/Routing/query_params.html",[1,0.46,5,0.513,7,0.753,8,0.618,40,0.667,41,0.48,42,0.483,43,0.518,44,0.552,45,1.457,46,1.624,47,1.697,48,1.51,51,1.48,54,0.913,55,0.87,59,0.588,60,0.611,61,0.681,81,1.301,82,1.146,88,1.735,90,0.708,159,0.762,160,0.808,161,0.857,162,0.932,163,1.016,164,1.084,165,1.127,166,1.227,167,1.301,168,1.348,169,1.39,170,1.49,171,null,204,2.675,281,5.919,348,4.167,392,2.633,624,1.53,648,1.604,649,1.697,650,1.789,651,1.831,949,2.983,951,3.177,1477,3.043,1677,3.253,1750,3.43,1775,5.296,2259,2.479,2291,1.974,2499,2.826,2509,3.043,2671,3.43,2701,2.983,2712,5.265,2724,5.265,2984,3.463,3364,7.542,3552,6.046,3665,3.43,4456,4.604,4488,3.654,4493,3.534,4496,5.122,4503,3.534,4506,3.534,4595,4.453,4596,8.277,4597,4.453,4598,5.498,4599,4.453,4600,5.296,4601,4.453]],["title/Routing/query_params.html#传递可选参数",[4602,5.176]],["body/Routing/query_params.html#传递可选参数",[4488,7.077,4595,8.624,4603,9.451,4604,9.451,4605,9.451,4606,8.624,4607,9.451]],["title/Routing/query_params.html#传递查询参数",[4608,5.176]],["body/Routing/query_params.html#传递查询参数",[1,0.506,5,0.509,7,0.799,40,0.733,801,4.848,1750,5.464,2724,4.228,3364,7.64,3552,8.279,4129,5.821,4456,6.305,4527,7.862,4596,9.018,4597,7.094,4598,6.044,4599,7.094,4609,7.775,4610,7.775,4611,7.775,4612,7.775,4613,7.094]],["title/Routing/query_params.html#读取查询参数",[4614,5.176]],["body/Routing/query_params.html#读取查询参数",[1,0.351,5,0.513,7,0.627,8,0.683,40,0.509,41,0.531,42,0.534,43,0.573,44,0.611,45,1.565,46,1.745,48,1.669,51,1.637,54,1.009,55,0.962,59,0.65,60,0.676,61,0.753,81,1.438,82,1.267,88,1.919,90,0.782,159,0.843,160,0.894,161,0.947,162,1.031,163,1.123,164,1.199,165,1.246,166,1.356,167,1.438,168,1.49,169,1.537,170,1.647,171,null,204,2.874,281,3.298,348,4.477,392,2.829,411,2.091,423,3.512,624,1.691,648,1.773,649,1.877,650,1.978,651,2.025,949,3.298,951,3.512,1477,3.364,1775,5.6,2259,2.741,2499,3.124,2509,3.364,2671,3.792,2701,3.298,2712,2.934,2724,5.192,2984,3.72,3364,6.37,3696,3.596,4129,5.689,4493,3.907,4496,5.503,4503,3.907,4506,3.907,4527,6.168,4596,6.495,4598,4.194,4600,5.689,4601,4.923,4606,4.923,4615,5.395,4616,5.395,4617,5.395]],["title/Routing/redirects.html",[]],["body/Routing/redirects.html",[1,0.499,5,0.511,7,0.632,31,4.681,40,0.722,41,0.753,42,0.758,46,2.689,54,1.433,435,2.236,1269,5.727,2984,4.698,3356,5.783,3666,5.105,3667,5.105,3668,6.217,4568,5.953,4569,5.953]],["title/Routing/redirects.html#将路由器重定向到另一条路由",[4618,5.176]],["body/Routing/redirects.html#将路由器重定向到另一条路由",[1,0.491,5,0.505,7,0.623,40,0.711,41,0.742,42,0.747,46,2.509,54,1.411,417,3.079,435,2.203,1015,7.792,1269,4.956,2054,5.03,2984,4.654,3356,5.744,3666,5.03,3667,5.03,3698,6.125,4558,7.117,4560,6.125,4568,5.866,4569,5.866,4619,7.545,4620,7.545,4621,7.545,4622,7.545]],["title/Routing/route_guards.html",[]],["body/Routing/route_guards.html",[0,0.702,1,0.552,5,0.515,7,0.7,8,0.876,22,1.741,40,0.8,41,0.769,42,0.684,43,0.735,44,0.783,45,2.104,46,1.291,47,1.955,54,1.587,55,1.002,59,0.833,60,0.866,61,0.966,81,0.959,82,0.845,90,1.003,159,0.878,160,0.596,161,0.632,162,0.687,163,0.749,164,0.8,171,null,183,1.851,195,1.721,215,2.291,254,2.017,335,2.892,390,2.889,392,1.34,435,2.02,522,2.033,542,5.035,545,2.12,615,5.615,1287,1.828,1597,2.398,1608,2.017,1757,3.747,2039,4.071,2291,3.162,2421,1.702,2499,3.255,2671,3.95,2984,4.402,3356,3.103,3364,4.071,3664,2.606,3665,4.862,3671,2.694,4005,2.017,4623,3.283,4624,3.283,4625,7.48,4626,3.283,4627,7.74,4628,6.684,4629,6.684,4630,5.621,4631,6.684,4632,3.598,4633,3.283,4634,8.335,4635,3.283,4636,3.283,4637,3.283,4638,5.129,4639,3.283,4640,3.283,4641,3.283,4642,3.283,4643,3.598,4644,3.598,4645,3.283,4646,3.598,4647,3.283]],["title/Routing/route_guards.html#路由拦截",[4648,5.176]],["body/Routing/route_guards.html#路由拦截",[0,1.718,4005,4.933,4623,8.03,4624,8.03,4625,6.59,4626,8.03,4649,8.801,4650,8.801,4651,8.801,4652,8.801,4653,8.801,4654,8.801,4655,8.801,4656,8.801,4657,8.801,4658,8.801,4659,8.801,4660,8.801,4661,8.801]],["title/Routing/route_guards.html#在路由上注册路由哨兵",[4662,5.176]],["body/Routing/route_guards.html#在路由上注册路由哨兵",[1,0.397,5,0.51,7,0.504,8,0.773,40,0.575,41,0.6,42,0.604,43,0.648,44,0.691,45,2.073,46,1.901,54,1.548,59,0.735,60,0.764,61,0.852,90,0.885,159,0.954,160,1.011,161,1.071,162,1.166,163,1.271,164,1.356,254,3.421,435,2.741,2984,5.15,3356,4.567,3664,4.421,3671,4.57,3696,4.069,4625,4.57,4627,7.55,4628,7.073,4629,8.024,4631,8.024,4633,5.57,4634,4.745,4635,5.57,4663,6.104,4664,6.104,4665,6.104,4666,6.104,4667,6.104,4668,5.57,4669,5.57,4670,5.57,4671,8.274,4672,6.104,4673,6.104,4674,6.104,4675,6.104,4676,6.104,4677,6.104,4678,6.104]],["title/Routing/route_guards.html#实现CanActivate",[4679,5.176]],["body/Routing/route_guards.html#实现CanActivate",[1,0.439,5,0.506,7,0.557,8,0.854,40,0.636,41,0.664,42,0.668,43,0.717,44,0.764,45,2.033,54,1.262,55,1.204,59,0.813,60,0.845,61,0.942,90,0.978,159,1.054,171,null,335,3.473,390,3.268,392,2.513,411,2.616,522,1.983,615,8.013,1757,4.498,2499,3.908,2671,4.743,3546,8.073,3696,4.498,4629,5.769,4634,9.072,4636,6.158,4670,6.158,4680,6.748,4681,5.769,4682,6.748,4683,6.748,4684,6.748,4685,6.748,4686,6.748,4687,6.748,4688,6.748]],["title/Routing/route_guards.html#实现-CanDeactivate",[3086,2.998,4625,2.626]],["body/Routing/route_guards.html#实现-CanDeactivate",[1,0.563,5,0.507,7,0.714,8,0.825,40,0.815,41,0.851,42,0.645,43,0.692,44,0.738,45,1.998,54,1.618,55,1.163,59,0.785,60,0.816,61,0.91,90,0.945,335,3.355,390,3.195,411,2.527,522,1.915,542,5.202,1287,3.312,1597,4.346,1608,3.654,1757,4.346,2291,2.637,2421,3.084,2499,3.775,2671,4.582,2984,3.192,3696,4.346,4625,7.739,4628,7.392,4631,5.573,4634,5.068,4637,5.948,4638,7.891,4639,5.948,4640,5.948,4641,5.948,4642,5.948,4668,5.948,4669,5.948,4689,6.519,4690,6.519,4691,6.519,4692,6.519]],["title/Routing/route_guards.html#异步路由哨兵",[4693,5.176]],["body/Routing/route_guards.html#异步路由哨兵",[1,0.528,5,0.446,7,0.669,40,0.764,81,2.159,82,1.903,405,3.598,417,3.306,522,2.381,542,6.005,2291,4.346,4625,7.44,4634,6.299,4645,7.394,4647,7.394,4694,8.103,4695,8.103,4696,8.103,4697,8.103,4698,8.103,4699,8.103,4700,8.103,4701,8.103,4702,8.103,4703,8.103,4704,8.103]],["title/Routing/routeparams.html",[]],["body/Routing/routeparams.html",[1,0.548,5,0.513,7,0.695,8,0.524,40,0.794,41,0.743,42,0.62,43,0.44,44,0.469,45,1.29,46,1.934,47,1.441,48,1.281,49,1.554,51,1.256,54,1.172,55,0.739,58,2.911,59,0.499,60,0.519,61,0.578,81,1.669,82,1.471,90,0.601,159,0.647,160,0.686,161,0.727,162,0.791,163,0.862,164,0.92,165,0.957,166,1.041,167,1.104,168,1.144,169,1.18,170,1.265,171,null,172,1.38,190,2.697,198,2.278,242,2.868,263,5.409,281,3.829,335,2.131,392,2.332,435,1.209,624,1.298,631,2.44,648,1.361,649,1.441,650,1.518,651,1.554,949,2.532,951,2.697,1622,1.821,1677,2.761,1775,5.361,2291,3.055,2509,2.583,2712,5.943,2724,2.253,2797,2.832,2984,4.123,3152,3.22,3340,6.942,3356,4.169,3665,2.911,3666,2.761,3667,2.761,3668,3.362,3747,4.402,4272,2.697,4456,4.078,4488,3.101,4492,3.541,4493,4.537,4494,4.869,4495,4.69,4496,6.098,4503,4.537,4504,3.362,4505,3.362,4506,3,4598,3.22,4705,4.142,4706,3.78,4707,3.78,4708,3.78,4709,3.78,4710,3.78,4711,3.78,4712,2.761,4713,3.362]],["title/Routing/routeparams.html#使用路由参数",[4714,5.176]],["body/Routing/routeparams.html#使用路由参数",[4715,9.63,4716,9.63,4717,9.63,4718,9.63]],["title/Routing/routeparams.html#声明路由参数",[4719,5.176]],["body/Routing/routeparams.html#声明路由参数",[1,0.486,5,0.505,7,0.617,40,0.704,41,0.735,42,0.739,46,2.17,54,1.398,263,3.748,435,2.182,2054,4.981,2712,4.063,2724,4.063,2984,4.625,3340,5.251,3356,5.718,3666,4.981,3667,4.981,3698,6.065,4129,7.757,4488,5.595,4493,5.411,4494,5.808,4527,7.669,4528,6.818,4706,6.818,4720,7.472,4721,7.472,4722,6.818,4723,7.472,4724,7.472]],["title/Routing/routeparams.html#链接到带参数的路由",[4725,5.176]],["body/Routing/routeparams.html#链接到带参数的路由",[1,0.637,5,0.501,7,0.807,40,0.922,41,0.776,190,5.14,263,3.96,2712,5.777,3340,5.548,3970,5.398,4456,6.366,4493,5.718,4538,8.358,4598,6.137,4613,8.922,4707,7.204,4708,7.204,4709,7.204,4726,7.895,4727,7.895,4728,7.895,4729,7.895]],["title/Routing/routeparams.html#读取路由参数",[4730,5.176]],["body/Routing/routeparams.html#读取路由参数",[1,0.34,5,0.509,7,0.432,8,0.662,40,0.493,41,0.514,42,0.517,43,0.556,44,0.592,45,1.531,46,1.707,48,1.618,49,1.963,51,1.586,54,0.978,55,0.933,58,3.675,59,0.63,60,0.655,61,0.73,81,1.981,82,1.746,90,0.758,159,0.817,160,0.866,161,0.918,162,0.999,163,1.089,164,1.162,165,1.208,166,1.315,167,1.394,168,1.445,169,1.489,170,1.597,171,null,172,1.743,198,2.704,242,3.403,263,4.337,335,2.691,392,2.767,411,2.027,624,1.639,631,3.081,648,1.719,649,1.819,650,1.917,651,1.963,949,3.197,951,3.405,1589,4.245,1622,2.299,1775,5.995,2291,3.006,2509,3.261,2712,4.042,2797,3.576,2984,3.639,3152,4.065,3340,5.224,3696,3.486,3747,5.224,4129,3.916,4494,4.065,4495,5.565,4496,6.819,4503,5.383,4504,4.245,4505,4.245,4506,3.788,4538,4.47,4542,6.782,4547,4.245,4710,4.772,4711,4.772,4712,3.486,4713,4.245,4731,5.23,4732,5.23,4733,5.23,4734,5.23,4735,5.23,4736,5.23]],["title/Routing/routerlink.html",[]],["body/Routing/routerlink.html",[5,0.502,7,0.85,46,1.976,1269,4.486,2797,7.045,2984,4.212,4453,6.442,4456,6.708,4471,6.984,4472,6.984,4558,6.442,4713,6.984,4737,7.85]],["title/Routing/routerlink.html#定义路由之间的链接",[4738,5.176]],["body/Routing/routerlink.html#定义路由之间的链接",[]],["title/Routing/routerlink.html#RouterLink",[4456,3.37]],["body/Routing/routerlink.html#RouterLink",[7,0.761,46,2.119,801,5.752,1269,4.81,4453,6.907,4456,6.005,4471,7.488,4472,7.488,4739,9.224,4740,9.224,4741,9.224]],["title/Routing/routerlink.html#Navigating-Programmatically",[2797,2.398,4713,2.847]],["body/Routing/routerlink.html#Navigating-Programmatically",[7,0.775,1589,7.626,2797,6.423,2984,4.599,4558,7.034,4737,8.571,4742,9.394,4743,9.394]],["title/Routing/routeroutlet.html",[]],["body/Routing/routeroutlet.html",[0,1.329,1,0.579,5,0.503,7,0.562,8,0.862,40,0.642,41,0.67,42,0.674,43,0.723,44,0.771,45,1.402,46,2.277,47,2.368,48,2.106,49,2.555,51,2.065,54,1.274,55,1.214,56,2.661,59,0.82,60,0.852,61,0.951,81,1.814,82,1.599,90,0.987,159,1.064,160,1.128,161,1.195,631,4.011,2724,6.085,2984,3.333,3658,6.254,3661,4.785,3662,7.666,4272,4.432,4451,8.12,4452,6.212,4453,5.098,4454,6.212,4455,5.527,4502,5.098,4744,6.212]],["title/Routing/routeroutlet.html#动态添加路由组件",[4745,5.176]],["body/Routing/routeroutlet.html#动态添加路由组件",[0,1.317,1,0.439,5,0.495,7,0.557,8,0.854,40,0.636,41,0.664,42,0.668,43,0.717,44,0.764,45,1.39,46,2.267,48,2.087,51,2.047,54,1.262,55,1.204,56,2.638,59,0.813,60,0.845,61,0.942,81,1.798,82,1.585,90,0.978,159,1.054,160,1.118,161,1.185,411,2.616,594,4.888,631,3.976,2724,6.07,2984,3.304,3658,6.218,3661,4.743,3662,7.644,4453,5.053,4455,5.478,4471,7.182,4472,5.478,4473,6.158,4502,5.053,4744,6.158,4746,6.748,4747,6.748,4748,6.748,4749,6.748,4750,6.748,4751,6.748,4752,6.748]],["title/Routing/routing.html",[]],["body/Routing/routing.html",[0,1.892,1,0.631,5,0.402]],["title/Routing/routing.html#路由",[4753,5.176]],["body/Routing/routing.html#路由",[4754,9.752,4755,9.752]],["title/Routing/why_routing.html",[]],["body/Routing/why_routing.html",[5,0.501,4272,7.43]],["title/Routing/why_routing.html#为什么要用路由？",[4756,5.176]],["body/Routing/why_routing.html#为什么要用路由？",[4757,9.394,4758,9.394,4759,9.394,4760,9.394,4761,9.394,4762,9.394,4763,9.394,4764,9.394]],["title/Testing/after-thoughts.html",[]],["body/Testing/after-thoughts.html",[2716,3.627,4765,8.678,4766,9.51,4767,9.51,4768,9.51,4769,9.51]],["title/Testing/after-thoughts.html#Afterthoughts",[4765,4.723]],["body/Testing/after-thoughts.html#Afterthoughts",[4770,9.569,4771,9.569,4772,9.569,4773,9.569,4774,9.569]],["title/Testing/alt-http-mocking.html",[]],["body/Testing/alt-http-mocking.html",[0,0.777,1,0.259,5,0.515,7,0.329,8,0.769,40,0.375,41,0.392,42,0.394,43,0.423,44,0.451,45,1.929,59,0.479,60,0.498,61,0.556,81,1.061,82,0.935,88,2.161,90,0.577,120,2.535,159,0.622,160,0.659,161,0.699,162,0.761,163,0.829,164,0.885,165,0.919,166,1.001,167,1.061,168,1.1,169,1.134,170,1.215,204,1.506,269,2.798,330,2.654,390,1.471,435,1.775,449,2.654,538,1.862,545,2.345,624,1.248,648,1.308,649,1.385,650,1.459,651,1.494,652,1.518,653,1.61,723,2.798,764,2.592,768,1.768,827,4.758,908,1.823,909,1.862,910,1.926,911,2.076,912,2.134,913,2.197,914,2.165,915,2.197,916,2.197,917,2.134,918,2.231,919,2.305,920,2.388,1228,2.022,1354,2.345,1770,2.535,2255,5.52,2259,2.022,2283,3.095,2291,1.61,2292,3.232,3979,2.482,3980,2.592,3981,2.535,3982,2.592,3983,2.722,3984,2.722,3985,2.722,4018,2.981,4272,2.592,4380,2.798,4381,2.798,4382,2.798,4383,2.798,4384,2.798,4385,2.981,4386,2.981,4387,2.981,4388,2.981,4389,2.981,4390,2.981,4391,2.981,4392,2.981,4393,2.981,4394,2.981,4395,2.981,4396,2.981,4397,2.981,4398,2.981,4600,2.981,4775,2.798,4776,3.981,4777,3.232,4778,4.051,4779,2.482,4780,2.592,4781,4.551,4782,3.232,4783,3.981,4784,5.181,4785,3.632,4786,4.934,4787,3.232,4788,4.934,4789,3.232,4790,3.232,4791,3.232,4792,3.232,4793,3.232,4794,3.232,4795,3.232,4796,3.232,4797,3.232,4798,3.232,4799,3.232,4800,3.232,4801,2.981,4802,3.232,4803,3.232,4804,2.022,4805,3.632,4806,6.727,4807,2.267,4808,3.632,4809,3.632,4810,2.535,4811,3.232,4812,3.232,4813,3.632,4814,3.632,4815,3.232,4816,3.632,4817,3.232]],["title/Testing/alt-http-mocking.html#替代HTTP-Mock策略",[4818,3.507,4819,3.507]],["body/Testing/alt-http-mocking.html#替代HTTP-Mock策略",[1,0.249,5,0.517,7,0.315,8,0.746,40,0.36,41,0.376,42,0.378,43,0.406,44,0.433,45,1.898,59,0.46,60,0.479,61,0.534,81,1.019,82,0.898,88,2.095,90,0.554,120,2.434,159,0.597,160,0.633,161,0.671,162,0.73,163,0.796,164,0.849,165,0.883,166,0.961,167,1.019,168,1.056,169,1.089,170,1.167,204,1.446,269,2.686,390,1.412,417,2.404,435,1.72,449,2.548,624,1.198,648,1.256,649,1.329,650,1.401,651,1.434,652,1.458,653,1.546,764,2.488,768,1.697,801,2.383,827,4.432,908,1.75,909,1.788,910,1.85,911,1.993,912,2.049,913,2.11,914,2.079,915,2.11,916,2.11,917,2.049,918,2.142,919,2.213,920,2.293,1228,1.942,1354,2.252,1770,2.434,2255,5.382,2259,1.942,2283,2.971,2291,1.546,3979,2.383,3980,2.488,3981,2.434,3982,2.488,3983,2.613,3984,2.613,3985,2.613,4217,2.768,4380,2.686,4381,2.686,4382,2.686,4383,2.686,4384,2.686,4385,2.862,4386,2.862,4387,2.862,4388,2.862,4389,2.862,4390,2.862,4391,2.862,4392,2.862,4393,2.862,4394,2.862,4395,2.862,4396,2.862,4397,2.862,4398,2.862,4600,2.862,4681,3.267,4775,2.686,4777,3.103,4778,3.927,4779,2.383,4781,4.411,4782,3.103,4784,5.051,4786,4.782,4787,3.103,4788,4.782,4789,3.103,4790,3.103,4791,3.103,4792,3.103,4793,3.103,4794,3.103,4795,3.103,4796,3.103,4797,3.103,4798,3.103,4799,3.103,4800,3.103,4801,2.862,4802,3.103,4803,3.103,4804,1.942,4806,6.558,4807,2.177,4808,3.488,4809,3.488,4810,2.434,4811,3.103,4812,3.103,4815,3.103,4816,3.488,4817,3.103,4820,3.822,4821,3.822,4822,3.822,4823,3.822,4824,2.862,4825,3.267,4826,3.822,4827,3.488,4828,3.488,4829,3.822,4830,2.768,4831,3.488,4832,3.103,4833,3.488,4834,3.488]],["title/Testing/async-execution.html",[]],["body/Testing/async-execution.html",[1,0.477,5,0.516,7,0.605,40,0.691,41,0.721,42,0.725,43,0.779,44,0.829,59,0.883,331,2.267,390,2.707,522,2.153,1287,5.216,1313,6.558,2255,6.987,2334,4.885,2505,6.381,4775,6.558,4778,6.221,4784,5.151,4804,3.723,4835,7.329,4836,5.488,4837,6.687,4838,6.687]],["title/Testing/async-execution.html#异步执行测试",[4839,5.176]],["body/Testing/async-execution.html#异步执行测试",[1,0.473,5,0.508,7,0.599,40,0.684,41,0.714,42,0.718,43,0.771,44,0.822,59,0.874,331,2.246,390,2.682,522,2.133,801,4.527,1287,3.688,1313,6.519,2505,6.342,3959,6.624,4775,6.519,4778,6.183,4784,5.102,4804,3.688,4836,5.436,4837,6.624,4838,6.624,4840,7.259,4841,7.259,4842,7.259,4843,7.259,4844,7.259,4845,7.259,4846,7.259,4847,7.259,4848,7.259,4849,7.259,4850,6.624,4851,7.259,4852,7.259]],["title/Testing/async.html",[]],["body/Testing/async.html",[0,0.809,1,0.408,5,0.513,6,2.761,7,0.517,8,0.793,40,0.59,41,0.616,42,0.62,43,0.665,44,0.709,45,1.959,46,1.735,47,2.179,48,1.281,51,1.256,54,0.775,55,1.117,59,0.754,60,0.784,61,0.875,67,1.786,81,1.104,82,0.973,88,2.686,90,0.908,96,1.982,159,0.979,160,1.037,161,1.1,162,1.197,163,1.304,164,1.392,165,1.447,166,1.041,167,1.104,168,1.144,169,1.18,170,1.265,171,null,172,2.087,179,3.541,242,1.897,392,1.542,435,1.209,522,1.217,550,2.761,624,1.298,648,1.361,649,1.441,650,1.518,651,1.554,652,1.58,653,1.675,768,1.839,829,2.399,908,1.897,909,1.938,910,2.004,911,2.16,912,2.22,913,2.286,914,2.253,915,2.286,916,2.286,917,2.22,918,2.322,1287,2.104,1650,3.743,1887,2.44,4005,2.322,4778,6.028,4779,2.583,4780,2.697,4804,2.104,4807,2.359,4810,2.637,4853,6.835,4854,7.341,4855,7.341,4856,5.715,4857,8.753,4858,3.78,4859,3.362,4860,3.78,4861,6.835,4862,3.362,4863,3.78,4864,5.085,4865,4.402,4866,3.362,4867,4.402,4868,3.362,4869,3.101,4870,3.101,4871,3.101]],["title/Testing/async.html#测试异步操作",[4872,5.176]],["body/Testing/async.html#测试异步操作",[1,0.387,5,0.514,7,0.491,8,0.753,40,0.561,41,0.585,42,0.589,43,0.632,44,0.673,45,1.908,46,1.366,48,1.197,51,1.174,54,0.724,55,1.061,59,0.716,60,0.745,61,0.831,67,1.669,81,1.031,82,0.909,88,2.576,90,0.862,96,1.852,159,0.929,160,0.985,161,1.044,162,1.137,163,1.238,164,1.322,165,1.374,166,0.973,167,1.031,168,1.069,169,1.102,170,1.182,171,null,172,1.982,179,3.308,392,1.441,411,2.306,435,1.13,522,1.137,550,2.58,624,1.213,648,1.272,649,1.346,650,1.419,651,1.452,652,1.476,653,1.565,768,1.718,829,2.241,908,1.772,909,1.811,910,1.873,911,2.018,912,2.075,913,2.136,914,2.105,915,2.136,916,2.136,917,2.075,918,2.17,1018,3.308,1287,1.966,1887,2.28,4005,2.17,4778,5.849,4779,2.413,4804,1.966,4807,2.204,4810,2.464,4824,2.898,4830,2.803,4853,6.6,4854,6.6,4855,7.122,4857,7.831,4859,3.142,4861,6.6,4862,3.142,4864,4.828,4865,4.18,4866,3.142,4867,4.18,4868,3.142,4869,2.898,4870,2.898,4871,2.898,4873,3.87,4874,3.87,4875,3.87,4876,3.87,4877,3.87,4878,3.87,4879,3.87,4880,5.427,4881,3.532,4882,7.418,4883,3.532,4884,3.532,4885,3.532,4886,5.632,4887,3.308,4888,3.87,4889,3.87,4890,3.87,4891,3.87,4892,3.87,4893,3.87,4894,3.87,4895,3.87,4896,3.87,4897,3.87]],["title/Testing/complex-actions.html",[]],["body/Testing/complex-actions.html",[0,0.601,1,0.547,5,0.515,7,0.515,8,0.79,40,0.675,41,0.614,42,0.618,43,0.663,44,0.706,45,1.73,47,1.727,54,1.47,55,1.113,59,0.752,60,0.782,61,0.872,90,0.905,159,0.975,160,1.034,161,1.096,162,1.193,163,1.034,164,1.103,165,1.147,166,1.248,167,1.323,168,1.372,169,0.877,170,0.94,171,null,204,1.164,261,2.524,318,3.549,329,4.031,331,1.931,390,2.646,392,2.667,435,2.294,522,1.459,624,0.965,648,1.012,649,1.071,650,1.128,651,1.155,652,1.174,653,1.245,723,3.49,768,1.367,898,2.229,899,2.631,908,1.409,909,1.44,910,1.489,911,1.605,912,1.65,913,1.699,914,1.674,915,1.699,916,1.699,917,1.65,918,1.725,919,1.782,920,1.846,1119,1.96,1129,1.882,1211,1.584,1228,1.564,1287,1.564,1342,1.96,1545,2.105,1622,4.538,1650,1.525,1775,1.96,2222,2.499,2421,3.388,2716,2.996,2719,3.445,3839,1.882,3979,1.919,4005,1.725,4712,5.6,4778,2.052,4804,1.564,4807,1.753,4898,6.463,4899,6.287,4900,2.809,4901,2.809,4902,4.674,4903,2.809,4904,3.86,4905,3.816,4906,5.067,4907,2.809,4908,2.809,4909,2.809,4910,2.305,4911,2.809,4912,2.499,4913,2.809,4914,2.305,4915,1.96,4916,2.499,4917,2.809,4918,4.531,4919,4.031,4920,4.531,4921,2.499,4922,2.499,4923,2.809,4924,3.49,4925,2.499,4926,2.499,4927,2.499,4928,2.809,4929,2.499,4930,2.305,4931,3.078,4932,2.305,4933,2.305,4934,3.078]],["title/Testing/complex-actions.html#测试复杂的-Actions",[1622,1.542,4935,3.507]],["body/Testing/complex-actions.html#测试复杂的-Actions",[1545,6.626,4936,9.69,4937,9.69]],["title/Testing/complex-actions.html#条件-Action",[1622,1.542,4938,3.507]],["body/Testing/complex-actions.html#条件-Action",[1,0.518,5,0.517,7,0.476,8,0.73,40,0.666,41,0.567,42,0.571,43,0.613,44,0.653,45,1.64,54,1.079,55,1.029,59,0.695,60,0.722,61,0.806,90,0.836,159,0.901,160,0.955,161,1.013,162,1.102,163,0.774,164,0.827,165,0.859,166,0.935,167,0.991,168,1.028,169,1.06,170,1.136,171,null,204,1.407,261,2.333,318,2.859,329,4.683,331,1.784,390,2.131,392,2.148,411,1.442,435,2.063,522,1.093,624,1.166,648,1.223,649,1.294,650,1.364,651,1.396,652,1.419,653,1.505,723,4.054,768,1.652,908,1.703,909,1.74,910,1.8,911,1.94,912,1.994,913,2.053,914,2.023,915,2.053,916,2.053,917,1.994,918,2.085,919,2.154,920,2.232,1119,2.369,1129,2.274,1228,1.89,1342,2.369,1622,4.007,1650,1.843,1775,2.369,2222,3.02,2421,3.766,2716,1.419,3979,2.32,4226,3.846,4227,3.846,4712,4.71,4804,1.89,4807,2.119,4898,6.407,4899,5.444,4900,3.395,4901,3.395,4902,2.786,4903,3.395,4904,2.892,4905,3.527,4906,5.736,4907,3.395,4909,3.395,4910,2.786,4911,3.395,4912,3.02,4913,3.395,4914,2.786,4915,2.369,4916,3.02,4917,3.395,4918,5.264,4919,4.683,4920,5.264,4921,3.02,4922,3.02,4923,3.395,4939,3.72,4940,3.18,4941,3.72,4942,3.02,4943,3.18,4944,3.395,4945,5.769,4946,3.72,4947,5.264,4948,3.72]],["title/Testing/complex-actions.html#异步-Action",[1622,1.542,4949,3.2]],["body/Testing/complex-actions.html#异步-Action",[1,0.374,5,0.515,7,0.474,8,0.726,40,0.541,41,0.564,42,0.568,43,0.61,44,0.649,45,1.634,54,1.7,55,1.023,59,0.691,60,0.718,61,0.801,90,0.832,159,0.897,160,0.95,161,1.007,162,1.096,163,1.195,164,1.275,165,1.325,166,1.443,167,1.529,168,1.585,171,null,261,2.321,331,1.775,390,2.93,392,2.953,411,2.224,435,2.316,522,1.686,1211,2.953,1287,2.915,2716,2.188,3839,3.508,4005,3.217,4226,3.825,4227,3.825,4778,3.825,4898,5.575,4899,5.424,4904,4.461,4905,3.508,4924,4.033,4925,4.658,4926,4.658,4927,4.658,4928,5.236,4929,4.658,4930,4.297,4932,4.297,4933,4.297,4940,4.905,4950,5.738,4951,5.236,4952,5.738,4953,5.738,4954,5.738,4955,5.738,4956,5.738,4957,5.738,4958,5.738,4959,5.738,4960,5.738,4961,5.738]],["title/Testing/components.html",[]],["body/Testing/components.html",[0,1.845,1,0.615,5,0.452,4780,6.153,4962,8.624,4963,9.451]],["title/Testing/components.html#测试组件",[4964,4.723]],["body/Testing/components.html#测试组件",[1,0.619,4780,6.191,4965,8.678,4966,8.678,4967,8.13,4968,9.51]],["title/Testing/execute.html",[]],["body/Testing/execute.html",[1,0.514,5,0.506,7,0.652,40,0.744,41,0.776,42,0.781,43,0.839,213,5.777,214,4.358,1310,6.686,1461,5.14,1650,4.845,3347,5.263,3351,7.751,3893,6.097,3981,5.027,4969,7.204,4970,7.895]],["title/Testing/execute.html#执行测试脚本",[4971,5.176]],["body/Testing/execute.html#执行测试脚本",[1,0.511,5,0.473,7,0.648,40,0.74,41,0.772,42,0.777,43,0.834,213,5.301,214,4.335,1183,7.167,1310,6.664,1461,5.113,1650,4.83,3347,5.236,3351,7.065,3893,6.078,3970,5.37,4969,7.167,4972,7.854,4973,7.854,4974,7.854,4975,7.854,4976,7.854,4977,7.167,4978,7.854,4979,7.854,4980,7.854,4981,7.854,4982,7.854,4983,7.854]],["title/Testing/filename-conventions.html",[]],["body/Testing/filename-conventions.html",[0,1.779,1,0.593,5,0.503,1478,6.076,4932,6.825,4984,8.317,4985,8.317]],["title/Testing/filename-conventions.html#文件名约定",[4986,5.176]],["body/Testing/filename-conventions.html#文件名约定",[0,1.79,1478,6.112,3822,8.367,4984,8.367,4985,8.367,4987,9.169,4988,9.169,4989,9.169,4990,9.169,4991,9.169,4992,9.169,4993,9.169]],["title/Testing/http.html",[]],["body/Testing/http.html",[1,0.43,5,0.487,7,0.545,8,0.836,40,0.622,41,0.649,42,0.653,43,0.701,44,0.747,45,2.139,54,1.235,55,1.178,59,0.795,60,0.827,61,0.922,90,0.957,159,1.032,160,1.094,161,1.159,162,1.262,163,1.375,164,1.467,165,1.525,166,1.66,167,1.76,168,1.824,169,1.881,171,null,172,2.906,390,3.222,392,2.459,411,2.56,522,2.563,827,5.487,2291,3.527,2331,5.133,2334,5.814,2365,4.944,4217,4.782,4272,4.299,4784,4.641,4832,7.08,4994,6.025,4995,5.36,4996,6.025,4997,7.958,4998,7.958,4999,6.025,5000,6.025,5001,6.025,5002,6.025,5003,6.603,5004,6.603]],["title/Testing/http.html#测试HTTP请求",[5005,5.176]],["body/Testing/http.html#测试HTTP请求",[1,0.419,5,0.495,7,0.531,8,0.815,40,0.607,41,0.633,42,0.637,43,0.684,44,0.729,45,2.118,54,1.204,55,1.148,59,0.775,60,0.806,61,0.899,90,0.933,159,1.006,160,1.066,161,1.13,162,1.23,163,1.34,164,1.43,165,1.487,166,1.618,167,1.715,168,1.778,169,1.833,171,null,172,2.857,390,3.168,392,2.397,411,2.495,522,2.52,827,4.899,2291,2.603,2331,5.004,2334,5.716,2365,4.82,4217,4.662,4784,4.524,4832,6.961,4994,5.873,4995,5.225,4996,5.873,4997,7.825,4998,7.825,4999,5.873,5000,5.873,5001,5.873,5002,5.873,5006,6.437,5007,6.437,5008,6.437,5009,6.437,5010,6.437,5011,6.437,5012,6.437,5013,6.437,5014,6.437]],["title/Testing/injecting-dependencies.html",[]],["body/Testing/injecting-dependencies.html",[0,1.433,1,0.418,5,0.516,6,5.353,7,0.424,8,0.651,40,0.485,41,0.506,42,0.509,43,0.546,44,0.582,45,1.852,46,1.476,47,1.788,48,0.994,51,0.975,54,0.601,55,0.917,59,0.619,60,0.644,61,0.718,63,1.861,64,1.52,67,1.385,81,0.856,82,0.755,88,2.285,90,0.745,96,1.537,159,0.803,160,0.851,161,0.902,162,0.982,163,1.07,164,1.142,165,1.187,166,0.808,167,0.856,168,0.888,169,0.915,170,0.981,171,null,172,1.713,242,1.471,390,1.899,392,1.196,435,0.938,522,1.51,550,2.142,624,1.007,648,1.056,649,1.118,650,1.178,651,1.206,652,1.225,653,1.3,723,2.258,768,1.427,829,3.721,908,1.471,909,1.503,910,1.555,911,1.676,912,1.723,913,1.774,914,1.748,915,1.774,916,1.774,917,1.723,918,1.801,919,1.861,920,1.928,1287,2.611,1354,1.893,1650,3.184,1887,1.893,3979,2.004,3980,2.092,3981,2.046,3982,2.092,3983,2.197,3984,2.197,3985,2.197,4005,1.801,4380,2.258,4381,2.258,4382,2.258,4383,2.258,4384,2.258,4779,4.006,4780,3.347,4804,1.632,4807,2.928,4810,3.273,4854,7.584,4855,7.821,4856,4.691,4857,8.472,4858,2.932,4859,2.609,4860,2.932,4861,6.518,4862,2.609,4863,2.932,4864,5.215,4865,5.16,4866,4.173,4867,4.515,4868,2.609,4869,3.849,4870,2.406,4871,2.406,5015,2.406,5016,3.213,5017,2.932,5018,2.932,5019,4.691,5020,5.215,5021,5.215,5022,2.932,5023,2.609,5024,4.691,5025,3.213,5026,2.932,5027,3.213,5028,2.932,5029,2.932,5030,3.213]],["title/Testing/injecting-dependencies.html#注入依赖和DOM修改",[5031,5.176]],["body/Testing/injecting-dependencies.html#注入依赖和DOM修改",[1,0.319,5,0.511,7,0.404,8,0.62,40,0.461,41,0.481,42,0.484,43,0.52,44,0.554,45,1.806,46,1.124,48,0.935,51,0.917,54,0.566,55,0.873,59,0.589,60,0.613,61,0.683,64,1.43,67,1.304,81,0.806,82,0.71,88,2.193,90,0.71,96,1.446,159,0.765,160,0.811,161,0.859,162,0.935,163,1.019,164,1.088,165,1.13,166,0.76,167,0.806,168,0.835,169,0.861,170,0.923,171,null,172,1.631,390,1.808,392,1.126,405,1.342,411,1.897,414,2.454,435,0.883,522,1.438,550,2.015,624,0.948,648,0.994,649,1.052,650,1.108,651,1.135,652,1.153,653,1.223,665,2.35,695,1.781,768,1.342,829,3.571,908,1.384,909,1.414,910,1.463,911,1.577,912,1.621,913,1.669,914,1.644,915,1.669,916,1.669,917,1.621,918,1.695,919,1.751,920,1.814,1018,2.585,1287,1.536,1354,1.781,1887,1.781,2157,3.973,3970,2.067,3979,1.885,3980,1.968,3981,1.925,3982,1.968,3983,2.067,3984,2.067,3985,2.067,4005,1.695,4380,2.125,4381,2.125,4382,2.125,4383,2.125,4384,2.125,4779,3.845,4780,1.968,4804,1.536,4807,2.788,4810,3.116,4824,2.264,4830,2.19,4854,7.414,4855,7.66,4857,7.414,4859,2.454,4861,6.32,4862,2.454,4864,5.006,4865,4.981,4866,3.973,4867,4.334,4868,2.454,4869,3.665,4870,2.264,4871,2.264,4880,4.466,4881,2.759,4882,6.467,4883,2.759,4884,2.759,4885,2.759,4886,4.794,4887,2.585,5015,2.264,5017,2.759,5018,2.759,5019,4.466,5020,5.006,5021,5.006,5023,2.454,5024,4.466,5026,2.759,5028,2.759,5029,2.759,5032,3.023,5033,3.023,5034,3.023,5035,3.023,5036,3.023,5037,3.023,5038,3.023,5039,3.023,5040,3.023,5041,3.023,5042,3.023,5043,3.023,5044,3.023,5045,3.023,5046,3.023,5047,3.023,5048,3.023,5049,3.023,5050,3.023,5051,2.759,5052,2.585,5053,3.023,5054,3.023,5055,3.023,5056,3.023,5057,3.023,5058,3.023,5059,3.023,5060,3.023,5061,3.023,5062,3.023,5063,3.023,5064,3.023,5065,3.023,5066,3.023,5067,2.759,5068,3.023,5069,3.023,5070,3.023,5071,3.023,5072,3.023,5073,3.023,5074,3.023,5075,3.023,5076,3.023,5077,3.023,5078,3.023,5079,3.023,5080,3.023,5081,3.023,5082,3.023,5083,3.023,5084,3.023,5085,3.023,5086,3.023,5087,3.023,5088,3.023]],["title/Testing/json-xhr.html",[]],["body/Testing/json-xhr.html",[5,0.497,827,4.576,4775,6.331,5089,9.007,5090,9.007,5091,9.007,5092,7.7,5093,7.312,5094,9.007,5095,8.219]],["title/Testing/json-xhr.html#测试JSONP和XHR后端",[5096,5.176]],["body/Testing/json-xhr.html#测试JSONP和XHR后端",[4775,6.368,5093,7.355,5095,8.268,5097,9.061,5098,9.061,5099,9.061,5100,9.061,5101,9.061,5102,9.061,5103,9.061,5104,9.061,5105,9.061,5106,9.061,5107,9.061]],["title/Testing/karma-config.html",[]],["body/Testing/karma-config.html",[0,0.481,1,0.57,5,0.518,7,0.746,8,0.676,18,3.824,25,1.166,40,0.793,41,0.789,42,0.793,43,0.852,44,0.854,54,0.461,59,0.84,60,0.873,61,0.746,64,3.298,83,1.34,90,0.775,159,0.835,160,0.885,161,0.938,162,1.021,163,1.112,164,1.187,165,1.234,166,1.04,167,0.657,168,0.681,178,1.845,183,1.268,195,4.443,204,2.021,205,0.833,261,0.997,269,1.732,283,4.107,435,0.72,437,3.097,453,1.643,517,0.845,522,1.215,755,3.266,1306,4.045,1311,3.87,1467,1.382,1478,1.643,1648,2.437,1651,1.452,1677,1.643,1776,2.001,1921,2.107,2214,1.785,2382,1.643,2563,3.402,2668,1.685,2716,2.878,2720,1.732,2994,2.001,3105,3.653,3157,1.605,3349,1.452,3351,6.581,3357,2.001,3359,4.337,3383,1.916,3385,2.107,3394,4.337,3395,3.535,4005,1.382,4174,1.845,4414,1.732,4415,2.001,4416,2.249,4417,2.249,4423,2.107,5108,5.659,5109,3.774,5110,2.249,5111,4.001,5112,4.875,5113,8.246,5114,5.709,5115,3.774,5116,4.337,5117,2.107,5118,3.774,5119,3.774,5120,3.774,5121,3.774,5122,3.774,5123,2.249,5124,2.465,5125,6.361,5126,2.249,5127,2.249,5128,2.249,5129,3.774,5130,2.249,5131,2.249,5132,2.465,5133,3.774,5134,2.249,5135,2.465,5136,3.774,5137,2.465,5138,2.249,5139,2.249,5140,2.249,5141,2.249,5142,3.774,5143,2.249,5144,2.465,5145,2.465,5146,2.249,5147,2.249,5148,2.249,5149,2.249,5150,2.249,5151,2.249,5152,2.249,5153,2.465,5154,2.465,5155,2.465,5156,2.249,5157,2.249,5158,2.107,5159,2.249,5160,2.465,5161,2.465,5162,2.249,5163,2.249,5164,2.465,5165,2.249,5166,2.249,5167,3.774,5168,2.465,5169,2.465,5170,2.249,5171,2.465,5172,2.465,5173,2.465]],["title/Testing/karma-config.html#Karma-配置",[3166,2.847,3351,2.338]],["body/Testing/karma-config.html#Karma-配置",[3351,6.262,3383,7.303,3394,7.626,5174,9.394,5175,9.394,5176,9.394,5177,9.394,5178,9.394]],["title/Testing/karma-config.html#概述",[5179,4.723]],["body/Testing/karma-config.html#概述",[1,0.572,5,0.515,7,0.748,8,0.681,18,3.848,40,0.796,41,0.792,42,0.797,43,0.856,44,0.858,54,0.466,59,0.844,60,0.878,61,0.751,64,3.316,83,1.353,90,0.78,159,0.841,160,0.891,161,0.944,162,1.028,163,1.12,164,1.196,165,1.243,166,1.048,167,0.663,168,0.687,178,1.863,183,1.281,195,4.457,204,2.035,205,0.841,261,1.007,405,1.851,435,0.727,437,1.863,453,1.659,517,0.853,522,1.225,755,3.289,1306,3.374,1311,3.897,1517,1.585,1648,2.456,1921,2.127,2214,1.802,2382,1.659,2563,3.426,2668,1.702,2716,2.4,2720,1.749,2742,2.127,2841,2.271,2994,2.02,3105,1.702,3157,1.62,3349,1.466,3351,1.659,3357,2.02,3359,4.368,3385,2.127,3394,2.02,3395,3.564,4005,1.395,4174,1.863,4288,2.271,4414,1.749,4415,2.02,4423,2.127,4429,2.271,4430,2.271,4431,2.271,4432,2.271,4433,2.271,4850,2.271,5108,3.385,5109,3.804,5110,2.271,5111,4.029,5112,4.91,5113,8.275,5114,5.744,5115,3.804,5116,2.02,5118,3.804,5119,3.804,5120,3.804,5121,3.804,5122,3.804,5123,2.271,5125,6.92,5126,2.271,5127,2.271,5128,2.271,5129,3.804,5130,3.804,5131,2.271,5133,4.91,5134,2.271,5136,3.804,5138,2.271,5139,2.271,5140,2.271,5141,2.271,5142,3.804,5143,2.271,5146,2.271,5147,2.271,5148,2.271,5149,2.271,5150,2.271,5151,2.271,5152,2.271,5156,2.271,5157,2.271,5159,2.271,5162,2.271,5163,2.271,5165,4.91,5166,3.804,5167,3.804,5170,2.271,5180,2.489,5181,2.489,5182,2.489,5183,4.169,5184,2.489,5185,2.489,5186,2.489,5187,2.489,5188,2.489,5189,5.744,5190,2.489,5191,2.489,5192,2.489,5193,2.489,5194,2.489,5195,2.489,5196,2.489,5197,2.489,5198,2.489,5199,2.489,5200,2.489,5201,2.489,5202,2.489,5203,2.489,5204,2.489,5205,2.489,5206,2.489,5207,2.489,5208,2.489,5209,2.489,5210,2.489,5211,2.489,5212,2.489,5213,2.489,5214,2.489,5215,2.489,5216,2.489,5217,2.489,5218,2.489,5219,2.489,5220,2.489,5221,2.489,5222,2.489,5223,2.489,5224,2.489,5225,2.489,5226,2.489,5227,2.489,5228,2.489,5229,2.489,5230,2.489,5231,2.489,5232,2.489,5233,2.489,5234,2.489,5235,2.489,5236,2.489,5237,2.489,5238,2.489,5239,2.489,5240,2.489,5241,2.489,5242,2.489]],["title/Testing/karma-config.html#完成配置",[5243,5.176]],["body/Testing/karma-config.html#完成配置",[0,1.868,417,3.904,2716,3.649,5244,9.569,5245,9.569]],["title/Testing/karma-config.html#其他资源",[5246,5.176]],["body/Testing/karma-config.html#其他资源",[417,3.88,2716,3.627,5247,9.51,5248,9.51,5249,9.51,5250,9.51]],["title/Testing/mockbackend.html",[]],["body/Testing/mockbackend.html",[0,1.251,1,0.334,5,0.515,7,0.423,8,0.649,40,0.302,41,0.315,42,0.317,43,0.34,44,0.362,45,1.65,57,2.488,59,0.385,60,0.401,61,0.447,81,0.853,82,0.752,88,1.822,90,0.464,120,2.038,159,0.5,160,0.53,161,0.562,162,0.611,163,0.666,164,0.711,165,0.739,166,0.804,167,0.853,168,0.884,169,0.911,170,0.977,204,1.211,330,2.133,331,1.585,390,2.367,435,1.496,545,1.885,550,2.133,624,1.003,648,1.052,649,1.113,650,1.173,651,1.201,652,1.22,653,1.294,723,2.249,764,2.083,768,1.421,827,3.255,908,1.465,909,1.497,910,1.549,911,1.669,912,1.715,913,1.766,914,1.74,915,1.766,916,1.766,917,1.715,918,1.794,919,1.853,920,1.92,1268,2.598,1354,1.885,1770,3.262,2255,4.797,2259,1.626,2283,2.488,2332,1.794,2359,2.318,3228,2.249,3839,1.956,3854,2.488,3979,1.995,3980,2.083,3981,2.038,3982,2.083,3983,2.188,3984,2.188,3985,2.188,4018,2.396,4272,2.083,4380,2.249,4381,2.249,4382,2.249,4383,2.249,4384,2.249,4385,2.396,4386,2.396,4387,2.396,4388,2.396,4389,2.396,4390,2.396,4391,2.396,4392,2.396,4393,2.396,4394,2.396,4395,2.396,4396,2.396,4397,2.396,4398,2.396,4399,2.598,4400,2.598,4401,2.598,4402,2.598,4403,2.598,4404,2.598,4405,2.598,4406,2.598,4600,2.396,4775,6.309,4777,2.598,4778,4.882,4779,1.995,4780,2.083,4781,3.836,4782,5.946,4784,7.214,4785,2.92,4786,4.159,4787,2.598,4788,4.159,4789,2.598,4790,2.598,4791,2.598,4792,2.598,4793,2.598,4794,2.598,4795,2.598,4796,2.598,4797,2.598,4798,2.598,4799,2.598,4800,2.598,4801,2.396,4802,2.598,4803,2.598,4804,1.626,4805,2.92,4807,1.823,4810,2.038,4811,2.598,4812,2.598,4813,2.92,4814,2.92,4815,2.598,4817,2.598,4853,2.598,5093,5.946,5251,3.2,5252,2.92,5253,2.92,5254,2.92,5255,2.92,5256,2.92,5257,2.92,5258,2.92,5259,2.92,5260,2.92,5261,2.92,5262,2.92,5263,6.683,5264,3.2,5265,2.92,5266,2.92,5267,2.92,5268,2.92,5269,2.92,5270,2.92,5271,5.123,5272,2.92,5273,3.2,5274,2.92,5275,3.2,5276,3.2,5277,3.2,5278,2.92,5279,2.92,5280,2.92,5281,3.2,5282,2.92]],["title/Testing/mockbackend.html#使用MockBackend测试HTTP请求",[5283,5.176]],["body/Testing/mockbackend.html#使用MockBackend测试HTTP请求",[0,0.602,1,0.201,5,0.514,7,0.255,8,0.63,40,0.291,41,0.303,42,0.305,43,0.328,44,0.349,45,1.62,57,2.398,59,0.371,60,0.386,61,0.431,81,0.822,82,0.724,88,1.769,90,0.447,120,1.964,159,0.482,160,0.511,161,0.541,162,0.589,163,0.642,164,0.685,165,0.712,166,0.775,167,0.822,168,0.852,169,0.878,170,0.942,204,1.167,331,1.539,390,2.309,435,1.452,550,2.056,624,0.967,648,1.014,649,1.073,650,1.131,651,1.157,652,1.176,653,1.247,764,2.008,768,1.369,908,1.412,909,1.443,910,1.492,911,1.608,912,1.653,913,1.702,914,1.677,915,1.702,916,1.702,917,1.653,918,1.729,919,1.786,920,1.85,1268,2.504,1354,1.817,1770,3.167,2157,2.504,2255,4.68,2259,1.567,2283,2.398,2332,1.729,2359,2.234,3839,1.885,3854,2.398,3979,1.923,3980,2.008,3981,1.964,3982,2.008,3983,2.109,3984,2.109,3985,2.109,4217,2.234,4380,2.168,4381,2.168,4382,2.168,4383,2.168,4384,2.168,4385,2.309,4386,2.309,4387,2.309,4388,2.309,4389,2.309,4390,2.309,4391,2.309,4392,2.309,4393,2.309,4394,2.309,4395,2.309,4396,2.309,4397,2.309,4398,2.309,4399,2.504,4400,2.504,4401,2.504,4402,2.504,4403,2.504,4404,2.504,4405,2.504,4406,2.504,4600,2.309,4681,2.636,4775,6.216,4777,2.504,4778,4.78,4779,1.923,4781,3.724,4782,5.074,4784,7.142,4786,4.038,4787,2.504,4788,4.038,4789,2.504,4790,2.504,4791,2.504,4792,2.504,4793,2.504,4794,2.504,4795,2.504,4796,2.504,4797,2.504,4798,2.504,4799,2.504,4800,2.504,4801,2.309,4802,2.504,4803,2.504,4804,1.567,4807,1.757,4810,1.964,4811,2.504,4812,2.504,4815,2.504,4817,2.504,4824,2.309,4827,2.814,4828,2.814,4830,3.602,4831,2.814,4832,2.504,4833,2.814,4834,2.814,4853,2.504,5067,2.814,5093,5.821,5252,2.814,5253,2.814,5254,2.814,5255,2.814,5256,2.814,5257,2.814,5258,2.814,5259,2.814,5260,2.814,5261,2.814,5262,2.814,5263,6.543,5265,2.814,5266,2.814,5267,2.814,5268,2.814,5269,2.814,5270,2.814,5272,2.814,5274,2.814,5278,2.814,5279,2.814,5280,2.814,5282,2.814,5284,3.084,5285,3.084,5286,3.084,5287,3.084,5288,3.084,5289,3.084,5290,3.084,5291,3.084,5292,3.084,5293,4.974,5294,3.084,5295,3.084,5296,3.084,5297,3.084,5298,3.084,5299,3.084,5300,3.084,5301,3.084,5302,3.084,5303,3.084,5304,3.084,5305,3.084,5306,3.084,5307,3.084,5308,3.084,5309,3.084,5310,3.084,5311,3.084,5312,3.084,5313,3.084,5314,3.084,5315,3.084,5316,3.084,5317,3.084,5318,3.084,5319,3.084]],["title/Testing/overriding.html",[]],["body/Testing/overriding.html",[1,0.45,5,0.51,6,3.153,7,0.571,8,0.875,40,0.652,41,0.68,42,0.684,43,0.734,44,0.782,45,1.851,46,1.588,47,2.404,48,1.463,51,2.097,54,0.885,55,0.844,59,0.833,60,0.866,61,0.965,67,2.039,81,1.26,82,1.111,88,2.458,90,1.002,96,2.263,159,1.08,160,1.145,161,1.214,162,1.321,163,1.439,164,1.536,165,1.597,166,1.189,167,1.26,168,1.307,169,1.347,170,1.444,172,2.304,242,4.115,295,3.425,390,2.554,435,1.381,624,1.482,648,1.554,649,1.645,650,1.734,651,1.775,652,1.804,653,1.913,768,2.1,829,4.003,908,2.166,909,2.213,910,2.289,911,2.466,912,2.535,1614,6.359,1650,3.426,1887,2.787,2332,3.875,2777,3.677,4779,4.311,4780,3.079,4804,2.403,4807,2.694,4810,3.012,4865,4.859,4867,4.859,4869,3.541,4870,3.541,4871,3.541,5015,6.73,5320,4.316,5321,4.316,5322,4.316,5323,4.316,5324,4.316,5325,3.839,5326,3.839,5327,4.316,5328,4.316,5329,4.73,5330,4.316,5331,4.316,5332,4.316]],["title/Testing/overriding.html#覆盖测试的依赖关系",[5333,5.176]],["body/Testing/overriding.html#覆盖测试的依赖关系",[1,0.436,5,0.514,7,0.553,8,0.848,40,0.632,41,0.659,42,0.663,43,0.712,44,0.758,45,1.814,46,1.539,48,1.402,51,2.033,54,0.848,55,0.809,59,0.807,60,0.839,61,0.936,67,1.955,81,1.208,82,1.065,88,2.383,90,0.972,96,2.169,159,1.047,160,1.11,161,1.176,162,1.281,163,1.395,164,1.489,165,1.548,166,1.14,167,1.208,168,1.252,169,1.291,170,1.384,172,2.233,242,4.033,390,2.476,411,2.598,435,1.324,624,1.421,648,1.49,649,1.577,650,1.662,651,1.701,652,1.729,653,1.834,768,2.013,829,3.881,908,2.076,909,2.121,910,2.194,911,2.364,912,2.43,1614,4.267,1887,2.671,2054,3.022,2332,3.757,4779,4.179,4804,2.303,4807,2.582,4810,2.887,4824,3.395,4830,3.284,4865,4.71,4867,4.71,4869,3.395,4870,3.395,4871,3.395,4886,5.21,5015,5.969,5320,4.137,5321,4.137,5322,4.137,5323,4.137,5325,3.681,5326,3.681,5328,4.137,5330,4.137,5331,4.137,5332,4.137,5334,4.534,5335,4.534,5336,4.137,5337,8.036,5338,4.534,5339,4.137,5340,4.534,5341,4.534,5342,4.534]],["title/Testing/reducers.html",[]],["body/Testing/reducers.html",[1,0.465,5,0.515,7,0.837,8,0.904,40,0.673,41,0.702,42,0.706,43,0.758,44,0.808,45,1.47,54,0.925,59,0.86,60,0.894,61,0.69,90,0.717,159,0.772,160,0.819,161,0.868,162,0.945,163,1.029,164,1.098,165,1.142,166,1.243,167,1.317,168,1.365,169,1.408,170,1.509,204,3.471,261,2.887,283,2.912,318,5.304,348,4.206,517,1.695,522,2.462,624,1.549,648,1.624,649,1.719,650,1.812,651,1.855,862,3.474,1033,4.066,1129,3.022,1469,4.34,1622,3.683,2285,5.889,2421,4.603,2716,3.195,3105,3.38,4010,5.026,4804,2.511,4899,6.274,4914,3.701,4924,6.449,5343,4.943,5344,4.013,5345,4.013,5346,6.274]],["title/Testing/reducers.html#测试-Reducers",[1469,1.659,5052,2.998]],["body/Testing/reducers.html#测试-Reducers",[1,0.452,5,0.515,7,0.826,8,0.879,40,0.655,41,0.683,42,0.687,43,0.738,44,0.786,45,1.43,54,0.89,59,0.836,60,0.869,61,0.665,90,0.69,159,0.744,160,0.788,161,0.835,162,0.909,163,0.991,164,1.058,165,1.099,166,1.196,167,1.268,168,1.315,169,1.355,170,1.453,204,3.41,261,2.809,283,2.804,318,4.959,348,4.091,517,1.631,522,2.409,624,1.492,648,1.564,649,1.655,650,1.745,651,1.786,862,3.345,1033,3.955,1129,2.909,1469,2.251,1622,3.605,2285,5.763,2421,4.264,2716,1.815,3105,3.254,4010,4.919,4804,2.418,4830,5.938,4899,5.606,4914,3.563,4924,5.763,4942,3.863,4943,4.068,5344,3.863,5346,6.14,5347,4.759,5348,4.759,5349,4.759,5350,4.759,5351,4.759,5352,4.759,5353,4.759,5354,4.759,5355,4.759,5356,4.759,5357,4.759,5358,4.759,5359,4.759,5360,4.759]],["title/Testing/redux.html",[]],["body/Testing/redux.html",[5,0.45,1469,4.443,1622,4.13,2716,4.485]],["title/Testing/redux.html#测试-Redux",[2716,1.337,5052,2.998]],["body/Testing/redux.html#测试-Redux",[1469,4.499,1622,4.181,5361,9.51,5362,9.51,5363,9.51,5364,9.51]],["title/Testing/refactor.html",[]],["body/Testing/refactor.html",[5,0.492]],["title/Testing/refactor.html#重构难以测试的代码",[5365,5.176]],["body/Testing/refactor.html#重构难以测试的代码",[5366,9.69,5367,9.69,5368,9.69]],["title/Testing/services.html",[]],["body/Testing/services.html",[0,1.856,1,0.619,5,0.49]],["title/Testing/services.html#测试服务",[5369,5.176]],["body/Testing/services.html#测试服务",[2017,8.732,5370,9.569,5371,9.569,5372,9.569,5373,9.569]],["title/Testing/setup.html",[]],["body/Testing/setup.html",[5,0.394,283,5.603,2716,3.627,3105,6.503,5374,9.51,5375,9.51]],["title/Testing/setup.html#测试设置",[5376,5.176]],["body/Testing/setup.html#测试设置",[283,5.638,2716,3.649,3105,6.543,5377,9.569,5378,9.569]],["title/Testing/simple-actions.html",[]],["body/Testing/simple-actions.html",[1,0.396,5,0.511,7,0.503,8,0.771,40,0.574,41,0.599,42,0.603,43,0.647,44,0.689,45,1.701,47,1.388,54,1.381,55,1.317,59,0.733,60,0.762,61,0.85,90,0.883,159,0.951,160,1.009,161,1.069,162,1.164,163,1.268,164,1.353,165,0.922,166,1.003,167,1.064,168,1.103,169,1.137,170,1.219,171,null,261,3.341,318,3.018,324,3.877,331,2.284,390,2.25,392,1.486,435,2.412,624,1.251,644,2.805,648,1.312,649,1.388,650,1.463,651,1.498,652,1.522,653,1.614,723,4.28,768,1.772,908,1.828,909,1.867,910,1.931,911,2.081,912,2.139,913,2.203,914,2.17,915,2.203,916,2.203,917,2.139,918,2.237,919,2.311,920,2.394,937,2.891,938,2.081,1119,2.541,1129,2.44,1228,2.028,1342,2.541,1354,2.351,1622,4.122,1650,3.018,2716,3.15,2719,3.361,2764,2.729,3979,2.489,3980,2.598,3981,2.541,3982,2.598,4712,5.93,4804,2.028,4807,2.273,4898,6.854,4899,6.411,4904,4.734,4905,4.514,4906,6.706,4908,3.642,4912,3.24,4914,2.988,4916,4.943,4919,4.943,4921,4.943,4922,4.943,4924,6.59,4933,2.988,5379,4.56,5380,3.24,5381,3.642,5382,3.642,5383,3.991]],["title/Testing/simple-actions.html#测试简单的-Action",[1622,1.542,5384,3.507]],["body/Testing/simple-actions.html#测试简单的-Action",[1,0.379,5,0.516,7,0.481,8,0.737,40,0.549,41,0.573,42,0.576,43,0.619,44,0.659,45,1.65,54,1.332,55,1.27,59,0.701,60,0.729,61,0.813,90,0.844,159,0.91,160,0.964,161,1.022,162,1.113,163,1.212,164,1.294,165,0.87,166,0.947,167,1.004,168,1.04,169,1.073,170,1.15,171,null,261,3.241,324,2.398,331,2.203,390,2.151,392,1.402,411,1.46,435,2.34,624,1.18,644,2.647,648,1.238,649,1.31,650,1.38,651,1.413,652,1.436,653,1.523,723,4.093,768,1.672,908,1.724,909,1.762,910,1.822,911,1.964,912,2.019,913,2.079,914,2.048,915,2.079,916,2.079,917,2.019,918,2.111,919,2.181,920,2.259,937,2.727,938,1.964,1119,2.398,1129,2.302,1228,1.913,1342,2.398,1354,2.219,1622,3.13,1650,2.886,2716,1.436,2764,2.575,3979,2.348,3980,2.452,3981,2.398,3982,2.452,4226,3.882,4227,3.882,4712,4.747,4804,1.913,4807,2.145,4898,6.713,4899,5.925,4904,4.527,4905,4.353,4906,6.505,4912,3.057,4914,2.82,4916,4.728,4919,4.728,4921,4.728,4922,4.728,4924,6.09,4933,2.82,4940,3.219,4942,3.057,4943,3.219,4944,3.436,4947,5.314,4951,3.436,5379,2.82,5380,3.057,5381,3.436,5382,3.436,5385,3.766,5386,3.766,5387,3.766,5388,5.824,5389,3.766,5390,3.766]],["title/Testing/simple-test.html",[]],["body/Testing/simple-test.html",[1,0.506,5,0.518,7,0.642,40,0.733,41,1.038,42,0.769,162,1.486,557,5.631,1131,4.848,1650,3.853,4010,5.81,4804,4.92,4932,5.821,5346,5.821,5391,7.775,5392,7.094]],["title/Testing/simple-test.html#简单的测试",[5393,5.176]],["body/Testing/simple-test.html#简单的测试",[1,0.504,5,0.505,7,0.638,40,0.729,41,1.035,42,0.765,162,1.478,2157,6.279,4010,5.792,4804,4.905,4886,6.013,5346,5.792,5392,7.058,5394,7.735,5395,6.612,5396,7.735,5397,6.612,5398,7.735,5399,7.735,5400,7.735,5401,7.735,5402,7.735,5403,7.735,5404,7.735,5405,7.735,5406,7.735,5407,7.735,5408,7.735]],["title/Testing/strategies.html",[]],["body/Testing/strategies.html",[5,0.456,5409,9.63,5410,9.63]],["title/Testing/strategies.html#服务测试策略",[5411,5.176]],["body/Testing/strategies.html#服务测试策略",[5412,9.814]],["title/Testing/strategies.html#注入依赖关系",[5413,5.176]],["body/Testing/strategies.html#注入依赖关系",[5414,9.814]],["title/Testing/test-components.html",[]],["body/Testing/test-components.html",[0,1.822,1,0.608,5,0.487,4780,6.078,4962,8.519,5415,9.336]],["title/Testing/test-components.html#测试组件",[4964,4.723]],["body/Testing/test-components.html#测试组件",[1,0.612,5,0.39,4780,6.115,4965,8.571,4966,8.571,4967,8.03,5416,9.394,5417,9.394]],["title/Testing/testbed-configuration.html",[]],["body/Testing/testbed-configuration.html",[1,0.445,5,0.512,7,0.564,8,0.865,40,0.644,41,0.672,42,0.676,43,0.726,44,0.774,45,2.114,46,1.07,54,0.871,59,0.823,60,0.856,61,0.955,63,2.697,64,2.203,69,2.947,82,1.094,88,2.431,90,0.991,159,1.068,160,1.132,161,1.2,162,1.306,163,1.423,164,1.519,165,1.579,166,1.719,167,1.822,168,1.287,169,1.327,170,1.422,195,2.228,283,4.028,435,2.365,449,3.105,522,1.369,624,1.46,648,1.531,649,1.62,650,1.707,651,1.748,652,1.776,896,3.488,1228,2.366,1564,2.571,1708,4.263,2716,1.776,3105,3.185,4779,6.984,4780,4.45,4804,2.366,4807,2.653,4810,2.966,4865,4.804,4867,3.274,5020,5.549,5021,5.549,5022,4.25,5023,5.549,5418,6.238,5419,6.238,5420,6.238,5421,7.39,5422,4.25,5423,4.25,5424,4.25,5425,4.25,5426,4.25,5427,4.658,5428,4.658,5429,5.119,5430,4.25,5431,4.25]],["title/Testing/testbed-configuration.html#TestBed-配置（可选）",[4779,2.187,5432,3.507]],["body/Testing/testbed-configuration.html#TestBed-配置（可选）",[1,0.429,5,0.515,7,0.544,8,0.834,40,0.621,41,0.648,42,0.652,43,0.7,44,0.745,45,2.08,54,0.829,59,0.793,60,0.825,61,0.92,64,2.095,69,2.84,88,2.342,90,0.955,159,1.029,160,1.091,161,1.156,162,1.259,163,1.371,164,1.464,165,1.521,166,1.656,167,1.755,168,1.224,169,1.261,170,1.352,195,2.119,435,2.296,449,2.953,522,1.301,624,1.388,648,1.456,649,1.541,650,1.624,651,1.662,652,1.689,695,2.61,1015,3.316,1039,3.595,1228,2.25,1564,2.445,1708,4.107,2716,1.689,4779,6.729,4804,2.25,4807,2.523,4810,2.82,4824,4.932,4865,4.629,4867,3.113,5020,5.347,5021,5.347,5023,5.347,5051,4.042,5189,4.042,5418,6.01,5419,6.01,5420,6.01,5421,6.01,5422,4.042,5423,4.042,5424,4.042,5425,4.042,5426,4.042,5429,4.932,5430,4.042,5431,4.042,5433,4.429,5434,4.429,5435,4.429,5436,4.429,5437,4.429,5438,4.429,5439,4.429,5440,4.429,5441,4.429,5442,4.429,5443,4.429,5444,4.429,5445,4.429,5446,4.429]],["title/Testing/testing.html",[]],["body/Testing/testing.html",[5,0.502,5447,9.394,5448,9.394]],["title/Testing/testing.html#TDD测试",[5449,5.176]],["body/Testing/testing.html#TDD测试",[5450,9.451,5451,9.451,5452,9.451,5453,9.451,5454,9.451,5455,9.451,5456,9.451]],["title/Testing/toolchain.html",[]],["body/Testing/toolchain.html",[0,1.927,5,0.502,197,3.56,1677,5.345,3351,7.13,4932,7.392,5117,6.854,5158,8.439,5457,7.317,5458,9.008,5459,8.439,5460,8.018,5461,8.018,5462,8.018,5463,9.872,5464,8.018,5465,8.018,5466,7.317,5467,8.018]],["title/Testing/toolchain.html#测试工具链",[5468,5.176]],["body/Testing/toolchain.html#测试工具链",[1677,5.373,3351,6.602,4932,7.416,5117,6.89,5158,8.466,5457,7.355,5458,9.037,5459,8.466,5466,7.355,5469,8.061,5470,8.061,5471,8.061,5472,8.061,5473,8.061,5474,8.061,5475,8.061,5476,8.061,5477,8.061,5478,8.061,5479,8.061,5480,8.061,5481,8.061,5482,8.061,5483,8.061,5484,8.061,5485,8.061,5486,8.061,5487,8.061,5488,8.061,5489,8.061]],["title/Testing/typings.html",[]],["body/Testing/typings.html",[5,0.497,82,2.478,261,4.267,283,6.217,2716,4.024,5490,8.955,5491,8.171]],["title/Testing/typings.html#Typings",[261,2.093]],["body/Testing/typings.html#Typings",[82,2.487,261,3.643,283,6.238,2716,4.038,3970,6.159,5491,8.219,5492,9.007,5493,9.007,5494,9.007,5495,9.007,5496,9.007,5497,9.007]],["title/Testing/using-chai.html",[]],["body/Testing/using-chai.html",[1,0.473,5,0.509,7,0.599,8,0.919,25,3.434,40,0.684,41,0.714,42,0.718,43,0.771,44,0.822,59,0.874,60,0.909,61,1.014,90,1.053,159,1.134,160,1.202,162,1.387,1608,5.199,2392,4.038,4010,6.132,5395,6.206,5397,6.206,5459,7.929,5498,7.259,5499,7.259,5500,7.259,5501,7.259,5502,6.624,5503,6.624,5504,6.624,5505,6.624,5506,6.624,5507,6.624,5508,6.624,5509,6.624]],["title/Testing/using-chai.html#使用Chai",[5510,5.176]],["body/Testing/using-chai.html#使用Chai",[1,0.47,5,0.497,7,0.596,8,0.915,40,0.681,41,0.711,42,0.715,43,0.767,44,0.818,59,0.87,60,0.905,61,1.009,90,1.048,159,1.129,160,1.197,162,1.381,405,4.106,417,3.773,1608,5.184,2392,4.026,4010,6.118,5395,6.176,5397,6.176,5502,6.593,5503,6.593,5504,6.593,5505,6.593,5506,6.593,5507,6.593,5508,6.593,5509,6.593,5511,7.225,5512,7.225,5513,7.225,5514,7.225,5515,7.225,5516,7.225,5517,7.225,5518,7.225,5519,7.225,5520,7.225]],["title/Testing/verify.html",[]],["body/Testing/verify.html",[0,1.356,1,0.587,5,0.518,7,0.573,8,0.879,40,0.655,41,0.683,42,0.687,43,0.738,44,0.786,45,1.43,46,1.595,47,1.655,48,1.472,49,2.606,51,1.444,54,0.89,55,0.849,59,0.836,60,0.869,61,0.97,81,1.268,82,1.118,90,1.007,96,2.277,159,1.085,160,1.15,161,1.219,162,1.327,163,1.446,164,1.543,165,1.604,166,1.196,171,null,172,2.314,331,2.148,1614,6.58,1650,4.063,2332,2.668,2421,2.251,2777,3.7,4804,2.418,4807,3.955,5015,7.931,5324,4.342,5325,3.863,5326,3.863,5327,6.337,5521,8.225,5522,8.746,5523,4.342,5524,4.342,5525,4.342,5526,6.337,5527,4.342,5528,4.342]],["title/Testing/verify.html#验证方法和属性",[5529,5.176]],["body/Testing/verify.html#验证方法和属性",[1,0.44,5,0.511,7,0.558,8,0.856,40,0.637,41,0.665,42,0.669,43,0.718,44,0.765,45,1.392,46,1.553,48,1.419,49,2.537,51,1.392,54,0.858,55,0.818,59,0.814,60,0.846,61,0.944,81,1.223,82,1.078,90,0.98,96,2.195,159,1.056,160,1.12,161,1.187,162,1.292,163,1.407,164,1.502,165,1.562,166,1.153,171,null,172,2.253,331,2.091,405,2.037,411,1.779,414,3.725,417,1.872,1614,5.64,2054,5.351,2332,2.572,2421,2.17,4804,2.331,4807,3.851,4830,4.896,4886,3.567,5015,7.85,5325,3.725,5326,3.725,5336,4.187,5337,7.325,5339,4.187,5521,7.325,5522,8.617,5523,4.187,5524,4.187,5525,4.187,5526,6.169,5527,4.187,5528,4.187,5530,4.588,5531,4.588,5532,4.588,5533,4.588,5534,4.588,5535,4.588,5536,4.588,5537,4.588,5538,4.588,5539,4.588,5540,4.588,5541,4.588,5542,4.588,5543,4.588,5544,6.761,5545,4.588,5546,4.588,5547,4.588,5548,4.588,5549,4.588,5550,4.588,5551,4.588,5552,4.588,5553,4.588,5554,4.588,5555,4.588,5556,4.588,5557,4.588,5558,4.588]],["title/a11y/a11y.html",[]],["body/a11y/a11y.html",[0,2.11,1,0.743,5,0.448,372,6.078,5559,9.336]],["title/a11y/a11y.html#Angular-2-中的-Web-无障碍",[0,0.348,1,0.116,372,1.16,3175,1.447,5560,1.782]],["body/a11y/a11y.html#Angular-2-中的-Web-无障碍",[3093,8.787,3094,8.787,3095,8.787,5561,9.63]],["title/a11y/key-concerns.html",[]],["body/a11y/key-concerns.html",[5,0.471,372,6.989,2441,6.307,2704,7.488,5562,8.417,5563,8.417,5564,8.417,5565,8.417]],["title/a11y/key-concerns.html#无障碍Web应用的关键",[5566,5.176]],["body/a11y/key-concerns.html#无障碍Web应用的关键",[2441,6.345,2704,7.533,5562,8.468,5563,8.468,5564,8.468,5565,8.468,5567,9.28,5568,9.28,5569,9.28,5570,9.28]],["title/advanced-components/access_child_components.html",[]],["body/advanced-components/access_child_components.html",[0,1.459,1,0.531,5,0.509,7,0.752,8,0.831,40,0.769,41,0.645,42,0.649,43,0.697,44,0.743,45,1.54,46,1.874,47,1.834,48,2.03,49,4.156,50,2.679,51,1.991,54,1.228,55,1.17,56,2.061,59,0.79,60,0.822,61,0.916,81,2.174,82,1.756,90,0.952,159,1.025,160,1.087,161,1.152,162,1.254,163,1.098,164,1.172,165,1.218,166,0.834,167,0.884,168,0.916,169,0.945,170,1.013,204,1.255,207,3.288,220,3.139,240,1.459,349,3.054,359,2.212,624,1.04,648,1.09,649,1.154,650,1.216,651,1.245,896,2.484,2509,3.288,2682,4.099,2736,7.471,2737,7.29,2763,3.706,2960,3.003,5571,10.51,5572,5.273,5573,3.027,5574,3.027,5575,3.318,5576,3.027,5577,3.027,5578,3.027,5579,4.812,5580,6.822,5581,7.476,5582,5.273,5583,7.393,5584,5.273,5585,4.812,5586,5.273,5587,5.273,5588,4.812,5589,4.812,5590,4.812,5591,4.281,5592,3.027,5593,3.027,5594,3.027,5595,5.61,5596,5.61,5597,2.484]],["title/advanced-components/access_child_components.html#访问子组件类",[5598,5.176]],["body/advanced-components/access_child_components.html#访问子组件类",[]],["title/advanced-components/access_child_components.html#ViewChild-和-ViewChildren",[405,1.177,2736,1.986,2737,1.986]],["body/advanced-components/access_child_components.html#ViewChild-和-ViewChildren",[0,1.483,1,0.539,5,0.498,7,0.76,8,0.846,40,0.78,41,0.658,42,0.662,43,0.71,44,0.757,45,1.564,46,1.9,48,2.068,49,4.07,51,2.028,54,1.251,55,1.192,56,2.108,59,0.805,60,0.837,61,0.934,81,1.782,82,1.57,90,0.969,159,1.045,160,1.107,161,1.174,162,1.278,163,1.123,164,1.199,165,1.246,166,0.858,167,0.91,168,0.943,169,0.972,170,1.042,204,1.291,207,2.129,220,3.199,240,1.501,405,2.969,411,2.091,417,3.099,594,2.472,624,1.07,648,1.122,649,1.187,650,1.251,651,1.281,796,3.123,896,2.556,977,3.595,2509,3.363,2682,4.193,2736,7.148,2737,6.895,2763,2.399,2960,3.072,5571,10.552,5573,3.115,5574,3.115,5576,3.115,5577,3.115,5578,3.115,5579,3.115,5580,6.932,5583,7.475,5585,4.922,5588,4.922,5589,4.922,5590,4.922,5591,4.378,5592,3.115,5593,3.115,5594,3.115,5599,3.414,5600,3.414,5601,3.414,5602,3.414,5603,3.414,5604,3.414,5605,3.414,5606,5.394,5607,3.414,5608,3.414,5609,3.414,5610,3.414,5611,3.414,5612,3.414,5613,3.414,5614,7.596,5615,5.394,5616,5.394,5617,5.394,5618,5.394,5619,3.414,5620,3.414,5621,3.414,5622,3.414,5623,3.414,5624,3.414,5625,3.414,5626,3.414]],["title/advanced-components/access_child_components.html#ContentChild-和-ContentChildren",[405,1.177,5595,2.267,5596,2.267]],["body/advanced-components/access_child_components.html#ContentChild-和-ContentChildren",[81,2.306,82,2.032,349,5.01,359,5.767,405,4.909,2736,6.478,2737,6.478,5595,8.837,5596,8.837,5597,6.478,5627,8.652,5628,8.652,5629,8.652,5630,8.652,5631,8.652,5632,8.652,5633,8.652,5634,8.652]],["title/advanced-components/advanced-components.html",[]],["body/advanced-components/advanced-components.html",[5,0.378,17,5.934,46,2.094,94,5.683,95,5.683,96,4.36,97,6.825,769,5.934,4040,7.791,5635,7.399,5636,8.317,5637,8.317,5638,8.317]],["title/advanced-components/advanced-components.html#Advanced-Components",[46,0.806,5635,2.847]],["body/advanced-components/advanced-components.html#Advanced-Components",[17,6.005,94,5.752,95,5.752,96,4.413,97,6.907,769,6.005,4040,7.885,5636,8.417,5637,8.417,5638,8.417,5639,9.224]],["title/advanced-components/component_lifecycle.html",[]],["body/advanced-components/component_lifecycle.html",[0,1.985,5,0.51,46,1.933,81,2.242,82,1.976,949,5.144,951,5.478,5591,6.831,5597,6.3,5640,9.277,5641,7.678,5642,7.678,5643,7.678,5644,7.678]],["title/advanced-components/component_lifecycle.html#组件生命周期",[5645,5.176]],["body/advanced-components/component_lifecycle.html#组件生命周期",[46,1.943,81,2.255,82,1.987,949,5.172,951,5.508,5591,6.868,5597,6.335,5640,9.308,5641,7.72,5642,7.72,5643,7.72,5644,7.72,5646,8.461,5647,8.461,5648,8.461,5649,8.461,5650,8.461,5651,8.461,5652,8.461,5653,8.461,5654,8.461,5655,8.461,5656,8.461,5657,8.461,5658,8.461]],["title/advanced-components/elementref.html",[]],["body/advanced-components/elementref.html",[1,0.417,5,0.497,6,4.273,7,0.529,8,0.811,40,0.604,41,0.63,42,0.634,43,0.681,44,0.725,45,1.32,46,1.964,47,2.229,48,1.983,49,2.406,50,3.256,51,1.944,54,1.199,55,1.143,56,2.505,59,0.772,60,0.803,61,0.895,81,1.708,82,1.505,90,0.929,159,1.001,160,1.062,161,1.125,162,1.225,163,1.334,164,1.424,165,1.48,166,1.611,167,1.708,168,1.771,169,1.826,170,1.957,171,null,172,2.136,195,3.066,242,2.935,335,3.298,392,2.387,435,2.497,624,2.009,1681,7.811,1896,4.952,1908,5.847,2701,3.918,2755,4.8,2756,7.435,3404,4.505,3553,4.642,5597,4.8,5659,7.803,5660,5.849,5661,5.849,5662,5.849,5663,5.849,5664,5.849]],["title/advanced-components/elementref.html#ElementRef",[2756,3.749]],["body/advanced-components/elementref.html#ElementRef",[1,0.405,5,0.508,7,0.514,8,0.788,40,0.587,41,0.613,42,0.616,43,0.662,44,0.705,45,1.283,46,1.927,48,1.926,51,1.889,54,1.165,55,1.111,56,2.434,59,0.75,60,0.78,61,0.87,81,1.66,82,1.463,90,0.903,159,0.973,160,1.031,161,1.093,162,1.19,163,1.296,164,1.384,165,1.438,166,1.566,167,1.66,168,1.72,169,1.774,170,1.901,171,null,172,2.075,195,2.979,335,3.205,392,2.319,411,2.414,435,2.449,624,1.952,796,3.606,977,4.151,1681,7.699,1896,4.857,1908,5.735,2701,3.807,2755,4.663,2756,6.869,3404,4.377,3553,4.51,4887,5.324,5597,4.663,5659,7.653,5660,5.683,5661,5.683,5662,5.683,5663,5.683,5664,5.683,5665,6.228]],["title/advanced-components/view_encapsulation.html",[]],["body/advanced-components/view_encapsulation.html",[0,1.424,1,0.475,5,0.515,7,0.602,8,0.923,35,5.67,40,0.688,41,0.717,42,0.722,43,0.775,44,0.826,46,2.353,54,1.364,55,1.301,59,0.878,60,0.913,81,1.944,82,1.713,83,5.571,241,3.967,314,6.235,788,7.67,5666,6.656,5667,8.316,5668,6.656]],["title/advanced-components/view_encapsulation.html#视图封装",[5669,5.176]],["body/advanced-components/view_encapsulation.html#视图封装",[1,0.473,5,0.5,7,0.599,8,0.919,35,5.643,40,0.684,41,0.714,42,0.718,43,0.771,44,0.822,46,2.348,54,1.358,55,1.295,59,0.874,60,0.909,81,1.935,82,1.705,241,3.948,314,6.206,405,3.223,788,7.653,5666,6.624,5667,8.297,5668,6.624,5670,7.259,5671,7.259,5672,7.259,5673,7.259,5674,9.275,5675,9.275,5676,7.259,5677,7.259,5678,7.259,5679,7.259,5680,7.259,5681,7.259,5682,7.259]],["title/animation/index.html",[]],["body/animation/index.html",[1,0.583,5,0.514,7,0.739,25,4.234,40,0.647,41,0.676,42,0.68,43,0.73,44,0.777,45,1.843,59,0.827,60,0.86,62,3.324,63,5.183,64,3.249,204,2.599,366,6.208,372,4.472,1564,3.792,2421,3.249,2986,6.482,3348,5.34,5683,6.869,5684,9.625,5685,6.869,5686,6.268,5687,6.869,5688,6.268,5689,6.869,5690,6.869,5691,9.956,5692,6.268]],["title/animation/index.html#动画",[5693,5.176]],["body/animation/index.html#动画",[1,0.576,5,0.511,7,0.73,25,3.192,40,0.636,41,0.664,42,0.668,43,0.717,44,0.764,45,1.822,59,0.813,60,0.845,62,3.266,204,2.553,366,5.517,372,4.393,405,2.996,695,5.213,696,4.297,1518,5.053,2421,3.192,2986,6.408,3348,5.246,3774,8.073,5684,9.559,5686,6.158,5688,6.158,5692,6.158,5694,6.748,5695,6.748,5696,6.748,5697,6.748,5698,6.748,5699,6.748,5700,6.748,5701,6.748,5702,6.748,5703,6.748,5704,9.87,5705,6.748]],["title/state-management/actions.html",[]],["body/state-management/actions.html",[1,0.651,5,0.511,7,0.825,40,0.942,41,0.983,42,0.81,43,0.638,44,0.68,45,1.237,54,1.531,172,2.002,261,4.231,269,5.753,435,2.39,517,2.06,522,1.765,1033,3.422,1608,3.368,1622,4.942,1951,5.329,2035,5.329,2268,8.943,2716,3.122,2717,3.422,5706,6.008,5707,5.482,5708,5.482,5709,7.47,5710,8.496,5711,8.186,5712,8.186,5713,5.482,5714,4.223,5715,6.13]],["title/state-management/actions.html#Actions",[1622,2.275]],["body/state-management/actions.html#Actions",[1,0.643,5,0.51,7,0.815,40,0.93,41,0.971,42,0.793,43,0.619,44,0.659,45,1.2,54,1.499,172,1.941,261,4.185,435,2.34,517,1.997,522,1.712,801,3.633,1033,3.318,1608,3.266,1622,4.816,1951,5.218,2035,5.218,2268,8.846,2716,2.222,5707,5.316,5708,5.316,5709,7.313,5710,5.316,5713,5.316,5715,6.001,5716,5.826,5717,5.826,5718,5.826,5719,5.826,5720,5.826,5721,5.826,5722,5.826,5723,5.316,5724,8.015,5725,8.015,5726,8.015,5727,5.826,5728,5.826,5729,5.826,5730,4.219,5731,5.826,5732,5.826]],["title/state-management/adding_ngrx_to_your_project.html",[]],["body/state-management/adding_ngrx_to_your_project.html",[5,0.487,7,0.859,213,5.66,214,5.745,215,6.627,2717,5.928,3347,5.833,5714,6.15,5733,7.985,5734,7.315]],["title/state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目",[5735,5.176]],["body/state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目",[7,0.862,213,5.68,214,5.765,215,6.65,2717,5.013,3347,5.867,3637,8.03,5714,6.185,5733,8.03,5734,7.34,5736,8.801,5737,8.801,5738,8.801,5739,8.801]],["title/state-management/configuring_your_application.html",[]],["body/state-management/configuring_your_application.html",[1,0.367,5,0.506,7,0.465,8,0.713,37,3.262,40,0.531,41,0.554,42,0.557,43,0.598,44,0.638,45,2.407,46,1.294,47,1.959,54,1.054,55,1.005,56,3.518,59,0.678,60,0.705,61,0.787,62,3.789,63,3.262,64,2.665,65,3.808,67,2.429,68,2.695,69,2.429,88,2.003,90,0.817,159,0.88,160,0.933,161,0.989,162,1.076,163,1.173,164,1.252,165,1.301,166,1.416,167,1.501,168,1.556,169,1.604,170,1.72,322,6.357,545,3.319,624,1.766,648,1.851,649,1.959,650,2.065,651,2.114,652,2.148,653,2.278,768,2.501,908,2.579,909,2.635,910,2.726,1947,5.863,1949,4.08,2358,4.573,3611,5.22,4018,4.218,4781,5.863,4905,4.787,5714,3.959,5734,3.959,5740,5.633,5741,5.14,5742,5.14,5743,5.14,5744,4.573,5745,5.633,5746,5.633,5747,5.14,5748,5.633,5749,5.14]],["title/state-management/configuring_your_application.html#配置你的应用",[5750,5.176]],["body/state-management/configuring_your_application.html#配置你的应用",[1,0.365,5,0.503,7,0.463,8,0.711,37,3.25,40,0.529,41,0.552,42,0.555,43,0.596,44,0.635,45,2.406,54,1.05,55,1.001,56,3.512,59,0.676,60,0.703,61,0.784,62,3.78,65,3.801,67,2.42,68,2.685,69,2.42,88,1.996,90,0.814,159,0.877,160,0.929,161,0.985,162,1.072,163,1.168,164,1.247,165,1.296,166,1.411,167,1.496,168,1.55,169,1.598,170,1.714,322,6.341,411,2.176,624,1.759,648,1.844,649,1.952,650,2.057,651,2.106,652,2.14,653,2.27,695,3.307,696,3.574,768,2.492,908,2.57,909,2.626,910,2.716,1947,5.849,1958,4.202,1959,5.121,3611,5.207,4217,4.065,4781,5.849,4905,4.775,5730,4.065,5741,5.121,5742,5.121,5743,5.121,5744,4.556,5747,5.121,5749,5.121,5751,5.612,5752,5.612,5753,5.612,5754,5.612,5755,5.612,5756,5.612,5757,5.612,5758,5.612,5759,5.612,5760,5.612]],["title/state-management/configuring_your_application_to_use_redux.html",[]],["body/state-management/configuring_your_application_to_use_redux.html",[0,1.439,1,0.61,5,0.467,7,0.608,8,0.769,22,1.926,33,5.021,40,0.695,41,0.725,42,0.729,43,0.783,44,0.688,45,2.258,46,1.693,54,0.745,55,1.315,59,0.732,60,0.761,61,0.849,62,2.941,64,1.883,65,3.119,67,2.62,68,1.904,69,1.716,70,2.722,73,2.592,82,0.935,88,2.161,90,0.881,114,3.305,159,0.95,160,1.007,161,1.067,162,0.761,163,0.829,164,0.885,165,0.919,296,2.654,318,3.653,348,2.345,364,3.79,411,2.356,435,1.775,455,5.731,516,2.345,517,1.365,631,2.345,695,3.581,696,2.535,907,2.482,937,2.883,938,4.884,950,1.639,1469,4.609,1622,1.75,1708,5.144,1710,3.232,1957,2.883,2163,4.402,2259,2.022,2286,2.654,2332,2.231,2392,2.646,2409,2.798,2421,2.875,2491,2.104,2505,2.722,2561,3.232,2699,3.232,2716,3.572,2719,4.905,2722,4.625,2764,2.722,3114,3.232,3341,2.722,3361,4.156,3914,2.981,4220,3.232,4223,3.232,4226,4.051,4227,4.051,4502,2.981,4898,5.181,4915,2.535,5429,2.981,5761,2.798,5762,6.727,5763,6.414,5764,3.632,5765,3.632,5766,3.981,5767,3.632,5768,6.727,5769,3.632,5770,3.632,5771,2.654,5772,2.981,5773,3.632,5774,3.632,5775,3.981,5776,3.232,5777,3.632,5778,3.232,5779,3.632,5780,3.632,5781,3.632,5782,5.546,5783,6.727,5784,3.632]],["title/state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux",[5785,5.176]],["body/state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux",[0,1.998,1,0.666,33,5.486,938,5.724,1469,4.841,1622,3.74,1708,6.382,2163,6.162,2392,3.704,2491,4.497,2716,3.903,2719,5.649,2722,4.769,3361,5.817,4915,5.417,5761,5.979]],["title/state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2",[0,0.348,1,0.116,2163,1.291,2716,0.68,2719,0.984]],["body/state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2",[1,0.424,5,0.507,7,0.538,8,0.825,40,0.614,41,0.641,42,0.645,43,0.692,44,0.738,45,2.323,55,1.542,59,0.785,60,0.816,61,0.91,62,4.185,64,3.084,65,4.106,67,3.728,68,3.119,69,2.811,70,4.457,73,4.244,90,0.945,159,1.018,160,1.08,161,1.144,162,1.246,163,1.357,164,1.449,165,1.506,411,2.527,631,3.841,695,5.095,696,4.151,1957,4.721,2561,5.292,3914,4.881,4226,4.346,4227,4.346,4502,4.881,4898,4.582,5762,8.855,5763,7.544,5764,5.948,5765,5.948,5786,6.519]],["title/state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer",[33,1.421,938,1.383,1469,1.254]],["body/state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer",[1,0.489,5,0.431,7,0.62,22,3.633,33,4.025,40,0.708,41,0.738,42,0.743,43,0.798,45,1.951,54,1.404,88,2.67,114,5.153,296,5.005,318,5.145,348,4.424,364,5.909,1469,4.911,1710,6.095,2259,3.814,2421,4.482,2505,5.134,2699,6.095,2719,4.144,2764,5.134,3114,6.095,3341,5.134,4220,6.095,5767,6.851,5768,9.474,5769,6.851,5770,6.851,5771,5.005,5772,5.622,5773,6.851,5774,6.851,5787,7.508]],["title/state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store",[938,1.383,1708,1.653,2722,1.486]],["body/state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store",[1,0.414,5,0.501,7,0.525,8,0.805,33,4.558,40,0.599,41,0.625,42,0.629,43,0.675,44,0.719,45,2.107,46,2.201,55,1.134,59,0.766,60,0.796,61,0.888,82,1.493,88,2.26,90,0.922,159,0.993,160,1.053,161,1.116,411,2.464,435,2.483,455,7.45,516,3.745,517,2.179,907,3.964,937,4.604,938,3.315,950,2.617,1469,3.007,1708,3.964,2286,4.237,2332,3.563,2392,2.767,2409,4.468,2716,3.243,2719,3.509,2722,4.767,3361,4.346,4223,5.16,4226,4.237,4227,4.237,4898,5.977,5429,4.76,5763,4.942,5776,5.16,5777,5.8,5778,5.16,5779,5.8,5780,5.8,5781,5.8,5782,7.76,5783,8.744,5784,5.8]],["title/state-management/creating_your_applications_root_reducer.html",[]],["body/state-management/creating_your_applications_root_reducer.html",[1,0.56,5,0.474,7,0.71,40,0.811,41,0.846,42,0.851,45,1.772,50,4.37,54,1.609,318,4.263,435,2.512,1469,4.07,5744,6.984,5788,8.603,5789,5.478,5790,8.603,5791,7.85,5792,9.402,5793,8.603]],["title/state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer",[1469,1.659,5794,3.507]],["body/state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer",[1,0.563,5,0.475,7,0.714,40,0.816,41,0.851,42,0.856,45,1.782,54,1.618,318,4.287,435,2.526,5744,7.023,5789,5.509,5791,7.895,5792,9.433,5795,8.652,5796,8.652,5797,8.652,5798,8.652]],["title/state-management/defining_your_main_application_state.html",[]],["body/state-management/defining_your_main_application_state.html",[1,0.484,5,0.502,7,0.614,25,3.517,33,3.986,40,0.701,41,0.731,42,0.736,43,0.79,44,0.842,54,1.391,59,0.895,454,8.05,542,3.986,755,5.757,1608,4.168,1714,8.71,2039,6.821,2421,4.455,2437,6.131,2716,2.835,3346,6.356,5789,5.997,5799,6.785,5800,6.036,5801,8.593,5802,6.785]],["title/state-management/defining_your_main_application_state.html#定义应用的主状态",[5803,5.176]],["body/state-management/defining_your_main_application_state.html#定义应用的主状态",[1,0.482,5,0.428,7,0.611,33,3.966,40,0.697,41,0.728,42,0.732,43,0.786,44,0.837,54,1.384,59,0.891,454,8.026,542,3.966,755,5.739,1517,4.712,1608,4.148,1714,8.565,2039,6.8,2437,6.112,3346,6.325,4722,6.752,5723,6.752,5789,5.978,5799,6.752,5800,6.007,5801,8.567,5802,6.752,5804,7.399,5805,7.399,5806,7.399,5807,7.399,5808,7.399,5809,7.399,5810,7.399,5811,7.399,5812,7.399,5813,7.399,5814,7.399,5815,7.399]],["title/state-management/example_application.html",[]],["body/state-management/example_application.html",[1,0.651,5,0.466,7,0.891,40,0.943,41,0.805,42,0.81,45,1.687,54,1.871,198,2.979,318,5.714,1608,5.606,1714,7.488,2717,4.665,5789,6.368,5800,6.648,5816,7.473,5817,6.132]],["title/state-management/example_application.html#示例应用",[5818,5.176]],["body/state-management/example_application.html#示例应用",[1,0.645,5,0.485,7,0.817,40,0.934,41,0.793,42,0.798,45,1.66,54,1.853,198,2.932,318,5.542,1608,5.552,1714,7.416,4942,6.543,5789,5.133,5800,6.543,5816,7.355,5817,6.036,5819,8.061,5820,8.061,5821,8.061,5822,8.061]],["title/state-management/getting_more_from_redux_and_ngrx.html",[]],["body/state-management/getting_more_from_redux_and_ngrx.html",[0,1.909,5,0.473,2291,3.193,2716,4.578,2717,5.569,2719,4.358,2722,5.481,2724,4.293,4178,6.137,4414,6.872,5714,6.872,5734,5.548,5823,7.895,5824,7.895,5825,7.895,5826,7.895,5827,6.749,5828,7.895,5829,6.749,5830,8.358,5831,7.895]],["title/state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源",[5832,5.176]],["body/state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源",[0,1.549,5,0.329,2291,3.209,2716,4.5,2717,4.52,2719,4.38,2722,5.499,2724,4.316,4178,6.169,4414,6.894,5714,6.894,5734,5.577,5827,6.784,5829,6.784,5830,8.385,5833,7.241,5834,7.241,5835,7.241,5836,7.241,5837,7.241,5838,7.241,5839,7.241,5840,7.241,5841,7.241,5842,7.241,5843,7.241,5844,7.241,5845,7.241]],["title/state-management/getting_more_from_redux_and_ngrx.html#Redux",[2716,1.974]],["body/state-management/getting_more_from_redux_and_ngrx.html#Redux",[0,1.728,5,0.367,2291,3.58,2716,4.401,2719,4.886,2724,4.814,4178,6.881,4414,6.221,5827,7.567,5833,8.077,5834,8.077,5835,8.077,5836,8.077,5837,8.077,5838,8.077]],["title/state-management/getting_more_from_redux_and_ngrx.html#Ngrx",[2717,2.948]],["body/state-management/getting_more_from_redux_and_ngrx.html#Ngrx",[2716,3.996,2722,5.874,4414,6.221,5714,7.365,5734,6.221,5829,7.567,5830,8.958,5839,8.077,5840,8.077,5841,8.077,5842,8.077,5843,8.077,5844,8.077,5845,8.077]],["title/state-management/modifying_your_application_state_by_dispatching_actions.html",[]],["body/state-management/modifying_your_application_state_by_dispatching_actions.html",[0,0.617,1,0.473,5,0.511,7,0.6,8,0.804,40,0.599,41,0.625,42,0.629,43,0.675,44,0.719,45,2.107,46,0.726,47,2.21,54,1.189,55,1.133,59,0.765,60,0.796,61,0.887,90,0.921,159,0.993,160,1.052,161,1.115,162,1.214,163,1.323,164,1.412,165,1.468,166,1.597,167,1.693,168,1.755,169,1.81,170,1.94,171,null,198,1.845,204,1.196,324,4.046,330,3.381,331,0.978,390,3.3,392,2.965,393,3.565,522,0.929,624,1.991,648,2.088,649,2.21,650,2.329,651,2.384,652,2.423,653,2.052,768,2.252,908,2.323,909,2.373,910,1.529,1211,1.626,1287,3.228,1622,3.737,1969,2.221,2259,1.606,2272,2.366,2421,2.399,2716,1.934,2722,4.765,3459,6.108,3839,1.932,4005,2.843,4712,4.848,4902,3.798,4905,3.101,4925,2.566,4926,2.566,4927,2.566,4929,2.566,4930,2.366,5379,4.758,5714,4.466,5715,6.365,5789,4.631,5817,4.758,5846,3.16,5847,3.16,5848,4.336,5849,6.354,5850,5.798,5851,4.758,5852,5.431,5853,2.884,5854,2.884,5855,3.16,5856,3.16,5857,3.16,5858,2.884,5859,2.457,5860,3.16,5861,3.16,5862,2.884,5863,4.629,5864,4.629,5865,4.629,5866,4.629,5867,2.884,5868,2.884,5869,2.884,5870,2.884,5871,2.884,5872,2.884,5873,2.884,5874,2.884]],["title/state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State",[1622,0.937,2421,1.008,5875,2.132,5876,2.132]],["body/state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State",[46,2.158,390,3.47,5877,9.394,5878,9.394,5879,9.394,5880,9.394,5881,9.394,5882,9.394]],["title/state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions",[5883,5.176]],["body/state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions",[1,0.407,5,0.509,7,0.516,8,0.792,40,0.589,41,0.615,42,0.619,43,0.664,44,0.708,45,2.093,54,1.17,55,1.115,59,0.753,60,0.783,61,0.873,90,0.907,159,0.977,160,1.036,161,1.098,162,1.195,163,1.302,164,1.39,165,1.444,166,1.572,167,1.666,168,1.727,169,1.781,170,1.909,171,null,324,5.355,390,3.107,392,2.328,411,2.424,624,1.96,648,2.055,649,2.175,650,2.292,651,2.347,652,2.385,2722,4.715,3459,6.498,4905,3.823,5379,6.298,5715,4.682,5730,4.529,5789,3.982,5848,5.345,5850,7.674,5851,4.682,5852,5.345,5853,5.706,5854,5.706,5884,5.345,5885,5.345,5886,6.253,5887,6.253,5888,6.253,5889,6.253]],["title/state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions",[1622,1.542,4949,3.2]],["body/state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions",[1,0.476,5,0.514,7,0.603,8,0.647,40,0.481,41,0.502,42,0.505,43,0.543,44,0.578,45,1.918,54,0.955,55,0.911,59,0.615,60,0.64,61,0.713,90,0.741,159,0.798,160,0.846,161,0.897,162,0.976,163,1.063,164,1.135,165,1.18,166,1.284,167,1.361,168,1.411,169,1.455,170,1.559,171,null,198,2.658,204,1.932,331,1.58,390,2.7,392,2.721,411,1.98,522,1.501,624,1.601,648,1.678,649,1.777,650,1.872,651,1.917,652,1.948,653,2.066,768,2.268,908,2.339,909,2.39,910,2.472,1211,2.628,1287,4.335,1969,3.59,2259,2.595,2421,2.416,2716,1.948,2722,4.097,3839,3.122,3970,4.997,4005,4.097,4712,3.405,4902,5.472,4905,3.122,4925,4.146,4926,4.146,4927,4.146,4929,4.146,4930,3.825,5715,3.825,5730,3.699,5789,4.654,5817,6.39,5848,4.366,5851,3.825,5852,6.247,5858,4.661,5859,3.971,5884,4.366,5885,4.366,5890,5.108,5891,5.108,5892,5.108,5893,5.108,5894,5.108,5895,5.108,5896,5.108,5897,5.108,5898,5.108,5899,5.108,5900,5.108]],["title/state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions",[1622,1.542,5901,3.507]],["body/state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions",[1,0.379,5,0.51,7,0.481,8,0.738,40,0.549,41,0.573,42,0.576,43,0.619,44,0.659,45,2.033,54,1.09,55,1.039,59,0.702,60,0.729,61,0.814,90,0.845,159,0.91,160,0.965,161,1.023,162,1.113,163,1.213,164,1.295,165,1.346,166,1.464,167,1.552,168,1.609,169,1.659,170,1.779,171,null,330,5.343,390,2.961,392,2.984,393,5.633,411,2.258,624,1.826,648,1.914,649,2.026,650,2.135,651,2.186,652,2.222,653,2.356,768,2.587,908,2.668,909,2.725,2272,4.362,2722,4.493,3459,6.748,5715,4.362,5730,4.219,5789,3.709,5851,4.362,5862,5.316,5863,5.316,5864,5.316,5865,5.316,5866,5.316,5867,5.316,5868,5.316,5869,5.316,5870,5.316,5871,5.316,5872,5.316,5873,5.316,5874,5.316,5884,4.98,5885,4.98,5902,5.826,5903,5.826,5904,5.826,5905,5.826,5906,5.826]],["title/state-management/reading_your_application_state_using_selectors.html",[]],["body/state-management/reading_your_application_state_using_selectors.html",[0,0.836,1,0.279,5,0.399,7,0.707,8,0.542,33,4.917,35,3.328,40,0.404,41,0.421,42,0.424,43,0.455,44,0.485,45,1.763,46,1.475,48,1.986,51,1.299,54,0.801,55,1.145,59,0.516,60,0.536,61,0.598,82,1.508,90,0.621,114,3.492,118,5.859,123,2.328,159,0.669,160,0.709,161,0.751,162,0.818,163,0.891,172,2.568,199,2.522,260,1.557,261,1.731,263,2.147,265,4.295,318,3.182,364,6.551,390,2.846,411,1.659,517,2.201,522,2.695,545,3.783,883,2.927,938,3.348,1033,2.438,1131,2.669,1269,2.232,1346,4.462,1401,3.205,1468,2.787,1471,3.348,1895,3.659,1896,3.718,2213,3.205,2259,2.175,2291,3.116,2352,3.475,2392,3.727,2421,4.05,2482,3.328,2488,3.475,2491,2.263,2505,4.39,2683,3.205,2710,4.39,2716,1.632,2722,4.799,2764,2.927,2772,3.1,2960,2.438,2995,3.475,3116,2.726,3341,2.927,3356,2.363,3611,4.28,4513,3.475,4825,3.659,4915,2.726,5730,3.1,5761,3.009,5771,4.28,5772,3.205,5789,2.726,5817,3.205,5851,3.205,5859,4.992,5907,4.281,5908,3.906,5909,4.281,5910,3.906,5911,3.906,5912,4.281,5913,5.859,5914,3.475,5915,3.906,5916,3.906,5917,5.489,5918,3.475,5919,3.906,5920,3.906,5921,3.906,5922,3.205,5923,3.009,5924,3.906,5925,3.475,5926,3.906,5927,3.475,5928,3.906,5929,3.906,5930,5.859,5931,3.475,5932,3.475,5933,3.906,5934,3.906,5935,3.906,5936,3.906,5937,3.906,5938,3.475,5939,3.906,5940,3.906,5941,3.906,5942,5.859,5943,3.906,5944,3.906,5945,3.475,5946,3.475,5947,5.859,5948,3.475,5949,3.475,5950,3.906,5951,3.475,5952,3.906]],["title/state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors",[33,0.955,48,0.551,2392,0.776,2421,0.843,2710,1.219]],["body/state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors",[5,0.421,7,0.783,33,5.084,48,1.926,55,1.111,82,1.463,114,4.561,123,3.387,137,5.324,172,3.16,199,3.669,260,2.265,261,2.519,263,3.124,265,3.124,318,3.086,364,6.604,517,2.135,522,2.787,883,4.258,938,3.247,1131,3.883,1269,3.247,1346,4.857,1401,4.663,1471,4.374,1895,5.324,1896,3.606,2213,4.663,2291,2.519,2392,3.651,2421,4.486,2491,3.292,2505,5.735,2710,4.258,2716,2.375,2722,3.491,3116,3.965,3341,4.258,4915,3.965,5761,4.377,5771,5.591,5772,4.663,5817,4.663,5859,4.841,5908,5.683,5910,5.683,5911,5.683,5913,7.653,5914,5.055,5915,5.683,5916,5.683,5917,5.324,5918,5.055,5919,5.683,5920,5.683,5922,4.663,5923,4.377,5924,5.683,5925,5.055,5926,5.683,5927,5.055,5928,5.683,5953,6.228,5954,6.228,5955,6.228,5956,5.683]],["title/state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service",[318,1.314,545,1.562,938,1.383]],["body/state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service",[0,1.133,1,0.378,5,0.454,7,0.479,8,0.735,33,3.111,35,4.512,40,0.547,41,0.571,42,0.574,43,0.616,44,0.657,45,2.029,46,1.836,51,1.76,54,1.086,55,1.035,59,0.699,60,0.727,61,0.81,82,1.363,90,0.841,137,4.961,159,0.907,160,0.961,161,1.019,162,1.109,163,1.208,265,4.587,364,6.144,390,3.378,411,2.25,517,1.989,522,2.349,545,3.419,1033,3.305,1346,3.361,1468,3.778,1896,3.361,2259,2.948,2291,3.233,2352,4.711,2392,2.526,2482,4.512,2683,4.346,2722,5.126,2764,3.968,2772,4.203,2960,3.305,2995,4.711,3356,3.203,3611,5.329,3934,4.961,4513,4.711,4825,4.961,5730,4.203,5789,3.695,5851,4.346,5859,4.512,5917,4.961,5929,5.296,5930,7.294,5931,4.711,5932,4.711,5933,5.296,5934,5.296,5935,5.296,5936,5.296,5937,5.296,5938,4.711,5939,5.296,5940,5.296,5941,5.296,5942,7.294,5943,5.296,5944,5.296,5945,4.711,5946,4.711,5947,7.294,5948,4.711,5949,4.711,5951,4.711,5952,5.296,5957,5.296]],["title/state-management/reducers_and_pure_functions.html",[]],["body/state-management/reducers_and_pure_functions.html",[1,0.627,5,0.513,7,0.794,40,0.725,43,0.818,198,3.501,204,2.912,282,5.131,640,6.248,1113,6.581,1469,5.358,1597,6.416,5958,7.023,5959,7.023,5960,6.248,5961,7.697,5962,8.782]],["title/state-management/reducers_and_pure_functions.html#Reducers-和纯函数",[1469,1.659,5963,3.2]],["body/state-management/reducers_and_pure_functions.html#Reducers-和纯函数",[1,0.631,5,0.507,7,0.799,40,0.733,43,0.826,198,3.523,204,2.941,282,5.183,640,6.311,1113,6.622,1469,4.581,1597,6.456,5959,7.094,5960,6.311,5962,8.838,5964,7.094,5965,7.775,5966,7.775,5967,7.775,5968,7.775,5969,7.775,5970,7.775,5971,7.775]],["title/state-management/reducers_as_state_management.html",[]],["body/state-management/reducers_as_state_management.html",[1,0.489,5,0.504,7,0.782,8,0.95,40,0.707,41,0.738,42,0.743,43,0.797,44,0.849,45,1.092,54,0.992,59,0.904,60,0.94,61,1.048,90,1.088,123,2.883,159,0.828,160,0.878,161,0.931,162,1.013,163,1.104,196,3.97,204,2.006,263,2.66,265,2.66,284,3.84,318,2.627,348,5.581,517,2.986,522,3.136,862,6.123,1033,5.396,1217,3.376,1469,4.729,1622,4.165,2291,2.144,2421,5.318,2462,4.304,2716,2.022,4899,5.132,4924,5.275,5344,4.304,5345,4.304,5734,3.726,5972,5.302,5973,5.302,5974,4.838,5975,4.304,5976,5.302,5977,5.302,5978,5.302,5979,4.838,5980,6.848,5981,6.848,5982,4.838,5983,4.838,5984,4.838,5985,4.838,5986,4.838,5987,4.838]],["title/state-management/reducers_as_state_management.html#Reducers-的-State-管理",[481,1.498,1469,1.008,2421,1.008,5988,2.132]],["body/state-management/reducers_as_state_management.html#Reducers-的-State-管理",[5989,9.569,5990,9.569,5991,9.569,5992,9.569,5993,9.569]],["title/state-management/reducers_as_state_management.html#简单的-Reducer",[1469,1.659,5994,3.507]],["body/state-management/reducers_as_state_management.html#简单的-Reducer",[1,0.483,5,0.511,7,0.776,8,0.939,40,0.699,41,0.729,42,0.734,43,0.788,44,0.839,45,1.073,54,0.975,59,0.893,60,0.928,61,1.035,90,1.075,123,2.834,159,0.814,160,0.863,161,0.915,162,0.996,163,1.085,204,1.972,318,2.583,348,5.539,417,2.127,517,2.958,522,3.12,862,6.065,1033,5.354,1217,3.319,1469,2.465,1517,3.319,1622,3.794,2291,2.108,2421,5.224,2462,4.231,2716,1.988,4899,5.07,4924,5.211,5344,4.231,5734,3.663,5974,4.756,5975,4.231,5979,4.756,5980,6.765,5981,6.765,5982,4.756,5983,4.756,5984,4.756,5985,4.756,5986,4.756,5987,4.756,5995,4.455,5996,4.455,5997,5.212,5998,5.212,5999,5.212,6000,5.212,6001,5.212,6002,5.212,6003,5.212,6004,5.212]],["title/state-management/redux.html",[]],["body/state-management/redux.html",[5,0.479,1469,4.211,2716,4.409,2717,6.374,6005,8.903,6006,8.124,6007,8.903,6008,8.903,6009,8.903]],["title/state-management/redux.html#Redux-和-Ngrx",[405,1.177,2716,1.011,2717,1.51]],["body/state-management/redux.html#Redux-和-Ngrx",[]],["title/state-management/redux.html#什么是-Redux",[2716,1.337,6010,3.507]],["body/state-management/redux.html#什么是-Redux",[3970,6.543,6006,8.732,6011,9.569,6012,9.569,6013,9.569]],["title/state-management/redux.html#What-is-Ngrx",[2717,2.948]],["body/state-management/redux.html#What-is-Ngrx",[2717,5.417,6014,9.51,6015,9.51,6016,9.51,6017,9.51,6018,9.51]],["title/state-management/redux_and_component_architecture.html",[]],["body/state-management/redux_and_component_architecture.html",[1,0.426,5,0.509,7,0.54,8,0.828,22,1.281,26,1.686,31,1.619,40,0.617,41,0.644,42,0.647,43,0.695,44,0.741,45,1.785,46,2.13,47,1.956,48,1.74,49,0.994,51,1.706,54,1.052,55,1.003,59,0.788,60,0.819,61,0.914,81,1.744,82,1.321,88,0.941,90,0.949,96,2.1,114,2.387,125,1.982,159,1.022,160,1.084,161,1.149,162,1.25,163,1.171,164,1.25,165,1.299,166,1.104,167,1.17,168,1.213,169,0.754,170,0.808,171,null,198,2.046,219,1.911,220,3.471,240,2.472,242,4.452,243,4.474,244,4.474,245,4,318,4.817,324,1.686,325,4.881,327,5.889,331,2.024,333,1.651,354,2.926,364,3.507,368,2.058,370,2.058,390,0.978,516,1.56,624,0.83,648,0.87,649,0.921,760,2.795,829,1.533,1269,1.381,1403,1.56,1405,2.586,1564,3.612,1622,2.472,1709,1.651,2259,1.345,2291,3.164,2316,2.634,2421,2.077,2491,1.399,2499,1.533,2710,3.002,2716,3.536,2717,1.508,2719,2.423,2722,1.484,2984,1.296,3747,1.861,4495,1.982,4712,1.765,4902,1.982,4905,4.435,4930,1.982,4933,1.982,5345,2.149,5379,1.982,5763,3.413,5776,2.149,5778,2.149,5975,2.149,6019,2.648,6020,2.416,6021,2.416,6022,2.416,6023,2.416,6024,2.416,6025,3.753,6026,4.006,6027,2.416,6028,6.543,6029,5.312,6030,4.006,6031,5.97,6032,4.006,6033,4.006,6034,2.416,6035,2.416,6036,5.132,6037,2.416,6038,2.648,6039,2.416,6040,2.149,6041,2.149,6042,2.648,6043,2.648,6044,2.648,6045,2.149,6046,2.648,6047,2.149,6048,4.006,6049,2.416,6050,6.62,6051,2.416,6052,2.648,6053,2.648,6054,2.648,6055,2.648,6056,2.648,6057,2.648,6058,2.648,6059,2.648,6060,2.648,6061,2.648,6062,2.648,6063,1.861]],["title/state-management/redux_and_component_architecture.html#Redux和组件架构",[6064,5.176]],["body/state-management/redux_and_component_architecture.html#Redux和组件架构",[1,0.415,5,0.506,7,0.527,8,0.808,22,1.23,26,1.619,31,1.554,40,0.601,41,0.627,42,0.631,43,0.678,44,0.722,45,1.756,46,2.099,48,1.69,49,0.954,51,1.657,54,1.022,55,0.974,59,0.768,60,0.799,61,0.891,81,1.7,82,1.283,88,0.904,90,0.925,96,2.03,114,2.308,125,1.904,159,0.997,160,1.057,161,1.12,162,1.219,163,1.137,164,1.214,165,1.262,166,1.067,167,1.131,168,1.172,169,0.724,170,0.776,171,null,198,1.987,219,1.848,220,3.394,240,2.402,242,4.396,243,4.362,244,4.362,245,3.9,318,4.65,324,1.619,325,4.792,327,5.758,331,1.973,333,1.585,354,2.829,364,3.407,368,1.976,370,1.976,390,0.939,405,2.426,411,2.118,417,1.037,423,1.655,516,1.498,612,1.976,624,0.797,648,0.835,649,0.884,760,2.702,829,1.472,1269,1.326,1403,1.498,1405,2.501,1564,3.522,1622,1.118,1709,1.585,2259,1.291,2291,3.1,2421,2.008,2491,1.344,2499,1.472,2710,2.902,2716,2.705,2717,1.448,2719,1.403,2984,1.245,3747,1.787,4226,1.695,4227,3.642,4495,1.904,4712,1.695,4902,1.904,4905,4.336,4930,1.904,4995,3.445,5379,1.904,5763,3.299,5776,2.064,5778,2.064,5975,2.064,5995,2.173,5996,3.628,6020,2.32,6021,2.32,6022,2.32,6023,2.32,6024,2.32,6026,3.873,6027,2.32,6029,5.179,6030,3.873,6031,5.821,6032,3.873,6033,3.873,6034,2.32,6035,2.32,6036,4.985,6037,2.32,6039,2.32,6040,2.064,6041,2.064,6045,2.064,6047,2.064,6048,3.873,6049,2.32,6050,6.473,6051,2.32,6063,1.787,6065,2.542,6066,2.542,6067,2.542,6068,2.542,6069,2.542,6070,2.542,6071,2.542,6072,2.542,6073,2.542,6074,2.542,6075,2.542,6076,2.542,6077,2.542,6078,2.542,6079,2.542,6080,2.542,6081,2.542,6082,2.542,6083,4.244,6084,6.38,6085,2.542,6086,2.542,6087,2.542,6088,2.542,6089,2.542,6090,2.542,6091,2.542,6092,2.542,6093,2.32,6094,2.542,6095,2.542,6096,2.542,6097,2.542,6098,2.542,6099,2.542,6100,2.542,6101,2.542,6102,2.542,6103,2.542,6104,2.542,6105,2.542,6106,2.542,6107,2.542,6108,2.542,6109,2.542,6110,2.542,6111,2.542,6112,2.542,6113,2.542,6114,2.542]],["title/state-management/review_of_reducers_and_pure_functions.html",[]],["body/state-management/review_of_reducers_and_pure_functions.html",[1,0.639,5,0.51,7,0.81,40,0.748,43,0.843,197,3.523,204,3.002,265,4.921,1113,6.707,1469,5.406,1597,5.29,2421,4.64,5958,7.241,5960,6.442,6115,7.935,6116,7.935]],["title/state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数",[1469,1.254,5963,2.42,6117,2.652]],["body/state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数",[1,0.645,5,0.505,7,0.817,40,0.76,43,0.856,204,3.049,265,4.968,417,3.289,1113,6.772,1469,3.813,1597,5.373,2421,4.685,5960,6.543,5964,7.355,6118,8.061,6119,8.061,6120,8.061,6121,8.061,6122,8.061,6123,8.061]],["title/state-management/state-management.html",[]],["body/state-management/state-management.html",[0,2.158,5,0.502,284,6.266,545,5.097,2316,5.19,2392,4.5,2716,4.216,2717,4.928,2719,4.776,6124,7.396]],["title/state-management/state-management.html#状态管理",[6125,5.176]],["body/state-management/state-management.html#状态管理",[0,1.698,545,5.126,2392,4.516,2716,4.226,2717,4.956,2719,4.803,6126,8.701,6127,8.701,6128,8.701,6129,8.701,6130,8.701,6131,8.701,6132,8.701,6133,8.701,6134,8.701,6135,8.701,6136,8.701,6137,8.701]],["title/state-management/using_redux_with_components.html",[]],["body/state-management/using_redux_with_components.html",[0,0.962,1,0.321,5,0.512,7,0.407,8,0.624,40,0.464,41,0.485,42,0.488,43,0.523,44,0.558,45,1.887,46,1.921,47,1.714,48,1.524,51,1.495,54,0.922,55,0.879,59,0.593,60,0.617,61,0.688,81,1.313,82,1.157,88,1.752,90,0.714,96,2.357,107,4,159,0.77,160,0.816,161,0.865,162,0.941,163,1.026,164,1.095,165,1.138,166,1.239,167,1.313,168,1.361,169,1.403,171,null,198,1.792,219,3.1,220,4.649,318,4.816,333,3.072,364,6.513,829,4.124,1469,2.331,1622,3.131,2291,3.931,2316,2.956,2491,2.604,2641,3.463,2716,4.219,2719,5.765,2722,2.762,4905,5.601,4933,3.689,5345,4,6040,4,6041,4,6045,4,6047,4,6138,4.496,6139,4.496,6140,4.496,6141,4.927,6142,4.927,6143,4.927,6144,4.927,6145,4.927,6146,4.927,6147,4.496,6148,4.927,6149,4.927]],["title/state-management/using_redux_with_components.html#使用-Redux-与-Components",[46,0.49,801,1.329,1667,1.945,2716,0.813]],["body/state-management/using_redux_with_components.html#使用-Redux-与-Components",[5,0.387,364,5.822,6138,8.519,6139,8.519,6140,8.519,6150,9.336,6151,9.336,6152,9.336,6153,9.336]],["title/state-management/using_redux_with_components.html#计数器示例",[6154,5.176]],["body/state-management/using_redux_with_components.html#计数器示例",[1,0.322,5,0.506,7,0.408,8,0.626,40,0.466,41,0.486,42,0.489,43,0.525,44,0.559,45,1.89,46,1.64,48,1.529,51,1.499,54,0.925,55,0.882,59,0.595,60,0.619,61,0.69,81,1.317,82,1.161,88,1.758,90,0.717,96,2.365,107,4.013,159,0.772,160,0.819,161,0.868,162,0.945,163,1.029,164,1.098,165,1.142,166,1.243,167,1.317,168,1.365,169,1.408,171,null,198,1.798,219,3.108,220,4.655,318,4.547,333,3.082,364,6.323,405,2.195,411,1.916,610,4.51,829,4.134,1622,2.173,2055,4.225,2291,3.936,2491,2.613,2641,3.474,2716,2.722,2719,3.94,2722,2.771,4226,3.295,4227,3.295,4905,5.609,4995,4.013,5995,4.225,5996,4.225,6040,4.013,6041,4.013,6045,4.013,6047,4.013,6093,4.51,6147,4.51,6155,4.943,6156,4.943,6157,4.943,6158,4.943,6159,4.943,6160,4.943,6161,4.943,6162,4.943,6163,4.943,6164,4.943,6165,4.943,6166,4.943,6167,4.943,6168,4.943,6169,4.943,6170,4.943,6171,4.943,6172,4.943,6173,4.943,6174,4.943,6175,4.943,6176,4.943,6177,4.943,6178,4.943,6179,4.943,6180,4.943,6181,4.943,6182,4.943,6183,4.943,6184,4.943,6185,4.943,6186,4.943]],["title/tooling/chrome.html",[]],["body/tooling/chrome.html",[5,0.392,372,6.153,6187,9.451,6188,9.451,6189,9.451,6190,9.451,6191,9.451]],["title/tooling/chrome.html#Web浏览器",[6192,5.176]],["body/tooling/chrome.html#Web浏览器",[6193,9.51,6194,9.51,6195,9.51,6196,9.51,6197,9.51,6198,9.51]],["title/tooling/back_end_code_sharing_and_distribution.html",[]],["body/tooling/back_end_code_sharing_and_distribution.html",[5,0.499,213,6.146,214,5.031,1681,7.399,3347,6.076,6199,9.114]],["title/tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm",[6200,5.176]],["body/tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm",[213,5.818,214,5.061,3347,6.112,6201,9.169,6202,9.169,6203,9.169,6204,9.169,6205,9.169,6206,9.169,6207,9.169,6208,9.169]],["title/tooling/command_line_javascript.html",[]],["body/tooling/command_line_javascript.html",[197,4.047,1470,6.076,1906,8.317,3121,6.825,6209,9.114,6210,9.114,6211,9.728,6212,9.114,6213,9.114,6214,9.114,6215,9.114,6216,9.114]],["title/tooling/command_line_javascript.html#JavaScript命令行：NodeJS",[6217,5.176]],["body/tooling/command_line_javascript.html#JavaScript命令行：NodeJS",[1470,6.112,3121,6.865,6211,9.762,6218,9.169,6219,9.169,6220,9.169,6221,9.169,6222,9.169,6223,9.169,6224,9.169,6225,9.169]],["title/tooling/module_loading_bundling_and_build_tasks.html",[]],["body/tooling/module_loading_bundling_and_build_tasks.html",[5,0.387,1306,5.795,6226,9.336,6227,9.336,6228,9.336,6229,9.336,6230,8.519,6231,8.519]],["title/tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack",[6232,5.176]],["body/tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack",[6230,8.571,6231,8.571,6233,9.394,6234,9.394,6235,9.394,6236,9.394,6237,9.394,6238,9.394]],["title/tooling/source_control.html",[]],["body/tooling/source_control.html",[5,0.45,2620,9.144,6239,9.394,6240,7.626]],["title/tooling/source_control.html#源码控制：Git",[6241,5.176]],["body/tooling/source_control.html#源码控制：Git",[2620,8.465,6240,7.672,6242,9.451,6243,9.451,6244,9.451,6245,9.451]],["title/tooling/the_command_line.html",[]],["body/tooling/the_command_line.html",[5,0.476,197,4.197,3264,7.886,6246,8.624]],["title/tooling/the_command_line.html#命令行",[6247,5.176]],["body/tooling/the_command_line.html#命令行",[6246,8.678,6248,9.51,6249,9.51,6250,9.51,6251,9.51,6252,9.51]],["title/tooling/tooling.html",[]],["body/tooling/tooling.html",[5,0.469,17,5.934,94,5.683,95,5.683,96,4.36,97,6.825,99,7.086,197,4.047,3337,7.086,6253,8.317,6254,8.317]],["title/tooling/tooling.html#JavaScript工具链",[6255,5.176]],["body/tooling/tooling.html#JavaScript工具链",[5,0.444,17,5.969,94,5.717,95,5.717,96,4.386,97,6.865,99,7.128,3337,7.128,6253,8.367,6254,8.367,6256,9.169]],["title/zone/context_propagation.html",[]],["body/zone/context_propagation.html",[1,0.604,5,0.517,7,0.889,8,0.755,34,4.464,40,0.562,41,0.586,42,0.59,43,0.633,44,0.675,59,0.718,60,0.746,61,0.832,90,0.864,114,4.428,201,5.563,260,2.962,926,3.974,5346,7.462,6257,5.848,6258,4.076,6259,3.974,6260,6.037,6261,5.961,6262,7.462,6263,4.464,6264,5.961,6265,5.44,6266,5.44,6267,7.43,6268,5.961,6269,7.43,6270,5.961,6271,5.961]],["title/zone/context_propagation.html#上下文传播",[6272,5.176]],["body/zone/context_propagation.html#上下文传播",[1,0.6,5,0.509,7,0.886,8,0.746,40,0.555,41,0.58,42,0.583,43,0.626,44,0.667,59,0.71,60,0.738,61,0.823,90,0.854,114,4.393,201,3.535,260,2.939,926,3.928,1491,6.558,1492,6.558,5346,7.426,6257,5.768,6258,4.029,6259,3.928,6260,5.259,6262,4.412,6263,4.412,6265,5.377,6266,5.377,6267,7.371,6269,7.371,6273,5.893,6274,4.784,6275,5.893,6276,5.893,6277,5.893,6278,7.371,6279,5.893,6280,5.893,6281,5.893,6282,5.893,6283,4.581,6284,5.893,6285,5.893,6286,5.893,6287,5.893,6288,5.893,6289,5.893,6290,5.893,6291,5.893,6292,5.893,6293,5.893,6294,5.893,6295,5.893,6296,5.893,6297,5.893]],["title/zone/interception.html",[]],["body/zone/interception.html",[5,0.513,6257,6.067]],["title/zone/interception.html#拦截",[6298,4.723]],["body/zone/interception.html#拦截",[6257,5.993,6299,8.903,6300,8.903,6301,8.903,6302,8.903,6303,8.903,6304,8.903,6305,8.903,6306,8.903,6307,8.903,6308,8.903,6309,8.903,6310,8.903]],["title/zone/patching_async_methods.html",[]],["body/zone/patching_async_methods.html",[1,0.396,5,0.509,7,0.503,8,0.771,25,4.613,40,0.574,41,0.599,42,0.603,43,0.647,44,0.689,59,0.733,60,0.762,61,0.85,88,1.419,90,0.883,159,0.951,160,1.009,161,0.701,162,0.763,163,0.831,164,0.887,165,0.922,166,1.003,167,1.064,215,2.541,517,3.343,522,2.954,938,2.081,939,2.489,1118,5.05,1211,3.8,1287,4.519,1346,3.526,1403,6.296,1471,2.081,1533,6.25,1709,4.604,2272,2.988,2285,4.28,2392,1.737,2477,2.891,2706,2.805,2727,3.24,2772,7.063,3116,4.701,3157,2.598,3228,4.28,3264,4.41,4512,4.56,4804,2.028,5922,2.988,5932,3.24,5949,3.24,6257,5.506,6259,4.059,6311,4.943,6312,4.943,6313,3.642,6314,3.642,6315,3.642,6316,6.706,6317,5.557,6318,7.538,6319,3.642,6320,4.943,6321,3.642,6322,4.943,6323,3.24,6324,3.24,6325,2.988,6326,3.24,6327,6.737,6328,2.988,6329,3.642,6330,3.642,6331,5.557,6332,5.557,6333,3.642,6334,3.642,6335,3.991,6336,3.24,6337,3.642]],["title/zone/patching_async_methods.html#异步方法补丁",[6338,5.176]],["body/zone/patching_async_methods.html#异步方法补丁",[1,0.393,5,0.509,7,0.498,8,0.763,25,4.413,40,0.568,41,0.593,42,0.597,43,0.641,44,0.682,59,0.726,60,0.755,61,0.842,88,1.401,90,0.874,159,0.942,160,0.999,161,0.692,162,0.753,163,0.82,164,0.876,165,0.91,166,0.99,167,1.05,215,2.509,517,3.328,522,2.942,938,2.054,939,2.457,1118,5.016,1211,3.103,1287,4.493,1346,3.492,1403,6.276,1471,2.054,1533,6.218,1709,4.567,2272,2.95,2285,4.238,2392,1.715,2477,2.853,2706,2.769,2727,3.198,2772,7.031,3116,4.664,3157,2.565,3228,4.238,3264,4.367,4512,4.515,4804,2.001,5922,2.95,5932,3.198,5949,3.198,6257,5.412,6259,2.626,6283,4.687,6311,4.895,6312,4.895,6313,3.595,6314,3.595,6315,3.595,6316,6.662,6317,5.502,6318,7.488,6319,3.595,6320,4.895,6321,3.595,6322,4.895,6323,3.198,6324,3.198,6325,2.95,6326,3.198,6327,6.684,6328,2.95,6329,3.595,6330,3.595,6331,5.502,6332,5.502,6333,3.595,6334,3.595,6336,3.198,6337,3.595,6339,3.94,6340,3.94,6341,3.94,6342,3.94,6343,3.94,6344,3.94,6345,3.94,6346,3.94]],["title/zone/task_scheduling.html",[]],["body/zone/task_scheduling.html",[1,0.478,5,0.51,7,0.606,8,0.765,25,3.47,40,0.692,41,0.722,42,0.598,43,0.642,44,0.684,59,0.728,60,0.756,61,0.844,90,0.876,159,0.944,160,1.001,161,1.061,162,1.154,163,1.258,164,1.343,165,1.395,166,1.519,167,1.61,168,1.091,169,1.125,204,1.494,205,2.777,226,2.463,517,2.515,522,2.156,829,3.499,893,4.131,938,2.06,950,3.645,1199,1.911,1211,5.286,1228,3.069,1346,2.287,1355,2.633,1403,4.841,1470,4.027,1533,2.633,1709,5.521,1821,2.776,2243,2.776,2285,2.776,2338,3.207,2392,3.855,2489,3.377,2694,2.415,3116,2.515,3228,5.156,3264,4.376,3342,8.196,3893,3.767,4836,2.958,6257,4.936,6311,4.904,6320,3.207,6322,3.207,6347,6.884,6348,4.904,6349,3.207,6350,3.95,6351,3.95,6352,3.604,6353,3.604,6354,3.071,6355,3.604,6356,3.207,6357,5.513,6358,5.513,6359,6.694,6360,5.513,6361,3.604,6362,3.604,6363,5.513,6364,5.513,6365,3.604,6366,3.207,6367,3.604,6368,3.207,6369,4.697,6370,3.604,6371,3.207]],["title/zone/task_scheduling.html#Task-Scheduling",[3342,2.626,6347,2.726]],["body/zone/task_scheduling.html#Task-Scheduling",[1,0.474,5,0.508,7,0.601,8,0.757,25,1.845,40,0.686,41,0.716,42,0.592,43,0.636,44,0.677,59,0.72,60,0.749,61,0.835,90,0.867,159,0.935,160,0.991,161,1.05,162,1.143,163,1.245,164,1.329,165,1.382,166,1.504,167,1.594,168,1.077,169,1.111,204,1.475,205,2.758,226,2.432,517,2.495,522,2.139,829,3.465,893,2.667,938,2.034,950,3.624,1199,1.887,1211,4.978,1228,3.039,1346,2.258,1355,2.6,1403,4.809,1470,3.988,1533,2.6,1709,5.09,1821,2.741,2243,2.741,2285,2.741,2338,3.166,2392,3.833,2489,3.334,2694,2.384,3116,2.483,3228,5.115,3264,4.333,3342,8.073,3893,2.432,4836,2.92,6257,4.72,6274,3.166,6283,3.032,6311,4.857,6320,3.166,6322,3.166,6347,5.658,6348,4.857,6349,3.166,6352,3.559,6353,3.559,6354,3.032,6355,3.559,6356,3.166,6357,5.459,6358,5.459,6359,6.641,6360,5.459,6361,3.559,6362,3.559,6363,5.459,6364,5.459,6365,3.559,6366,3.166,6367,3.559,6368,3.166,6369,4.651,6370,3.559,6371,3.166,6372,3.9,6373,3.9,6374,3.9,6375,3.9,6376,3.9,6377,3.9,6378,3.9,6379,3.9,6380,3.9,6381,3.9,6382,3.9,6383,3.9,6384,3.9,6385,3.9,6386,3.9,6387,3.9,6388,3.9,6389,3.9,6390,3.9,6391,3.9,6392,3.9]],["title/zone/tasks.html",[]],["body/zone/tasks.html",[5,0.111,22,1.299,23,2.087,25,2.101,33,1.439,99,2.087,119,1.555,197,1.192,261,1.086,284,3.216,296,1.79,333,1.674,335,1.382,453,1.79,516,2.616,522,1.305,823,1.836,829,3.289,831,5.704,834,5.357,870,2.295,883,1.836,893,4.512,938,2.961,953,1.887,1131,1.674,1198,1.836,1211,1.382,1269,1.4,1355,2.96,1403,1.582,1469,1.27,1471,2.316,1533,1.79,1539,3.605,1545,5.385,1622,2.497,1650,4.617,1709,1.674,1858,3.605,1874,2.01,1894,2.087,1896,3.289,1908,1.836,2216,2.087,2263,5.294,2286,2.96,2344,4.638,2392,2.873,2421,2.101,2484,1.944,2491,3.488,2504,2.087,2694,4.034,2695,2.01,2698,1.887,2750,5.13,2752,6.127,2767,4.855,2986,1.944,3110,2.01,3116,6.819,3342,8.569,3348,2.087,3349,5.327,3354,2.295,3361,4.998,3909,3.325,3915,3.605,3917,3.325,4010,1.611,4915,2.828,5092,2.295,5111,6.242,5583,2.179,5667,4.61,5761,1.887,5771,5.812,5914,2.179,5923,6.862,5925,3.605,5946,2.179,5951,2.179,6063,1.887,6257,4.001,6260,1.748,6347,7.243,6348,6.393,6368,2.179,6393,2.45,6394,2.45,6395,2.45,6396,4.61,6397,4.78,6398,4.415,6399,2.179,6400,2.45,6401,2.45,6402,4.052,6403,6.022,6404,5.182,6405,2.179,6406,4.61,6407,2.45,6408,2.45,6409,2.01,6410,2.45,6411,2.45,6412,2.45,6413,3.325,6414,7.186,6415,2.45,6416,4.052,6417,5.934,6418,2.45,6419,2.45,6420,2.45,6421,2.45,6422,4.052,6423,2.45,6424,2.45,6425,2.45,6426,3.121,6427,2.01,6428,2.179,6429,4.052,6430,2.45,6431,8.719,6432,2.45,6433,3.325,6434,5.182,6435,6.67,6436,6.022,6437,6.022,6438,3.605,6439,2.179,6440,7.955,6441,2.45,6442,3.605,6443,3.605,6444,4.052,6445,2.45,6446,3.605,6447,2.45,6448,2.45,6449,2.45,6450,2.45,6451,2.45,6452,2.45,6453,2.179,6454,3.325,6455,2.179,6456,2.179,6457,2.45,6458,2.45,6459,2.45,6460,2.685,6461,2.45,6462,2.45,6463,2.45,6464,2.45,6465,2.45,6466,2.45,6467,2.45,6468,4.052,6469,2.45,6470,2.45,6471,2.45,6472,2.45]],["title/zone/tasks.html#任务",[6473,5.176]],["body/zone/tasks.html#任务",[22,1.301,23,2.091,25,2.104,33,1.442,99,2.091,119,1.557,197,1.194,261,1.088,284,3.221,296,1.793,333,1.677,335,1.384,453,1.793,516,2.62,522,1.307,823,1.839,829,3.293,831,5.709,834,5.363,870,2.299,883,1.839,893,4.517,938,2.965,953,1.89,1131,1.677,1198,1.839,1211,1.384,1269,1.402,1355,2.965,1403,1.585,1469,1.272,1471,2.319,1533,1.793,1539,3.61,1545,5.389,1622,2.5,1650,4.619,1709,1.677,1858,3.61,1874,2.014,1894,2.091,1896,3.293,1908,1.839,2216,2.091,2263,5.299,2286,2.965,2344,4.643,2392,2.876,2421,2.104,2484,1.948,2491,3.492,2504,2.091,2694,4.039,2695,2.014,2698,1.89,2750,5.136,2752,6.132,2767,4.861,2986,1.948,3110,2.014,3116,6.821,3342,8.571,3348,2.091,3349,5.33,3354,2.299,3361,5.003,3909,3.33,3915,3.61,3917,3.33,4010,1.613,4915,2.832,5092,2.299,5111,6.247,5583,2.183,5667,4.616,5761,1.89,5771,5.816,5914,2.183,5923,6.865,5925,3.61,5946,2.183,5951,2.183,6063,1.89,6257,4.004,6260,1.751,6347,7.247,6348,6.399,6368,2.183,6393,2.454,6394,2.454,6395,2.454,6396,4.616,6397,4.785,6398,4.421,6399,2.183,6400,2.454,6401,2.454,6402,4.058,6403,6.028,6404,5.189,6405,2.183,6406,4.616,6407,2.454,6408,2.454,6409,2.014,6410,2.454,6411,2.454,6412,2.454,6413,3.33,6414,7.192,6415,2.454,6416,4.058,6417,5.94,6418,2.454,6419,2.454,6420,2.454,6421,2.454,6422,4.058,6423,2.454,6424,2.454,6425,2.454,6426,3.126,6427,2.014,6428,2.183,6429,4.058,6430,2.454,6431,8.724,6432,2.454,6433,3.33,6434,5.189,6435,6.677,6436,6.028,6437,6.028,6438,3.61,6439,2.183,6440,7.961,6441,2.454,6442,3.61,6443,3.61,6444,4.058,6445,2.454,6446,3.61,6447,2.454,6448,2.454,6449,2.454,6450,2.454,6451,2.454,6452,2.454,6453,2.183,6454,3.33,6455,2.183,6456,2.183,6457,2.454,6458,2.454,6459,2.454,6461,2.454,6462,2.454,6463,2.454,6464,2.454,6465,2.454,6466,2.454,6467,2.454,6468,4.058,6469,2.454,6470,2.454,6471,2.454,6472,2.454,6474,2.689]],["title/zone/tracking_async_operations.html",[]],["body/zone/tracking_async_operations.html",[1,0.432,5,0.516,7,0.547,8,0.839,25,1.594,33,1.806,40,0.625,41,0.652,42,0.656,43,0.704,44,0.75,50,1.711,59,0.798,60,0.83,61,0.926,82,1.254,90,0.961,119,1.951,159,0.834,160,0.884,161,0.937,162,1.02,163,1.111,164,1.186,165,1.233,166,1.342,167,0.898,168,0.931,169,0.959,170,1.029,204,2.019,260,2.411,296,3.558,331,1.042,517,2.272,522,0.99,624,1.056,636,2.303,648,1.107,649,1.172,650,1.235,651,1.264,652,1.285,653,1.362,1033,1.919,1199,3.649,1211,3.411,1227,2.44,1287,5.363,1401,4.963,1403,1.985,1903,2.88,2491,1.781,2663,2.145,2714,3.751,3116,3.398,3328,2.619,3909,2.522,4005,4.607,4006,2.619,4010,4.93,6257,5.719,6258,4.532,6259,3.558,6262,5.646,6263,4.963,6325,2.522,6328,2.522,6439,2.735,6453,4.333,6475,2.735,6476,3.369,6477,3.074,6478,3.074,6479,3.074,6480,3.074,6481,2.735,6482,3.074,6483,4.87,6484,3.369,6485,3.074,6486,3.074,6487,3.074,6488,3.074,6489,4.87,6490,3.074,6491,3.074,6492,5.381,6493,3.074,6494,3.074,6495,3.074,6496,3.074,6497,3.369,6498,7.5,6499,3.074,6500,6.048,6501,3.074,6502,2.735,6503,4.87,6504,2.735,6505,3.074,6506,4.87,6507,3.074,6508,2.522,6509,2.735,6510,3.074,6511,3.074]],["title/zone/tracking_async_operations.html#跟踪异步操作",[6512,5.176]],["body/zone/tracking_async_operations.html#跟踪异步操作",[1,0.426,5,0.511,7,0.54,8,0.828,33,1.771,40,0.617,41,0.644,42,0.647,43,0.695,44,0.741,50,1.678,59,0.788,60,0.819,61,0.914,82,1.234,90,0.949,119,1.913,159,0.821,160,0.87,161,0.922,162,1.004,163,1.094,164,1.168,165,1.214,166,1.321,167,0.88,168,0.913,169,0.941,170,1.009,204,1.988,260,2.38,296,3.503,331,1.022,417,3.321,517,2.243,522,0.971,624,1.035,636,2.259,648,1.086,649,1.149,650,1.211,651,1.24,652,1.26,653,1.336,1033,1.882,1199,3.609,1211,3.367,1287,4.793,1401,4.9,1403,1.946,1491,2.682,1903,2.824,2491,1.746,2663,2.103,2714,3.693,3116,3.346,3328,2.568,3909,2.474,4005,4.563,4006,2.568,4010,4.883,6257,5.526,6258,3.593,6259,3.503,6262,4.9,6263,4.9,6274,2.682,6283,4.085,6325,2.474,6328,2.474,6439,2.682,6453,2.682,6475,2.682,6477,3.014,6478,3.014,6479,3.014,6480,3.014,6481,2.682,6482,3.014,6483,4.795,6485,3.014,6486,3.014,6487,3.014,6488,3.014,6489,4.795,6490,3.014,6491,3.014,6492,5.312,6493,3.014,6494,3.014,6495,3.014,6496,3.014,6498,5.971,6499,3.014,6500,4.795,6501,3.014,6502,2.682,6503,4.795,6504,2.682,6505,3.014,6506,4.795,6507,3.014,6508,2.474,6509,2.682,6510,3.014,6511,3.014,6513,3.303,6514,3.303,6515,3.303,6516,3.303,6517,3.303,6518,3.303,6519,3.303,6520,3.303,6521,3.303,6522,3.303,6523,3.303,6524,3.303,6525,3.303,6526,3.303,6527,3.303,6528,3.303,6529,3.303,6530,3.303,6531,3.303,6532,3.303,6533,3.303,6534,3.303,6535,3.303,6536,3.303,6537,3.303,6538,3.303,6539,3.303,6540,3.303,6541,3.303,6542,3.303,6543,3.303,6544,3.303,6545,3.303,6546,3.303,6547,3.303,6548,3.303,6549,3.303,6550,3.303]],["title/zone/zone-propagation.html",[]],["body/zone/zone-propagation.html",[1,0.441,5,0.496,7,0.559,8,0.441,22,1.686,31,2.13,40,0.639,41,0.666,42,0.67,43,0.72,44,0.62,45,0.717,50,2.784,59,0.66,60,0.436,61,0.486,82,0.818,90,0.505,119,3.923,159,0.544,160,0.577,161,0.611,162,0.666,163,0.725,164,0.774,165,0.805,166,0.876,167,0.928,168,0.962,169,0.992,170,1.064,207,2.172,217,4.104,260,1.994,331,1.078,339,5.871,343,5.399,517,3.041,624,1.092,648,1.145,649,1.212,823,2.382,938,1.816,939,4.79,1199,3.278,1217,2.218,1269,4.006,1346,3.174,1828,2.523,1888,2.978,2183,2.608,2239,4.907,2382,2.322,2392,1.516,2397,2.978,2416,4.449,2509,3.417,2663,4.314,2689,2.608,2694,4.141,2697,2.448,2706,2.448,3110,2.608,3117,2.828,3341,4.632,3349,3.992,3914,2.608,3916,2.828,4010,3.288,5771,2.322,5923,2.448,6029,2.828,6063,3.852,6257,5.952,6258,3.747,6259,5.121,6260,3.568,6262,6.255,6263,2.608,6323,6.236,6328,2.608,6396,5.5,6397,7.707,6398,8.023,6406,2.828,6427,2.608,6433,4.104,6438,2.828,6454,2.608,6455,2.828,6475,2.828,6481,2.828,6492,4.449,6551,3.483,6552,3.179,6553,3.179,6554,3.179,6555,3.179,6556,3.179,6557,3.179,6558,3.179,6559,7.01,6560,3.179,6561,3.179,6562,3.179,6563,3.179,6564,3.179,6565,5.001,6566,5.001,6567,3.179,6568,3.179,6569,5.001,6570,3.179,6571,3.179,6572,3.179,6573,3.179,6574,5.001,6575,5.001,6576,5.001,6577,3.179,6578,3.179,6579,3.179]],["title/zone/zone-propagation.html#Zone-传播",[6257,1.781,6580,3.507]],["body/zone/zone-propagation.html#Zone-传播",[6581,9.752,6582,9.752]],["title/zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames",[2239,1.291,6257,0.905,6260,1.16,6397,1.291,6398,1.386]],["body/zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames",[1,0.444,5,0.488,7,0.563,8,0.446,22,1.705,31,2.154,40,0.643,41,0.671,42,0.675,43,0.725,44,0.626,45,0.726,50,1.79,59,0.666,60,0.441,61,0.492,82,0.828,90,0.511,119,3.952,159,0.551,160,0.584,161,0.619,162,0.673,163,0.734,164,0.783,165,0.814,166,0.886,167,0.939,168,0.973,169,1.004,170,1.076,207,2.197,217,4.14,260,2.011,331,1.09,339,5.903,343,5.433,517,3.055,624,1.104,648,1.158,649,1.226,823,2.409,938,1.837,939,4.82,1199,3.303,1217,2.244,1269,4.031,1346,3.202,1828,2.552,1888,3.012,2183,2.638,2239,4.005,2382,2.349,2392,1.534,2397,3.012,2416,4.489,2509,3.448,2663,4.346,2689,2.638,2694,4.172,2697,2.476,2706,2.476,3110,2.638,3117,2.86,3341,4.667,3349,4.021,3914,2.638,3916,2.86,4010,3.317,5771,2.349,5923,2.476,6029,2.86,6063,3.886,6257,5.899,6258,3.781,6259,5.153,6260,2.294,6262,5.11,6263,2.638,6278,5.046,6283,2.739,6323,5.54,6328,2.638,6396,5.54,6397,7.621,6398,7.895,6406,2.86,6427,2.638,6433,4.14,6438,2.86,6454,2.638,6455,2.86,6475,2.86,6481,2.86,6492,4.489,6552,3.215,6553,3.215,6554,3.215,6555,3.215,6556,3.215,6557,3.215,6558,3.215,6559,7.054,6560,3.215,6561,3.215,6562,3.215,6563,3.215,6564,3.215,6565,5.046,6566,5.046,6567,3.215,6568,3.215,6569,5.046,6570,3.215,6571,3.215,6572,3.215,6573,3.215,6574,5.046,6575,5.046,6576,5.046,6577,3.215,6578,3.215,6579,3.215,6583,3.524,6584,3.524,6585,3.524,6586,3.524,6587,3.524,6588,3.524,6589,3.524,6590,3.524,6591,3.524,6592,3.524,6593,3.524]],["title/zone/zone.html",[]],["body/zone/zone.html",[0,2.078,1,0.53,5,0.497,7,0.672,8,0.828,40,0.703,41,0.734,42,0.738,43,0.695,44,0.741,45,0.68,47,1.828,54,0.618,55,0.589,59,0.788,60,0.819,61,0.914,90,0.762,159,0.821,160,0.87,161,0.922,162,1.425,163,1.094,164,1.168,165,1.214,166,1.321,167,1.4,168,1.452,169,0.941,170,1.009,171,null,205,2.211,331,1.022,390,1.941,392,1.23,517,2.557,950,2.163,1199,4.195,1211,3.838,1342,2.103,1471,1.723,1544,2.682,1828,2.393,1863,4.492,1874,2.474,1969,2.322,2291,1.336,2338,2.682,2777,2.568,3121,3.935,3895,4.266,4069,3.693,4181,6.054,4801,3.935,6257,4.404,6260,4.855,6349,2.682,6356,2.682,6397,5.896,6426,2.322,6427,6.095,6442,2.682,6594,3.303,6595,7.38,6596,3.303,6597,4.492,6598,3.303,6599,3.014,6600,4.795,6601,3.014,6602,3.014,6603,3.303,6604,3.014,6605,3.014,6606,4.795,6607,3.014,6608,4.795,6609,3.014,6610,3.014,6611,3.303,6612,3.303,6613,3.014,6614,3.014,6615,3.014,6616,3.303,6617,3.014,6618,3.303,6619,4.795,6620,3.014,6621,3.014,6622,3.014,6623,3.014,6624,3.014,6625,5.971,6626,3.014,6627,4.795,6628,3.014,6629,5.971,6630,3.014,6631,3.014,6632,3.014,6633,3.014,6634,3.014,6635,4.795,6636,4.795,6637,4.795,6638,4.795,6639,3.014,6640,3.014,6641,3.014,6642,3.014,6643,4.795,6644,3.014,6645,4.795,6646,4.795,6647,4.795,6648,4.795,6649,4.795,6650,4.795,6651,4.795,6652,4.795,6653,4.795,6654,4.795,6655,4.795,6656,4.795,6657,4.795,6658,4.795,6659,4.795,6660,4.795,6661,4.795,6662,3.014,6663,3.014,6664,3.014,6665,3.014,6666,3.014,6667,3.014,6668,3.014]],["title/zone/zone.html#Zones",[6257,2.629]],["body/zone/zone.html#Zones",[405,3.885,417,3.57,1211,4.503,4181,7.103,6260,5.697,6349,7.103,6595,8.449,6597,7.48,6669,8.75,6670,8.75,6671,8.75,6672,8.75,6673,8.75,6674,8.75,6675,8.75,6676,8.75,6677,8.75,6678,8.75,6679,8.75]],["title/zone/zone.html#在-Zone-内",[3970,1.813,6257,1.347,6680,2.652]],["body/zone/zone.html#在-Zone-内",[1,0.397,5,0.506,7,0.504,8,0.773,40,0.575,41,0.6,42,0.604,43,0.648,44,0.691,45,1.257,54,1.142,55,1.089,59,0.735,60,0.764,61,0.852,90,0.885,159,0.954,160,1.011,161,1.071,162,1.166,163,1.271,164,1.356,165,1.41,166,1.534,167,1.627,168,1.686,171,null,205,3.172,390,3.057,392,2.273,411,2.366,950,3.406,1199,4.543,1544,4.955,6595,8.17,6599,5.57,6600,5.57,6601,5.57,6602,5.57,6604,5.57,6605,5.57,6606,7.55,6607,5.57,6608,7.55,6609,5.57,6610,5.57,6613,5.57,6614,5.57,6615,5.57,6681,6.104,6682,6.104,6683,6.104,6684,6.104,6685,6.104,6686,6.104,6687,6.104,6688,6.104,6689,6.104,6690,6.104,6691,8.274,6692,6.104,6693,6.104,6694,6.104,6695,6.104]],["title/zone/zone.html#变化检测",[6696,5.176]],["body/zone/zone.html#变化检测",[417,3.654,6442,7.269,6595,7.269,6597,7.655,6617,8.171,6697,8.955,6698,8.955,6699,8.955,6700,8.955,6701,8.955,6702,8.955,6703,8.955,6704,8.955,6705,8.955,6706,8.955,6707,8.955]],["title/zone/zone.html#Debugging",[1828,3.749]],["body/zone/zone.html#Debugging",[0,0.855,1,0.564,5,0.453,7,0.715,8,0.827,40,0.736,41,0.768,42,0.773,43,0.694,44,0.739,47,1.523,59,0.786,60,0.818,61,0.912,90,0.635,159,0.684,160,0.725,161,0.769,162,1.492,163,0.912,164,0.973,165,1.011,166,1.101,167,1.167,168,1.21,169,1.247,170,1.337,331,1.354,517,2.968,1199,3.16,1211,4.019,1342,2.788,1471,2.283,1863,5.582,1874,3.279,1969,3.077,2777,3.404,3121,4.89,3175,3.554,3895,3.554,4069,4.59,4801,4.89,4967,3.743,4977,3.995,6257,3.317,6260,4.251,6356,3.554,6397,6.707,6426,3.077,6427,6.935,6619,5.959,6620,3.995,6621,3.995,6622,3.995,6623,3.995,6624,3.995,6625,7.126,6626,3.995,6627,5.959,6628,3.995,6629,7.126,6630,3.995,6631,3.995,6632,3.995,6633,3.995,6634,3.995,6635,5.959,6636,5.959,6637,5.959,6638,5.959,6639,3.995,6640,3.995,6641,3.995,6642,3.995,6643,5.959,6644,3.995,6645,5.959,6646,5.959,6647,5.959,6648,5.959,6649,5.959,6650,5.959,6651,5.959,6652,5.959,6653,5.959,6654,5.959,6655,5.959,6656,5.959,6657,5.959,6658,5.959,6659,5.959,6660,5.959,6661,5.959,6662,3.995,6663,3.995,6664,3.995,6665,3.995,6666,3.995,6667,3.995,6668,3.995,6708,4.379,6709,4.379,6710,4.379,6711,4.379,6712,4.379,6713,4.379,6714,4.379,6715,4.379,6716,4.379,6717,4.379,6718,4.379,6719,4.379,6720,4.379,6721,4.379,6722,4.379,6723,4.379,6724,4.379]],["title/zone/zoneDelegate.html",[]],["body/zone/zoneDelegate.html",[1,0.482,5,0.509,7,0.611,8,0.659,22,2.517,40,0.698,41,0.728,42,0.642,43,0.689,44,0.734,55,1.32,59,0.626,60,0.651,61,0.726,82,1.222,90,0.754,159,0.813,160,0.861,161,0.572,162,0.623,163,0.679,164,0.725,165,0.753,166,0.82,167,0.869,168,0.901,169,0.929,170,0.996,171,null,200,3.12,205,2.502,260,2.942,304,2.963,307,3.656,331,1.609,339,6.059,624,1.022,631,1.921,648,1.072,649,1.134,650,1.195,651,1.224,652,1.244,653,1.319,760,2.077,768,1.448,883,2.23,893,4.436,908,1.493,909,1.526,950,3.33,953,2.292,1033,1.858,1118,1.994,1119,5.489,1269,1.701,1342,4.714,1355,4.325,1470,2.174,1709,3.243,2213,2.442,2239,4.699,2286,2.174,2485,2.788,2491,2.749,2499,1.889,2694,1.994,2697,2.292,2772,3.767,3338,2.535,3349,5.704,3893,4.046,4010,3.12,4512,5.544,4915,2.077,5918,2.647,6063,2.292,6257,5.904,6258,3.557,6259,2.174,6260,2.123,6312,2.647,6316,4.222,6326,2.647,6354,7.526,6366,2.647,6369,5.044,6454,2.442,6508,2.442,6725,6.329,6726,6.915,6727,4.746,6728,2.976,6729,6.329,6730,2.647,6731,5.92,6732,2.976,6733,2.976,6734,5.546,6735,5.92,6736,2.976,6737,2.976,6738,2.976,6739,5.267,6740,2.976,6741,2.976,6742,2.976,6743,2.976,6744,2.976,6745,3.261,6746,3.261]],["title/zone/zoneDelegate.html#The-case-for-ZoneDelegate",[1033,1.997,6725,2.998]],["body/zone/zoneDelegate.html#The-case-for-ZoneDelegate",[1,0.463,5,0.505,7,0.587,8,0.476,22,2.813,40,0.67,41,0.699,42,0.575,43,0.617,44,0.658,55,1.037,59,0.452,60,0.47,61,0.525,82,1.365,90,0.545,159,0.587,160,0.622,161,0.659,162,0.718,163,0.782,164,0.835,165,0.868,166,0.944,167,1.001,168,1.038,169,1.07,170,1.147,171,null,200,3.487,205,2.705,260,3.148,304,2.14,307,2.64,331,1.798,339,6.432,624,1.177,631,2.213,648,1.234,649,1.307,650,1.377,651,1.41,652,1.433,653,1.519,760,2.392,768,1.668,883,2.569,893,4.861,908,1.72,909,1.757,950,3.563,953,2.64,1118,2.296,1119,4.527,1269,1.959,1342,3.701,1355,4.739,1470,2.504,1522,3.428,1709,2.342,2213,2.813,2239,2.721,2286,2.504,2485,3.211,2491,3.072,2499,2.175,2694,2.296,2697,2.64,3338,2.92,3349,5.392,3893,4.433,4010,3.487,4512,5.992,4915,2.392,5918,3.049,6063,2.64,6257,5.618,6258,2.569,6259,2.504,6274,4.719,6298,3.428,6312,3.049,6316,4.719,6326,3.049,6354,7.419,6366,3.049,6369,2.92,6454,2.813,6508,2.813,6726,4.969,6727,5.304,6728,3.428,6729,6.078,6730,3.049,6731,6.488,6732,3.428,6733,3.428,6734,3.211,6735,5.304,6736,3.428,6737,3.428,6738,3.428,6739,3.049,6740,3.428,6741,3.428,6742,3.428,6743,3.428,6744,3.428,6747,3.757,6748,3.757,6749,3.757,6750,3.757,6751,3.757,6752,3.757,6753,3.757,6754,3.757,6755,3.757,6756,3.757,6757,3.757,6758,3.757,6759,3.757,6760,5.813,6761,5.813,6762,3.757,6763,3.757,6764,3.757,6765,3.757]],["title/zone/zoneDelegate.html#为什么标准工具不起作用",[6766,5.176]],["body/zone/zoneDelegate.html#为什么标准工具不起作用",[1,0.428,5,0.476,7,0.543,8,0.832,40,0.62,41,0.647,42,0.651,43,0.698,44,0.744,55,1.551,59,0.792,60,0.823,61,0.918,90,0.953,159,1.027,160,1.089,1119,5.537,1193,8.865,1342,5.537,1709,4.1,2772,6.299,3349,5.741,6257,5.829,6258,4.496,6354,5.111,6369,5.111,6725,5.62,6726,7.434,6729,5.62,6734,7.434,6767,6.575,6768,6.575,6769,6.575,6770,6.575,6771,6.575,6772,6.575,6773,6.575,6774,6.575,6775,6.575,6776,6.575,6777,6.575,6778,6.575,6779,6.575,6780,6.575,6781,6.575,6782,6.575,6783,6.575,6784,6.575,6785,6.575,6786,6.575,6787,6.575,6788,6.575,6789,6.575]],["title/zone/zone_primer.html",[]],["body/zone/zone_primer.html",[5,0.508,197,3.82,2752,6.046,6257,6.217,6790,8.603]],["title/zone/zone_primer.html#概述",[5179,4.723]],["body/zone/zone_primer.html#概述",[]],["title/zone/zone_primer.html#What",[]],["body/zone/zone_primer.html#What",[197,4.047,6257,5.918,6791,9.114,6792,9.114,6793,9.114,6794,9.114,6795,9.114,6796,9.114,6797,9.114,6798,9.114]],["title/zone/zone_primer.html#Why",[]],["body/zone/zone_primer.html#Why",[2752,6.562,6257,5.964,6799,9.336,6800,9.336,6801,9.336,6802,9.336]],["title/Change-detection/how_change_detection_works.html",[]],["body/Change-detection/how_change_detection_works.html",[1,0.472,5,0.513,7,0.671,8,0.753,36,2.52,40,0.683,41,0.712,42,0.717,43,0.632,44,0.673,45,1.807,46,1.867,47,2.069,48,1.84,51,1.804,54,1.355,55,1.292,56,1.513,59,0.716,60,0.745,61,0.831,81,1.031,82,0.909,90,0.862,96,2.845,108,6.821,109,3.009,113,8.239,116,5.632,120,5.177,156,6.192,159,0.929,160,0.985,161,1.044,162,1.137,163,1.238,164,1.322,165,1.374,166,0.973,167,1.031,168,1.069,169,1.102,170,1.182,171,null,172,2.924,181,3.308,182,3.532,189,5.247,193,4.454,194,4.454,216,3.532,217,2.898,218,3.532,219,3.539,220,2.845,221,4.624,224,3.532,225,3.532,226,2.413,227,3.532,230,3.532,231,3.532,234,3.532,235,3.532,239,5.427,240,3.185,241,2.105,242,3.317,243,2.646,244,2.646,245,2.366,246,3.308,247,5.427,248,3.532,331,1.84,624,1.213,648,1.272,649,1.346,6803,3.87,6804,5.948,6805,3.87,6806,3.87,6807,3.87,6808,3.87,6809,5.948,6810,3.87,6811,3.87,6812,3.87,6813,3.87,6814,3.87]],["title/license.html",[]],["body/license.html",[5,0.462,22,3.014,88,2.215,94,6.803,95,5.23,119,3.606,290,7.17,645,4.663,728,6.52,828,6.52,898,4.51,1533,4.151,1543,5.055,1615,5.055,1982,4.258,2136,6.075,2334,6.322,2382,4.151,2392,2.711,2436,4.51,2479,6.28,2481,6.809,2661,6.485,2670,4.663,2681,4.377,2694,3.807,2960,4.777,3742,5.055,3743,5.055,5945,5.055,6409,4.663,6413,4.663,6426,4.377,6730,5.055,6815,5.683,6816,7.17,6817,5.683,6818,5.683,6819,5.683,6820,5.683,6821,5.683,6822,5.683,6823,5.683,6824,5.683,6825,7.17,6826,5.683,6827,5.683,6828,7.17,6829,5.683,6830,5.683,6831,5.055,6832,5.683,6833,5.683,6834,5.055,6835,5.683,6836,5.683,6837,5.683,6838,5.683,6839,5.683,6840,7.653,6841,5.683,6842,5.683,6843,5.055,6844,5.683]],["title/license.html#License",[94,3.228]],["body/license.html#License",[5,0.374,94,5.617,728,7.002,828,8.231,1615,7.312,2670,6.745,3742,7.312,3743,7.312,6730,7.312,6815,8.219,6816,7.7,6817,8.219,6818,8.219,6819,8.219]],["title/license.html#You-are-free-to",[6820,4.723]],["body/license.html#You-are-free-to",[94,5.335,645,6.406,898,6.196,1543,6.945,2136,6.196,2334,5.703,2479,6.406,2481,6.945,2661,7.021,2960,4.873,6426,6.013,6821,7.806,6822,7.806,6823,7.806,6824,7.806,6825,7.313,6826,7.806,6827,7.806,6828,7.313,6829,7.806,6830,7.806,6845,9.37]],["title/license.html#Under-the-following-terms",[95,1.653,2136,1.921,2334,1.768]],["body/license.html#Under-the-following-terms",[5,0.314,22,3.669,88,2.696,94,6.504,95,4.728,119,4.391,290,8.151,728,5.895,1533,5.055,1982,5.185,2334,5.055,2382,5.055,2392,3.301,2436,5.492,2479,5.678,2481,6.155,2661,5.185,2681,5.329,2694,4.635,2960,4.319,5945,6.155,6409,5.678,6413,5.678,6816,6.482,6825,6.482,6828,6.482,6831,6.155,6832,6.919,6833,6.919,6834,6.155,6835,6.919,6836,6.919,6837,6.919,6838,6.919,6839,6.919,6840,8.7,6841,6.919,6842,6.919,6843,6.155,6844,6.919,6845,9.517]],["title/index.html",[26,1.357,6846,1.657,6847,1.657,6848,1.657]],["body/index.html",[5,0.446,7,0.821,18,3.63,19,3.959,26,6.335,64,2.809,68,2.841,207,3.703,213,4.416,214,5.492,217,4.446,226,5.064,330,3.959,349,3.439,359,3.959,368,4.616,630,4.446,831,4.301,1098,4.616,1461,3.866,1471,4.235,1750,4.174,2142,4.872,2166,3.703,2392,4.029,2437,3.866,2499,3.439,2509,3.703,2611,4.964,2616,4.301,2620,4.616,2700,4.446,2701,6.082,3254,5.076,3349,3.499,3893,5.771,4511,4.446,4910,4.446,6846,8.716,6847,8.362,6848,7.195,6849,5.419,6850,8.077,6851,5.419,6852,5.419,6853,5.419,6854,5.419,6855,4.821,6856,7.41,6857,5.419,6858,5.419,6859,5.419,6860,5.419,6861,7.41,6862,5.419,6863,5.419,6864,5.419,6865,5.419]],["title/index.html#hexo-theme-doc-seed",[26,1.357,6846,1.657,6847,1.657,6848,1.657]],["body/index.html#hexo-theme-doc-seed",[5,0.341,18,5.033,19,5.489,26,5.243,68,3.939,217,6.165,349,4.768,359,5.489,368,6.401,1098,6.401,2142,4.939,2392,4.711,2509,5.134,2701,6.134,6846,8.413,6847,8.413,6848,6.401,6849,7.513,6850,8.145,6851,7.513,6852,7.513,6853,7.513,6854,7.513]],["title/index.html#Getting-Started",[3893,2.187,6855,2.847]],["body/index.html#Getting-Started",[5,0.447,7,0.889,26,5.906,64,3.434,207,4.527,213,5.044,214,5.945,330,4.839,630,5.436,1461,4.726,1750,5.102,2142,4.355,2166,4.527,2437,4.726,2499,4.204,2611,5.67,2616,5.258,2620,5.643,2701,4.438,3349,4.277,3893,5.784,4511,5.436,4910,5.436,6846,8.373,6847,7.21,6848,5.643,6850,5.893,6856,8.463,6857,6.624,6858,6.624,6859,6.624,6860,6.624,6861,8.463,6862,6.624,6863,6.624,6864,6.624,6865,6.624]],["title/index.html#More-Informations",[226,2.187,1471,1.829]],["body/index.html#More-Informations",[5,0.39,226,5.857,831,6.803,1471,4.898,2700,7.034,2701,5.742,3254,8.03,6850,7.626]],["title/README.html",[]],["body/README.html",[0,2.347,1,0.769,3,6.56,5,0.475,3255,8.412,3273,7.279,6866,9.841,6867,8.412,6868,7.65,6869,7.977,6870,7.977,6871,7.977,6872,7.977,6873,7.977]],["title/README.html#Rangle’s-Angular-2-Training-Book",[0,0.348,1,0.116,6867,1.524,6868,1.386,6874,1.626]],["body/README.html#Rangle’s-Angular-2-Training-Book",[6875,9.63,6876,9.63,6877,9.63,6878,9.63]],["title/README.html#About-Rangle’s-Angular-2-Training-Book",[0,0.348,1,0.116,6867,1.524,6868,1.386,6874,1.626]],["body/README.html#About-Rangle’s-Angular-2-Training-Book",[0,1.679,3,5.735,2623,7.85,3255,7.354,3488,7.85,6879,8.603,6880,8.603,6881,8.603,6882,8.603,6883,8.603,6884,8.603,6885,8.603,6886,8.603,6887,8.603,6888,8.603,6889,8.603,6890,8.603,6891,8.603,6892,8.603,6893,8.603,6894,8.603,6895,8.603,6896,8.603]],["title/a11y/why-a11y.html",[]],["body/a11y/why-a11y.html",[5,0.51,161,1.527,253,7.063,349,5.039,372,5.664,1879,7.438,2441,5.949,6897,8.701,6898,8.701,6899,7.939,6900,7.939]],["title/a11y/why-a11y.html#为什么需要无障碍",[6901,5.176]],["body/a11y/why-a11y.html#为什么需要无障碍",[6902,9.814]],["title/a11y/why-a11y.html#向每个人伸出援手",[6903,5.176]],["body/a11y/why-a11y.html#向每个人伸出援手",[6904,9.69,6905,9.69,6906,9.69]],["title/a11y/why-a11y.html#与用户体验和SEO叠加",[6907,5.176]],["body/a11y/why-a11y.html#与用户体验和SEO叠加",[6908,9.69,6909,9.69,6910,9.69]],["title/a11y/why-a11y.html#无障碍法",[6911,5.176]],["body/a11y/why-a11y.html#无障碍法",[253,7.533,349,5.374,372,6.041,405,4.12,1879,7.933,2441,6.345,6899,8.468,6900,8.468,6912,9.28,6913,9.28]],["title/why_TypeScript.html",[]],["body/why_TypeScript.html",[0,1.046,1,0.313,5,0.199,18,2.071,19,0.913,22,0.663,25,1.171,26,2.157,31,0.838,33,2.226,45,0.698,55,0.604,71,0.963,82,0.582,88,1.476,96,0.656,114,0.745,119,2.404,123,2.611,125,1.026,172,1.129,197,3.359,207,1.544,226,2.589,260,1.51,261,4.143,265,0.687,284,0.992,324,0.872,330,0.913,331,0.424,335,2.471,359,1.651,370,1.065,453,0.913,517,2.5,522,0.728,538,4.874,545,1.459,630,1.854,631,0.807,633,1.026,644,1.74,645,1.026,758,2.01,784,1.112,823,0.937,831,1.793,862,0.963,882,1.171,883,1.693,898,2.454,907,2.112,938,1.767,953,3.768,1033,0.78,1067,4.546,1111,2.379,1118,2.538,1131,3.343,1195,4.168,1199,0.663,1223,2.918,1227,1.793,1269,3.469,1310,0.937,1346,0.793,1355,2.258,1357,4.981,1395,1.065,1459,1.065,1467,0.768,1471,3.469,1505,1.065,1535,1.612,1546,2.634,1567,1.065,1608,4.24,1616,1.112,1642,3.549,1648,1.996,1650,0.679,1651,0.807,1659,0.937,1677,0.913,1689,1.171,1690,2.75,1705,1.171,1708,0.854,1750,1.74,1820,1.065,1821,1.74,1887,2.829,1891,1.854,1894,1.065,1896,5.77,1969,3.768,2136,1.793,2137,1.112,2142,2.032,2163,0.992,2166,0.854,2211,1.065,2212,4.41,2237,1.026,2243,0.963,2286,0.913,2332,3.005,2337,1.171,2382,0.913,2388,2.703,2392,3.498,2409,2.381,2421,1.171,2477,3.007,2478,2.117,2488,3.37,2491,1.791,2499,2.404,2500,4.583,2503,4.105,2504,1.065,2505,0.937,2509,0.854,2510,1.171,2511,2.896,2662,1.112,2663,2.157,2668,2.839,2669,3.37,2670,1.026,2673,1.112,2676,3.37,2680,1.112,2681,1.74,2683,1.026,2684,1.793,2686,1.112,2689,2.537,2693,2.01,2694,1.514,2695,3.109,2697,3.375,2698,2.381,2700,1.026,2701,2.071,2706,2.381,2710,3.998,2711,1.112,2713,1.112,2714,3.375,2718,1.112,2721,1.925,2725,3.109,2764,1.693,2792,1.171,2797,0.937,2960,2.365,2985,2.75,2986,1.793,2997,2.75,3112,1.112,3152,1.065,3266,2.117,3315,3.549,3328,1.065,3335,1.171,3337,5.88,3338,1.065,3341,0.937,3344,1.171,3349,0.807,3350,1.065,3361,0.937,3364,0.992,3459,2.316,3848,2.117,3893,2.589,3917,1.026,3977,2.117,4059,1.112,4069,2.381,4139,1.112,4179,1.112,4511,1.854,4836,1.026,4910,2.537,4915,2.644,5108,1.112,5111,1.026,5116,1.112,5380,1.112,5429,1.854,5635,2.01,5761,4.41,5771,2.258,5772,1.026,5921,1.25,5922,1.026,5923,2.918,5927,4.352,5931,1.112,5938,1.112,5948,1.112,5950,3.788,6025,1.171,6124,1.171,6240,1.112,6324,1.112,6325,3.109,6336,2.01,6371,1.112,6399,2.01,6405,1.112,6409,1.026,6413,1.026,6417,2.01,6426,0.963,6428,3.37,6433,1.026,6443,1.112,6446,2.01,6456,2.01,6502,1.112,6504,1.112,6508,2.537,6509,2.75,6739,1.112,6831,2.75,6834,2.01,6843,1.112,6855,2.01,6868,1.065,6914,1.25,6915,1.25,6916,1.37,6917,4.381,6918,1.25,6919,3.788,6920,2.26,6921,1.25,6922,2.26,6923,2.26,6924,3.091,6925,1.25,6926,1.25,6927,1.25,6928,1.25,6929,1.25,6930,6.654,6931,1.25,6932,5.336,6933,1.25,6934,1.25,6935,1.25,6936,1.25,6937,2.26,6938,3.091,6939,1.25,6940,1.25,6941,3.788,6942,1.25,6943,4.381,6944,1.25,6945,1.25,6946,3.091,6947,2.26,6948,1.25,6949,1.25,6950,2.26,6951,2.26,6952,2.26,6953,2.26,6954,1.25,6955,1.25,6956,2.26,6957,3.091,6958,1.25,6959,1.25,6960,2.26,6961,1.25,6962,1.25,6963,2.26,6964,1.25,6965,2.26,6966,2.26,6967,1.25,6968,1.25,6969,1.25,6970,3.788,6971,3.788,6972,2.26,6973,2.26,6974,2.26,6975,1.25,6976,5.336,6977,1.25,6978,1.25,6979,1.25,6980,1.25,6981,2.26,6982,2.26,6983,1.25,6984,3.091,6985,1.25,6986,1.25,6987,3.091,6988,1.25,6989,1.25,6990,2.26,6991,1.25,6992,1.25,6993,1.25,6994,3.091,6995,1.25,6996,2.26,6997,1.25,6998,1.25,6999,1.25,7000,1.25,7001,2.26,7002,1.25,7003,1.25,7004,1.25,7005,1.25,7006,1.25,7007,1.25,7008,1.25,7009,3.091,7010,1.25,7011,2.26,7012,2.26,7013,1.25,7014,1.25,7015,1.25,7016,2.26,7017,1.25,7018,1.25,7019,2.26,7020,1.25,7021,1.25,7022,1.25,7023,1.25,7024,1.25,7025,2.26,7026,2.26,7027,1.25,7028,1.25,7029,1.25,7030,2.476,7031,1.25,7032,1.25,7033,1.25,7034,1.25,7035,1.25,7036,1.25,7037,1.25,7038,1.25,7039,1.25,7040,3.091,7041,2.26,7042,2.26,7043,1.25,7044,1.25,7045,1.25,7046,2.26,7047,1.25,7048,2.26,7049,1.25,7050,1.25,7051,1.25,7052,1.25,7053,1.25,7054,2.26,7055,1.25,7056,1.25,7057,1.25,7058,1.25,7059,1.25,7060,1.25,7061,1.25,7062,1.25,7063,1.25,7064,2.26,7065,1.25,7066,1.25,7067,1.25,7068,1.25,7069,1.25,7070,1.25,7071,1.25,7072,1.37,7073,1.25,7074,1.25,7075,1.25,7076,1.25,7077,3.091,7078,3.091,7079,1.25,7080,1.25,7081,2.26,7082,1.25,7083,1.25,7084,1.25,7085,1.25,7086,1.25,7087,1.25,7088,1.25,7089,1.25,7090,1.25,7091,2.26,7092,1.25]],["title/why_TypeScript.html#Angular-Why-TypeScript",[0,0.685,538,1.641]],["body/why_TypeScript.html#Angular-Why-TypeScript",[0,0.941,1,0.314,18,2.082,19,0.919,22,0.667,25,1.178,26,2.168,31,0.843,33,2.236,45,0.701,55,0.607,71,0.969,82,0.585,88,1.483,96,0.66,114,0.75,119,2.416,123,2.623,125,1.032,172,1.135,197,3.368,207,1.553,226,2.601,260,1.239,261,4.123,265,0.692,284,0.999,324,0.878,330,0.919,331,0.427,335,2.482,359,1.66,370,1.072,453,0.919,517,2.507,522,0.732,538,4.855,545,1.467,630,1.865,631,0.812,633,1.032,644,1.75,645,1.032,758,2.022,784,1.119,823,0.943,831,1.804,862,0.969,883,1.703,898,2.466,907,2.123,938,1.776,953,3.783,1033,0.785,1067,4.563,1111,2.39,1118,2.55,1131,3.357,1195,4.185,1199,0.667,1223,2.932,1227,1.804,1269,3.481,1310,0.943,1346,0.798,1355,2.27,1357,4.998,1395,1.072,1459,1.072,1467,0.773,1471,3.481,1535,1.621,1546,2.647,1567,1.072,1608,4.252,1616,1.119,1642,3.566,1648,2.006,1650,0.683,1651,0.812,1659,0.943,1677,0.919,1689,1.179,1690,2.764,1705,1.179,1708,0.86,1750,1.75,1820,1.072,1821,1.75,1887,2.841,1891,1.865,1894,1.072,1896,5.734,1969,3.783,2136,1.804,2137,1.119,2142,2.043,2163,0.999,2166,0.86,2212,4.126,2237,1.032,2243,0.969,2286,0.919,2332,3.017,2337,1.179,2382,0.919,2388,2.716,2392,3.507,2409,2.393,2421,1.178,2477,3.021,2478,2.129,2491,1.8,2499,2.416,2500,4.602,2503,4.123,2504,1.072,2505,0.943,2509,0.86,2510,1.179,2511,2.911,2662,1.119,2663,2.168,2668,2.852,2669,3.386,2670,1.032,2673,1.119,2676,3.386,2680,1.119,2681,1.75,2683,1.032,2684,1.804,2686,1.119,2689,2.55,2693,2.022,2694,1.522,2695,3.124,2697,3.39,2698,2.393,2700,1.032,2701,2.082,2706,2.393,2710,4.014,2711,1.119,2713,1.119,2714,3.39,2718,1.119,2721,1.936,2725,3.124,2764,1.703,2792,1.179,2797,0.943,2960,2.376,2985,2.764,2986,1.804,2997,2.764,3112,1.119,3152,1.072,3266,2.129,3315,3.566,3328,1.072,3335,1.179,3337,5.897,3338,1.072,3341,0.943,3344,1.179,3349,0.812,3350,1.072,3361,0.943,3364,0.999,3459,2.328,3848,2.129,3893,2.601,3917,1.032,3934,3.566,3977,2.129,4059,1.119,4069,2.393,4139,1.119,4179,1.119,4511,1.865,4836,1.032,4910,2.55,4915,2.656,5108,1.119,5111,1.032,5116,1.119,5380,1.119,5429,1.865,5635,2.022,5761,4.426,5771,2.27,5772,1.032,5922,1.032,5923,2.932,5927,4.37,5931,1.119,5938,1.119,5948,1.119,5956,1.258,5957,3.807,6025,1.179,6124,1.179,6240,1.119,6324,1.119,6325,3.124,6336,2.022,6371,1.119,6399,2.022,6405,1.119,6409,1.032,6413,1.032,6417,2.022,6426,0.969,6428,3.386,6433,1.032,6443,1.119,6446,2.022,6456,2.022,6502,1.119,6504,1.119,6508,2.55,6509,2.764,6739,1.119,6831,2.764,6834,2.022,6843,1.119,6855,2.022,6868,1.072,6914,1.258,6915,1.258,6917,3.807,6918,1.258,6919,3.807,6920,2.272,6921,1.258,6922,2.272,6923,2.272,6924,3.107,6925,1.258,6926,1.258,6927,1.258,6928,1.258,6929,1.258,6930,6.674,6931,1.258,6932,5.356,6933,1.258,6934,1.258,6935,1.258,6936,1.258,6937,2.272,6938,3.107,6939,1.258,6940,1.258,6941,3.807,6942,1.258,6943,4.401,6944,1.258,6945,1.258,6946,3.107,6947,2.272,6948,1.258,6949,1.258,6950,2.272,6951,2.272,6952,2.272,6953,2.272,6954,1.258,6955,1.258,6956,2.272,6957,3.107,6958,1.258,6959,1.258,6960,2.272,6961,1.258,6962,1.258,6963,2.272,6964,1.258,6965,2.272,6966,2.272,6967,1.258,6968,1.258,6969,1.258,6970,3.807,6971,3.807,6972,2.272,6973,2.272,6974,2.272,6975,1.258,6976,5.356,6977,1.258,6978,1.258,6979,1.258,6980,1.258,6981,2.272,6982,2.272,6983,1.258,6984,3.107,6985,1.258,6986,1.258,6987,3.107,6988,1.258,6989,1.258,6990,2.272,6991,1.258,6992,1.258,6993,1.258,6994,3.107,6995,1.258,6996,2.272,6997,1.258,6998,1.258,6999,1.258,7000,1.258,7001,2.272,7002,1.258,7003,1.258,7004,1.258,7005,1.258,7006,1.258,7007,1.258,7008,1.258,7009,3.107,7010,1.258,7011,2.272,7012,2.272,7013,1.258,7014,1.258,7015,1.258,7016,2.272,7017,1.258,7018,1.258,7019,2.272,7020,1.258,7021,1.258,7022,1.258,7023,1.258,7024,1.258,7025,2.272,7026,2.272,7027,1.258,7028,1.258,7029,1.258,7031,1.258,7032,1.258,7033,1.258,7034,1.258,7035,1.258,7036,1.258,7037,1.258,7038,1.258,7039,1.258,7040,3.107,7041,2.272,7042,2.272,7043,1.258,7044,1.258,7045,1.258,7046,2.272,7047,1.258,7048,2.272,7049,1.258,7050,1.258,7051,1.258,7052,1.258,7053,1.258,7054,2.272,7055,1.258,7056,1.258,7057,1.258,7058,1.258,7059,1.258,7060,1.258,7061,1.258,7062,1.258,7063,1.258,7064,2.272,7065,1.258,7066,1.258,7067,1.258,7068,1.258,7069,1.258,7070,1.258,7071,1.258,7073,1.258,7074,1.258,7075,1.258,7076,1.258,7077,3.107,7078,3.107,7079,1.258,7080,1.258,7081,2.272,7082,1.258,7083,1.258,7084,1.258,7085,1.258,7086,1.258,7087,1.258,7088,1.258,7089,1.258,7090,1.258,7091,2.272,7092,1.258,7093,1.379,7094,1.379,7095,1.379,7096,2.49,7097,1.379,7098,1.379,7099,1.379,7100,1.379,7101,1.379,7102,1.379,7103,1.379]]],"invertedIndex":[["",{"_index":5,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"Change-detection/additional_resources.html":{},"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/Change_Detection.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/structuring_applications_with_components.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di.html":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/attribute_directives.html":{},"Directives/directives.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/form.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/http_with_rxjs.html":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/immutable-js.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/performance.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/the_case_for_immutability.html":{},"Immutable/what_is_immutability.html":{},"i18n/i18n.html":{},"i18n/import-translation-files.html":{},"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{},"i18n/process-and-roles.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"compare.html":{},"further-reading.html":{},"glossary.html":{},"plus.html":{},"practice.html":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"vs_vue2.html":{},"why_angular_2.html":{},"Advanced-angular/advanced-angular.html":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/aot_limitations.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/directives.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Angular-CLI/adding-third-party-libraries.html":{},"Angular-CLI/cli.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-an-app.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/creating-routes.html":{},"Angular-CLI/init.html":{},"Angular-CLI/linting.html":{},"Angular-CLI/serving-the-app.html":{},"Angular-CLI/setup.html":{},"Angular-CLI/testing.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/modules.html":{},"Modules/modules.html#模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/observables_vs_promises.html":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/pipes.html":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/project-setup.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Project-setup/webpack.html":{},"Project-setup/webpack.html#Webpack":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routerlink.html":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Routing/routing.html":{},"Routing/why_routing.html":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/components.html":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/filename-conventions.html":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/json-xhr.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/redux.html":{},"Testing/refactor.html":{},"Testing/services.html":{},"Testing/setup.html":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/strategies.html":{},"Testing/test-components.html":{},"Testing/test-components.html#测试组件":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/testing.html":{},"Testing/toolchain.html":{},"Testing/typings.html":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"a11y/a11y.html":{},"a11y/key-concerns.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/advanced-components.html":{},"advanced-components/component_lifecycle.html":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"state-management/state-management.html":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{},"state-management/using_redux_with_components.html#计数器示例":{},"tooling/chrome.html":{},"tooling/back_end_code_sharing_and_distribution.html":{},"tooling/module_loading_bundling_and_build_tasks.html":{},"tooling/source_control.html":{},"tooling/the_command_line.html":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/interception.html":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"zone/zone_primer.html":{},"Change-detection/how_change_detection_works.html":{},"license.html":{},"license.html#License":{},"license.html#Under-the-following-terms":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"README.html":{},"a11y/why-a11y.html":{},"why_TypeScript.html":{}}}],["0",{"_index":204,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/typings.html":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Immutable/lists.html":{},"Immutable/maps_are_iterable.html":{},"Http/retry.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"practice.html":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["0\"errors:/h6",{"_index":3991,"title":{},"body":{"Observables/using_observables.html":{}}}],["0\"finished:/h6",{"_index":3994,"title":{},"body":{"Observables/using_observables.html":{}}}],["0\"values:/h6",{"_index":3990,"title":{},"body":{"Observables/using_observables.html":{}}}],["0.123",{"_index":6744,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["0.4rem",{"_index":776,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["000",{"_index":786,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["012",{"_index":1990,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["02",{"_index":1995,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["0500",{"_index":6649,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["06",{"_index":4802,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["08:23:17",{"_index":6647,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["0h0",{"_index":1980,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["0、1",{"_index":1872,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["1",{"_index":7,"title":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/Change_Detection.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/form.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"practice.html":{},"why_angular_2.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/config.html#Base-标签":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routerlink.html":{},"Routing/routerlink.html#RouterLink":{},"Routing/routerlink.html#Navigating-Programmatically":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{},"index.html":{},"index.html#Getting-Started":{}}}],["1&#x4e2d;&#x4f7f;&#x7528;&#x6307;&#x4ee4;&#x3002;&#x4e0a;&#x9762;&#x7684;&#x7ec4;&#x4ef6;&#x6a21;&#x677f;&#x7b49;&#x4ef7;&#x4e8e;&#x4ee5;&#x4e0b;&#xff1a",{"_index":1080,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["1&#x4e86;&#x3002;&#x4f46;&#x662f;&#xff0c;&#x5728;&#x51b3;&#x5b9a;&#x4f7f;&#x7528;angular&#x4e4b;&#x524d;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x5728;react&#x4e2d;&#x6784;&#x5efa;&#x4e86;&#x4e00;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":2823,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["1&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x6837;&#x5f0f;&#xff0c;&#x4f46;&#x662f;&#x4f7f;&#x7528;&#x4e86;&#x63a7;&#x5236;&#x5668;&#x548c;&#x6307;&#x4ee4;&#xff0c;&#x800c;&#x4e0d;&#x662f;typescript&#x7c7b;&#x3002",{"_index":3081,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["1&#x66f4;&#x7075;&#x6d3b;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x518d;&#x5c40;&#x9650;&#x4e8e;&#x53ea;&#x4f9d;&#x8d56",{"_index":1941,"title":{},"body":{"Form/form.html#Forms":{}}}],["1&#x7684;&#x89d2;&#x5ea6;&#x6765;&#x770b;&#xff0c;angular",{"_index":736,"title":{},"body":{"Directives/directives.html#指令":{}}}],["1&#xff0c;&#x5f00;&#x53d1;&#x8005;&#x5fc5;&#x987b;&#x4e86;&#x89e3",{"_index":3038,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["1,2,3",{"_index":5985,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["1,2,3,4,5,6",{"_index":3229,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["1.2",{"_index":3106,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{}}}],["1.23",{"_index":2953,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["1.2rem",{"_index":765,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{}}}],["1.37",{"_index":2955,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["1.39",{"_index":2954,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["1.43",{"_index":2952,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["1.4k",{"_index":2940,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["1.5",{"_index":301,"title":{},"body":{"Components/components.html":{},"why_angular_2.html":{}}}],["1.5&#x6dfb;&#x52a0;&#x4e86;&#x4e00;&#x4e2a",{"_index":3044,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["1.6",{"_index":1909,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["1.7",{"_index":2956,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["1.x",{"_index":3,"title":{},"body":{"bootstrapping/bootstrapping.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Pipes/pipes.html":{},"README.html":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["1.x&#x4e2d;&#x53d1;&#x73b0;&#x4ef7;&#x503c;&#x7684;&#x7ec4;&#x7ec7;&#x5c06;&#x5728;angular",{"_index":3002,"title":{},"body":{"why_angular_2.html#Why-Angular-2":{}}}],["1.x&#x548c;angular",{"_index":3129,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["1.x&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":6893,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["1.x&#x63d0;&#x4f9b;&#x7684;&#x529f;&#x80fd;&#x611f;&#x5230;&#x6ee1;&#x610f;&#x3002",{"_index":3000,"title":{},"body":{"why_angular_2.html#Why-Angular-2":{}}}],["1.x&#x66f4;&#x52a0;&#x73b0;&#x4ee3;&#xff0c;&#x66f4;&#x6709;&#x80fd;&#x529b;&#xff0c;&#x66f4;&#x5bb9;&#x6613;&#x8ba9;&#x65b0;&#x624b;&#x5b66;&#x4e60;&#xff0c;&#x540c;&#x65f6;&#x4e5f;&#x66f4;&#x5bb9;&#x6613;&#x8ba9;&#x9879;&#x76ee;&#x8001;&#x624b;&#x4f7f;&#x7528;&#x3002",{"_index":3037,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["1.x&#x7684;&#x6307;&#x4ee4;&#xff0c;&#x5b83;&#x4eec;&#x7684;api&#x7279;&#x6027;&#x66f4;&#x5bb9;&#x6613;&#x9605;&#x8bfb;&#x3002;&#x6b64;&#x5916;&#xff0c;&#x4e3a;&#x4e86;&#x5e2e;&#x52a9;&#x8f7b;&#x677e;&#x8fc7;&#x6e21;&#x5230;angular",{"_index":3042,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["1.x&#x7684;&#x8bb8;&#x591a;&#x6838;&#x5fc3;&#x6982;&#x5ff5;&#x548c;&#x7ea6;&#x5b9a;&#xff0c;&#x4f8b;&#x5982;&#x3002",{"_index":3057,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["1.x中发现价值的组织将在angular",{"_index":2927,"title":{},"body":{"why_angular_2.html":{}}}],["1.x和angular",{"_index":3099,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["1.x的di",{"_index":511,"title":{},"body":{"Di/di.html":{}}}],["1.x的两个注入系统改进了angular",{"_index":510,"title":{},"body":{"Di/di.html":{}}}],["1.x的内置过滤器已经转换为angular",{"_index":4114,"title":{},"body":{"Pipes/pipes.html":{}}}],["1.x的指令，它们的api特性更容易阅读。此外，为了帮助轻松过渡到angular",{"_index":2966,"title":{},"body":{"why_angular_2.html":{}}}],["1.x的核心特性，在angular",{"_index":507,"title":{},"body":{"Di/di.html":{}}}],["1/app",{"_index":847,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["10",{"_index":8,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"compare.html":{},"compare.html#与其他框架比较":{},"practice.html":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["100",{"_index":4069,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["100.1234",{"_index":4119,"title":{},"body":{"Pipes/using_pipes.html":{}}}],["100.123456",{"_index":4125,"title":{},"body":{"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{}}}],["1000",{"_index":3839,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["10000",{"_index":4076,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["100000",{"_index":4077,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["1000000",{"_index":2494,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["10000000",{"_index":4078,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["10000000000",{"_index":4079,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["1000ms，用户a在0秒到达音乐厅并找了一个好位置，用户b在2500m",{"_index":3856,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{}}}],["101",{"_index":6644,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["102",{"_index":1764,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["1024",{"_index":4062,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["105",{"_index":6663,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["10t17:25:36z",{"_index":4803,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["11",{"_index":61,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["12",{"_index":90,"title":{},"body":{"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"compare.html":{},"compare.html#与其他框架比较":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["12*4",{"_index":2930,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["12*5",{"_index":2929,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["123",{"_index":1972,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["13",{"_index":159,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/inject_and_injectable.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Http/retry.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["14",{"_index":160,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Http/retry.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["140k",{"_index":2959,"title":{},"body":{"why_angular_2.html":{}}}],["15",{"_index":161,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Http/retry.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{},"a11y/why-a11y.html":{}}}],["1500",{"_index":3905,"title":{},"body":{"Observables/error_handling.html":{}}}],["153k",{"_index":2937,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["16",{"_index":162,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/using_other_components.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Http/retry.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"compare.html":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["16k",{"_index":2938,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["17",{"_index":163,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/using_other_components.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["18",{"_index":164,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["189",{"_index":2944,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["18年的经验的软件架构师，过去10",{"_index":2780,"title":{},"body":{"vs_react.html":{}}}],["19",{"_index":165,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["1906",{"_index":4797,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["1px",{"_index":244,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/projection.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"Change-detection/how_change_detection_works.html":{}}}],["1rem",{"_index":356,"title":{},"body":{"Components/projection.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["1rem;\"outlet:/div",{"_index":4461,"title":{},"body":{"Routing/aux-routes.html":{}}}],["1rem;\"sidebar",{"_index":4462,"title":{},"body":{"Routing/aux-routes.html":{}}}],["1rem;outlet:/div",{"_index":4477,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["1rem;sidebar",{"_index":4479,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["1s",{"_index":5269,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["1了。但是，在决定使用angular之前，我们还在react",{"_index":2782,"title":{},"body":{"vs_react.html":{}}}],["1应用程序的样式，但是使用了控制器和指令，而不是typescript",{"_index":2989,"title":{},"body":{"why_angular_2.html":{}}}],["1的角度来看，angular",{"_index":727,"title":{},"body":{"Directives/directives.html":{}}}],["1（递增）；也就是说，week",{"_index":1870,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["2",{"_index":1,"title":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"why_angular_2.html#Why-Angular-2":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"a11y/a11y.html#Angular-2-中的-Web-无障碍":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"README.html#Rangle’s-Angular-2-Training-Book":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}},"body":{"bootstrapping/bootstrapping.html":{},"Change-detection/angular_1_vs_angular_2.html":{},"Change-detection/additional_resources.html":{},"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/Change_Detection.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di.html":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/directives.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"compare.html":{},"compare.html#与其他框架比较":{},"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#Keeping-up-to-date":{},"further-reading.html#Other":{},"practice.html":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Accessibility/accessibility.html":{},"Advanced-angular/advanced-angular.html":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/directives.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Angular-CLI/cli.html":{},"Angular-CLI/creating-an-app.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/creating-routes.html":{},"Angular-CLI/setup.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/pipes.html":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/project-setup.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Project-setup/webpack.html":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Routing/routing.html":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/components.html":{},"Testing/components.html#测试组件":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/filename-conventions.html":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/services.html":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/test-components.html":{},"Testing/test-components.html#测试组件":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"a11y/a11y.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{},"README.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["2\"/p",{"_index":4137,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{}}}],["2&#x200a;&#x2014;google&#x516c;&#x5f00;&#x652f;&#x6301;&#x65f6;&#x95f4;&#x548c;&#x7248;&#x672c;&#x8fed;&#x4ee3;&#x5b89;&#x6392;&#xff1a;2.0&#x7248;&#x4e4b;&#x540e;&#x6ca1;&#x6709;&#x66f4;&#x591a;&#x7a81;&#x7834;&#x6027;&#x53d8;&#x5316",{"_index":2901,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x2019;",{"_index":396,"title":{"Di/angular2_di.html#Angular-2’s-DI":{}},"body":{}}],["2&#x201d;&#x4e5f;&#x5ba3;&#x5e03;&#x4e86;&#x5176;&#x6700;&#x7ec8;&#x7248;&#x672c;&#x3002",{"_index":6878,"title":{},"body":{"README.html#Rangle’s-Angular-2-Training-Book":{}}}],["2&#x3002",{"_index":2874,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x3002;angular",{"_index":1109,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}}}],["2&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x5b57;&#x9762;&#x91cf;&#xff08",{"_index":573,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x4e0d;&#x540c;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x663e;&#x5f0f;&#x5bfc;&#x5165;&#x8fd9;&#x4e9b;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#xff0c;&#x4ee5;&#x4fbf;&#x80fd;&#x591f;&#x5728;&#x6a21;&#x677f;&#x4e2d;&#x4f7f;&#x7528;&#x7c7b;&#x4f3c",{"_index":3581,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["2&#x4e0d;&#x662f;&#x7f16;&#x5199;&#x989d;&#x5916;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x800c;&#x662f;&#x521b;&#x5efa;&#x548c;&#x5b9e;&#x65bd;&#x81ea;&#x5df1;&#x7684;css&#x7c7b;&#xff0c;&#x4ee5;&#x7ba1;&#x7406;&#x8fd9;&#x4e9b;&#x884c;&#x4e3a;&#xff0c;&#x4e3a;&#x60a8;&#x63d0;&#x4f9b;&#x4e86;&#x51e0;&#x4e2a;&#x6837;&#x5f0f;&#x7c7b;&#xff0c;&#x5df2;&#x7ecf;&#x53ef;&#x4ee5;&#x5728;inputs&#x4e0a;&#x4f7f;&#x7528;&#x3002",{"_index":2249,"title":{},"body":{"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["2&#x4e0d;&#x77e5;&#x9053;&#x4ed6;&#x4eec;&#x3002",{"_index":427,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["2&#x4e0d;&#x9650;&#x4e8e;&#x6ce8;&#x5165;&#x7c7b;&#x3002",{"_index":563,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x4e0e;&#x72ec;&#x7acb;&#x7684;react&#x8fdb;&#x884c;&#x6bd4;&#x8f83;&#xff0c;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x4e0e;react&#x4ee5;&#x53ca;&#x83b7;&#x5f97;&#x4e0e;angular",{"_index":2852,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x4e2d;&#x542f;&#x7528;aot&#xff0c;&#x6709;&#x4e24;&#x79cd;&#x53ef;&#x80fd;&#x7684;&#x65b9;&#x6cd5;&#xff1a",{"_index":3168,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["2&#x4e2d;&#x5f15;&#x5165;&#x7684;ahead",{"_index":3132,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["2&#x4e2d;&#x627e;&#x5230;&#x66f4;&#x591a;&#x7684;&#x4ef7;&#x503c;&#x3002",{"_index":3003,"title":{},"body":{"why_angular_2.html#Why-Angular-2":{}}}],["2&#x4e2d;&#x6709;&#x4e09;&#x79cd;&#x4e3b;&#x8981;&#x7c7b;&#x578b;&#x7684;&#x6307;&#x4ee4;&#xff1a",{"_index":739,"title":{},"body":{"Directives/directives.html#指令":{}}}],["2&#x4e2d;&#x6784;&#x5efa;&#x6a21;&#x677f;&#x9a71;&#x52a8;&#x7684;&#x8868;&#x5355;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f9d;&#x9760",{"_index":2018,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["2&#x4e2d;&#x6784;&#x5efa;&#x8868;&#x5355;&#x6700;&#x76f4;&#x63a5;&#x7684;&#x65b9;&#x6cd5;&#x662f;&#x5229;&#x7528;&#x4e3a;&#x60a8;&#x63d0;&#x4f9b;&#x7684;&#x6307;&#x4ee4;&#x3002",{"_index":2174,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["2&#x4e2d;&#x6d4b;&#x8bd5;&#x670d;&#x52a1;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x91c7;&#x7528;&#x4e86;&#x8bb8;&#x591a;&#x7528;&#x4e8e;&#x6d4b;&#x8bd5;&#x7ec4;&#x4ef6;&#x7684;&#x76f8;&#x540c;&#x6280;&#x672f;&#x548c;&#x7b56;&#x7565;&#x3002",{"_index":5370,"title":{},"body":{"Testing/services.html#测试服务":{}}}],["2&#x4e2d;&#x7684;&#x521d;&#x59cb;&#x7f16;&#x8bd1;&#x5668;&#x79f0;&#x4e3a;jit&#xff08;just",{"_index":3130,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["2&#x4e2d;&#x7684;web&#x8f85;&#x52a9;&#x529f;&#x80fd",{"_index":3091,"title":{"Accessibility/accessibility.html#Angular-2中的Web辅助功能":{}},"body":{}}],["2&#x4e2d;&#x8003;&#x8651;&#x3002",{"_index":3062,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x4e2d;&#xff0c;&#x6bcf;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e0d;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x6bcf;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x81f3;&#x5c11;&#x6709;&#x4e00;&#x4e2a;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":666,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["2&#x4e2d;&#xff0c;&#x7ec4;&#x4ef6;&#x901a;&#x5e38;&#x4f9d;&#x8d56;&#x4e8e;&#x670d;&#x52a1;&#x548c;&#x5176;&#x4ed6;&#x7c7b;&#xff08;&#x7ba1;&#x9053;/&#x63d0;&#x4f9b;&#x7a0b;&#x5e8f;&#x7b49;&#xff09;&#x6765;&#x8fd0;&#x884c;&#xff0c;&#x8fd9;&#x5c06;&#x88ab;&#x6ce8;&#x5165;&#x5230;&#x7ec4;&#x4ef6;&#x7c7b;&#x7684;&#x6784;&#x9020;&#x51fd;&#x6570;&#x4e2d;&#x3002",{"_index":5034,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["2&#x4e3a;&#x6211;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a",{"_index":5286,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["2&#x4e3b;&#x9898;&#xff0c;&#x4ece;&#x4f7f;&#x7528;angular",{"_index":6884,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["2&#x4e5f;&#x652f;&#x6301;&#x66ff;&#x4ee3;html5&#x98ce;&#x683c;&#xff0c;&#x8fd9;&#x6392;&#x9664;&#x4e86;&#x5728",{"_index":1962,"title":{},"body":{"Form/getting-started.html#入门":{}}}],["2&#x4e5f;&#x6709;&#x4e00;&#x4e2a;&#x505a;&#x540c;&#x6837;&#x7684;&#x4e8b;&#x60c5;&#x7684;&#x5185;&#x7f6",{"_index":1084,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["2&#x4f1a;&#x5c06;&#x88ab;&#x6fc0;&#x6d3b;&#x7684;&#x8def;&#x7531;&#x7684;&#x7ec4;&#x4ef6;&#x52a8;&#x6001;&#x5730;&#x6dfb;&#x52a0;&#x5230",{"_index":4748,"title":{},"body":{"Routing/routeroutlet.html#动态添加路由组件":{}}}],["2&#x4f7f;&#x7528;&#x4e86;&#x8bb8;&#x591a;es6&#x548c;typescript&#x7684;&#x7279;&#x6027;&#x3002",{"_index":1110,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}}}],["2&#x4fdd;&#x7559;&#x4e86;angular",{"_index":3056,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x5047;&#x8bbe;&#x5b83;&#x88ab;&#x8d4b;&#x4e88;&#x4e00;&#x4e2a;&#x7c7b;&#x3002",{"_index":422,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["2&#x5141;&#x8bb8;&#x521b;&#x5efa;&#x4f60;&#x81ea;&#x5df1;&#x7684;&#x7ba1;&#x9053;&#xff1a",{"_index":4081,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["2&#x5141;&#x8bb8;&#x66f4;&#x4e30;&#x5bcc;&#x7684;&#x5f00;&#x53d1;&#x751f;&#x6001;&#x7cfb;&#x7edf;&#x3002",{"_index":3049,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x5185;&#x7f6e;&#x6307;&#x4ee4;&#x6db5;&#x76d6;&#x4e86;&#x5e7f;&#x6cdb;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x4f46;&#x6709;&#x65f6;&#x521b;&#x5efa;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x7684;&#x6307;&#x4ee4;&#x5c06;&#x5e26;&#x6765;&#x66f4;&#x4f18;&#x96c5;&#x7684;&#x89e3;&#x51b3;&#x65b9;&#x6848;&#x3002",{"_index":3274,"title":{},"body":{"Advanced-angular/directives.html#Angular-指令":{}}}],["2&#x5185;&#x7f6e;&#x7ed3;&#x6784;&#x6307;&#x4ee4;&#x5b8c;&#x5168;&#x76f8;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x7ed1;&#x5b9a",{"_index":3247,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["2&#x529f;&#x80fd;&#x76f8;&#x540c;&#x7684;&#x6240;&#x6709;&#x5176;&#x4ed6;&#x8f6f;&#x4ef6;&#x5305;&#xff08;&#x7c7b;&#x4f3c;react",{"_index":2853,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7684",{"_index":590,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x53ef;&#x4ee5;&#x8ba9;&#x4f60;&#x4ee5;&#x5f88;&#x8f7b;&#x677e;&#x5730;&#x505a;&#x5230;&#x3002",{"_index":2105,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["2&#x548c;&#x5b83;&#x63d0;&#x4f9b;&#x7684;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x3002;&#x5b83;&#x611f;&#x89c9;&#x50cf;&#x4e00;&#x4e2a;&#x4f01;&#x4e1a;&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x4f1a;&#x719f;&#x6089;&#x7684;&#x9ad8;&#x8d28;&#x91cf;&#x6846;&#x67b6;&#x3002;&#x5b83;&#x6b63;&#x5728;&#x63a8;&#x52a8;&#x57fa;&#x4e8e;web&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6846;&#x67b6;&#x4e2d;&#x9884;&#x671f;&#x7684;&#x754c;&#x9650;&#x3002",{"_index":2870,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x54cd;&#x5e94;&#x7c7b;&#x7684;&#x683c;&#x5f0f;&#x3002;&#x5728;&#x8fd9;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x53ea;&#x9700;&#x5c06;body&#x5c5e;&#x6027;&#x8bbe;&#x7f6e;&#x4e3a;&#x60a8;&#x53ef;&#x80fd;&#x4ece;&#x7ef4;&#x57fa;&#x767e;&#x79d1;&#x4e2d;&#x770b;&#x5230;&#x7684;&#x57fa;&#x672c;&#x641c;&#x7d22;&#x7ed3;&#x679c;&#x96c6;&#x3002;&#x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x8bbe;&#x7f6e;cookie&#xff0c;http&#x6807;&#x5934;&#x7b49;&#x7b49;&#xff0c;&#x6216;&#x5c06;&#x72b6;&#x6001;&#x503c;&#x8bbe;&#x7f6e;&#x4e3a;&#x975e;200&#x72b6;&#x6001;&#xff0c;&#x4ee5;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x5982;&#x4f55;&#x54cd;&#x5e94;&#x9519;&#x8bef;&#x3002;&#x4e00;&#x65e6;&#x6211;&#x4eec;&#x914d;&#x7f6e;&#x4e86",{"_index":5307,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["2&#x56e2;&#x961f;&#x5efa;&#x8bae;&#x5c06;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x811a;&#x672c;&#x653e;&#x5728;&#x4ed6;&#x4eec;&#x6b63;&#x5728;&#x6d4b;&#x8bd5;&#x7684;&#x6587;&#x4ef6;&#x65c1;&#x8fb9;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":4988,"title":{},"body":{"Testing/filename-conventions.html#文件名约定":{}}}],["2&#x56e2;&#x961f;&#x771f;&#x7684;&#x60f3;&#x4f7f;&#x7528;&#x5b83;&#x4eec;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x4eec;&#x5df2;&#x7ecf;&#x88ab;&#x5305;&#x62ec;&#x5728;typescript&#x4e2d;&#x3002",{"_index":1576,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["2&#x5728;&#x5904;&#x7406;&#x8868;&#x5355;&#x4e0a;&#x6bd4;angular",{"_index":1940,"title":{},"body":{"Form/form.html#Forms":{}}}],["2&#x5728;&#x8bbe;&#x8ba1;&#x4e4b;&#x521d;&#x5c31;&#x8003;&#x8651;&#x5230;&#x79fb;&#x52a8;&#x7aef;&#x3002;&#x9664;&#x4e86;&#x6709;&#x9650;&#x7684;&#x5904;&#x7406;&#x80fd;&#x529b;&#xff0c;&#x79fb;&#x52a8;&#x8bbe;&#x5907;&#x5177;&#x6709;&#x5c06;&#x5b83;&#x4eec;&#x4e0e;&#x4f20;&#x7edf;&#x8ba1;&#x7b97;&#x673a;&#x5206;&#x79bb;&#x7684;&#x5176;&#x4ed6;&#x7279;&#x5f81;&#x548c;&#x9650;&#x5236;&#x3002;&#x89e6;&#x6478;&#x754c;&#x9762;&#xff0c;&#x6709;&#x9650;&#x7684;&#x5c4f;&#x5e55;&#x548c;&#x79fb;&#x52a8;&#x786c;&#x4ef6;&#x90fd;&#x5df2;&#x5728;angular",{"_index":3061,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x5728;&#x8def;&#x7531;&#x6811;&#x94fe;&#x63a5;&#x5230;&#x54ea;&#x91cc;&#x3002",{"_index":4556,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["2&#x5982;&#x4f55;&#x5b9e;&#x73b0;&#x4ed6;&#x4eec;&#x7684",{"_index":1933,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["2&#x5982;&#x4f55;&#x77e5;&#x9053;&#x5982;&#x4f55;&#x6784;&#x5efa",{"_index":419,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["2&#x5982;&#x4f55;&#x8ddf;&#x8e2a;&#x4e8b;&#x60c5;&#x6765;&#x83b7;&#x5f97;&#x4e00;&#x4e9b;&#x989d;&#x5916;&#x7684;&#x6027;&#x80fd;&#x3002",{"_index":972,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["2&#x5c06;&#x8be5;&#x5bf9;&#x8c61;&#x7684;&#x6bcf;&#x4e2a;&#x5c5e;&#x6027;&#x540d;&#x79f0;&#x5e94;&#x7528;&#x4e8e;&#x7ec4;&#x4ef6;&#x3002",{"_index":811,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{}}}],["2&#x5c06;&#x901a;&#x8fc7;&#x5f15;&#x7528;&#x6765;&#x5c1d;&#x8bd5;&#x548c;&#x8ddf;&#x8e2a;&#x5bf9;&#x8c61;&#xff0c;&#x4ee5;&#x786e;&#x5b9a;&#x5e94;&#x8be5;&#x521b;&#x5efa;&#x548c;&#x9500;&#x6bc1;&#x54ea;&#x4e9b;&#x9879;&#x76ee;&#x3002",{"_index":970,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["2&#x5c24;&#x5176;&#x91cd;&#x8981;&#xff0c;&#x56e0;&#x4e3a;&#x6240;&#x6709;&#x7684;&#x53c2;&#x4e0e;&#x3002",{"_index":4377,"title":{},"body":{"Project-setup/project-setup.html#项目设置":{}}}],["2&#x5de5;&#x5177;&#x94fe;&#x5165;&#x95e8;&#x5230;&#x80fd;&#x591f;&#x4ee5;&#x53ef;&#x6269;&#x5c55;&#x548c;&#x53ef;&#x7ef4;&#x62a4;&#x7684;&#x65b9;&#x5f0f;&#x7f16;&#x5199;angular",{"_index":6885,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["2&#x5df2;&#x7ecf;&#x4e3a;&#x4f60;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a",{"_index":2176,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["2&#x5df2;&#x7ecf;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a",{"_index":416,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["2&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":3488,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["2&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x5c24;&#x5176;&#x660e;&#x663e;&#xff0c;&#x5176;&#x4e2d;&#x4f7f;&#x7528;&#x4e86;&#x5927;&#x91cf;&#x7684;typescript&#x3002;&#x867d;&#x7136;&#x6211;&#x4eec;&#x4e0d;&#x5728;&#x6211;&#x4eec;&#x7684;&#x8bfe;&#x7a0b;&#x4e2d;&#x8fd9;&#x6837;&#x505a;&#xff0c;&#x4f46;&#x662f;&#x9879;&#x76ee;&#x4e5f;&#x53ef;&#x80fd;&#x6d89;&#x53ca;&#x5230;&#x5fc5;&#x987b;&#x96c6;&#x6210;&#x7684;css&#x9884;&#x5904;&#x7406;&#x5668;&#xff08;sass&#xff0c;stylus&#xff09;&#x6216;&#x6a21;&#x677f;&#x5f15;&#x64ce;&#xff08;jad",{"_index":4448,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["2&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e5f;&#x4e0d;&#x4f8b;&#x5916;&#x3002",{"_index":3093,"title":{},"body":{"Accessibility/accessibility.html#Angular-2中的Web辅助功能":{},"a11y/a11y.html#Angular-2-中的-Web-无障碍":{}}}],["2&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x57fa;&#x672c;&#x6587;&#x4ef6;&#x3002",{"_index":4230,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["2&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x521b;&#x9020;&#x4e00;&#x4e2a;&#x8fd0;&#x884c;&#x5b83;&#x73af;&#x5883;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;chrome&#x6216;firefox&#x6d4f;&#x89c8;&#x5668;&#x6765;&#x5b9e;&#x73b0;&#xff08;karma&#x652f;&#x6301;&#x6d4f;&#x89c8;&#x5668;&#x6d4b;&#x8bd5;&#xff09;&#xff0c;&#x6216;&#x8005;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x65e0;&#x6d4f;&#x89c8;&#x5668;&#x7684;&#x73af;&#x5883;&#x4e2d;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x4e3a;&#x6211;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;&#x81ea;&#x52a8;&#x5316;&#x67d0;&#x4e9b;&#x4efb;&#x52a1;&#x548c;&#x7ba1;&#x7406;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b;&#x7684;&#x63a7;&#x5236;&#x3002",{"_index":5476,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["2&#x5f00;&#x53d1;&#x7684;&#x7ecf;&#x9a8c;&#x4ee5;&#x53ca;&#x5ba2;&#x6237;&#x7684;&#x9700;&#x6c42;&#xff0c;&#x6211;&#x4eec;&#x51b3;&#x5b9a;&#x4f7f;&#x7528;angular&#x3002",{"_index":2920,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x6267;&#x884c;&#x7684;jit&#x7f16;&#x8bd1;&#x76f8;&#x6bd4;&#xff0c;aot&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x8f83;&#x5c0f;&#x7684;&#x5305;&#xff0c;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x66f4;&#x5feb;&#x7684;&#x5448;&#x73b0;&#x3002",{"_index":3134,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["2&#x6267;&#x884c;&#x7ed1;&#x5b9a;&#x65f6;&#x6267;&#x884c;&#x4e00;&#x4e9b;&#x4ee3;&#x7801;&#x3002",{"_index":3245,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["2&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x5185;&#x7f6e;&#x7684;&#x6307;&#x4ee4",{"_index":1036,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["2&#x63d0;&#x4f9b;&#x4e86;&#x53e6;&#x4e00;&#x79cd;&#x5229;&#x7528;&#x539f;&#x751f;&#x529f;&#x80fd;&#x7684;&#x65b9;&#x5f0f;&#x3002",{"_index":3070,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x63d0;&#x4f9b;&#x4e86;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#x8bb8;&#x591a;&#x9a8c;&#x8bc1;&#x5668;&#x3002",{"_index":2151,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["2&#x652f;&#x6301;&#x8f85;&#x52a9;&#x8def;&#x7531;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x5b83;&#x5141;&#x8bb8;&#x60a8;&#x5728;&#x5355;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x8bbe;&#x7f6e;&#x548c;&#x5bfc;&#x822a;&#x591a;&#x4e2a;&#x72ec;&#x7acb;&#x8def;&#x7531;&#x3002",{"_index":4466,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["2&#x6539;&#x8fdb;&#x4e86;&#x8be5;&#x529f;&#x80fd;&#xff0c;&#x4f7f;&#x5176;&#x66f4;&#x5feb;&#xff0c;&#x66f4;&#x53ef;&#x6269;&#x5c55;&#x548c;&#x66f4;&#x73b0;&#x4ee3;&#x3002",{"_index":3001,"title":{},"body":{"why_angular_2.html#Why-Angular-2":{}}}],["2&#x65f6;&#xff0c;&#x4ed6;&#x5df2;&#x7ecf;&#x719f;&#x6089;angular",{"_index":2822,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x65f6;&#xff0c;&#x6839;&#x636e;&#x4f01;&#x4e1a;&#x7684;&#x9700;&#x6c42;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x66f4;&#x597d;&#x5730;&#x4e86;&#x89e3;&#x4e3a;&#x4ec0;&#x4e48;angular",{"_index":2897,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x662f;&#x4e00;&#x4e2a;&#x66f4;&#x6d41;&#x7ebf;&#x578b;&#x7684;&#x6846;&#x67b6;&#xff0c;&#x8ba9;&#x5f00;&#x53d1;&#x8005;&#x4e13;&#x6ce8;&#x4e8e;&#x7b80;&#x5355;&#x5730;&#x6784;&#x5efa;javascript&#x7c7b;&#x3002;&#x89c6;&#x56fe;&#x548c;&#x63a7;&#x5236;&#x5668;&#x88ab;&#x66ff;&#x6362;&#x4e3a;&#x7ec4;&#x4ef6;&#xff0c;&#x8fd9;&#x53ef;&#x4ee5;&#x88ab;&#x63cf;&#x8ff0;&#x4e3a;&#x7cbe;&#x7b80;&#x7248;&#x6307;&#x4ee4;&#x3002;&#x751a;&#x81f3;&#x7ecf;&#x9a8c;&#x4e30;&#x5bcc;&#x7684;angular&#x7a0b;&#x5e8f;&#x5458;&#x4e5f;&#x4e0d;&#x603b;&#x662f;&#x77e5;&#x9053;angular1.x&#x6307;&#x4ee4;&#x7684;&#x6240;&#x6709;&#x529f;&#x80fd;&#x3002",{"_index":3040,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x662f;&#x6709;&#x7528;&#x7684;&#x3002",{"_index":6882,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["2&#x662f;&#x7528;typescript&#x7f16;&#x5199;&#x7684;&#xff0c;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x5b9e;&#x73b0;&#x8bb8;&#x591a;&#x65b0;es2016+&#x7279;&#x6027;&#x7684;javascript&#x8d85;&#x96c6;&#x3002",{"_index":3047,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x66f4;&#x8fdb;&#x4e00;&#x6b65;&#x7b80;&#x5316;&#x4e86;di&#x3002",{"_index":399,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["2&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":608,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x6709;&#x4e00;&#x4e2a;&#x89e3;&#x51b3;&#x65b9;&#x6848;&#x3002",{"_index":2016,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["2&#x6709;&#x4e00;&#x4e9b;&#x5185;&#x7f6e;&#x7684;&#x7ed3;&#x6784;&#x6307;&#x4ee4;&#xff0c;&#x5982",{"_index":1071,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["2&#x6709;&#x5229;&#x4e8e;&#x4ed6;&#x4eec;&#x3002",{"_index":2898,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x670d;&#x52a1;&#x4e00;&#x6837;&#x3002",{"_index":4961,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["2&#x671f;&#x671b;&#x63d0;&#x4f9b;&#x7684;&#x503c;&#x662f;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x3002",{"_index":606,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x67b6;&#x6784;&#x4f7f;&#x6784;&#x5efa;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x66f4;&#x6109;&#x5feb;&#x3002;&#x6211;&#x4eec;&#x80fd;&#x591f;&#x4e86;&#x89e3;oop&#xff0c;&#x8bbe;&#x8ba1;&#x6a21;&#x5f0f;&#x548c;&#x6700;&#x4f73;&#x5b9e;&#x8df5;&#x67b6;&#x6784;&#xff0c;&#x5e76;&#x5c06;&#x5176;&#x5e94;&#x7528;&#x4e8e;web&#x3002",{"_index":2882,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x6846;&#x67b6;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x90e8;&#x5206;&#xff0c;&#x5305;&#x62ec;&#x9ad8;&#x7ea7;&#x67b6;&#x6784;&#x90fd;&#x7531;google&#x63d0;&#x4f9b;&#x652f;&#x6301;&#x3002;&#x8fd9;&#x771f;&#x7684;&#x5e2e;&#x52a9;&#x5927;&#x5bb6;&#x878d;&#x5165;&#x540c;&#x4e00;&#x4e2a;&#x9875;&#x9762;&#xff0c;&#x6807;&#x51c6;&#x5316;&#x5927;&#x56e2;&#x961f;&#xff0c;&#x4f46;&#x5b83;&#x4e5f;&#x5bfc;&#x81f4;&#x4e86;&#x4e00;&#x4e9b;&#x95ee;&#x9898;&#x3002",{"_index":2868,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x6a21;&#x5757;&#x7684;&#x8868;&#x9762;&#x3002;&#x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x56e2;&#x961f;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7;&#x6df1;&#x5165;&#x4e86;&#x89e3;angular",{"_index":2877,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x6a21;&#x5757;&#xff0c;&#x53ea;&#x9700;&#x4f7f;&#x7528",{"_index":3563,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["2&#x6a21;&#x62df;html&#x6a21;&#x677f;&#x6807;&#x7b7e;&#xff0c;&#x5e76;&#x4e14;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#x4e0d;&#x6e32;&#x67d3;&#x4efb;&#x4f55;&#x5b50;&#x5143;&#x7d20;&#x3002",{"_index":3251,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["2&#x6b63;&#x662f;&#x5728;&#x8fc7;&#x53bb;&#x4e94;&#x5e74;&#x793e;&#x533a;&#x7684;&#x8fd9;&#x4e9b;&#x53cd;&#x9988;&#x4e4b;&#x4e0a;&#x5efa;&#x7acb;&#x7684;&#x3002",{"_index":3034,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x6bd4;angular",{"_index":3036,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x6ce8;&#x5165;&#x5668;&#xff08;&#x4e00;&#x822c;&#xff09;&#x8fd4;&#x56de;&#x5355;&#x4f8b;&#x3002",{"_index":661,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["2&#x6dfb;&#x52a0;&#x5230;&#x65b9;&#x7a0b;&#x5f0f;&#x4e2d;&#x7684;&#x5dee;&#x5f02;&#x3002",{"_index":3095,"title":{},"body":{"Accessibility/accessibility.html#Angular-2中的Web辅助功能":{},"a11y/a11y.html#Angular-2-中的-Web-无障碍":{}}}],["2&#x6e90;&#x4ee3;&#x7801;&#x5e76;&#x5206;&#x4eab;&#x6211;&#x4eec;&#x7684;&#x77e5;&#x8bc6;&#xff0c;&#x6210;&#x4e3a;&#x4e13;&#x5bb6;&#xff0c;&#x4e00;&#x8d77;&#x5de5;&#x4f5c;&#x3002",{"_index":2878,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x7279;&#x5b9a;&#x88c5;&#x9970;&#x5668;&#xff0c;&#x5982",{"_index":1587,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["2&#x7528;&#x4e8e;&#x6784;&#x5efa;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x6838;&#x5fc3;&#x6784;&#x5efa;&#x5757;&#x4e4b;&#x4e00;&#x3002",{"_index":732,"title":{},"body":{"Directives/directives.html#指令":{}}}],["2&#x7684",{"_index":568,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x7684;&#x516c;&#x53f8;&#xff0c;&#x6216;&#x8005;&#x60f3;&#x8981;&#x63d0;&#x9ad8;&#x6280;&#x80fd;&#x6c34;&#x5e73;&#x7684;&#x4e2a;&#x4eba;&#x3002",{"_index":6889,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["2&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff08;&#x4f7f;&#x7528;redux&#xff09;&#xff0c;&#x5b83;&#x5177;&#x6709;&#x4e0a;&#x8ff0;&#x76f8;&#x540c;&#x7684;&#x6d4b;&#x8bd5;&#x5de5;&#x5177;&#x94fe;&#x3002;&#x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x770b;&#x8fd9;&#x4e2a;&#x9879;&#x76ee;&#x662f;&#x5982;&#x4f55;&#x8bbe;&#x7f6e;&#x7684;&#x3002",{"_index":5378,"title":{},"body":{"Testing/setup.html#测试设置":{}}}],["2&#x7684;&#x65b0;&#x7248;&#x672c;&#xff0c;&#x5b83;&#x4e3a;angular",{"_index":3069,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x7684;&#x65b0;&#x7ec4;&#x4ef6;&#x8def;&#x7531;&#x5668;&#x4e2d;&#x7684;&#x4f5c;&#x7528;&#x3002",{"_index":4755,"title":{},"body":{"Routing/routing.html#路由":{}}}],["2&#x7684;&#x65b9;&#x5f0f;&#x6784;&#x5efa;&#x4e00;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":2850,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x7684;&#x66f4;&#x957f;&#x683c;&#x5f0f;&#x3002",{"_index":580,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x7684;&#x7ec4;&#x4ef6;&#x6811;&#x5e73;&#x884c;&#x7684;&#x6811;&#x4e2d;&#x3002",{"_index":668,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["2&#x7684;&#x7ec4;&#x4ef6;&#x6837;&#x5f0f;&#x7684;&#x65b9;&#x5f0f;&#x7f16;&#x5199;&#x7684;angular",{"_index":3080,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["2&#x7684;&#x8ba4;&#x77e5;&#x8d1f;&#x62c5;&#x3002;&#x5e78;&#x8fd0;&#x7684;&#x662f;&#xff0c;&#x5bf9;&#x4e8e;&#x4f20;&#x7edf;&#x7684;es5",{"_index":3052,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x7684;&#x8bfb;&#x8005;&#x4f1a;&#x6ce8;&#x610f;&#x5230;&#x8fd9;&#x4e9b;&#x7b7e;&#x540d;&#x770b;&#x8d77;&#x6765;&#x4e0d;&#x50cf;angular",{"_index":1586,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["2&#x7684;&#x8bfb;&#x8005;&#x73b0;&#x5728;&#x53ef;&#x4ee5;&#x60f3;&#x8c61;angular",{"_index":1932,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["2&#x7684;&#x8def;&#x7531;&#xff0c;&#x53ef;&#x4ee5;&#x8fde;&#x63a5;&#x5230;&#x60a8;&#x7684;ngrx",{"_index":5845,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["2&#x7684;di&#x548c;typescript&#x7684;&#x88c5;&#x9970;&#x5668;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x6709;&#x4e00;&#x4e2a;&#x5f88;&#x597d;&#x7684;&#x58f0;&#x660e;&#x5f0f;&#x7ed1;&#x5b9a;&#xff0c;&#x5176;&#x4e2d;&#x5927;&#x90e8;&#x5206;&#x7684;&#x5de5;&#x4f5c;&#x662f;&#x5728;&#x6a21;&#x677f;&#x4e2d;&#x5b8c;&#x6210;&#x3002;&#x6211;&#x4eec;&#x8fd8;&#x83b7;&#x5f97",{"_index":6183,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["2&#x7684;di&#x7cfb;&#x7edf;&#xff08;&#x5927;&#x90e8;&#x5206;&#xff09;&#x901a;&#x8fc7",{"_index":402,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["2&#x7ec4;&#x4ef6;&#x5df2;&#x7ecf;&#x627f;&#x62c5;&#x4e86;&#x5f88;&#x591a;&#x89d2;&#x8272;&#x6307;&#x4ee4;&#x3002",{"_index":737,"title":{},"body":{"Directives/directives.html#指令":{}}}],["2&#x7ec4;&#x4ef6;&#x662f;&#x5927;&#x90e8;&#x5206;&#x5e26;&#x6709;&#x6a21;&#x677f;&#x7684;&#x6307;&#x4ee4",{"_index":734,"title":{},"body":{"Directives/directives.html#指令":{}}}],["2&#x7ec4;&#x4ef6;&#x662f;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x521b;&#x5efa;&#x548c;&#x63a5;&#x53e3;&#x7684;&#x7b80;&#x5355;&#x7c7b;&#x3002",{"_index":5533,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["2&#x7ec4;&#x4ef6;&#x6bd4;&#x8d77;angular",{"_index":3041,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x7ec4;&#x4ef6;&#x7684;&#x5c5e;&#x6027;&#x548c;&#x65b9;&#x6cd5",{"_index":5531,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["2&#x7ec4;&#x4ef6;&#x9700;&#x8981;&#x6df1;&#x5165;&#x4e86;&#x89e3;angular",{"_index":4966,"title":{},"body":{"Testing/components.html#测试组件":{},"Testing/test-components.html#测试组件":{}}}],["2&#x7ed9;&#x6211;&#x4eec;&#x7559;&#x4e0b;&#x4e86;&#x6df1;&#x523b;&#x7684;&#x5370;&#x8c61;&#xff0c;&#x5b83;&#x662f;&#x6211;&#x4eec;&#x7684;&#x9996;&#x9009;&#x6846;&#x67b6;&#x3002;&#x6211;&#x4eec;&#x5df2;&#x7ecf;&#x80fd;&#x591f;&#x6bd4;&#x8fc7;&#x53bb;&#x7684;&#x6846;&#x67b6;&#x66f4;&#x5bb9;&#x6613;&#x5b8c;&#x6210;&#x529f;&#x80fd;&#x3002",{"_index":2880,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#x88ab;&#x544a;&#x77e5;&#x4f7f;&#x7528",{"_index":603,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x8ba9;&#x7a0b;&#x5e8f;&#x5458;&#x7528;&#x66f4;&#x8be6;&#x7ec6;&#x7684;&#x201c;&#x98df;&#x8c31;&#x201d;&#x6307;&#x5b9a",{"_index":571,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["2&#x8bad;&#x7ec3",{"_index":6880,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["2&#x8def;&#x7531;&#x548c;&#x4f60;&#x7684;redux",{"_index":5837,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["2&#x901a;&#x8fc7;&#x4e0",{"_index":3067,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#x901a;&#x8fc7;&#x4f7f;&#x7528;&#x6ce8;&#x5165;&#x5668;&#x6811;&#x6765;&#x514b;&#x670d;&#x8fd9;&#x4e2a;&#x9650;&#x5236;&#x3002",{"_index":664,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["2&#x91c7;&#x7528;&#x5c06;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5206;&#x4e3a;&#x8bb8;&#x591a;&#x4e0d;&#x540c;&#x7ec4;&#x4ef6;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x6bcf;&#x4e2a;&#x7ec4;&#x4ef6;&#x53ef;&#x4ee5;&#x6709;&#x591a;&#x4e2a;&#x6587;&#x4ef6;&#x3002;&#x4ee5;&#x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x5206;&#x79bb;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x903b;&#x8f91;&#x5bf9;&#x7a0b;&#x5e8f;&#x5458;&#x662f;&#x6709;&#x597d;&#x5904;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x4f1a;&#x51cf;&#x635f;&#x7528;&#x6237;&#x4f53;&#x9a8c;&#xff0c;&#x56e0;&#x4e3a;&#x8fd9;&#x6837;&#x505a;&#x4f1a;&#x589e;&#x52a0;&#x9875;&#x9762;&#x52a0;&#x8f7d;&#x65f6;&#x95f4;&#x3002",{"_index":4444,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["2&#x98ce;&#x683c;&#x7f16;&#x5199;angular",{"_index":6892,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["2&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#x5047;&#x5b9a;&#x5355;&#x5411;&#x7ed1;&#x5b9a;&#xff0c;&#x4f46;&#x5982;&#x679c;&#x9700;&#x8981;&#xff0c;&#x53cc;&#x5411;&#x7ed1;&#x5b9a;&#x4ecd;&#x7136;&#x53ef;&#x7528;&#x3002",{"_index":2202,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["2&#xff0c;&#x50cf;react&#x548c;&#x5176;&#x4ed6;&#x73b0;&#x4ee3;&#x6846;&#x67b6;&#x4e00;&#x6837;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x5728;&#x670d;&#x52a1;&#x5668;&#x4e0a;&#x751a;&#x81f3;&#x5728;web",{"_index":3064,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2&#xff0c;&#x7a0b;&#x5e8f;&#x5458;&#x51e0;&#x4e4e;&#x4e0d;&#x5fc5;&#x9677;&#x5165;&#x6ce8;&#x5165;&#x7ec6;&#x8282;&#x3002",{"_index":401,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["2&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x5f00;&#x59cb;&#x7528;angular",{"_index":2849,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["2&#xff0c;angular&#x56e2;&#x961f;&#x5411;angular",{"_index":3043,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2.0",{"_index":1879,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{},"a11y/why-a11y.html":{},"a11y/why-a11y.html#无障碍法":{}}}],["2.5k",{"_index":2943,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["2.t",{"_index":1698,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["2.x&#x4f7f;&#x7528;es2015&#x6a21;&#x5757;&#x7cfb;&#x7edf;&#x548c;&#x73b0;&#x4ee3;&#x5316;&#x7684;&#x5305;&#x88c5;&#x5de5;&#x5177;&#xff0c;&#x5982;webpack&#x6216;systemjs&#x3002;&#x6a21;&#x5757;&#x8fdc;&#x8fdc;&#x5c11;&#x4e8e;&#x201c;angular&#x65b9;&#x5f0f;&#x201d;&#xff0c;&#x5e76;&#x4e14;&#x66f4;&#x5bb9;&#x6613;&#x7f16;&#x5199;&#x66f4;&#x901a;&#x7528;&#x7684;javascript&#x5e76;&#x5c06;&#x5176;&#x63d2;&#x5165;&#x5230;angular&#x4e2d;&#x3002;&#x5220;&#x9664;&#x538b;&#x7f29;&#x65b9;&#x6848;&#x548c;&#x6dfb;&#x52a0;&#x4e25;&#x683c;&#x7684;&#x89c4;&#x5b9a;&#x4f7f;&#x5f97;&#x7ef4;&#x62a4;&#x73b0;&#x6709;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x66f4;&#x52a0;&#x7b80;&#x5355;&#x3002;&#x65b0;&#x7684;&#x6a21;&#x5757;&#x7cfb;&#x7edf;&#x4e5f;&#x4f7f;&#x5f97;&#x66f4;&#x5bb9;&#x6613;&#x5f00;&#x53d1;&#x6709;&#x6548;&#x7684;&#x5de5;&#x5177;&#xff0c;&#x53ef;&#x4ee5;&#x66f4;&#x597d;&#x5730;&#x5f00;&#x53d1;&#x5927;&#x578b;&#x9879;&#x76ee;&#x3002",{"_index":3074,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["2.x使用es2015模块系统和现代化的包装工具，如webpack或systemjs。模块远远少于“angular方式”，并且更容易编写更通用的javascript并将其插入到angular",{"_index":2983,"title":{},"body":{"why_angular_2.html":{}}}],["2/app",{"_index":850,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["20",{"_index":166,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["20&#xff05;&#x7684;&#x4eba;&#x53e3;&#x751f;&#x6d3b;&#x5728;&#x67d0;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x6b8b;&#x75be;&#x3002;&#x76f8;&#x6bd4;&#x4e4b;&#x4e0b;&#xff0c;&#x8be5;&#x6570;&#x5b57;&#x9ad8;&#x4e8e;&#x76ee;&#x524d;&#x9664;chrome&#x4ee5;&#x5916;&#x7684;&#x4efb;&#x4f55;&#x4e00;&#x4e2a;&#x6d4f;&#x89c8;&#x5668;&#x53d7;&#x4f17;&#x7279;&#x5f81;&#x3002",{"_index":6905,"title":{},"body":{"a11y/why-a11y.html#向每个人伸出援手":{}}}],["200",{"_index":2424,"title":{},"body":{"Immutable/map_merge.html":{}}}],["2000",{"_index":3840,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{}}}],["2001",{"_index":2398,"title":{},"body":{"Immutable/lists.html":{}}}],["2002",{"_index":2401,"title":{},"body":{"Immutable/lists.html":{}}}],["2003",{"_index":2405,"title":{},"body":{"Immutable/lists.html":{}}}],["2014",{"_index":21,"title":{},"body":{"Change-detection/additional_resources.html":{}}}],["2016",{"_index":4801,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["2020",{"_index":1994,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["204",{"_index":4799,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["20％的人口生活在某种类型的残疾。相比之下，该数字高于目前除chrome",{"_index":6897,"title":{},"body":{"a11y/why-a11y.html":{}}}],["21",{"_index":167,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["2131313133123174098",{"_index":3753,"title":{},"body":{"Modules/multiple-elements.html":{}}}],["22",{"_index":168,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["23",{"_index":169,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["24",{"_index":170,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["240k",{"_index":2933,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["25",{"_index":624,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/typings.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["250",{"_index":5692,"title":{},"body":{"animation/index.html":{},"animation/index.html#动画":{}}}],["2500",{"_index":3845,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/error_handling.html":{}}}],["26",{"_index":648,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Immutable/lists.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["26k",{"_index":2936,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["27",{"_index":649,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Immutable/lists.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["28",{"_index":650,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Immutable/lists.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["29",{"_index":651,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Immutable/lists.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["2px",{"_index":782,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["2rem",{"_index":3996,"title":{},"body":{"Observables/using_observables.html":{}}}],["2}}/p",{"_index":4157,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["2’",{"_index":385,"title":{},"body":{"Di/angular2_di.html":{}}}],["2。angular",{"_index":1103,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html":{}}}],["2不是编写额外的代码，而是创建和实施自己的css类，以管理这些行为，为您提供了几个样式类，已经可以在input",{"_index":2235,"title":{},"body":{"Form/visual_cues_for_users.html":{}}}],["2与独立的react进行比较，我们正在与react以及获得与angular",{"_index":2790,"title":{},"body":{"vs_react.html":{}}}],["2中启用aot",{"_index":3145,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["2中引入的ahead",{"_index":3102,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["2中没有改变。di是一个编程概念，它早于angular",{"_index":508,"title":{},"body":{"Di/di.html":{}}}],["2中的web",{"_index":3089,"title":{},"body":{"Accessibility/accessibility.html":{}}}],["2中的事件与它们在angular",{"_index":317,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["2中的初始编译器称为jit（just",{"_index":3100,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["2中非常重要的概念。它使开发人员能够构建可重用的组件，并使应用程序更具可扩展性和可维护性。为了说明，假设我们有一个childcompon",{"_index":342,"title":{},"body":{"Components/projection.html":{}}}],["2主题，从使用angular",{"_index":6871,"title":{},"body":{"README.html":{}}}],["2也支持替代html5",{"_index":1952,"title":{},"body":{"Form/getting-started.html":{}}}],["2事件可以像普通html",{"_index":313,"title":{},"body":{"Components/passing_data_into_components.html":{}}}],["2事件，我们可以使用dom",{"_index":312,"title":{},"body":{"Components/passing_data_into_components.html":{}}}],["2使用了许多es6和typescript",{"_index":1104,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html":{}}}],["2使用的一个令人兴奋的新功能是observ",{"_index":3911,"title":{},"body":{"Observables/observables.html":{}}}],["2保留了angular",{"_index":2973,"title":{},"body":{"why_angular_2.html":{}}}],["2内置的属性指令ngclass和ngstyl",{"_index":725,"title":{},"body":{"Directives/attribute_directives.html":{}}}],["2决定他们将提供自己的cli",{"_index":3332,"title":{},"body":{"Angular-CLI/cli.html":{}}}],["2功能相同的所有其他软件包（类似react",{"_index":2791,"title":{},"body":{"vs_react.html":{}}}],["2和它提供的每个模块。它感觉像一个企业开发人员会熟悉的高质量框架。它正在推动基于web",{"_index":2801,"title":{},"body":{"vs_react.html":{}}}],["2响应类的格式。在这里，我们只需将body属性设置为您可能从维基百科中看到的基本搜索结果集。我们还可以设置cookie，http标头等等，或将状态值设置为非200",{"_index":5276,"title":{},"body":{"Testing/mockbackend.html":{}}}],["2团队真的想使用它们，并且它们已经被包括在typescript",{"_index":1561,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{}}}],["2在处理表单上比angular",{"_index":1935,"title":{},"body":{"Form/form.html":{}}}],["2在设计之初就考虑到移动端。除了有限的处理能力，移动设备具有将它们与传统计算机分离的其他特征和限制。触摸界面，有限的屏幕和移动硬件都已在angular",{"_index":2975,"title":{},"body":{"why_angular_2.html":{}}}],["2将创建被称为变化检测器的特殊类，一个用于我们定义的每个组件。在这种情况下，angular",{"_index":154,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["2工具链入门到能够以可扩展和可维护的方式编写angular",{"_index":6872,"title":{},"body":{"README.html":{}}}],["2广泛使用observ",{"_index":3913,"title":{},"body":{"Observables/observables.html":{}}}],["2应用程序中尤其明显，其中使用了大量的typescript。虽然我们不在我们的课程中这样做，但是项目也可能涉及到必须集成的css预处理器（sass，stylus）或模板引擎（jad",{"_index":4439,"title":{},"body":{"Project-setup/webpack.html":{}}}],["2应用程序文件所在的源目录中的路径（default",{"_index":3386,"title":{},"body":{"Angular-CLI/init.html":{}}}],["2应用程序肯定不同于angular",{"_index":2,"title":{},"body":{"bootstrapping/bootstrapping.html":{}}}],["2应用程序，我们必须创造一个运行它环境，我们可以使用chrome或firefox浏览器来实现（karma",{"_index":5461,"title":{},"body":{"Testing/toolchain.html":{}}}],["2开发的经验以及客户的需求，我们决定使用angular",{"_index":2812,"title":{},"body":{"vs_react.html":{}}}],["2执行的jit编译相比，aot",{"_index":3104,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["2时，他已经熟悉angular",{"_index":2781,"title":{},"body":{"vs_react.html":{}}}],["2时，根据企业的需求，你可以更好地了解为什么angular",{"_index":2809,"title":{},"body":{"vs_react.html":{}}}],["2是一个更流线型的框架，让开发者专注于简单地构建javascript类。视图和控制器被替换为组件，这可以被描述为精简版指令。甚至经验丰富的angular程序员也不总是知道angular1.x",{"_index":2964,"title":{},"body":{"why_angular_2.html":{}}}],["2是用typescript编写的，它是一个实现许多新es2016+特性的javascript",{"_index":2970,"title":{},"body":{"why_angular_2.html":{}}}],["2更进一步简化了di",{"_index":388,"title":{},"body":{"Di/angular2_di.html":{}}}],["2架构使构建应用程序更愉快。我们能够了解oop，设计模式和最佳实践架构，并将其应用于web",{"_index":2807,"title":{},"body":{"vs_react.html":{}}}],["2框架中的所有部分，包括高级架构都由googl",{"_index":2800,"title":{},"body":{"vs_react.html":{}}}],["2模块的表面。作为一个团队，我们通过深入了解angular",{"_index":2805,"title":{},"body":{"vs_react.html":{}}}],["2模拟html",{"_index":3231,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{}}}],["2比angular",{"_index":2962,"title":{},"body":{"why_angular_2.html":{}}}],["2特定的代码存储在src",{"_index":3369,"title":{},"body":{"Angular-CLI/creating-an-app.html":{}}}],["2的di",{"_index":389,"title":{},"body":{"Di/angular2_di.html":{},"Di/inject_and_injectable.html":{}}}],["2的di和typescript",{"_index":6148,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["2的应用程序（使用redux",{"_index":5375,"title":{},"body":{"Testing/setup.html":{}}}],["2的所有新功能，如静态类型，装饰器和es6模块，增加了设置和维护的成本。花费大量时间使用不同的构建设置，并配置用于提供现代javascript",{"_index":3329,"title":{},"body":{"Angular-CLI/cli.html":{}}}],["2的新版本，它为angular",{"_index":2980,"title":{},"body":{"why_angular_2.html":{}}}],["2的特定功能，而是用于管理异步数据的建议标准，将被包括在es7",{"_index":3912,"title":{},"body":{"Observables/observables.html":{}}}],["2的组件样式的方式编写的angular",{"_index":2988,"title":{},"body":{"why_angular_2.html":{}}}],["2的认知负担。幸运的是，对于传统的es5",{"_index":2971,"title":{},"body":{"why_angular_2.html":{}}}],["2的读者会注意到这些签名看起来不像angular",{"_index":1573,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{}}}],["2的读者现在可以想象angular",{"_index":1929,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html":{}}}],["2的路由，可以连接到您的ngrx",{"_index":5831,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{}}}],["2组件中创建和使用observ",{"_index":3978,"title":{},"body":{"Observables/using_observables.html":{}}}],["2组件比起angular",{"_index":2965,"title":{},"body":{"why_angular_2.html":{}}}],["2组件需要深入了解angular",{"_index":4962,"title":{},"body":{"Testing/components.html":{},"Testing/test-components.html":{}}}],["2路由和你的redux",{"_index":5825,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{}}}],["2通过统一angular",{"_index":509,"title":{},"body":{"Di/di.html":{}}}],["2风格编写angular",{"_index":6873,"title":{},"body":{"README.html":{}}}],["2，angular团队向angular",{"_index":2967,"title":{},"body":{"why_angular_2.html":{}}}],["2，像react和其他现代框架一样，可以通过在服务器上甚至在web",{"_index":2976,"title":{},"body":{"why_angular_2.html":{}}}],["2，让我们开始用angular",{"_index":2789,"title":{},"body":{"vs_react.html":{}}}],["3",{"_index":40,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-aot.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["3,8",{"_index":2215,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{}}}],["3.141592",{"_index":1299,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["3/app",{"_index":853,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["30",{"_index":652,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps_are_iterable.html":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["3000",{"_index":3841,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/using_observables.html":{}}}],["31",{"_index":653,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Immutable/lists.html":{},"compare.html":{},"compare.html#与其他框架比较":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["32",{"_index":768,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Immutable/lists.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["321",{"_index":1992,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["33",{"_index":908,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["34",{"_index":909,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["35",{"_index":910,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["35c0cd1ecbbb68c75498b83c4e79fe2b",{"_index":5712,"title":{},"body":{"state-management/actions.html":{}}}],["36",{"_index":911,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["36853",{"_index":4792,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["37",{"_index":912,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["38",{"_index":913,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["39",{"_index":914,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/template_strings.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["39;basscss",{"_index":3148,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["39;token&#39",{"_index":433,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{}}}],["39k",{"_index":2934,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["4",{"_index":41,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["4'/div",{"_index":3310,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["4.0",{"_index":828,"title":{},"body":{"Directives/ng_if_directive.html":{},"Modules/modules.html":{},"Modules/modules.html#模块":{},"license.html":{},"license.html#License":{}}}],["4.3版本引入。默认解析json",{"_index":2281,"title":{},"body":{"Http/http.html":{}}}],["4.7k",{"_index":2942,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["40",{"_index":915,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["400",{"_index":3115,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["4000",{"_index":3842,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["406906",{"_index":4113,"title":{},"body":{"Pipes/pipes.html":{}}}],["41",{"_index":916,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["412",{"_index":1766,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["42",{"_index":917,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["4200",{"_index":3389,"title":{},"body":{"Angular-CLI/serving-the-app.html":{}}}],["43",{"_index":918,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["44",{"_index":919,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["444",{"_index":785,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["45",{"_index":920,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["456",{"_index":1988,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["46",{"_index":3979,"title":{},"body":{"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["47",{"_index":3980,"title":{},"body":{"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["48",{"_index":3981,"title":{},"body":{"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/execute.html":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["48&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x8fd0;&#x884c;&#x3002",{"_index":4983,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["49",{"_index":3982,"title":{},"body":{"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["4k",{"_index":2646,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["5",{"_index":42,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"practice.html":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["5,5,5,5,5",{"_index":1210,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["50",{"_index":1354,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["500",{"_index":636,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Http/catch_and_release.html":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["508",{"_index":6900,"title":{},"body":{"a11y/why-a11y.html":{},"a11y/why-a11y.html#无障碍法":{}}}],["51",{"_index":3983,"title":{},"body":{"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["52",{"_index":3984,"title":{},"body":{"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["53",{"_index":3985,"title":{},"body":{"Observables/using_observables.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["54",{"_index":4380,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["55",{"_index":4381,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["555",{"_index":1968,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["56",{"_index":4382,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["57",{"_index":4383,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["58",{"_index":4384,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["59",{"_index":4385,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["6",{"_index":43,"title":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/ES6&TypeScript.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["6&#x201d;&#x6216;&#x201c;es6&#x201d;&#xff0c;&#x63d0;&#x4f9b;&#x4e86;&#x8bb8;&#x591a;&#x65b0;&#x529f;&#x80fd;&#xff0c;&#x6269;&#x5c55;&#x4e86;&#x8bed;&#x8a00;&#x7684;&#x80fd;&#x529b;&#x3002;es6&#x5728;&#x4eca;&#x5929;&#x7684;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x6ca1;&#x6709;&#x5f97;&#x5230;&#x5e7f;&#x6cdb;&#x652f;&#x6301;&#xff0c;&#x56e0;&#x6b64;&#x9700;&#x8981;&#x8f6c;&#x6362;&#x4e3a;es5&#x3002",{"_index":1107,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}}}],["60",{"_index":4386,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["6000",{"_index":5122,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["61",{"_index":4387,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["62",{"_index":4388,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["63",{"_index":4389,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["64",{"_index":4390,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["65",{"_index":4391,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["650779",{"_index":103,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["66",{"_index":4392,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["66k",{"_index":2644,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["67",{"_index":4393,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["68",{"_index":4394,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["69",{"_index":4395,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["6”或“es6”，提供了许多新功能，扩展了语言的能力。es6在今天的浏览器中没有得到广泛支持，因此需要转换为es5",{"_index":1101,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html":{}}}],["6和typescript",{"_index":529,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["7",{"_index":44,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["70",{"_index":4396,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["71",{"_index":4397,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["72",{"_index":4398,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["73",{"_index":4399,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["74",{"_index":4400,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["75",{"_index":4401,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["76",{"_index":4402,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["77",{"_index":4403,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["78",{"_index":4404,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["789",{"_index":1989,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["79",{"_index":4405,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["8",{"_index":59,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["8.7",{"_index":2402,"title":{},"body":{"Immutable/lists.html":{}}}],["8.8",{"_index":2399,"title":{},"body":{"Immutable/lists.html":{}}}],["8.9",{"_index":2408,"title":{},"body":{"Immutable/lists.html":{}}}],["80",{"_index":4406,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["8080",{"_index":3391,"title":{},"body":{"Angular-CLI/serving-the-app.html":{}}}],["80k",{"_index":2645,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["81",{"_index":5252,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["82",{"_index":5253,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["83",{"_index":5254,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["84",{"_index":5255,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["85",{"_index":5256,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["86",{"_index":5257,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["87",{"_index":5258,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["88",{"_index":5259,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["888888",{"_index":783,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["89",{"_index":5260,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["9",{"_index":60,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Http/retry.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{}}}],["90",{"_index":5261,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["95",{"_index":7064,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["99",{"_index":3552,"title":{},"body":{"Modules/introduction.html":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{}}}],["9999",{"_index":5115,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["99k",{"_index":2932,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["9]0,5",{"_index":2220,"title":{},"body":{"Form/validating_forms.html":{}}}],["9]{0,5",{"_index":2227,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["_&#x6ce8;&#x610f;_",{"_index":1159,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["__production__",{"_index":6622,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["_注意_",{"_index":1132,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{}}}],["a.j",{"_index":1915,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["a.t",{"_index":1882,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["a.ts(1,1",{"_index":1885,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["aaa",{"_index":839,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["abandon",{"_index":1745,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["abort",{"_index":12,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{}}}],["abov",{"_index":6063,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["absolut",{"_index":6934,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["abstract",{"_index":6970,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["abstractions/protocols/rol",{"_index":6992,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["acc",{"_index":2453,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["accept",{"_index":2222,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["access",{"_index":2441,"title":{},"body":{"Immutable/maps_are_iterable.html":{},"further-reading.html":{},"further-reading.html#Angular":{},"Routing/child_routes.html":{},"Routing/child_routes.html#访问父路由的参数":{},"a11y/key-concerns.html":{},"a11y/key-concerns.html#无障碍Web应用的关键":{},"a11y/why-a11y.html":{},"a11y/why-a11y.html#无障碍法":{}}}],["account",{"_index":4627,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["accountpag",{"_index":4628,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["accumul",{"_index":5959,"title":{},"body":{"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["accumulator&#xff1a;t&#xff0c;item&#xff1a;u",{"_index":6119,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["accumulator：t，item：u",{"_index":6115,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html":{}}}],["action",{"_index":1622,"title":{"Testing/complex-actions.html#测试复杂的-Actions":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/actions.html#Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/redux.html":{},"Testing/redux.html#测试-Redux":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["action&#x3002",{"_index":5879,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}}}],["action&#x4e4b;&#x524d;&#x662f;&#x68c0;&#x67e5;&#x662f;&#x5426;&#x4e3a;&#x5947;&#x6570;&#x3002",{"_index":5896,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["action&apo",{"_index":5388,"title":{},"body":{"Testing/simple-actions.html#测试简单的-Action":{}}}],["action.payload",{"_index":5981,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["action.payload.valu",{"_index":5983,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["action.typ",{"_index":5344,"title":{},"body":{"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["action=query&amp;list=search&amp;srsearch=angular",{"_index":4814,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/mockbackend.html":{}}}],["actioncreatorservic",{"_index":4933,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/redux_and_component_architecture.html":{},"state-management/using_redux_with_components.html":{}}}],["actioncreatorservice&#x8c03;&#x7528;&#x6211;&#x4eec;&#x7684;&#x52a8;&#x4f5c;&#x521b;&#x5efa;&#x8005;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#x3002",{"_index":6163,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["actioncreatorservice模式才是必需的。考虑下面的sessionactions服务来处理远程api",{"_index":5861,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["actions&apo",{"_index":5996,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["actions.decr",{"_index":5382,"title":{},"body":{"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["actions.incr",{"_index":5381,"title":{},"body":{"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["actions.incrementifodd",{"_index":4920,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["actions.t",{"_index":6037,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["actions/count",{"_index":5345,"title":{},"body":{"Testing/reducers.html":{},"state-management/reducers_as_state_management.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/using_redux_with_components.html":{}}}],["actions/curs",{"_index":6062,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["actions（react",{"_index":5856,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["action创建者正确地分派act",{"_index":5383,"title":{},"body":{"Testing/simple-actions.html":{}}}],["action和reducers时没有失去redux",{"_index":4769,"title":{},"body":{"Testing/after-thoughts.html":{}}}],["action和reducer维护测试代价太高，在某些情况下是没什么必要的（比如我应该对这个json",{"_index":4766,"title":{},"body":{"Testing/after-thoughts.html":{}}}],["action（或一系列act",{"_index":4767,"title":{},"body":{"Testing/after-thoughts.html":{}}}],["activ",{"_index":2427,"title":{},"body":{"Immutable/map_merge.html":{}}}],["activatedrout",{"_index":4496,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["activatedroutesnapshot",{"_index":4639,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["active]=\"isselected(1",{"_index":845,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["active]=\"isselected(2",{"_index":848,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["active]=\"isselected(3",{"_index":851,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["active]=\"isselected(i",{"_index":1089,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["actor",{"_index":113,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{},"Change-detection/how_change_detection_works.html":{}}}],["actor.firstnam",{"_index":181,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["actor.get('lastname')/span",{"_index":250,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["actor.lastnam",{"_index":182,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/how_change_detection_works.html":{}}}],["actor.lastname/span",{"_index":6814,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["actor.merge(firstnam",{"_index":233,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["actor.model",{"_index":6804,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["actor/button",{"_index":223,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["actor]=\"actor\"/movi",{"_index":225,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["actorfirstnam",{"_index":184,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["actorlastnam",{"_index":186,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["actors.pop",{"_index":2460,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["actual",{"_index":5922,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ad",{"_index":4502,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["adapt",{"_index":6824,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["add",{"_index":907,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/typeScript.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["add(...arg",{"_index":1454,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["add(args[0",{"_index":1455,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["add.apply(nul",{"_index":1457,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["add_item",{"_index":5986,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["addes6",{"_index":1465,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["addeventlistener(&#x2018;click&#x2019",{"_index":6474,"title":{},"body":{"zone/tasks.html#任务":{}}}],["addeventlistener(‘click",{"_index":6460,"title":{},"body":{"zone/tasks.html":{}}}],["addit",{"_index":2681,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["addotherepisod",{"_index":936,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["address",{"_index":1970,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["addsimpl",{"_index":1464,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["adequ",{"_index":2686,"title":{},"body":{"further-reading.html":{},"further-reading.html#General-Coding-Practice-and-Functional-Programming":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["admitag",{"_index":1733,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["admitage(yourag",{"_index":1739,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["advanc",{"_index":5635,"title":{"advanced-components/advanced-components.html#Advanced-Components":{}},"body":{"advanced-components/advanced-components.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["advantag",{"_index":3335,"title":{},"body":{"Angular-CLI/command-overview.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["adventur",{"_index":2730,"title":{},"body":{"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{}}}],["affect",{"_index":6509,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["aftercontentinit",{"_index":5659,"title":{},"body":{"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["afterthought",{"_index":4765,"title":{"Testing/after-thoughts.html#Afterthoughts":{}},"body":{"Testing/after-thoughts.html":{}}}],["ag",{"_index":1505,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"why_TypeScript.html":{}}}],["again",{"_index":2391,"title":{},"body":{"Immutable/lists.html":{}}}],["age&#x200a;&#x2014;&#x200a;w",{"_index":7100,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ahead",{"_index":74,"title":{},"body":{"bootstrapping/file_structure.html":{},"Modules/introduction.html":{}}}],["air",{"_index":2728,"title":{},"body":{"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{}}}],["alanenp",{"_index":3741,"title":{},"body":{"Modules/modules.html":{}}}],["alanenp&#xe4;&#xe4",{"_index":3746,"title":{},"body":{"Modules/modules.html#模块":{}}}],["alert",{"_index":5571,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alert(data",{"_index":1824,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["alert.compon",{"_index":5572,"title":{},"body":{"advanced-components/access_child_components.html":{}}}],["alert.show",{"_index":5578,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alert/button",{"_index":5576,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alert/mi",{"_index":5574,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alertcompon",{"_index":5580,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alertmi",{"_index":5573,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alerts.toarray",{"_index":5592,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alertsarr",{"_index":5590,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alertsarr[step",{"_index":5594,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["alertstyl",{"_index":1035,"title":{},"body":{"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["alex",{"_index":929,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["alia",{"_index":1758,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["align",{"_index":751,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["alley",{"_index":1744,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["allow",{"_index":5771,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["alphanumer",{"_index":2217,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{}}}],["alright",{"_index":1734,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["alright?!&apo",{"_index":1785,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["altern",{"_index":2994,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["although",{"_index":6952,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["amp",{"_index":1760,"title":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Form/reactive-forms_custom_validation.html":{},"i18n/process-and-roles.html":{},"why_angular_2.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{}}}],["amp;amp",{"_index":2095,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["amp;type=artist",{"_index":2361,"title":{},"body":{"Http/catch_and_release.html":{},"Http/retry.html":{}}}],["ampersandrequir",{"_index":2093,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{}}}],["analyt",{"_index":2741,"title":{},"body":{"plus.html":{},"plus.html#插件":{}}}],["analyz",{"_index":6960,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["and.returnvalue(observable.of",{"_index":4809,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["angbular/compil",{"_index":2615,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["angular",{"_index":0,"title":{"Di/angular2_di.html#Angular-2’s-DI":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"further-reading.html#Angular":{},"why_angular_2.html#Why-Angular-2":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Accessibility/accessibility.html#Angular-2中的Web辅助功能":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/directives.html#Angular-指令":{},"a11y/a11y.html#Angular-2-中的-Web-无障碍":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"README.html#Rangle’s-Angular-2-Training-Book":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{},"why_TypeScript.html#Angular-Why-TypeScript":{}},"body":{"bootstrapping/bootstrapping.html":{},"Change-detection/angular_1_vs_angular_2.html":{},"Change-detection/additional_resources.html":{},"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/Change_Detection.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/app_structure_with_components.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/di.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/attribute_directives.html":{},"Directives/directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/ES6&TypeScript.html":{},"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"Form/form.html":{},"Form/form.html#Forms":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"i18n/import-translation-files.html":{},"i18n/process-and-roles.html":{},"i18n/translation-text-extraction.html":{},"compare.html":{},"compare.html#与其他框架比较":{},"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#Keeping-up-to-date":{},"plus.html":{},"plus.html#插件":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"why_angular_2.html":{},"why_angular_2.html#Why-Angular-2":{},"why_angular_2.html#数据说话⚡️":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Accessibility/accessibility.html":{},"Advanced-angular/advanced-angular.html":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/directives.html":{},"Advanced-angular/directives.html#Angular-指令":{},"Angular-CLI/cli.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-routes.html":{},"Angular-CLI/init.html":{},"Angular-CLI/linting.html":{},"Angular-CLI/setup.html":{},"Angular-CLI/testing.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/modules.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/observables.html":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/pipes.html":{},"Pipes/stateful_and_async_pipes.html":{},"Project-setup/project-setup.html":{},"Project-setup/webpack.html":{},"Project-setup/webpack.html#Webpack":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/route_guards.html":{},"Routing/route_guards.html#路由拦截":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Routing/routing.html":{},"Testing/alt-http-mocking.html":{},"Testing/async.html":{},"Testing/complex-actions.html":{},"Testing/components.html":{},"Testing/filename-conventions.html":{},"Testing/filename-conventions.html#文件名约定":{},"Testing/injecting-dependencies.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#完成配置":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/services.html":{},"Testing/test-components.html":{},"Testing/toolchain.html":{},"Testing/verify.html":{},"a11y/a11y.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/component_lifecycle.html":{},"advanced-components/view_encapsulation.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/state-management.html":{},"state-management/state-management.html#状态管理":{},"state-management/using_redux_with_components.html":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"README.html":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["angular&#x2019;",{"_index":3087,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["angular&#x52a8;&#x753b;&#x662f;&#x57fa;&#x4e8e;&#x6807;&#x51c6;&#x7684;web&#x52a8;&#x753b;api",{"_index":5694,"title":{},"body":{"animation/index.html#动画":{}}}],["angular&#x5728",{"_index":5037,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["angular&#x5728;&#x5185;&#x90e8;&#x8ba2;&#x9605;&#xff0c;&#x4ee5;&#x5c06;&#x672a;&#x6355;&#x83b7;&#x7684;&#x9519;&#x8bef;&#x53d1;&#x9001;&#x5230;&#x81ea;&#x5df1;&#x7684;&#x9519;&#x8bef;&#x5904;&#x7406;&#x7a0b;&#x5e8f;&#xff0c;&#x5373;&#x60a8;&#x5728;&#x63a7;&#x5236;&#x53f0;&#x4e2d;&#x770b;&#x5230;&#x7684;&#x9519;&#x8bef;&#xff0c;&#x524d;&#x7f00;&#x4e3a;&#x201c;exception&#xff1a;&#x201d;&#x3002",{"_index":6687,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["angular&#x5728;&#x5185;&#x90e8;&#x8ba2;&#x9605;&#xff0c;&#x8868;&#x793a;&#x5b83;&#x5e94;&#x8be5;&#x8fd0;&#x884c;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x3002",{"_index":6684,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["angular&#x5c06;&#x8d1f;&#x8d23;&#x5206;&#x53c9",{"_index":6712,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["angular&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x79f0;&#x4e3a",{"_index":4874,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["angular&#x63d0;&#x4f9b;&#x4e86;&#x4e09;&#x79cd;&#x5c01;&#x88c5;&#x7b56;&#x7565;&#xff1a",{"_index":5671,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["angular&#x6a21;&#x5757;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x79cd;&#x7528;&#x4e8e;&#x521b;&#x5efa;&#x53ef;&#x4ee5;&#x7ec4;&#x5408;&#x4ee5;&#x6784;&#x5efa;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x529f;&#x80fd;&#x5757;&#x7684;&#x673a;&#x5236;&#x3002",{"_index":3745,"title":{},"body":{"Modules/modules.html#模块":{}}}],["angular&#x6d4b;&#x8bd5;&#x5e93;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":5046,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["angular&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x7248;&#x672c;&#x4e3a;&#x7a0b;&#x5e8f;&#x5458;&#x63d0;&#x4f9b;&#x4e86;&#x5f00;&#x53d1;&#x548c;&#x6784;&#x5efa;&#x5927;&#x89c4;&#x6a21;javascript&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x5de5;&#x5177;&#xff0c;&#x4f46;&#x968f;&#x7740;&#x65f6;&#x4ee3;&#x8fdb;&#x6b65;&#x5b83;&#x9010;&#x6e10;&#x663e;&#x9732;&#x51fa;&#x8bb8;&#x591a;&#x7f3a;&#x9677;&#x548c;&#x5c16;&#x9510;&#x7684;&#x95ee;&#x9898;&#x3002",{"_index":3033,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["angular&#x7684;&#x7b2c;&#x4e00;&#x6b21;&#x8fed;&#x4ee3;&#x4e3a;&#x5f00;&#x53d1;&#x8005;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x5f00;&#x53d1;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x9ad8;&#x5ea6;&#x7075;&#x6d3b;&#x7684;&#x6846;&#x67b6;&#x3002;&#x8fd9;&#x662f;&#x8bb8;&#x591a;web&#x5f00;&#x53d1;&#x8005;&#x6765;&#x8bf4;&#x662f;&#x4e00;&#x4e2a;&#x620f;&#x5267;&#x6027;&#x7684;&#x8f6c;&#x53d8;&#xff0c;&#x867d;&#x7136;&#x90a3;&#x4e2a;&#x6846;&#x67b6;&#x662f;&#x6709;&#x5e2e;&#x52a9;&#x7684;&#xff0c;&#x5f88;&#x660e;&#x663e;&#xff0c;&#x5b83;&#x5f80;&#x5f80;&#x592a;&#x7075;&#x6d3b;&#x3002;&#x968f;&#x7740;&#x65f6;&#x95f4;&#x7684;&#x63a8;&#x79fb;&#xff0c;&#x6700;&#x4f73;&#x5b9e;&#x8df5;&#x5f97;&#x5230;&#x4e86;&#x53d1;&#x5c55;&#xff0c;&#x793e;&#x533a;&#x9a71;&#x52a8;&#x7684;&#x7ed3;&#x6784;&#x5f97;&#x5230;&#x4e86;&#x8ba4;&#x53ef;&#x3002",{"_index":3072,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["angular&#x7ba1;&#x7406;&#x521b;&#x5efa;&#xff0c;&#x6e32;&#x67d3;&#xff0c;&#x6570;&#x636e;&#x7ed1;&#x5b9a;&#x5c5e;&#x6027;&#x7b49;&#x3002;&#x5b83;&#x8fd8;&#x63d0;&#x4f9b;&#x4e86;&#x94a9;&#x5b50;&#xff0c;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x54cd;&#x5e94;&#x5173;&#x952e;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#x4e8b;&#x4ef6;&#x3002",{"_index":5647,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["angular.io",{"_index":2660,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{}}}],["angular.j",{"_index":4,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{}}}],["angular.js中的当两个方法互相watch时，就会导致不停地进行digest循环，当循环大于十次angular",{"_index":13,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{}}}],["angular.modul",{"_index":286,"title":{},"body":{"Components/components.html":{}}}],["angular/common",{"_index":3448,"title":{},"body":{"Modules/feature-modules.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{}}}],["angular/common/http",{"_index":2266,"title":{},"body":{"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{}}}],["angular/compil",{"_index":4176,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{}}}],["angular/cor",{"_index":47,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/the_injector_tree.html":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_validation.html":{},"Form/template-driven_forms.html":{},"Form/template-model-binding.html":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"i18n/import-using-jit.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/introduction.html":{},"Modules/lazy-load-di.html":{},"Modules/lazy-loading-module.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-modules-di.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/using_pipes.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"Routing/aux-routes.html":{},"Routing/child_routes.html":{},"Routing/query_params.html":{},"Routing/route_guards.html":{},"Routing/routeparams.html":{},"Routing/routeroutlet.html":{},"Testing/async.html":{},"Testing/complex-actions.html":{},"Testing/injecting-dependencies.html":{},"Testing/overriding.html":{},"Testing/simple-actions.html":{},"Testing/verify.html":{},"advanced-components/access_child_components.html":{},"advanced-components/elementref.html":{},"state-management/configuring_your_application.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/using_redux_with_components.html":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"Change-detection/how_change_detection_works.html":{}}}],["angular/core/test",{"_index":4780,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/async.html":{},"Testing/components.html":{},"Testing/components.html#测试组件":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/overriding.html":{},"Testing/test-components.html":{},"Testing/test-components.html#测试组件":{},"Testing/testbed-configuration.html":{}}}],["angular/form",{"_index":1949,"title":{},"body":{"Form/getting-started.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_validation.html":{},"Form/template-driven_forms.html":{},"Form/template-model-binding.html":{},"Observables/using_observables_from_other_sources.html":{},"state-management/configuring_your_application.html":{}}}],["angular/http",{"_index":4018,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"Testing/alt-http-mocking.html":{},"Testing/mockbackend.html":{},"state-management/configuring_your_application.html":{}}}],["angular/http/testing/mock_backend",{"_index":5264,"title":{},"body":{"Testing/mockbackend.html":{}}}],["angular/platform",{"_index":63,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Di/the_injector_tree.html":{},"Form/getting-started.html":{},"i18n/import-using-jit.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Modules/feature-modules.html":{},"Modules/introduction.html":{},"Modules/lazy-loading-module.html":{},"Modules/multiple-elements.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"Testing/injecting-dependencies.html":{},"Testing/testbed-configuration.html":{},"animation/index.html":{},"state-management/configuring_your_application.html":{}}}],["angular/rout",{"_index":3665,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"Routing/child_routes.html":{},"Routing/config.html":{},"Routing/query_params.html":{},"Routing/route_guards.html":{},"Routing/routeparams.html":{}}}],["angular1.x",{"_index":613,"title":{},"body":{"Di/the_injector_tree.html":{},"compare.html":{}}}],["angular1.x&#x8bd5;&#x56fe;&#x89e3;&#x51b3;&#x4e0e;javascript&#x76f8;&#x5173;&#x7684;&#x5404;&#x79cd;&#x6d4f;&#x89c8;&#x5668;&#x9650;&#x5236;&#x3002;&#x8fd9;&#x662f;&#x901a;&#x8fc7;&#x5f15;&#x5165;&#x4f7f;&#x7528;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x7684;&#x6a21;&#x5757;&#x7cfb;&#x7edf;&#x6765;&#x5b8c;&#x6210;&#x7684;&#x3002;&#x8fd9;&#x4e2a;&#x7cfb;&#x7edf;&#x662f;&#x65b0;&#x9896;&#x7684;&#xff0c;&#x4f46;&#x4e0d;&#x5e78;&#x7684;&#x662f;&#x6709;&#x4e00;&#x4e9b;&#x5de5;&#x5177;&#x4e0a;&#x7684;&#x95ee;&#x9898;&#xff0c;&#x7279;&#x522b;&#x662f;&#x538b;&#x7f29;&#x548c;&#x9759;&#x6001;&#x5206;&#x6790;&#x3002",{"_index":3073,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["angular1.x中，我们有路由器视图和指令，其工作类似于组件。指令组件的想法变得相当受欢迎。它们是通过使用控制器的指令创建的，同时依赖于controlleras和bindtocontrol",{"_index":285,"title":{},"body":{"Components/components.html":{}}}],["angular1.x试图解决与javascript",{"_index":2982,"title":{},"body":{"why_angular_2.html":{}}}],["angular1.x项目迁移到2.x",{"_index":2945,"title":{},"body":{"why_angular_2.html":{}}}],["angular2",{"_index":283,"title":{"vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2":{}},"body":{"Components/components.html":{},"Http/http.html":{},"vs_vue2.html":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Testing/karma-config.html":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/setup.html":{},"Testing/setup.html#测试设置":{},"Testing/testbed-configuration.html":{},"Testing/typings.html":{},"Testing/typings.html#Typings":{}}}],["angular2\\/bundl",{"_index":4279,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["angularclass",{"_index":2935,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["angularjs&#x7684;&#x201c;1.x&#x201d;&#x7248;&#x672c;&#x5df2;&#x88ab;&#x5e7f;&#x6cdb;&#x4f7f;&#x7528;&#xff0c;&#x5e76;&#x4e14;&#x53d8;&#x5f97;&#x975e;&#x5e38;&#x53d7;&#x6b22;&#x8fce;&#x7684;&#x590d;&#x6742;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":6876,"title":{},"body":{"README.html#Rangle’s-Angular-2-Training-Book":{}}}],["angularjs已经成为世界上数十万程序员的领先开源javascript",{"_index":6869,"title":{},"body":{"README.html":{}}}],["angularjs的“1.x",{"_index":6870,"title":{},"body":{"README.html":{}}}],["angulart",{"_index":2739,"title":{},"body":{"plus.html":{},"plus.html#插件":{}}}],["angular’",{"_index":2996,"title":{},"body":{"why_angular_2.html":{}}}],["angular不是基于web的框架，我们可以编写将在nativescript或cordova或任何其他可以托管angular",{"_index":87,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["angular中的tdd",{"_index":5448,"title":{},"body":{"Testing/testing.html":{}}}],["angular动画是基于标准的web动画api",{"_index":5683,"title":{},"body":{"animation/index.html":{}}}],["angular区域变得不稳定，由于zone.j",{"_index":6618,"title":{},"body":{"zone/zone.html":{}}}],["angular只负责通过选择的变化检测策略来反映组件和dom",{"_index":106,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["angular和react都是伟大的选择，并允许一些惊人的产品（react",{"_index":2783,"title":{},"body":{"vs_react.html":{}}}],["angular和新版本之间发生了很大的变化。在angular",{"_index":104,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["angular哪一个是我们的根模块在浏览器中执行编译。这种在浏览器中的编译也称为“just",{"_index":3554,"title":{},"body":{"Modules/introduction.html":{}}}],["angular在内部订阅，以将未捕获的错误发送到自己的错误处理程序，即您在控制台中看到的错误，前缀为“except",{"_index":6603,"title":{},"body":{"zone/zone.html":{}}}],["angular应用程序使用http库来实现这一点，它以前使用promis",{"_index":4016,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["angular应用程序开始进行http",{"_index":2279,"title":{},"body":{"Http/http.html":{}}}],["angular应用程序需要一个编译过程才能在浏览器中运行：angular",{"_index":3096,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["angular我们的组件只取决于它的输入，并且传递给它的任何对象应该被认为是不可变的。这次当我们点击“chang",{"_index":112,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{}}}],["angular或typescript的一个戏法，它是简单的javascript",{"_index":2084,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{}}}],["angular检测到绑定到模板的一些属性已更改，因此它将更新dom",{"_index":188,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["angular特定的例程，没有用于完成这个的纯jasmin",{"_index":5016,"title":{},"body":{"Testing/injecting-dependencies.html":{}}}],["angular的i18n",{"_index":2600,"title":{},"body":{"i18n/process-and-roles.html":{}}}],["angular的区域内执行的所有异步代码都可以触发变化检测，所以当不需要变化检测时，您可能更喜欢在angular",{"_index":6616,"title":{},"body":{"zone/zone.html":{}}}],["angular的文档质量很好，但是只能涉及到许多angular",{"_index":2804,"title":{},"body":{"vs_react.html":{}}}],["angular的程序员将比另一个类似react或类似ember的框架更容易迁移到angular",{"_index":2974,"title":{},"body":{"why_angular_2.html":{}}}],["angular的第一个版本为程序员提供了开发和构建大规模javascript",{"_index":2961,"title":{},"body":{"why_angular_2.html":{}}}],["angular的第一次迭代为开发者提供了一个用于开发应用程序的高度灵活的框架。这是许多web",{"_index":2981,"title":{},"body":{"why_angular_2.html":{}}}],["angular的编译器还通过考虑javascript",{"_index":3097,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["angular组件创建的host",{"_index":2748,"title":{},"body":{"practice.html":{}}}],["angular通过服务类的构造函数注入。由于我们在angular的引导过程之外初始化这些类，我们必须自己显式注入这些依赖。这是通过使用testbed配置测试模块传回所需的依赖项（如http",{"_index":5410,"title":{},"body":{"Testing/strategies.html":{}}}],["anim",{"_index":5684,"title":{},"body":{"animation/index.html":{},"animation/index.html#动画":{}}}],["animatenumb",{"_index":4145,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{}}}],["animatenumberpip",{"_index":4146,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["annot",{"_index":2985,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["anonymous()[root",{"_index":6576,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["anonymous()[rootzon",{"_index":6489,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["anonymous:3:37",{"_index":6661,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["anoth",{"_index":6404,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["answer",{"_index":6944,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["anyerror",{"_index":3904,"title":{},"body":{"Observables/error_handling.html":{},"Observables/using_observables.html":{}}}],["anyerrors/div",{"_index":3993,"title":{},"body":{"Observables/using_observables.html":{}}}],["anyth",{"_index":6843,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["aopplugin",{"_index":3153,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{}}}],["aot",{"_index":85,"title":{"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Advanced-angular/aot_limitations.html#AoT-局限":{}},"body":{"bootstrapping/file_structure.html":{},"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_limitations.html":{}}}],["aot&#x7684;&#x53e6;&#x4e00;&#x4e2a;&#x95ee;&#x9898;&#x662f;&#xff0c;&#x5f53;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x8fbe;&#x5230;&#x4e00;&#x5b9a;&#x7684;&#x590d;&#x6742;&#x6027;&#x65f6;&#xff0c;&#x4e0e;jit",{"_index":3218,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["aot&#x7684;&#x8981;&#x70b9;&#x662f;&#x5c06;&#x7f16;&#x8bd1;&#x4ece;&#x8fd0;&#x884c;&#x65f6;&#x79fb;&#x52a8;&#x5230;&#x6784;&#x5efa;&#x8fc7;&#x7a0b;&#x3002;&#x8fd9;&#x610f;&#x5473;&#x7740;&#xff0c;&#x9996;&#x5148;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4ece;&#x6346;&#x7ed1;&#x5305;&#x4e2d;&#x5220;&#x9664;jit&#x7f16;&#x8bd1;&#x5668;&#xff08;&#x5927;&#x7ea6;523kb&#xff09;&#x4ee5;&#x5177;&#x6709;&#x66f4;&#x5c0f;&#x7684;&#x6784;&#x5efa;&#xff0c;&#x5176;&#x6b21;&#xff0c;&#x6d4f;&#x89c8;&#x5668;&#x53ef;&#x4ee5;&#x6267;&#x884c;&#x4ee3;&#x7801;&#xff0c;&#x800c;&#x65e0;&#x9700;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x7b49;&#x5f85;jit&#xff0c;&#x8fd9;&#x8ba9;&#x6e32;&#x67d3;&#x901f;&#x5ea6;&#x66f4;&#x5feb;&#x3002",{"_index":3139,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["aot/app/app.module.ngfactori",{"_index":79,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["aotplugin",{"_index":3156,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["aot使应用程序更具tre",{"_index":3122,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["aot的另一个问题是，当应用程序达到一定的复杂性时，与jit",{"_index":3208,"title":{},"body":{"Advanced-angular/aot_limitations.html":{}}}],["aot的要点是将编译从运行时移动到构建过程。这意味着，首先我们可以从捆绑包中删除jit编译器（大约523kb）以具有更小的构建，其次，浏览器可以执行代码，而无需在运行时等待jit",{"_index":3119,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["aot编译器还内联html模板和css",{"_index":3125,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["aot（ahead",{"_index":2532,"title":{},"body":{"i18n/import-using-aot.html":{}}}],["aot，但是由于angular",{"_index":3164,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["aot，它代表最近在angular",{"_index":3101,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["api",{"_index":25,"title":{},"body":{"Change-detection/additional_resources.html":{},"Components/responding_to_component_events.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"ES6&TypeScript/typescript/interfaces.html":{},"Form/form.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Http/making_requests.html":{},"Immutable/maps_are_iterable.html":{},"further-reading.html":{},"further-reading.html#Angular":{},"Modules/introduction.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/summary.html":{},"Testing/karma-config.html":{},"Testing/using-chai.html":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/defining_your_main_application_state.html":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["api&#x3002",{"_index":6380,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["api&#x4e2d;&#x5b9a;&#x4e49;&#x7684;&#x66f4;&#x591a;&#x64cd;&#x4f5c;&#x3002",{"_index":3936,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["api&#x4e2d;&#x7684;&#x65b9;&#x6cd5;&#x662f",{"_index":3878,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["api&#x8f83;&#x591a;&#xff0c;&#x5728;&#x6b64;&#x793a;&#x4f8b;&#x4e2d;&#x672a;&#x663e;&#x5f0f;&#x663e;&#x793a;&#x3002",{"_index":6346,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["api&#xff0c;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x7528;&#x6765;&#x5f15;&#x5bfc;&#x6211;&#x4eec;&#x7684;&#x89d2;2&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x65e0;&#x5934;dom&#x5b9e;&#x4f8b;&#x3002;&#x7136;&#x540e;&#xff0c;&#x4f7f;&#x7528;&#x8fd0;&#x884c;&#x6211;&#x4eec;&#x7684;&#x89d2;2&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;dom&#x5b9e;&#x4f8b;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8fd0;&#x884c;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x3002",{"_index":5478,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["api/test",{"_index":2342,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["api/us",{"_index":5279,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["api/users/1",{"_index":5280,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apiconfig",{"_index":436,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["apikey",{"_index":450,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["apikey&#xff1a;&apos;logg",{"_index":494,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["apikey：&#39;logg",{"_index":456,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{}}}],["api提供的重试操作符之一重试observable，例如retry和retrywhen",{"_index":3975,"title":{},"body":{"Observables/observables_vs_promises.html":{}}}],["api的形式结束，而且仍然可以依靠html",{"_index":2007,"title":{},"body":{"Form/nested-form-data.html":{}}}],["api请求的结果，我们可以通过告诉angular",{"_index":906,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["api，允许我们创建一个可以用来引导我们的角2应用程序中的无头dom实例。然后，使用运行我们的角2的应用程序，dom",{"_index":5462,"title":{},"body":{"Testing/toolchain.html":{}}}],["apo",{"_index":1518,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"animation/index.html#动画":{}}}],["apos;!&apo",{"_index":2107,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["apos;&amp;&apo",{"_index":2125,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["apos;&apo",{"_index":2054,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/child_routes.html#定义子路由":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/routeparams.html#声明路由参数":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html#验证方法和属性":{}}}],["apos;*&apo",{"_index":3774,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"animation/index.html#动画":{}}}],["apos;**/*.map&apo",{"_index":5134,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;.&apo",{"_index":702,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["apos;...&apo",{"_index":2182,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["apos;../../models/appstate&apo",{"_index":5885,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["apos;../../modules/app.module&apo",{"_index":5446,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["apos;../../tests.configure&apo",{"_index":5445,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["apos;../actions/count",{"_index":5995,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["apos;../actions/counter&apo",{"_index":5354,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["apos;../actions/curs",{"_index":6112,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["apos;../createaction&apo",{"_index":5884,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["apos;../credit",{"_index":3507,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["apos;../models&apo",{"_index":5940,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["apos;../reducers&apo",{"_index":5780,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["apos;../rout",{"_index":4559,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["apos;../services/unique&apo",{"_index":704,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["apos;../shared/shared.module&apo",{"_index":3809,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["apos;../store/configur",{"_index":5779,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["apos;./account",{"_index":4668,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["apos;./alert.component&apo",{"_index":5606,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["apos;./app.component&apo",{"_index":697,"title":{},"body":{"Di/the_injector_tree.html#注入树":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["apos;./app.component.ts&apo",{"_index":2577,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["apos;./app.routing&apo",{"_index":3687,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;./app/app.module&apo",{"_index":3604,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["apos;./components&apo",{"_index":1959,"title":{},"body":{"Form/getting-started.html#入门":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;./components/chat",{"_index":576,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["apos;./components/index&apo",{"_index":698,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["apos;./components/mock",{"_index":585,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["apos;./containers/app",{"_index":5764,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["apos;./containers/app&apo",{"_index":575,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["apos;./count",{"_index":5769,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["apos;./counter&apo",{"_index":4942,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/example_application.html#示例应用":{}}}],["apos;./counter.service&apo",{"_index":3635,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["apos;./counter/counter.reducer&apo",{"_index":5798,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["apos;./coverage/&apo",{"_index":5218,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["apos;./credit",{"_index":3478,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["apos;./eager.component&apo",{"_index":3686,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;./email/index&apo",{"_index":487,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["apos;./index&apo",{"_index":5444,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["apos;./lazy.component&apo",{"_index":3715,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;./lazy.routing&apo",{"_index":3716,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;./lazy/counter.service&apo",{"_index":3649,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["apos;./logger/index&apo",{"_index":488,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["apos;./login",{"_index":4670,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{}}}],["apos;./message.component&apo",{"_index":5339,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html#验证方法和属性":{}}}],["apos;./messages.fr.xlf!text&apo",{"_index":2579,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["apos;./quote.component&apo",{"_index":4885,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["apos;./quote.service&apo",{"_index":4880,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["apos;./sav",{"_index":4672,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["apos;./services&apo",{"_index":5760,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;./services/unique&apo",{"_index":699,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["apos;./shared/counter.service&apo",{"_index":3827,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["apos;./shared/shared.module&apo",{"_index":3804,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["apos;./src/**/!(*.test|tests.*).(ts|js)&apo",{"_index":5143,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;./src/index.html&apo",{"_index":4373,"title":{},"body":{"Project-setup/plugins.html#插件":{},"Project-setup/summary.html#总结":{}}}],["apos;./src/index.ts&apo",{"_index":4215,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["apos;./src/tests.entry.ts&apo",{"_index":5133,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;./store/actions&apo",{"_index":5758,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;./store/effects&apo",{"_index":5759,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;./store/rootreducer&apo",{"_index":5757,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;./styles/style.css&apo",{"_index":4328,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["apos;./wikisearch.service&apo",{"_index":4827,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apos;.js&apo",{"_index":4433,"title":{},"body":{"Project-setup/summary.html#总结":{},"Testing/karma-config.html#概述":{}}}],["apos;.ts&apo",{"_index":4432,"title":{},"body":{"Project-setup/summary.html#总结":{},"Testing/karma-config.html#概述":{}}}],["apos;.web.js&apo",{"_index":4431,"title":{},"body":{"Project-setup/summary.html#总结":{},"Testing/karma-config.html#概述":{}}}],["apos;.webpack.js&apo",{"_index":4430,"title":{},"body":{"Project-setup/summary.html#总结":{},"Testing/karma-config.html#概述":{}}}],["apos;/&apo",{"_index":1149,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["apos;/product",{"_index":4613,"title":{},"body":{"Routing/query_params.html#传递查询参数":{},"Routing/routeparams.html#链接到带参数的路由":{}}}],["apos;/rout",{"_index":4561,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["apos;1px",{"_index":1047,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["apos;2131313133123174098&apo",{"_index":3772,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["apos;35c0cd1ecbbb68c75498b83c4e79fe2b&apo",{"_index":5726,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["apos;@angular/common&apo",{"_index":3477,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["apos;@angular/compiler&apo",{"_index":4216,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["apos;@angular/core&apo",{"_index":411,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html#注入树":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html#使用-Model-绑定":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html#链接管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/zone.html#在-Zone-内":{}}}],["apos;@angular/core/testing&apo",{"_index":4824,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["apos;@angular/forms&apo",{"_index":1958,"title":{},"body":{"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html#使用-Model-绑定":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;@angular/http&apo",{"_index":4217,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;@angular/http/testing/mock_backend&apo",{"_index":5291,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apos;@angular/platform",{"_index":695,"title":{},"body":{"Di/the_injector_tree.html#注入树":{},"Form/getting-started.html#入门":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"animation/index.html#动画":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["apos;@angular/router&apo",{"_index":3696,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html#读取路由参数":{}}}],["apos;@ngrx/effects&apo",{"_index":5755,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;@ngrx/store&apo",{"_index":5730,"title":{},"body":{"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["apos;@ngtools/webpack&apo",{"_index":3194,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["apos;[appdelay]&apo",{"_index":3236,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["apos;[apphighlight]&apo",{"_index":3411,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["apos;[name].[hash].bundle.js&apo",{"_index":4427,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["apos;[name].[hash].js&apo",{"_index":4249,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html#总结":{}}}],["apos;[name].[hash].js.map&apo",{"_index":4250,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html#总结":{}}}],["apos;a",{"_index":1005,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;a&apo",{"_index":1491,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"zone/context_propagation.html#上下文传播":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["apos;accounts&apo",{"_index":4674,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["apos;action=query&amp;list=search&amp;format=xmlfm&amp;srsearch=&apo",{"_index":5002,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["apos;action=query&amp;list=search&amp;srsearch=&apo",{"_index":4999,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["apos;action=query&amp;list=search&amp;srsearch=angular&apo",{"_index":4833,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apos;alex",{"_index":986,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;amd&apo",{"_index":1898,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["apos;ampersandrequired&apo",{"_index":2126,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["apos;angular&apo",{"_index":4834,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apos;animatenumber&apo",{"_index":4164,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["apos;api",{"_index":475,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["apos;app",{"_index":796,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/template-driven_forms.html#模版驱动表单":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html#ElementRef":{}}}],["apos;app&apo",{"_index":594,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/routeroutlet.html#动态添加路由组件":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["apos;app/app.component.html&apo",{"_index":2053,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["apos;app/signup",{"_index":2180,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["apos;appzone&apo",{"_index":6527,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["apos;b&apo",{"_index":1492,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"Pipes/custom_pipes.html#自定义管道":{},"zone/context_propagation.html#上下文传播":{}}}],["apos;backgroundcolor&apo",{"_index":3412,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["apos;basscss",{"_index":3176,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["apos;big&apo",{"_index":806,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个数组":{}}}],["apos;blue&apo",{"_index":3413,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["apos;body&apo",{"_index":4374,"title":{},"body":{"Project-setup/plugins.html#插件":{},"Project-setup/summary.html#总结":{}}}],["apos;bold&apo",{"_index":1045,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["apos;borderbottom&apo",{"_index":1046,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["apos;break",{"_index":988,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;brian",{"_index":1000,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;bye&apo",{"_index":1635,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["apos;bytes&apo",{"_index":4090,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;c&apo",{"_index":1488,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["apos;cheese&apo",{"_index":1150,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["apos;child",{"_index":705,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["apos;chrome&apo",{"_index":5165,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;classic&apo",{"_index":1907,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["apos;color&apo",{"_index":1041,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{},"Modules/directive-duplications.html#指令复制":{}}}],["apos;commonjs&apo",{"_index":1897,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["apos;compon",{"_index":1015,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["apos;constructor",{"_index":1664,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["apos;count",{"_index":4943,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["apos;counter&apo",{"_index":6093,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["apos;coverage&apo",{"_index":5183,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["apos;coverage/chrome/coverag",{"_index":5215,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["apos;creditcardmask&apo",{"_index":3773,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["apos;crippl",{"_index":1002,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;currentvalue&apo",{"_index":5916,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["apos;d",{"_index":982,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;d&apo",{"_index":1489,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["apos;daniel",{"_index":1007,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;debug",{"_index":1849,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["apos;decr",{"_index":5389,"title":{},"body":{"Testing/simple-actions.html#测试简单的-Action":{}}}],["apos;decrement&apo",{"_index":5887,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}}}],["apos;decrement_counter&apo",{"_index":4951,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["apos;destroy",{"_index":1017,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;discard",{"_index":4702,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["apos;dispatch&apo",{"_index":4947,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["apos;display",{"_index":5336,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html#验证方法和属性":{}}}],["apos;dist&apo",{"_index":4248,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html#总结":{}}}],["apos;div&apo",{"_index":4887,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"advanced-components/elementref.html#ElementRef":{}}}],["apos;duration:&apo",{"_index":6758,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["apos;e&apo",{"_index":1490,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["apos;eager&apo",{"_index":3697,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;eb&apo",{"_index":4087,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;email",{"_index":489,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["apos;end&apo",{"_index":6391,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["apos;enter&apo",{"_index":6760,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["apos;error&apo",{"_index":6694,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["apos;es2015&apo",{"_index":1901,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["apos;es6",{"_index":4218,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["apos;exabytes&apo",{"_index":4095,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;f&apo",{"_index":1493,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["apos;fail",{"_index":1339,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["apos;first&apo",{"_index":5623,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["apos;font",{"_index":1043,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["apos;food&apo",{"_index":5293,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apos;formatfilesize&apo",{"_index":4098,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;forty&apo",{"_index":1786,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;fr&apo",{"_index":2580,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["apos;full&apo",{"_index":3698,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/child_routes.html#定义子路由":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/routeparams.html#声明路由参数":{}}}],["apos;g&apo",{"_index":1494,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["apos;gb&apo",{"_index":4084,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;get&apo",{"_index":4829,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["apos;gigabytes&apo",{"_index":4093,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;gorgonzola&apo",{"_index":1779,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;gray&apo",{"_index":3414,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["apos;h1",{"_index":3424,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["apos;h1mi",{"_index":3573,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["apos;h1{{message}}/h1&apo",{"_index":5539,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["apos;h3random",{"_index":4883,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["apos;hello",{"_index":1522,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["apos;hello&apo",{"_index":1437,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["apos;hi",{"_index":1636,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["apos;hi&apo",{"_index":1633,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["apos;home&apo",{"_index":4673,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["apos;html",{"_index":4424,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["apos;http://jsonplaceholder.typicode.com/users/&apo",{"_index":3940,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["apos;https://en.wikipedia.org/w/api.php?&apo",{"_index":4832,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apos;i",{"_index":1784,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;id&apo",{"_index":4542,"title":{},"body":{"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html#读取路由参数":{}}}],["apos;in&apo",{"_index":5703,"title":{},"body":{"animation/index.html#动画":{}}}],["apos;incr",{"_index":5387,"title":{},"body":{"Testing/simple-actions.html#测试简单的-Action":{}}}],["apos;increment&apo",{"_index":5886,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}}}],["apos;increment_counter&apo",{"_index":4940,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["apos;incrementifodd",{"_index":4945,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{}}}],["apos;inlin",{"_index":5206,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["apos;invoke&apo",{"_index":6389,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["apos;jan&apo",{"_index":1727,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["apos;jasmine&apo",{"_index":5123,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;json&apo",{"_index":5217,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["apos;judochop&apo",{"_index":1796,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;karma",{"_index":5125,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;katie&apo",{"_index":5725,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["apos;kb&apo",{"_index":4082,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;kickpuncher&apo",{"_index":1797,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;kilobytes&apo",{"_index":4091,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;lazy&apo",{"_index":3699,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;lazy/lazy.module#lazymodule&apo",{"_index":3700,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;leave&apo",{"_index":6761,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["apos;lettuce&apo",{"_index":1151,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["apos;libzone&apo",{"_index":6526,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["apos;literal&apo",{"_index":1639,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["apos;loaded!&apo",{"_index":1338,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["apos;logg",{"_index":492,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["apos;login_send&apo",{"_index":5724,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["apos;login_user_error&apo",{"_index":5905,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["apos;login_user_pending&apo",{"_index":5903,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["apos;login_user_success&apo",{"_index":5904,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["apos;logout_user&apo",{"_index":5906,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["apos;logzone&apo",{"_index":6759,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["apos;lord",{"_index":998,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;mb&apo",{"_index":4083,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;megabytes&apo",{"_index":4092,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;messagecomponent&apo",{"_index":5340,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["apos;mi",{"_index":4881,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["apos;michel",{"_index":990,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;multipli",{"_index":5396,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["apos;ng2",{"_index":4226,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["apos;node&apo",{"_index":1905,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["apos;number&apo",{"_index":1696,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;number[]&apo",{"_index":1694,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["apos;oathkeeper&apo",{"_index":992,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;ok&apo",{"_index":6528,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["apos;on",{"_index":1788,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;overview&apo",{"_index":4529,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["apos;page&apo",{"_index":4617,"title":{},"body":{"Routing/query_params.html#读取查询参数":{}}}],["apos;partyzone&apo",{"_index":1792,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;pat&apo",{"_index":1720,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["apos;path/to/app.module#appmodule&apo",{"_index":3196,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["apos;path/to/tsconfig.json&apo",{"_index":3195,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["apos;pb&apo",{"_index":4086,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;peag",{"_index":3703,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;pettabytes&apo",{"_index":4094,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;phantomjs&apo",{"_index":5166,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;plazi",{"_index":3730,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["apos;product",{"_index":4129,"title":{},"body":{"Pipes/using_pipes.html#链接管道":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#读取路由参数":{}}}],["apos;ptot",{"_index":4131,"title":{},"body":{"Pipes/using_pipes.html#链接管道":{}}}],["apos;pushpa&apo",{"_index":1237,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["apos;random&apo",{"_index":592,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["apos;raw&apo",{"_index":4309,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html#总结":{}}}],["apos;red&apo",{"_index":1042,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["apos;redux",{"_index":4221,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["apos;redux&apo",{"_index":4220,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["apos;reflect",{"_index":4224,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["apos;registration&apo",{"_index":491,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["apos;reset&apo",{"_index":5888,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}}}],["apos;rio",{"_index":3422,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["apos;root&apo",{"_index":6588,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["apos;rout",{"_index":4557,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["apos;rxjs&apo",{"_index":4995,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["apos;rxjs/add/observable/of&apo",{"_index":4826,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["apos;rxjs/add/operator/map&apo",{"_index":4996,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["apos;rxjs/observable&apo",{"_index":4825,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["apos;rxjs/rx&apo",{"_index":5756,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["apos;sam&apo",{"_index":1521,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["apos;schedule&apo",{"_index":6388,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["apos;search",{"_index":4845,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["apos;settimeout&apo",{"_index":6382,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["apos;should",{"_index":4830,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html#测试-Reducers":{},"Testing/verify.html#验证方法和属性":{}}}],["apos;shrinkout&apo",{"_index":5702,"title":{},"body":{"animation/index.html#动画":{}}}],["apos;sidebar&apo",{"_index":4474,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["apos;simpl",{"_index":6083,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["apos;sourc",{"_index":4428,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["apos;sourcemap&apo",{"_index":5142,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;span&apo",{"_index":5342,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["apos;span{{message}}/span&apo",{"_index":5341,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["apos;spec&apo",{"_index":5214,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["apos;specs&apo",{"_index":4530,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["apos;start&apo",{"_index":6390,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["apos;string&apo",{"_index":1695,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["apos;string[]&apo",{"_index":1693,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["apos;style!css?sourcemap&apo",{"_index":4310,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html#总结":{}}}],["apos;swim!&apo",{"_index":1264,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["apos;system&apo",{"_index":1899,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["apos;t",{"_index":4269,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{}}}],["apos;tammy&apo",{"_index":1236,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["apos;tb&apo",{"_index":4085,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;test",{"_index":4886,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-test.html#简单的测试":{},"Testing/verify.html#验证方法和属性":{}}}],["apos;test&apo",{"_index":1221,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["apos;testing&apo",{"_index":5544,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["apos;th",{"_index":984,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;tim",{"_index":995,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;timingzone&apo",{"_index":6757,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["apos;token&apo",{"_index":468,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["apos;ts&apo",{"_index":4308,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html#总结":{}}}],["apos;tslint&apo",{"_index":4307,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html#总结":{}}}],["apos;two",{"_index":980,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;umd&apo",{"_index":1900,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["apos;undefined&apo",{"_index":1728,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["apos;url&apo",{"_index":4311,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html#总结":{}}}],["apos;us",{"_index":4421,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["apos;value&apo",{"_index":6003,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["apos;vendor&apo",{"_index":4426,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["apos;verifi",{"_index":4843,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["apos;w",{"_index":6691,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["apos;walk!&apo",{"_index":1263,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["apos;webpack&apo",{"_index":4423,"title":{},"body":{"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["apos;wikipedia",{"_index":4828,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["apos;wint",{"_index":993,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;x",{"_index":2308,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["apos;xlf&apo",{"_index":2581,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["apos;y",{"_index":1009,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["apos;yb&apo",{"_index":4089,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;yellow&apo",{"_index":3415,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["apos;yottabytes&apo",{"_index":4097,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;zb&apo",{"_index":4088,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;zettabytes&apo",{"_index":4096,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["apos;zone.js&apo",{"_index":4228,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["apos;zonea&apo",{"_index":6278,"title":{},"body":{"zone/context_propagation.html#上下文传播":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["app",{"_index":49,"title":{},"body":{"bootstrapping/file_structure.html":{},"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/responding_to_component_events.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/structural_directives.html":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"Form/reactive-forms_basics.html":{},"Form/template-driven_forms.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-an-app.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/init.html":{},"Modules/directive-duplications.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html":{},"Modules/lazy-loading-module.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/stateful_and_async_pipes.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["app&#x7684;&#x5165;&#x53e3;&#x70b9;&#xff0c;./src/index.ts&#xff0c;&#x662f;&#x6211;&#x4eec;angular",{"_index":4229,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["app&apo",{"_index":3423,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["app&apos;",{"_index":713,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["app'",{"_index":654,"title":{},"body":{"Di/the_injector_tree.html":{}}}],["app.clearmessag",{"_index":5528,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["app.compon",{"_index":66,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Di/the_injector_tree.html":{},"Modules/feature-modules.html":{},"Modules/introduction.html":{},"Modules/lazy-loading-module.html":{},"Modules/multiple-elements.html":{}}}],["app.component.t",{"_index":2562,"title":{},"body":{"i18n/import-using-jit.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["app.modul",{"_index":72,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["app.module.t",{"_index":3402,"title":{},"body":{"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["app.rout",{"_index":3657,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["app.setmessag",{"_index":5525,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["app/act",{"_index":6035,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["app/actor.model.t",{"_index":6812,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["app/app.component.html",{"_index":252,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Form/reactive-forms_basics.html":{}}}],["app/app.component.t",{"_index":36,"title":{},"body":{"bootstrapping/file_structure.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/responding_to_component_events.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Change-detection/how_change_detection_works.html":{}}}],["app/app.modul",{"_index":3556,"title":{},"body":{"Modules/introduction.html":{}}}],["app/app.module.t",{"_index":37,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["app/app.routing.t",{"_index":3663,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["app/child/child.component.t",{"_index":352,"title":{},"body":{"Components/projection.html":{}}}],["app/components/child",{"_index":637,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["app/components/count",{"_index":6040,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["app/components/mycomponent.spec.t",{"_index":4985,"title":{},"body":{"Testing/filename-conventions.html":{},"Testing/filename-conventions.html#文件名约定":{}}}],["app/components/mycomponent.t",{"_index":4984,"title":{},"body":{"Testing/filename-conventions.html":{},"Testing/filename-conventions.html#文件名约定":{}}}],["app/containers/app",{"_index":5777,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["app/containers/app.t",{"_index":647,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["app/counter.component.html",{"_index":328,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{}}}],["app/counter.component.t",{"_index":326,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{}}}],["app/eager.component.t",{"_index":3627,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["app/email/email.module.t",{"_index":439,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["app/email/email.service.t",{"_index":434,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["app/h1",{"_index":3404,"title":{},"body":{"Modules/directive-duplications.html":{},"Modules/introduction.html":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["app/h1&apo",{"_index":3425,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{},"Modules/introduction.html#一个模块的基本使用":{}}}],["app/index.t",{"_index":2561,"title":{},"body":{"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["app/lazy/counter.service.t",{"_index":3614,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["app/lazy/lazy.component.t",{"_index":3616,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["app/lazy/lazy.module.t",{"_index":3612,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["app/lazy/lazy.routing.t",{"_index":3674,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["app/logger/logger.module.t",{"_index":443,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["app/logger/logger.service.t",{"_index":441,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["app/login",{"_index":2033,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["app/main.t",{"_index":39,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["app/models/appstate.t",{"_index":5800,"title":{},"body":{"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{}}}],["app/models/counter.t",{"_index":5816,"title":{},"body":{"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{}}}],["app/module.t",{"_index":623,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["app/movie.component.t",{"_index":109,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["app/profile.component.html",{"_index":276,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["app/profile.component.t",{"_index":275,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["app/reducer/count",{"_index":5974,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["app/reducers/curs",{"_index":6034,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["app/reducers/index.t",{"_index":5767,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["app/services/counter.service.t",{"_index":5939,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["app/services/unique.t",{"_index":632,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["app/shared/shared.module.t",{"_index":3789,"title":{},"body":{"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["app/signup",{"_index":2169,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["app/src/containers/app",{"_index":6048,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["app/store/counter/counter.actions.t",{"_index":5848,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["app/store/createaction.t",{"_index":5713,"title":{},"body":{"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["app/store/rootreducer.t",{"_index":5791,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["appbuttonpress",{"_index":3312,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["appcompon",{"_index":56,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/responding_to_component_events.html":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"Change-detection/how_change_detection_works.html":{}}}],["appcomponent_changedetector",{"_index":155,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["appconfirm",{"_index":3261,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["appconfirm]=visitrangl",{"_index":3269,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["appdelay",{"_index":3222,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["appdelay(tim",{"_index":3227,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["appear",{"_index":6728,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["apphighlight",{"_index":3278,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["appli",{"_index":5945,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"license.html":{},"license.html#Under-the-following-terms":{}}}],["applic",{"_index":33,"title":{"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}},"body":{"Change-detection/additional_resources.html":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["application&#x2019;",{"_index":7102,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["application/b",{"_index":53,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["application’",{"_index":7072,"title":{},"body":{"why_TypeScript.html":{}}}],["apply(thi",{"_index":1537,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["applyarg",{"_index":6364,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["applythi",{"_index":6363,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["appmodul",{"_index":69,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["appmodulengfactori",{"_index":78,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["appmydirect",{"_index":3275,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["approach",{"_index":2482,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["appropri",{"_index":6832,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["approutingprovid",{"_index":4635,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["appstat",{"_index":5789,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["appstate.counter.currentvalu",{"_index":5859,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["appzon",{"_index":6500,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["appzone.run",{"_index":6510,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["app的入口点，./src/index.ts，是我们angular",{"_index":4182,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["app组件中，“random",{"_index":559,"title":{},"body":{"Di/injection_beyond_classes.html":{}}}],["architectur",{"_index":7068,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["architecture&#x201d;&#x662f;&#x6307;&#x4ee5;&#x7c7b;&#x4f3c;&#x4e8e;angular",{"_index":3079,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["architecture”是指以类似于angular",{"_index":2987,"title":{},"body":{"why_angular_2.html":{}}}],["area",{"_index":5773,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["arg",{"_index":1173,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["args[1",{"_index":1456,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["argsarray",{"_index":1176,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["argument",{"_index":1118,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["arnold",{"_index":230,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["around",{"_index":7056,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["array",{"_index":199,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Directives/ng_class_directive.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["array&apo",{"_index":804,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个数组":{}}}],["array.reduc",{"_index":5960,"title":{},"body":{"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["array[2",{"_index":1514,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["arrow",{"_index":1774,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{}}}],["arrow&#x51fd;&#x6570;&#x7c7b;&#x4f3c;&#x3002",{"_index":1802,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["articl",{"_index":6914,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["artist",{"_index":2335,"title":{},"body":{"Http/making_requests.html":{}}}],["arto",{"_index":3740,"title":{},"body":{"Modules/modules.html":{},"Modules/modules.html#模块":{}}}],["assert",{"_index":6471,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["assign",{"_index":1217,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["assist",{"_index":5565,"title":{},"body":{"a11y/key-concerns.html":{},"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["associ",{"_index":6559,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["assum",{"_index":4143,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["async",{"_index":829,"title":{},"body":{"Directives/ng_if_directive.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["async/button",{"_index":6047,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["asynchron",{"_index":3915,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["asyncpip",{"_index":4134,"title":{"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}},"body":{"Pipes/stateful_and_async_pipes.html":{}}}],["asyncpipe&#x53ef;&#x4ee5;&#x63a5;&#x6536",{"_index":4153,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["attack",{"_index":1761,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["attempt",{"_index":2041,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["attr.rol",{"_index":3314,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["attribut",{"_index":728,"title":{},"body":{"Directives/directives.html":{},"Directives/directives.html#指令":{},"license.html":{},"license.html#License":{},"license.html#Under-the-following-terms":{}}}],["auth",{"_index":544,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["auth/login",{"_index":2271,"title":{},"body":{"Http/catching-rejections.html":{}}}],["authdata",{"_index":2275,"title":{},"body":{"Http/catching-rejections.html":{}}}],["authent",{"_index":2278,"title":{},"body":{"Http/catching-rejections.html":{}}}],["authinterceptor",{"_index":2293,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["authservic",{"_index":393,"title":{},"body":{"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/inject_and_injectable.html":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["authservice.gettoken",{"_index":2300,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["authservice.login(credentials.usernam",{"_index":5869,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["authwidget",{"_index":394,"title":{},"body":{"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/inject_and_injectable.html":{}}}],["auto",{"_index":6425,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["autocomplet",{"_index":6923,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["automat",{"_index":3336,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["autowatch",{"_index":5120,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["aux",{"_index":4458,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["aux&apo",{"_index":4475,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["aux/a",{"_index":4459,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["avail",{"_index":7074,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["avatar",{"_index":2751,"title":{},"body":{"practice.html":{}}}],["avoid",{"_index":2992,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["awar",{"_index":6024,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["away",{"_index":3339,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["awesom",{"_index":3162,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["b",{"_index":201,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Immutable/maps_are_iterable.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Pipes/custom_pipes.html":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{}}}],["b.j",{"_index":1916,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["b.t",{"_index":1883,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["babel",{"_index":2792,"title":{},"body":{"vs_react.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["babel&#xff09;&#x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x3002",{"_index":2854,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["background",{"_index":784,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["backgroundcolor",{"_index":3287,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{},"Modules/directive-duplications.html":{}}}],["bad",{"_index":3908,"title":{},"body":{"Observables/error_handling.html":{}}}],["bake",{"_index":4913,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["banana",{"_index":2188,"title":{},"body":{"Form/template-model-binding.html":{}}}],["bangular",{"_index":3986,"title":{},"body":{"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{}}}],["bar",{"_index":1804,"title":{},"body":{"ES6&TypeScript/typescript/typescript_classes.html":{}}}],["base",{"_index":2409,"title":{"Routing/config.html#Base-标签":{}},"body":{"Immutable/lists.html":{},"Routing/config.html":{},"Routing/config.html#Base-标签":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["base64编码数据url",{"_index":4285,"title":{},"body":{"Project-setup/loaders.html":{}}}],["base_url",{"_index":2270,"title":{},"body":{"Http/catching-rejections.html":{}}}],["basebutton",{"_index":2419,"title":{},"body":{"Immutable/map_merge.html":{}}}],["basebutton.merg",{"_index":2426,"title":{},"body":{"Immutable/map_merge.html":{}}}],["baseplugin",{"_index":4407,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["baseplugins.concat(envplugins[process.env.node_env",{"_index":4413,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["basic",{"_index":3152,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["basic&#39",{"_index":3149,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["basic&#x201d",{"_index":3181,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["basic&apo",{"_index":3177,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["basscss",{"_index":3151,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["bastard",{"_index":881,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["batchcomplet",{"_index":4787,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["baz",{"_index":1805,"title":{},"body":{"ES6&TypeScript/typescript/typescript_classes.html":{}}}],["bbb",{"_index":840,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["bbootstrap",{"_index":52,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["bdd&#x662f;&#x4f7f;&#x7528;tdd&#x548c;&#x81ea;&#x7136;&#x8bed;&#x8a00;&#x7ed3;&#x6784;&#xff08;&#x7c7b;&#x4f3c;&#x82f1;&#x8bed;&#x7684;&#x53e5;&#x5b50;&#xff09;&#x6765;&#x8868;&#x8fbe;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x7684;&#x884c;&#x4e3a;&#x548c;&#x7ed3;&#x679c;&#x7684;&#x7ec4;&#x5408;&#x3002",{"_index":5514,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["bdd是使用tdd",{"_index":5500,"title":{},"body":{"Testing/using-chai.html":{}}}],["be",{"_index":6981,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["beef",{"_index":515,"title":{},"body":{"Di/di_framework.html":{},"Di/what_is_di.html":{}}}],["befor",{"_index":6417,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["beforeeach",{"_index":4807,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["behavior",{"_index":1539,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["belief",{"_index":7003,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["below",{"_index":6566,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["best",{"_index":5931,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["better",{"_index":3117,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["between",{"_index":6502,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["big",{"_index":758,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["biggest",{"_index":6921,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["bin",{"_index":4184,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{}}}],["bind",{"_index":302,"title":{},"body":{"Components/components.html":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"practice.html":{}}}],["bindtocontrol",{"_index":300,"title":{},"body":{"Components/components.html":{}}}],["bird",{"_index":1246,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#子类化":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["bird.cal",{"_index":1349,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["bird.prototyp",{"_index":1351,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["bird.prototype.walk",{"_index":1348,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["bird.walk",{"_index":1250,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{}}}],["bit",{"_index":7059,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["black",{"_index":246,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Directives/ng_style_directive.html":{},"Change-detection/how_change_detection_works.html":{}}}],["black&apo",{"_index":1048,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["block",{"_index":6326,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["blog",{"_index":30,"title":{},"body":{"Change-detection/additional_resources.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"further-reading.html#Keeping-up-to-date":{}}}],["blue",{"_index":354,"title":{},"body":{"Components/projection.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["bluehighlightdirect",{"_index":3398,"title":{},"body":{"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["bob",{"_index":1817,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["bobanddoug@greatwhitenorth.com",{"_index":1966,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["bodi",{"_index":57,"title":{},"body":{"bootstrapping/file_structure.html":{},"Project-setup/plugins.html":{},"Project-setup/summary.html":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["bold",{"_index":763,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_style_directive.html":{}}}],["book",{"_index":6868,"title":{"README.html#Rangle’s-Angular-2-Training-Book":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}},"body":{"README.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["boolean",{"_index":542,"title":{},"body":{"Di/inject_and_injectable.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Immutable/maps_are_iterable.html":{},"Immutable/what_is_immutability.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["boolean的observ",{"_index":4643,"title":{},"body":{"Routing/route_guards.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Components/using_other_components.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["bootstrapmodulefactori",{"_index":86,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["border",{"_index":243,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"Change-detection/how_change_detection_works.html":{}}}],["borderbottom",{"_index":1027,"title":{},"body":{"Directives/ng_style_directive.html":{}}}],["borderstyl",{"_index":1028,"title":{},"body":{"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["both",{"_index":6979,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["bottom",{"_index":752,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Observables/using_observables.html":{}}}],["bound",{"_index":5908,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["boundari",{"_index":6428,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["bowl",{"_index":1743,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["box",{"_index":780,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Form/template-model-binding.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["box&#x201d;&#x8bed;&#x6cd5",{"_index":2204,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["br",{"_index":340,"title":{},"body":{"Components/responding_to_component_events.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["break",{"_index":2699,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["breaker",{"_index":931,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["brian",{"_index":878,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["brick",{"_index":3739,"title":{},"body":{"Modules/modules.html":{},"Modules/modules.html#模块":{}}}],["bridg",{"_index":3918,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["bring",{"_index":7090,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["broken",{"_index":882,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"why_TypeScript.html":{}}}],["browser",{"_index":64,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Di/the_injector_tree.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"further-reading.html":{},"further-reading.html#TypeScript":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Modules/feature-modules.html":{},"Modules/introduction.html":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-loading-module.html":{},"Modules/multiple-elements.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"animation/index.html":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"index.html":{},"index.html#Getting-Started":{}}}],["browser&apo",{"_index":696,"title":{},"body":{"Di/the_injector_tree.html#注入树":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"animation/index.html#动画":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["browser.tolowercase().split",{"_index":5163,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["browser/anim",{"_index":5687,"title":{},"body":{"animation/index.html":{}}}],["browser/animations&apo",{"_index":5696,"title":{},"body":{"animation/index.html#动画":{}}}],["browseranimationsmodul",{"_index":5686,"title":{},"body":{"animation/index.html":{},"animation/index.html#动画":{}}}],["browserdynamictestingmodul",{"_index":5020,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["browsermodul",{"_index":62,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["bruce",{"_index":6810,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["bug",{"_index":6124,"title":{},"body":{"state-management/state-management.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["build",{"_index":2960,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Angular-CLI/command-overview.html":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"license.html":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["builder",{"_index":2038,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Immutable/persistent_and_transient_data_structures.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{}}}],["builder.group",{"_index":2037,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["built",{"_index":6940,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["bulk",{"_index":7061,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["bun",{"_index":513,"title":{},"body":{"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/what_is_di.html":{}}}],["bun(buntyp",{"_index":720,"title":{},"body":{"Di/what_is_di.html":{}}}],["bundl",{"_index":3111,"title":{"Project-setup/installation_and_usage.html#Bundle":{}},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/aot_limitations.html":{},"Project-setup/installation_and_usage.html":{}}}],["bundle&#x5b9e;&#x9645;&#x4e0a;&#x4f1a;&#x5360;&#x7528;&#x66f4;&#x591a;&#x7684;&#x7a7a;&#x95f4;&#x3002",{"_index":3220,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["bundle&#x662f;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x6a21;&#x5757;&#x96c6;&#x5408;&#xff0c;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x5b83;&#x4eec;&#x5982;&#x4f55;&#x5206;&#x79bb;&#x7684;&#x8fb9;&#x754c;&#x3002",{"_index":4201,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["bundle&#x76f8;&#x6bd4;&#xff0c;aot",{"_index":3219,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["bundle相比，aot",{"_index":3209,"title":{},"body":{"Advanced-angular/aot_limitations.html":{}}}],["buntyp",{"_index":531,"title":{},"body":{"Di/inject_and_injectable.html":{},"Di/what_is_di.html":{}}}],["bun，patty和top",{"_index":724,"title":{},"body":{"Di/what_is_di.html":{}}}],["burger",{"_index":525,"title":{},"body":{"Di/di_framework.html":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["burger.listtop",{"_index":1171,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["button",{"_index":220,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/using_observables.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"Change-detection/how_change_detection_works.html":{}}}],["buttonpressdirect",{"_index":3313,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["bye",{"_index":1621,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{}}}],["bye&apo",{"_index":1637,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["byou",{"_index":4027,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["byte",{"_index":4047,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["b在用户a之后2000ms订阅。然而，用户b开始获得像用户a",{"_index":3846,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{}}}],["c",{"_index":202,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Immutable/maps_are_iterable.html":{}}}],["c.prototyp",{"_index":1538,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["ca",{"_index":1978,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["cachedvers",{"_index":2366,"title":{},"body":{"Http/catch_and_release.html":{}}}],["cad",{"_index":4124,"title":{},"body":{"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{}}}],["cage",{"_index":235,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["cake",{"_index":1732,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["call",{"_index":1355,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["callback",{"_index":1403,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["callserv",{"_index":1609,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["camel",{"_index":1032,"title":{},"body":{"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["camelcas",{"_index":3267,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["can&#x2019;t",{"_index":6345,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["canact",{"_index":4623,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#路由拦截":{}}}],["canactiv",{"_index":4634,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{}}}],["canactivechild",{"_index":4624,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#路由拦截":{}}}],["cancel",{"_index":6444,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["candeactiv",{"_index":4625,"title":{"Routing/route_guards.html#实现-CanDeactivate":{}},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#路由拦截":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{}}}],["candeactivate(compon",{"_index":4638,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["candeactivateaccountpag",{"_index":4641,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["candeactivatet",{"_index":4637,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["canload",{"_index":4626,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#路由拦截":{}}}],["can’t",{"_index":6335,"title":{},"body":{"zone/patching_async_methods.html":{}}}],["captur",{"_index":6316,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["capturedzon",{"_index":6317,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["capturedzone.run(callback",{"_index":6333,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["capturedzone.runguarded(callback",{"_index":6319,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["capturestacktrace()).toequal(innerloc",{"_index":6564,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["capturestacktrace()).toequal(outerloc",{"_index":6560,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["capturestacktrace()).toequal(rootloc",{"_index":6477,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["capturestacktrace()).toequal(rootlocationrestor",{"_index":6480,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["capturestacktrace()).toequal(zonealoc",{"_index":6485,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["capturestacktrace()).toequal(zonealocationrestor",{"_index":6487,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["capturetimeout",{"_index":5121,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["car",{"_index":210,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["card",{"_index":769,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{}}}],["card&apo",{"_index":3768,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["card.compon",{"_index":3454,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/multiple-elements.html":{}}}],["card.component&apo",{"_index":3481,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["card.component.t",{"_index":3443,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["card.modul",{"_index":3457,"title":{},"body":{"Modules/feature-modules.html":{}}}],["card.module&apo",{"_index":3508,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["card.module.t",{"_index":3444,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{}}}],["card.servic",{"_index":3452,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/multiple-elements.html":{}}}],["card.service&apo",{"_index":3480,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["card.service.t",{"_index":3445,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["card/app",{"_index":3762,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["card/credit",{"_index":3446,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{}}}],["card/rio",{"_index":3456,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{}}}],["cardhold",{"_index":1986,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["care",{"_index":6620,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["case",{"_index":1033,"title":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}},"body":{"Directives/ng_style_directive.html":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"Immutable/persistent_and_transient_data_structures.html":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["case&#xff09;&#x547d;&#x540d;&#x3002",{"_index":1056,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["case&#xff09;&#x548c;&#x5c0f;&#x9a7c;&#x5cf0;&#x5f0f;&#xff08;low",{"_index":1055,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["case）和小驼峰式（low",{"_index":1031,"title":{},"body":{"Directives/ng_style_directive.html":{}}}],["cast",{"_index":7050,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["catch",{"_index":2272,"title":{},"body":{"Http/catching-rejections.html":{},"Http/catch_and_release.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["caus",{"_index":6736,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["cb",{"_index":1772,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["cc",{"_index":3742,"title":{},"body":{"Modules/modules.html":{},"Modules/modules.html#模块":{},"license.html":{},"license.html#License":{}}}],["ccc",{"_index":753,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["cde",{"_index":1458,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["center",{"_index":750,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["certainli",{"_index":7020,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["chai",{"_index":5459,"title":{},"body":{"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{},"Testing/using-chai.html":{}}}],["chai&#x662f;&#x4e00;&#x4e2a;&#x65ad;&#x8a00;&#x5e93;&#xff0c;&#x6709;&#x4e00;&#x4e9b;&#x7f8e;&#x5473;&#x7684;&#x8bed;&#x6cd5;&#x7cd6;&#xff0c;&#x53ef;&#x4ee5;&#x4e0e;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x6d4b;&#x8bd5;&#x6846;&#x67b6;&#x914d;&#x5bf9;&#x3002",{"_index":5511,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["chai.expect(testme).to.be.a(&apos;number&apo",{"_index":5505,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["chai.expect(testme).to.equal(16",{"_index":5506,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["chai.should",{"_index":5507,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["chain",{"_index":932,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["chains&apo",{"_index":989,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["challeng",{"_index":7066,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["chang",{"_index":22,"title":{},"body":{"Change-detection/additional_resources.html":{},"Change-detection/Change_Detection.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/two_way_data_binding.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"Angular-CLI/command-overview.html":{},"Routing/route_guards.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["changeactor",{"_index":232,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["changeactorobject",{"_index":239,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["changeactorprop",{"_index":237,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["changeactorproperti",{"_index":6809,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["changeactorpropertiesi",{"_index":115,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["changedetect",{"_index":110,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{}}}],["changedetectionstrategi",{"_index":27,"title":{},"body":{"Change-detection/additional_resources.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{}}}],["changedetectionstrategy.default",{"_index":180,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["changedetectionstrategy.onpush",{"_index":111,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/enforcing_immutability.html":{}}}],["changelog",{"_index":2731,"title":{},"body":{"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{}}}],["changes?&apo",{"_index":4703,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["charact",{"_index":2140,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["characterist",{"_index":3109,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["chat",{"_index":546,"title":{},"body":{"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["chatfe",{"_index":619,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["chatinput",{"_index":620,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["chatservic",{"_index":617,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["chatsocket",{"_index":395,"title":{},"body":{"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/inject_and_injectable.html":{}}}],["chatwidget",{"_index":391,"title":{},"body":{"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["chatwidget.chatsocket.encrypt",{"_index":543,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["chatwindow",{"_index":616,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["check",{"_index":6941,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["checker",{"_index":7073,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["chees",{"_index":1126,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["cheese&apo",{"_index":1791,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["child",{"_index":343,"title":{},"body":{"Components/projection.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["childcompon",{"_index":347,"title":{},"body":{"Components/projection.html":{}}}],["childcont",{"_index":346,"title":{},"body":{"Components/projection.html":{}}}],["childinheritor",{"_index":625,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["childinheritor&apos;",{"_index":714,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["childinheritor'",{"_index":656,"title":{},"body":{"Di/the_injector_tree.html":{}}}],["childowninjector",{"_index":626,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["childowninjector&apos;",{"_index":715,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["childowninjector'",{"_index":659,"title":{},"body":{"Di/the_injector_tree.html":{}}}],["children",{"_index":2763,"title":{},"body":{"practice.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["children&#x3002",{"_index":5634,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["china.org",{"_index":6231,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html":{},"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["choic",{"_index":7089,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["chrome",{"_index":5116,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["chrome，firefox，safari，ie或opera（需要为每个浏览器安装额外的karma",{"_index":5168,"title":{},"body":{"Testing/karma-config.html":{}}}],["chrome，safari，opera",{"_index":6191,"title":{},"body":{"tooling/chrome.html":{}}}],["chuck",{"_index":1751,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["circle.j",{"_index":1297,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["circumfer",{"_index":1300,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["circumst",{"_index":6408,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["citi",{"_index":1974,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["class",{"_index":55,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#NgClass-指令":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"practice.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Angular-CLI/creating-other-things.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"Change-detection/how_change_detection_works.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["class)&apo",{"_index":1665,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["class.press",{"_index":3316,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["class=\"main\"item/div",{"_index":3307,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["class=\"orang",{"_index":749,"title":{},"body":{"Directives/ng_class_directive.html":{}}}],["class=\"sub\"load",{"_index":3308,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["class=\"tab",{"_index":843,"title":{},"body":{"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{}}}],["class=orang",{"_index":799,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["classasarraycompon",{"_index":766,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{}}}],["classasobjectcompon",{"_index":789,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["classasstringcompon",{"_index":756,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["classdecor",{"_index":1562,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["classic",{"_index":1344,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["clean",{"_index":4335,"title":{},"body":{"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["clear",{"_index":5527,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["clearli",{"_index":6984,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["clearmessag",{"_index":5522,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["cleartimeout(timeoutid",{"_index":3896,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["cli",{"_index":2611,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Angular-CLI/adding-third-party-libraries.html":{},"Angular-CLI/cli.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-an-app.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/serving-the-app.html":{},"Angular-CLI/setup.html":{},"Angular-CLI/testing.html":{},"Project-setup/npm_scripts_integration.html":{},"index.html":{},"index.html#Getting-Started":{}}}],["cli#3rd",{"_index":3327,"title":{},"body":{"Angular-CLI/adding-third-party-libraries.html":{}}}],["cli&#x4e0d;&#x5141;&#x8bb8;&#x4e3a;&#x590d;&#x6742;&#x7684;&#x7528;&#x4f8b;&#x5b9a;&#x5236;webpack&#x914d;&#x7f6e;&#xff0c;&#x5b83;&#x53ef;&#x80fd;&#x4e0d;&#x591f;&#xff09;&#x3002",{"_index":3204,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["cli&#x5de5;&#x5177;&#xff0c;&#x5b83;&#x5c06;&#x63d0;&#x53d6;&#x6b64;&#x6587;&#x672c;&#xff0c;&#x5e76;&#x5c06;&#x5176;&#x653e;&#x5165",{"_index":2624,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["cli&#x6267;&#x884c;&#x4efb;&#x52a1;&#x3002",{"_index":4344,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["cli&#x751f;&#x6210;&#x7684;&#x9879;&#x76ee;&#xff0c;&#x6253;&#x5f00;aot&#x53ef;&#x4ee5;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x56e0;&#x4e3a;ng",{"_index":3202,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["click",{"_index":333,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Immutable/map_merge.html":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["click)=\"actions.decr",{"_index":6143,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["click)=\"actions.increment()\"+/button",{"_index":6142,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["click)=\"actions.incrementasync()\"incr",{"_index":6145,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["click)=\"actions.incrementifodd()\"incr",{"_index":6144,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["click)=\"addotherepisod",{"_index":921,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["click)=\"changeactor()\"chang",{"_index":222,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["click)=\"changeactorobject()\"chang",{"_index":6807,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["click)=\"changeactorproperties()\"chang",{"_index":6805,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["click)=\"decrement.emit",{"_index":6043,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["click)=\"flat=!flat\"toggl",{"_index":772,"title":{},"body":{"Directives/ng_class_directive.html":{}}}],["click)=\"increasecounter()\"increas",{"_index":3619,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/shared-modules-di.html":{}}}],["click)=\"increment()\"increment/button",{"_index":321,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["click)=\"increment.emit()\"+/button",{"_index":6042,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["click)=\"incrementasync.emit()\"incr",{"_index":6046,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["click)=\"incrementifodd.emit()\"incr",{"_index":6044,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["click)=\"init()\"init/button",{"_index":3997,"title":{},"body":{"Observables/using_observables.html":{}}}],["click)=\"settab(1)\"tab",{"_index":846,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["click)=\"settab(2)\"tab",{"_index":849,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["click)=\"settab(3)\"tab",{"_index":852,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["click)=\"settab(i",{"_index":1090,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["click)=\"showalert()\"show",{"_index":5575,"title":{},"body":{"advanced-components/access_child_components.html":{}}}],["click)=\"showalert(1)\"show",{"_index":5587,"title":{},"body":{"advanced-components/access_child_components.html":{}}}],["click)=\"toggleexists()\"toggl",{"_index":819,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["click)=\"visitrangl",{"_index":3256,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["click)=actions.decr",{"_index":6157,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["click)=actions.increment()+/button",{"_index":6156,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["click)=actions.incrementasync()incr",{"_index":6159,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["click)=actions.incrementifodd()incr",{"_index":6158,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["click)=addotherepisod",{"_index":978,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["click)=decrement.emit",{"_index":6095,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["click)=flat=!flattoggl",{"_index":814,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{}}}],["click)=increasecounter()increas",{"_index":3641,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["click)=increment.emit()+/button",{"_index":6094,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["click)=incrementasync.emit()incr",{"_index":6097,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["click)=incrementifodd.emit()incr",{"_index":6096,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["click)=showalert()show",{"_index":5607,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["click)=showalert(1)show",{"_index":5618,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["cli不允许为复杂的用例定制webpack",{"_index":3165,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["cli创建的应用程序可以集成到以后使用cli",{"_index":3382,"title":{},"body":{"Angular-CLI/init.html":{}}}],["cli创建的文件夹结构不同，因此init",{"_index":3384,"title":{},"body":{"Angular-CLI/init.html":{}}}],["cli可以使用generate命令支持其他angular",{"_index":3376,"title":{},"body":{"Angular-CLI/creating-other-things.html":{}}}],["cli命令的所有功能。创建应用程序可能需要几分钟时间才能完成，因为npm需要安装所有依赖项。该目录会自动设置为一个新的git库为好。如果git是不是你选择的版本控制，只需取下git的文件夹和的.gitignor",{"_index":3366,"title":{},"body":{"Angular-CLI/creating-an-app.html":{}}}],["cli将应用程序特定的文件存储在src文件夹中，并将angular",{"_index":3368,"title":{},"body":{"Angular-CLI/creating-an-app.html":{}}}],["cli已经安装了基本angular",{"_index":3370,"title":{},"body":{"Angular-CLI/creating-an-app.html":{}}}],["cli提供内置的lint",{"_index":3387,"title":{},"body":{"Angular-CLI/linting.html":{}}}],["cli旨在成为用于创建和管理angular",{"_index":3333,"title":{},"body":{"Angular-CLI/cli.html":{}}}],["cli生成的项目，打开aot可以很简单，因为ng",{"_index":3163,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["cli的流行，angular",{"_index":3331,"title":{},"body":{"Angular-CLI/cli.html":{}}}],["cli目前仅通过npm分发，需要node版本4",{"_index":3392,"title":{},"body":{"Angular-CLI/setup.html":{}}}],["cli目前只在typescript",{"_index":3334,"title":{},"body":{"Angular-CLI/cli.html":{}}}],["cli通过使用karma",{"_index":3393,"title":{},"body":{"Angular-CLI/testing.html":{}}}],["clone",{"_index":6856,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["clonedrequest",{"_index":2296,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["clonedrequest.headers.key",{"_index":2301,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["close",{"_index":2507,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["close)=\"showalert(2",{"_index":5582,"title":{},"body":{"advanced-components/access_child_components.html":{}}}],["close)=\"showalert(3",{"_index":5584,"title":{},"body":{"advanced-components/access_child_components.html":{}}}],["close)=showalert(2",{"_index":5615,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["close)=showalert(3",{"_index":5616,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["closur",{"_index":6318,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["closure&#x8fd9;&#x6837;&#x7684;bundler&#x53ef;&#x4ee5;&#x53d1;&#x6325;&#x8fd9;&#x79cd;&#x4f18;&#x52bf;&#xff0c;&#x6709;&#x6548;&#x5730;&#x51cf;&#x5c11;&#x5305;&#x5927;&#x5c0f;&#x3002",{"_index":3143,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["closure这样的bundl",{"_index":3124,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["clutter",{"_index":7024,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["cmder",{"_index":6246,"title":{},"body":{"tooling/the_command_line.html":{},"tooling/the_command_line.html#命令行":{}}}],["code",{"_index":1896,"title":{"further-reading.html#General-Coding-Practice-and-Functional-Programming":{}},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Angular-CLI/command-overview.html":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["code&#x200a;&#x2014;&#x200a;most",{"_index":7101,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["cold",{"_index":3850,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["collect",{"_index":3916,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["color",{"_index":755,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Advanced-angular/listening_to_an_element_host.html":{},"Modules/directive-duplications.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["color.green",{"_index":1818,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["color.w",{"_index":1868,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["combinedloaders().concat",{"_index":5146,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["combinereduc",{"_index":5768,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["come",{"_index":870,"title":{},"body":{"Directives/ng_for_directive.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["coming&apo",{"_index":994,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["command",{"_index":3380,"title":{},"body":{"Angular-CLI/creating-other-things.html":{}}}],["comment",{"_index":7029,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["commerci",{"_index":6827,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["common",{"_index":1615,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"license.html":{},"license.html#License":{}}}],["commonj",{"_index":1911,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["commonmodul",{"_index":3447,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{}}}],["commonmodule&#xff0c",{"_index":3491,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["compani",{"_index":1984,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["compar",{"_index":2511,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["compat",{"_index":7043,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["competit",{"_index":4838,"title":{},"body":{"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{}}}],["compil",{"_index":1887,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"i18n/import-using-jit.html":{},"further-reading.html":{},"further-reading.html#TypeScript":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["compiler&#x5c06;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x5bfc;&#x5165;&#x5230;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d",{"_index":2570,"title":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}},"body":{}}],["compileropt",{"_index":1918,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["complain",{"_index":7041,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["complet",{"_index":2263,"title":{},"body":{"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"practice.html":{},"Observables/error_handling.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["complex",{"_index":6958,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["compon",{"_index":46,"title":{"advanced-components/advanced-components.html#Advanced-Components":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}},"body":{"bootstrapping/file_structure.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/directives.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"Form/getting-started.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/cancel_request.html":{},"glossary.html":{},"glossary.html#装饰器":{},"practice.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routerlink.html":{},"Routing/routerlink.html#RouterLink":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/advanced-components.html":{},"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"Change-detection/how_change_detection_works.html":{}}}],["component&#x201d;&#x3002",{"_index":3733,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["component&#xff08;&#x7ec4;&#x4ef6;&#xff09",{"_index":740,"title":{},"body":{"Directives/directives.html#指令":{}}}],["component&apo",{"_index":1018,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["component.areformssav",{"_index":4642,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["component.t",{"_index":6041,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["component/button",{"_index":820,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["component/h4",{"_index":345,"title":{},"body":{"Components/projection.html":{}}}],["component/p",{"_index":3618,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["component/p&apo",{"_index":3704,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["componentfixtureautodetect",{"_index":5420,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["componenton",{"_index":4568,"title":{},"body":{"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{}}}],["components/chat",{"_index":539,"title":{},"body":{"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{}}}],["components/index",{"_index":627,"title":{},"body":{"Di/the_injector_tree.html":{}}}],["components/mock",{"_index":553,"title":{},"body":{"Di/injection_beyond_classes.html":{}}}],["components/todo",{"_index":375,"title":{},"body":{"Components/using_other_components.html":{}}}],["componenttwo",{"_index":4569,"title":{},"body":{"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{}}}],["compos",{"_index":6740,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["comprehens",{"_index":2718,"title":{},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["compress",{"_index":4412,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["con",{"_index":7086,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["concat(coverag",{"_index":5156,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["concat(coverage.length",{"_index":5157,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["concat(observable.interv",{"_index":4140,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["concaten",{"_index":2495,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["conceptu",{"_index":3919,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["concern",{"_index":5774,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["concret",{"_index":6999,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["condit",{"_index":4901,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["config",{"_index":437,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Angular-CLI/testing.html":{},"Project-setup/installation_and_usage.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["config&#x548c;karma",{"_index":5209,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["config&#x5bfc;&#x5165;&#xff0c;&#x4f7f;&#x914d;&#x7f6e;&#x5bf9;&#x8c61;&#x66f4;&#x5c0f;&#x3002",{"_index":5210,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["config&apo",{"_index":476,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["config.log_info",{"_index":5119,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["config.set",{"_index":5110,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["config.singlerun",{"_index":5109,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["configur",{"_index":1708,"title":{"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"further-reading.html":{},"further-reading.html#TypeScript":{},"Angular-CLI/command-overview.html":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["configure(testb",{"_index":5424,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["configuretest",{"_index":5421,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["configuretests&#xff0c",{"_index":5441,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["configuretests(configure).then",{"_index":5430,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["config和karma",{"_index":5155,"title":{},"body":{"Testing/karma-config.html":{}}}],["config文件夹中，如测试配置，一些存储在项目根目录中，如lint",{"_index":3367,"title":{},"body":{"Angular-CLI/creating-an-app.html":{}}}],["confirm",{"_index":3265,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["confirmdirect",{"_index":3262,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["confirmfirst",{"_index":3268,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["confirmfirst(ev",{"_index":3263,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["confirmmessag",{"_index":3270,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["confirmmessage=click",{"_index":3272,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["connect",{"_index":3854,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Pipes/pipes.html":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["connectableobserv",{"_index":3853,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["connection.mockrespond",{"_index":5268,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["consequ",{"_index":6733,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["consid",{"_index":5930,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["consol",{"_index":205,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["console&#x3002",{"_index":1014,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["console.log(`str",{"_index":1508,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["console.log(`thre",{"_index":1510,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["console.log(j",{"_index":1208,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["console.log(k",{"_index":1209,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["const",{"_index":435,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di_framework.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Immutable/maps_are_iterable.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["const&#x5bf9;&#x8c61;&#x5b57;&#x9762;&#x91cf",{"_index":1235,"title":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{}},"body":{}}],["constant",{"_index":1230,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["construct",{"_index":1536,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["construct(origin",{"_index":1542,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["constructor",{"_index":171,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Components/creating_components.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"practice.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{}}}],["constructor(ngredux",{"_index":5781,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["constructor(priv",{"_index":5941,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["consturctor",{"_index":1343,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["const不会让对象里的属性也为const",{"_index":1233,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["contact",{"_index":1964,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["contact_email",{"_index":2000,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["contact_first",{"_index":1998,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["contact_last",{"_index":1999,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["contact_phon",{"_index":2001,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["contain",{"_index":368,"title":{},"body":{"Components/structuring_applications_with_components.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["container&apo",{"_index":5765,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["container.t",{"_index":5778,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["containers/app",{"_index":548,"title":{},"body":{"Di/injection_beyond_classes.html":{}}}],["containter.t",{"_index":6049,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["content",{"_index":349,"title":{},"body":{"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"practice.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"a11y/why-a11y.html":{},"a11y/why-a11y.html#无障碍法":{}}}],["content&#xff08;&#x6295;&#x5f71;&#x5185;&#x5bb9;&#xff09",{"_index":5630,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["content/div",{"_index":2775,"title":{},"body":{"practice.html":{}}}],["content/ng",{"_index":358,"title":{},"body":{"Components/projection.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"practice.html":{}}}],["contentchild",{"_index":5595,"title":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["contentchildren",{"_index":5596,"title":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["content？例如，对于前面的childcomponent，如果我们想投影内容转换成一个额外的格式化header和foot",{"_index":360,"title":{},"body":{"Components/projection.html":{}}}],["context",{"_index":453,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["continu",{"_index":4788,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["contrast",{"_index":7018,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["contribut",{"_index":6839,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["control",{"_index":296,"title":{},"body":{"Components/components.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["controllera",{"_index":298,"title":{},"body":{"Components/components.html":{}}}],["conveni",{"_index":6321,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["convert",{"_index":4505,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["coolform",{"_index":4029,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["copi",{"_index":1543,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"license.html":{},"license.html#You-are-free-to":{}}}],["corollari",{"_index":6418,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["correct",{"_index":4836,"title":{},"body":{"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["costli",{"_index":6929,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["count",{"_index":329,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["countchang",{"_index":383,"title":{},"body":{"Components/two_way_data_binding.html":{}}}],["countchange.emit",{"_index":384,"title":{},"body":{"Components/two_way_data_binding.html":{}}}],["counter",{"_index":318,"title":{"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["counter&#x2019;",{"_index":5955,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["counter.servic",{"_index":3613,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/shared-di-tree.html":{},"Modules/shared-modules-di.html":{}}}],["counter/button",{"_index":3620,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["counter/count",{"_index":6032,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["counter/counter.reduc",{"_index":5793,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html":{}}}],["counter/h2",{"_index":6031,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["counter]=\"count",{"_index":6052,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["counter]=\"curs",{"_index":6057,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["counter]=count",{"_index":6099,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["counter]=curs",{"_index":6104,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["counteract",{"_index":4905,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["counteractions(mockredux",{"_index":4912,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["counteractions.increment_count",{"_index":4917,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["countercompon",{"_index":322,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["countereffect",{"_index":5747,"title":{},"body":{"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["counterreduc",{"_index":5792,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["counters/h1",{"_index":6051,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["counterservic",{"_index":3611,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["counterservice.count",{"_index":3622,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["counter’",{"_index":5912,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{}}}],["countri",{"_index":1977,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["coupl",{"_index":7001,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["coverag",{"_index":5108,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["coverage&apo",{"_index":5128,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["coverage/chrome/coverag",{"_index":5160,"title":{},"body":{"Testing/karma-config.html":{}}}],["coveragereport",{"_index":5114,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["cow",{"_index":1925,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["cow().say",{"_index":1927,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["creat",{"_index":938,"title":{"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["createact",{"_index":5715,"title":{},"body":{"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["createcomponent(messagecompon",{"_index":5330,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["created&apo",{"_index":1016,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["createel",{"_index":5661,"title":{},"body":{"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["createembeddedview",{"_index":3306,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["createnamedfn",{"_index":6659,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["creation",{"_index":6424,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["creativ",{"_index":6815,"title":{},"body":{"license.html":{},"license.html#License":{}}}],["creator",{"_index":4908,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/simple-actions.html":{}}}],["creators&#x201d;&#xff0c;&#x7528;&#x4e8e;&#x8bbe;&#x7f6e;&#x548c;dispatch",{"_index":5878,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}}}],["creators&apo",{"_index":4944,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["creators”，用于设置和dispatch",{"_index":5847,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["credentials.password",{"_index":5870,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["credit",{"_index":1982,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"license.html":{},"license.html#Under-the-following-terms":{}}}],["creditcardcompon",{"_index":3453,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["creditcardmask",{"_index":3750,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["creditcardmaskpip",{"_index":3449,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["creditcardmodul",{"_index":3455,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{}}}],["creditcardmodule.forroot",{"_index":3461,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#服务和懒加载":{}}}],["creditcardnumb",{"_index":3749,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["creditcardservic",{"_index":3451,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["creditcardservice.getcreditcard",{"_index":3751,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["crippl",{"_index":880,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["crown",{"_index":887,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["crown&apo",{"_index":1006,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["css",{"_index":366,"title":{},"body":{"Components/projection.html":{},"Form/visual_cues_for_users.html":{},"Advanced-angular/aot_config.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/init.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Project-setup/webpack.html":{},"Project-setup/webpack.html#Webpack":{},"animation/index.html":{},"animation/index.html#动画":{}}}],["css来实现，如果比较简单的动画并不推荐使用动画库。这里举个单独提一下auto属性值计算的例子，这些元素直到运行时才会知道属性的值。这种情况用css很难解决了，所以angular",{"_index":5689,"title":{},"body":{"animation/index.html":{}}}],["css，html",{"_index":6228,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html":{}}}],["ctrl",{"_index":299,"title":{},"body":{"Components/components.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["ctrl.name",{"_index":294,"title":{},"body":{"Components/components.html":{}}}],["ctrl.outputlist",{"_index":1127,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["currenc",{"_index":4117,"title":{},"body":{"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{}}}],["currency:\"cad\":true:\"1.2",{"_index":4136,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{}}}],["currency:cad:true:1.2",{"_index":4156,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["currencypip",{"_index":4133,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{}}}],["current",{"_index":4512,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["currentnumb",{"_index":4147,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["currentvalu",{"_index":5817,"title":{},"body":{"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["currentzon",{"_index":6358,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["curs",{"_index":6036,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["curseact",{"_index":6050,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["curv",{"_index":2691,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["custom",{"_index":3343,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["customauthhead",{"_index":2299,"title":{},"body":{"Http/interceptor.html":{}}}],["customauthheader&apo",{"_index":2309,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["c，java或甚至php",{"_index":1194,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["d",{"_index":926,"title":{},"body":{"Directives/ng_for_directive.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{}}}],["d.t",{"_index":1877,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["daisi",{"_index":2372,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["daniel",{"_index":888,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["dark",{"_index":770,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["dart",{"_index":6920,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["data",{"_index":1405,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Immutable/persistent_and_transient_data_structures.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["data.args.(anonym",{"_index":6641,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["data.foreach",{"_index":4011,"title":{},"body":{"Observables/using_observables.html":{}}}],["data.json",{"_index":3931,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{}}}],["data.subscrib",{"_index":3897,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{}}}],["date",{"_index":633,"title":{"further-reading.html#Keeping-up-to-date":{}},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"further-reading.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["day",{"_index":6938,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["debug",{"_index":1828,"title":{"zone/zone.html#Debugging":{}},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{}}}],["debugging.html:16",{"_index":6633,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["debugging.html:28",{"_index":6632,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["decim",{"_index":4070,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["decis",{"_index":6915,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["declar",{"_index":67,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Components/using_other_components.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["decor",{"_index":1710,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["decrement",{"_index":5379,"title":{},"body":{"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["decrement)=\"counteractions.decr",{"_index":6054,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["decrement)=\"curseactions.removecurs",{"_index":6059,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["decrement)=counteractions.decr",{"_index":6101,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["decrement)=curseactions.removecurs",{"_index":6106,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["decrement_count",{"_index":4924,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["decrement_counter&apo",{"_index":5358,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["deep",{"_index":2394,"title":{},"body":{"Immutable/lists.html":{},"further-reading.html":{},"further-reading.html#TypeScript":{}}}],["default",{"_index":348,"title":{},"body":{"Components/projection.html":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/init.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["defin",{"_index":1357,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["defineproperty(target",{"_index":1707,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["definit",{"_index":1757,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["degre",{"_index":7026,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["delay",{"_index":3228,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Testing/mockbackend.html":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["delay&apo",{"_index":5292,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["delay(timeinm",{"_index":4927,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["delay(timeinms).then",{"_index":4926,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["delay=\"500",{"_index":3230,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["delay=500",{"_index":3248,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["delaycontext",{"_index":3301,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["delaycontext(performance.now",{"_index":3305,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["delaydirect",{"_index":3224,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{}}}],["delaytime(tim",{"_index":3323,"title":{},"body":{"Advanced-angular/view_containers_and_embedded_views.html":{}}}],["delet",{"_index":2339,"title":{},"body":{"Http/making_requests.html":{}}}],["demonstr",{"_index":6501,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["depend",{"_index":630,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["deploy",{"_index":3363,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["depth",{"_index":6401,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["describ",{"_index":4804,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["describe(&apos;test",{"_index":5502,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["descriptor",{"_index":1569,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["design",{"_index":2673,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["despit",{"_index":6980,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["destroy",{"_index":952,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["destroyplatform",{"_index":5019,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["detail",{"_index":3340,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{}}}],["details&apo",{"_index":4538,"title":{},"body":{"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{}}}],["details/3/overview",{"_index":4489,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{}}}],["details/3/spec",{"_index":4490,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{}}}],["details/5",{"_index":4706,"title":{},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{}}}],["details/:id",{"_index":4492,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{}}}],["details/:id&apo",{"_index":4528,"title":{},"body":{"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html#声明路由参数":{}}}],["detect",{"_index":23,"title":{},"body":{"Change-detection/additional_resources.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["detectchang",{"_index":179,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{}}}],["detectchanges(slogan",{"_index":173,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["detector",{"_index":92,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["dev",{"_index":1642,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["devdepend",{"_index":4166,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{}}}],["develop",{"_index":2714,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["devtool",{"_index":4414,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["devtools&#x7684;ngrx&#x5b9e;&#x73b0",{"_index":5841,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["devtools的ngrx",{"_index":5828,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{}}}],["di",{"_index":386,"title":{"Di/angular2_di.html#Angular-2’s-DI":{}},"body":{"Di/angular2_di.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/di.html":{},"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Modules/lazy-load-di.html":{},"Modules/shared-di-tree.html":{},"Modules/shared-modules-di.html":{}}}],["diagram",{"_index":2708,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["dial",{"_index":7031,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["dialogservice.confirm",{"_index":4645,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#异步路由哨兵":{}}}],["diamet",{"_index":1301,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["didn't",{"_index":212,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["die",{"_index":891,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["die&apo",{"_index":1010,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["diexampl",{"_index":551,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["differ",{"_index":2663,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Angular-CLI/command-overview.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["difficult",{"_index":7065,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["digest",{"_index":9,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"Change-detection/Change_Detection.html":{}}}],["dir",{"_index":3385,"title":{},"body":{"Angular-CLI/init.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["direct",{"_index":288,"title":{},"body":{"Components/components.html":{},"Directives/directives.html":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"glossary.html":{},"glossary.html#装饰器":{},"practice.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Angular-CLI/creating-other-things.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["directives&#xff08;&#x5c5e;&#x6027;&#x6307;&#x4ee4;&#xff09",{"_index":742,"title":{},"body":{"Directives/directives.html#指令":{}}}],["directives&#xff08;&#x7ed3;&#x6784;&#x6307;&#x4ee4;&#xff09",{"_index":744,"title":{},"body":{"Directives/directives.html#指令":{}}}],["directli",{"_index":5929,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["director",{"_index":871,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["directori",{"_index":6861,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["dirname&#xff0c;&apos;dist&apo",{"_index":4259,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["dirname,&#39;app",{"_index":4280,"title":{},"body":{"Project-setup/loaders.html":{}}}],["dirname,&apos;app",{"_index":4322,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["dirname，&#39;dist&#39",{"_index":4193,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["dirti",{"_index":2244,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["disabl",{"_index":2146,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["disabled]=\"otherepisodes.length",{"_index":922,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["disabled]=otherepisodes.length",{"_index":979,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["discard",{"_index":4646,"title":{},"body":{"Routing/route_guards.html":{}}}],["discuss",{"_index":6394,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["dispatch",{"_index":4712,"title":{},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["dispatch一个act",{"_index":5860,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["dispatch包含更多描述状态修改信息的act",{"_index":5855,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["display",{"_index":2777,"title":{},"body":{"practice.html":{},"Testing/overriding.html":{},"Testing/verify.html":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["dist",{"_index":1922,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/serving-the-app.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/summary.html":{}}}],["distribut",{"_index":6838,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["dist下保存的文件作为我们服务器的根文件夹。为了让webpack",{"_index":4194,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["div",{"_index":242,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"practice.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/async.html":{},"Testing/injecting-dependencies.html":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"advanced-components/elementref.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"Change-detection/how_change_detection_works.html":{}}}],["dive",{"_index":2680,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["diverror",{"_index":3992,"title":{},"body":{"Observables/using_observables.html":{}}}],["divfinish",{"_index":3995,"title":{},"body":{"Observables/using_observables.html":{}}}],["divquote/div",{"_index":4860,"title":{},"body":{"Testing/async.html":{},"Testing/injecting-dependencies.html":{}}}],["div{{quote}}/div&apo",{"_index":4884,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["di）是angular",{"_index":506,"title":{},"body":{"Di/di.html":{}}}],["do",{"_index":6413,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["do&#x2019;",{"_index":3215,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["doc",{"_index":26,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"Change-detection/additional_resources.html":{},"further-reading.html":{},"further-reading.html#Other":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["doctor",{"_index":3923,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{}}}],["doctors\"doctor.name/li",{"_index":4021,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["doctors.push(data",{"_index":3928,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{}}}],["document",{"_index":2701,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"further-reading.html#Redux-and-ngrx":{},"Advanced-angular/listening_to_an_element_host.html":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["document:click",{"_index":3280,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["doe",{"_index":279,"title":{},"body":{"Components/access_child_components_from_template.html":{},"ES6&TypeScript/es6/destructuring.html":{}}}],["dom",{"_index":6,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"Change-detection/change_detector_classes.html":{},"Components/passing_data_into_components.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"Advanced-angular/listening_to_an_element_host.html":{},"Testing/async.html":{},"Testing/injecting-dependencies.html":{},"Testing/overriding.html":{},"advanced-components/elementref.html":{}}}],["domain",{"_index":97,"title":{},"body":{"Change-detection/Change_Detection.html":{},"Pipes/pipes.html":{},"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{}}}],["dom中。这个过程需要我们创建组件，传入任何依赖项，触发组件执行一个动作，然后查看dom",{"_index":5025,"title":{},"body":{"Testing/injecting-dependencies.html":{}}}],["dom以更改dom",{"_index":726,"title":{},"body":{"Directives/directives.html":{}}}],["dom实例，我们可以使用phantomj",{"_index":5169,"title":{},"body":{"Testing/karma-config.html":{}}}],["dom的div标签包含模拟报价’test",{"_index":5030,"title":{},"body":{"Testing/injecting-dependencies.html":{}}}],["don&#x2019;t",{"_index":5957,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["don&#x2019;ts&#x201d;&#x7684;&#x5b8c;&#x6574;&#x5217;&#x8868;&#xff0c;angular&#x56e2;&#x961f;&#x5e76;&#x672a;&#x5c31;&#x6b64;&#x95ee;&#x9898;&#x53d1;&#x5e03;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#x3002",{"_index":3216,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["done",{"_index":5429,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["don’t",{"_index":5950,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"why_TypeScript.html":{}}}],["don’ts”的完整列表，angular",{"_index":3206,"title":{},"body":{"Advanced-angular/aot_limitations.html":{}}}],["dosometh",{"_index":4008,"title":{},"body":{"Observables/using_observables.html":{}}}],["doug",{"_index":1987,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["download",{"_index":2347,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["do’",{"_index":3205,"title":{},"body":{"Advanced-angular/aot_limitations.html":{}}}],["dr",{"_index":3927,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["drain",{"_index":6459,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["drawcircl",{"_index":1274,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["drawsquar",{"_index":1272,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["drawtext",{"_index":1276,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["driven",{"_index":2715,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["drop",{"_index":6959,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["due",{"_index":2692,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["dumb",{"_index":369,"title":{},"body":{"Components/structuring_applications_with_components.html":{}}}],["dummi",{"_index":6853,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["duplic",{"_index":5935,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["duplicatepassword",{"_index":2096,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["duplo",{"_index":3738,"title":{},"body":{"Modules/modules.html":{},"Modules/modules.html#模块":{}}}],["durat",{"_index":6735,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["dure",{"_index":2478,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["dynam",{"_index":71,"title":{},"body":{"bootstrapping/file_structure.html":{},"Form/getting-started.html":{},"i18n/import-using-jit.html":{},"Modules/introduction.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["dynamic&apo",{"_index":1957,"title":{},"body":{"Form/getting-started.html#入门":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/introduction.html#引导应用程序":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["dynamic/test",{"_index":5022,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/testbed-configuration.html":{}}}],["dynamic/testing&apo",{"_index":5051,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["e",{"_index":291,"title":{},"body":{"Components/components.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Http/catch_and_release.html":{}}}],["e.g",{"_index":6946,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["e.statu",{"_index":2363,"title":{},"body":{"Http/catch_and_release.html":{}}}],["e.statustext",{"_index":2364,"title":{},"body":{"Http/catch_and_release.html":{}}}],["e2",{"_index":3360,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Angular-CLI/testing.html":{}}}],["each",{"_index":3341,"title":{},"body":{"Angular-CLI/command-overview.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["eager",{"_index":3624,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["eager.compon",{"_index":3656,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["eagercompon",{"_index":3626,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["eagerli",{"_index":3677,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["earlier",{"_index":2487,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["easi",{"_index":2662,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["easier",{"_index":6973,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["eb",{"_index":4043,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["ecmascript",{"_index":528,"title":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}},"body":{"Di/inject_and_injectable.html":{},"ES6&TypeScript/ES6&TypeScript.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["ecosystem",{"_index":7091,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["edit",{"_index":3344,"title":{},"body":{"Angular-CLI/command-overview.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["editor",{"_index":2676,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["eee",{"_index":774,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["effect",{"_index":2723,"title":{},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{}}}],["effectsmodul",{"_index":5743,"title":{},"body":{"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["egghead",{"_index":2647,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["ej",{"_index":4441,"title":{},"body":{"Project-setup/webpack.html":{}}}],["ejs&#xff09;&#x3002",{"_index":4449,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["el",{"_index":2755,"title":{},"body":{"practice.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["el.nativeel",{"_index":2759,"title":{},"body":{"practice.html":{},"Advanced-angular/listening_to_an_element_host.html":{}}}],["el.nativeelement.contains(event.target",{"_index":3282,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["elaps",{"_index":6643,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["eleg",{"_index":7084,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["element",{"_index":835,"title":{},"body":{"Directives/ng_if_directive.html":{},"practice.html":{}}}],["element(th",{"_index":2768,"title":{},"body":{"practice.html":{}}}],["elementref",{"_index":2756,"title":{"advanced-components/elementref.html#ElementRef":{}},"body":{"practice.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["elementref.nativeelement.clonenod",{"_index":5662,"title":{},"body":{"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["elimin",{"_index":5934,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["elm",{"_index":7078,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["elseref",{"_index":838,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["email",{"_index":451,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Observables/using_observables_from_other_sources.html":{}}}],["email.valuechang",{"_index":4032,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["email/index",{"_index":446,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{}}}],["emailapiconfig",{"_index":445,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["emailconfig",{"_index":463,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["emailmodul",{"_index":440,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["emailservic",{"_index":438,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["ember",{"_index":3330,"title":{},"body":{"Angular-CLI/cli.html":{}}}],["embrac",{"_index":7051,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["emit",{"_index":2274,"title":{},"body":{"Http/catching-rejections.html":{}}}],["emitdecoratormetadata",{"_index":1713,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["empt",{"_index":6448,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["empti",{"_index":2767,"title":{},"body":{"practice.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["emul",{"_index":5666,"title":{},"body":{"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{}}}],["enabl",{"_index":7047,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["enableprodmod",{"_index":6619,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["encapsul",{"_index":35,"title":{},"body":{"Change-detection/additional_resources.html":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["encount",{"_index":2486,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["encrypt",{"_index":541,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["end",{"_index":893,"title":{},"body":{"Directives/ng_for_directive.html":{},"Angular-CLI/command-overview.html":{},"Observables/using_observables.html":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["end&apo",{"_index":1011,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["endors",{"_index":6837,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["endraw",{"_index":4075,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["enforc",{"_index":6422,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["enjoy",{"_index":7053,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["enough",{"_index":5380,"title":{},"body":{"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ensur",{"_index":5946,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["enter",{"_index":2239,"title":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["enter/leav",{"_index":6410,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["entered/exit",{"_index":6555,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["enters/leav",{"_index":6419,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["entiti",{"_index":3377,"title":{},"body":{"Angular-CLI/creating-other-things.html":{}}}],["entri",{"_index":4174,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["entrymodul",{"_index":3160,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["enum",{"_index":1814,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{}}}],["environ",{"_index":6403,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["envplugin",{"_index":4410,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["eot",{"_index":4273,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["epic",{"_index":5977,"title":{},"body":{"state-management/reducers_as_state_management.html":{}}}],["episod",{"_index":866,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/maps.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{}}}],["episode.id",{"_index":946,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["episode.titl",{"_index":868,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["episode]=\"episod",{"_index":867,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["episode]=episod",{"_index":962,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["episodes=[...episodescopi",{"_index":943,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["episodescopi",{"_index":941,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["episode的属性设置为8.另外，在这种情况下我们如何修改episod",{"_index":2466,"title":{},"body":{"Immutable/object_assign.html":{}}}],["err",{"_index":1404,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{}}}],["err.messag",{"_index":2262,"title":{},"body":{"Http/cancel_request.html":{}}}],["error",{"_index":1199,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Http/catching-rejections.html":{},"Http/catch_and_release.html":{},"Immutable/object_freeze.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#Debugging":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["error(&apos;finished&apo",{"_index":6630,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["error(err",{"_index":2277,"title":{},"body":{"Http/catching-rejections.html":{}}}],["error.messag",{"_index":6614,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["error.t",{"_index":1688,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["error.tostr",{"_index":6615,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["error.ts(2,1",{"_index":1691,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["errormessag",{"_index":2261,"title":{},"body":{"Http/cancel_request.html":{}}}],["errortyp",{"_index":2091,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["es5",{"_index":1195,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["es6",{"_index":1111,"title":{"ES6&TypeScript/es6/es6.html#ES6":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Immutable/javascript-solutions.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["es6&#x4e2d;&#x7684;&#x6a21;&#x5757;&#x662f;&#x5355;&#x4e2a;&#x6587;&#x4ef6;&#xff0c;&#x5b83;&#x5141;&#x8bb8;&#x4ee3;&#x7801;&#x548c;&#x6570;&#x636e;&#x9694;&#x79bb;&#xff0c;&#x5b83;&#x6709;&#x52a9;&#x4e8e;&#x5728;&#x903b;&#x8f91;&#x4e0a;&#x7ec4;&#x7ec7;&#x548c;&#x805a;&#x5408;&#x4ee3;&#x7801;&#x3002",{"_index":1317,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["es6&#x5f15;&#x5165",{"_index":1315,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["es6&#x5f15;&#x5165;&#x4e86;&#x4e00;&#x79cd;&#x901a;&#x8fc7;&#x53cd;&#x5f15;&#x53f7;&#xff08",{"_index":1524,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["es6&#x7c7b;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x79cd;&#x8bed;&#x6cd5;&#x7cd6;&#xff0c;&#x8bd5;&#x56fe;&#x7f13;&#x89e3;&#x4f7f;&#x7528;es5&#x4e2d;&#x5b58;&#x5728;&#x7684;&#x539f;&#x578b;&#x7ee7;&#x627f;&#x7684;&#x95ee;&#x9898;&#x3002",{"_index":1360,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#继承":{}}}],["es6’：’commonj",{"_index":1913,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["es6中的一个新特性，用于描述对象的蓝图，使ecmascript",{"_index":1169,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{}}}],["es6中，var",{"_index":1205,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["es6是当前的javascript",{"_index":1673,"title":{},"body":{"ES6&TypeScript/typescript/typeScript.html":{}}}],["es6的浏览器中，使用system",{"_index":1308,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{}}}],["es6类提供了一种语法糖，试图缓解使用es5",{"_index":1341,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{}}}],["escap",{"_index":6563,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["especi",{"_index":6951,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["est",{"_index":6650,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["etc",{"_index":6443,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["eval",{"_index":3121,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"tooling/command_line_javascript.html":{},"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["even",{"_index":898,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Testing/complex-actions.html":{},"license.html":{},"license.html#You-are-free-to":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["even&apo",{"_index":4948,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{}}}],["event",{"_index":2344,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["event.bodi",{"_index":2353,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["event.typ",{"_index":2345,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["eventcallback",{"_index":6461,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["eventemitt",{"_index":327,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["eventtask",{"_index":6437,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["everyth",{"_index":5938,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["everywher",{"_index":5952,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["exabyt",{"_index":4052,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["exactli",{"_index":6455,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["exactmatch",{"_index":2099,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["exampl",{"_index":82,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Components/access_child_components_from_template.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/cancel_request.html":{},"Http/catch_and_release.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/summary.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#异步路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html":{},"Testing/typings.html":{},"Testing/typings.html#Typings":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{},"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["example&apo",{"_index":1039,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["examplecompon",{"_index":5426,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["excel",{"_index":7083,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["except",{"_index":6327,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["exclam",{"_index":2081,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["exclud",{"_index":1653,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["execut",{"_index":3116,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["exist",{"_index":823,"title":{},"body":{"Directives/ng_if_directive.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["exit",{"_index":6406,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["expand",{"_index":3920,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["expect",{"_index":4010,"title":{},"body":{"Observables/using_observables.html":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["expect(app.message).tob",{"_index":5526,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["expect(compiled.queryselector",{"_index":4870,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["expect(connection.request.method).tobe(requestmethod.get",{"_index":5266,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["expect(connection.request.url).tobe(expectedurl",{"_index":5267,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["expect(mockhttp.get).tohavebeencalledwith(expectedurl",{"_index":4816,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["expect(mockredux.dispatch).not.tohavebeencal",{"_index":4923,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["expect(mockredux.dispatch).tohavebeencal",{"_index":4921,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["expect(mockredux.dispatch).tohavebeencalledwith(expectedact",{"_index":4922,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["expect(res).toequal(mockrespons",{"_index":4817,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["expect(rootzone.name).toequ",{"_index":6552,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["expect(searchwiki.foo).toequ",{"_index":5272,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["expect(zone.current).tobe(appzon",{"_index":6511,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["expect(zone.current).tobe(libzon",{"_index":6506,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["expect(zone.current).tobe(rootzon",{"_index":6475,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["expect(zone.current).tobe(zonea",{"_index":6557,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["expect(zone.current).toequal(rootzon",{"_index":6479,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["expect(zone.current).toequal(zonea",{"_index":6483,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["expect(zonea.get",{"_index":6267,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{}}}],["expect(zonea.name).toequ",{"_index":6553,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["expect(zonea.parent).tobe(rootzon",{"_index":6554,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["expect(zoneb.get",{"_index":6269,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{}}}],["expectedact",{"_index":4916,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["expectedurl",{"_index":4812,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["experi",{"_index":6917,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["experience&#x200a;&#x2014;&#x200a;it",{"_index":7095,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["experimentaldecor",{"_index":1712,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["expiri",{"_index":1993,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["explain",{"_index":2709,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["explicit",{"_index":6456,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["explicitli",{"_index":6990,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["exponent/ex",{"_index":2796,"title":{},"body":{"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["exponentjs开发的，他们以react",{"_index":2798,"title":{},"body":{"vs_react.html":{}}}],["export",{"_index":54,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"Change-detection/how_change_detection_works.html":{}}}],["expos",{"_index":7004,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["express",{"_index":1067,"title":{},"body":{"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"practice.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["extend",{"_index":1342,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#子类化":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["extens",{"_index":4415,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["extern",{"_index":6977,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["externalsystem",{"_index":6991,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["extra",{"_index":6324,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["extrem",{"_index":6982,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["f",{"_index":1460,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["f.prototyp",{"_index":1547,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["facebook",{"_index":2811,"title":{},"body":{"vs_react.html":{}}}],["facebook支持，是一个在j",{"_index":2787,"title":{},"body":{"vs_react.html":{}}}],["fact",{"_index":2693,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["factori",{"_index":2963,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{}}}],["fail",{"_index":1313,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/typings.html":{},"Immutable/object_freeze.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{}}}],["fakeasync",{"_index":4778,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["fakeasync(inject([searchwiki",{"_index":4837,"title":{},"body":{"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{}}}],["fakeev",{"_index":1699,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["fakeeventhandl",{"_index":1700,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["fakewindow",{"_index":1701,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["fakewindow.onmousedown",{"_index":1703,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["fals",{"_index":183,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Immutable/maps_are_iterable.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/route_guards.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["falsi",{"_index":5947,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["famili",{"_index":777,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["far",{"_index":6393,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["fascil",{"_index":2601,"title":{},"body":{"i18n/process-and-roles.html":{}}}],["fascilities&#xff0c;&#x8fc7;&#x7a0b;&#x5c06;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":2606,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["fast",{"_index":6467,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["faster",{"_index":2504,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fat",{"_index":1773,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["fb",{"_index":4030,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["fb.group",{"_index":4031,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["fear",{"_index":6925,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["featur",{"_index":1098,"title":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}},"body":{"ES6&TypeScript/ES6&TypeScript.html":{},"Immutable/maps_are_iterable.html":{},"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["features.reduc",{"_index":2443,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["feel",{"_index":6336,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fellowship",{"_index":2395,"title":{},"body":{"Immutable/lists.html":{}}}],["fetch",{"_index":1401,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["fetchpric",{"_index":4135,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["few",{"_index":6955,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fff",{"_index":787,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["fi",{"_index":2384,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["field",{"_index":2211,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"why_TypeScript.html":{}}}],["fields&#x200a;&#x2014;&#x200a;nam",{"_index":7099,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fieldset",{"_index":1996,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["figur",{"_index":17,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"Change-detection/Change_Detection.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Modules/modules.html":{},"Modules/modules.html#模块":{},"Pipes/pipes.html":{},"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{}}}],["file",{"_index":18,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"Immutable/maps_are_iterable.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-other-things.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["file_size_unit",{"_index":4039,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["file_size_units_long",{"_index":4046,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["filenam",{"_index":4186,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["files",{"_index":4072,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["filter",{"_index":1468,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"Immutable/maps_are_iterable.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/pipes.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["filter(boolean",{"_index":5944,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["final.json",{"_index":5161,"title":{},"body":{"Testing/karma-config.html":{}}}],["final.json&apo",{"_index":5216,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["find",{"_index":1690,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fine",{"_index":1222,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["finish",{"_index":3895,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["finished(&#x2026",{"_index":6719,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["firebas",{"_index":3365,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["firefox",{"_index":6189,"title":{},"body":{"tooling/chrome.html":{}}}],["firefox&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x7248;&#x672c;&#xff0c;&#x652f;&#x6301;&#x4f1f;&#x5927;&#x7684;&#x5f00;&#x53d1;&#x548c;&#x8c03;&#x8bd5;&#x5de5;&#x5177;&#x3002",{"_index":6196,"title":{},"body":{"tooling/chrome.html#Web浏览器":{}}}],["first",{"_index":207,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["firstnam",{"_index":193,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/es6/destructuring.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Change-detection/how_change_detection_works.html":{}}}],["five",{"_index":1196,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["fivealso",{"_index":1201,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["fix",{"_index":6969,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fixtur",{"_index":4865,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["fixture&#x662f;&#x4e00;&#x4e2a;&#x5f3a;&#x5927;&#x7684;&#x5de5;&#x5177;&#xff0c;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x67e5;&#x8be2;&#x7ec4;&#x4ef6;&#x6e32;&#x67d3;&#x7684;dom&#xff0c;&#x4ee5;&#x53ca;&#x66f4;&#x6539;dom&#x5143;&#x7d20;&#x548c;&#x7ec4;&#x4ef6;&#x5c5e;&#x6027;&#x3002",{"_index":5073,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["fixture.componentinst",{"_index":5028,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["fixture.componentinstance.getquot",{"_index":4868,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["fixture.componentinstance.setmessag",{"_index":5331,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["fixture.debugelement.nativeel",{"_index":4869,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["fixture.detectchang",{"_index":4867,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["fixture.whenst",{"_index":5024,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["fixture.whenstable().then",{"_index":5332,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["fixture是一个强大的工具，允许我们查询组件渲染的dom，以及更改dom",{"_index":5027,"title":{},"body":{"Testing/injecting-dependencies.html":{}}}],["flag",{"_index":1890,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["flaki",{"_index":6468,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["flat",{"_index":771,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["flat/button",{"_index":773,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["flatmap",{"_index":3925,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{}}}],["flexibl",{"_index":7049,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["floor",{"_index":635,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["flux",{"_index":6006,"title":{},"body":{"state-management/redux.html":{},"state-management/redux.html#什么是-Redux":{}}}],["fninner",{"_index":6562,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["fninner()[root",{"_index":6578,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["fnouter",{"_index":6556,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["fnouter()[zonea",{"_index":6574,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["folder",{"_index":3381,"title":{},"body":{"Angular-CLI/creating-other-things.html":{}}}],["follow",{"_index":2136,"title":{"license.html#Under-the-following-terms":{}},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"license.html":{},"license.html#You-are-free-to":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["font",{"_index":761,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{}}}],["foo",{"_index":1268,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["food",{"_index":5271,"title":{},"body":{"Testing/mockbackend.html":{}}}],["footer",{"_index":365,"title":{},"body":{"Components/projection.html":{}}}],["foo与1",{"_index":5281,"title":{},"body":{"Testing/mockbackend.html":{}}}],["for...in",{"_index":1285,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["for...of",{"_index":894,"title":{},"body":{"Directives/ng_for_directive.html":{},"Immutable/what_is_immutability.html":{}}}],["for=\"email\"email",{"_index":2195,"title":{},"body":{"Form/template-model-binding.html":{}}}],["for=emailemail",{"_index":2210,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["forc",{"_index":6994,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["forchild",{"_index":3676,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["ford",{"_index":2376,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["foreach",{"_index":1130,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"Immutable/persistent_and_transient_data_structures.html":{},"Observables/using_observables.html":{}}}],["foreach和subscrib",{"_index":4001,"title":{},"body":{"Observables/using_observables.html":{}}}],["forexampl",{"_index":947,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["forexamplecompon",{"_index":948,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["fork",{"_index":6260,"title":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Zones":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{}}}],["fork&#xff0c;&#x5b83;&#x7684;&#x5c5e;&#x6027;&#x4e0d;&#x80fd;&#x88ab;&#x6539;&#x53d8;&#x3002;&#xff09",{"_index":6288,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["forkjoin",{"_index":2318,"title":{},"body":{"Http/http_with_rxjs.html":{},"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{}}}],["form",{"_index":254,"title":{"Form/form.html#Forms":{}},"body":{"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Form/form.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"Observables/using_observables_from_other_sources.html":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["form&apo",{"_index":2179,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["form.component.html",{"_index":2042,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["form.component.html&apo",{"_index":2181,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["form.component.t",{"_index":2034,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["format",{"_index":6823,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["formatfiles",{"_index":4055,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["formatfilesize:tru",{"_index":4074,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["formatfilesizepip",{"_index":4056,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["formatteds",{"_index":4067,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["formattop",{"_index":1388,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["formbuild",{"_index":1936,"title":{},"body":{"Form/form.html":{},"Form/form.html#Forms":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables_from_other_sources.html":{}}}],["formbuilder&#xff03;group",{"_index":2057,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["formbuilder＃group",{"_index":2043,"title":{},"body":{"Form/reactive-forms_basics.html":{}}}],["formcontrol",{"_index":2032,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables_from_other_sources.html":{}}}],["formcontrolname=\"email",{"_index":4026,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["formcontrol字段并将其分组到一个绑定到coolform",{"_index":4036,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["formgroup",{"_index":2031,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Observables/using_observables_from_other_sources.html":{}}}],["formgroup]=\"coolform",{"_index":4025,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["formsmodul",{"_index":1947,"title":{},"body":{"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["formvalu",{"_index":266,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["forroot",{"_index":3460,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["forti",{"_index":1735,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["found",{"_index":1687,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{}}}],["fp",{"_index":7044,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fr",{"_index":2566,"title":{},"body":{"i18n/import-using-jit.html":{}}}],["frame",{"_index":6398,"title":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["framework",{"_index":5111,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["free",{"_index":6820,"title":{"license.html#You-are-free-to":{}},"body":{"license.html":{}}}],["freedom",{"_index":6830,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["freez",{"_index":2470,"title":{},"body":{"Immutable/object_freeze.html":{}}}],["fri",{"_index":1865,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["fromj",{"_index":2393,"title":{},"body":{"Immutable/lists.html":{}}}],["frontend",{"_index":7075,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["fulfil",{"_index":2705,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["full",{"_index":3668,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Routing/child_routes.html":{},"Routing/redirects.html":{},"Routing/routeparams.html":{}}}],["fulli",{"_index":2502,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["function",{"_index":517,"title":{"further-reading.html#General-Coding-Practice-and-Functional-Programming":{}},"body":{"Di/di_framework.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Immutable/what_is_immutability.html":{},"further-reading.html":{},"further-reading.html#General-Coding-Practice-and-Functional-Programming":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["function.appli",{"_index":1398,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["function.cal",{"_index":1397,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["function.prototype.apply(object",{"_index":1175,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["function.prototype.bind(object",{"_index":1174,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["function.prototype.call(object",{"_index":1172,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["funki",{"_index":7054,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["futur",{"_index":6421,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["g",{"_index":1461,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/creating-routes.html":{},"Angular-CLI/setup.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"index.html":{},"index.html#Getting-Started":{}}}],["gap",{"_index":2508,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["garbag",{"_index":6568,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["gb",{"_index":4040,"title":{},"body":{"Pipes/custom_pipes.html":{},"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{}}}],["gener",{"_index":1535,"title":{"further-reading.html#General-Coding-Practice-and-Functional-Programming":{}},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"further-reading.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["generatedus",{"_index":2185,"title":{},"body":{"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["generateuniqueuserid",{"_index":2186,"title":{},"body":{"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["get",{"_index":6855,"title":{"index.html#Getting-Started":{}},"body":{"index.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["getcreditcard",{"_index":3752,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["getcurrentvalu",{"_index":5942,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["getfromserv",{"_index":1402,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["getquot",{"_index":4861,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["getstat",{"_index":4907,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["gettestb",{"_index":5419,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["get方法创建一个监测器，并返回一个类似于真正的http服务的observ",{"_index":4776,"title":{},"body":{"Testing/alt-http-mocking.html":{}}}],["get请求，searchxml方法将执行相同的操作，但请求响应为xml而不是json",{"_index":5003,"title":{},"body":{"Testing/http.html":{}}}],["gigabyt",{"_index":4050,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["git",{"_index":2620,"title":{},"body":{"i18n/translation-text-extraction.html":{},"tooling/source_control.html":{},"tooling/source_control.html#源码控制：Git":{},"index.html":{},"index.html#Getting-Started":{}}}],["github",{"_index":2667,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#Redux-and-ngrx":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Angular-CLI/command-overview.html":{},"Project-setup/summary.html":{}}}],["give",{"_index":6831,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["given",{"_index":6565,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["glob",{"_index":5135,"title":{},"body":{"Testing/karma-config.html":{}}}],["glue",{"_index":5827,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["gmt",{"_index":6648,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["go",{"_index":1750,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["goal",{"_index":6937,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["golden",{"_index":886,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["gone",{"_index":2993,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["good",{"_index":6971,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["goodhew",{"_index":2779,"title":{},"body":{"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["googl",{"_index":2740,"title":{},"body":{"plus.html":{},"plus.html#插件":{},"vs_react.html":{}}}],["google&#x64b0;&#x5199;&#x4e86;&#x5982;&#x4f55;&#x4f7f;&#x7528;&#x6846;&#x67b6;&#x7684;&#x6700;&#x4f73;&#x5b9e;&#x8df5;&#x3002",{"_index":2909,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["google公开支持时间和版本迭代安排：2.0",{"_index":2810,"title":{},"body":{"vs_react.html":{}}}],["google支持，是最新的js（javascript",{"_index":2786,"title":{},"body":{"vs_react.html":{}}}],["google的chrome浏览器，因为它具有尖端的javascript",{"_index":6187,"title":{},"body":{"tooling/chrome.html":{}}}],["gorgonzola",{"_index":1731,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{}}}],["gotopage(pagenum",{"_index":4597,"title":{},"body":{"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{}}}],["gotoparti",{"_index":1747,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["gotoproductdetails(id",{"_index":4709,"title":{},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#链接到带参数的路由":{}}}],["gradual",{"_index":6965,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["grave",{"_index":930,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["graves&apo",{"_index":987,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["gray",{"_index":3400,"title":{},"body":{"Modules/directive-duplications.html":{}}}],["great",{"_index":6919,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["greater",{"_index":7025,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["greatli",{"_index":5948,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["green",{"_index":1815,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["greeter.servic",{"_index":91,"title":{},"body":{"bootstrapping/bootstrapping_providers.html":{}}}],["greeterservic",{"_index":89,"title":{},"body":{"bootstrapping/bootstrapping_providers.html":{}}}],["grep",{"_index":1892,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["guarante",{"_index":6434,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["guard",{"_index":4630,"title":{},"body":{"Routing/route_guards.html":{}}}],["guard&apo",{"_index":4671,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["guess",{"_index":7012,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["guid",{"_index":2664,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#General-Coding-Practice-and-Functional-Programming":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"further-reading.html#Redux-and-ngrx":{}}}],["gzip&#x6216;brotli&#x538b;&#x7f29;&#x3002",{"_index":3027,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["gzip或brotli",{"_index":2958,"title":{},"body":{"why_angular_2.html":{}}}],["h",{"_index":532,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["h.bun.typ",{"_index":533,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["h0h",{"_index":1979,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["h1",{"_index":2586,"title":{},"body":{"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["h1message/h1",{"_index":5324,"title":{},"body":{"Testing/overriding.html":{},"Testing/verify.html":{}}}],["h1mi",{"_index":3553,"title":{},"body":{"Modules/introduction.html":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["h1movieapp/h1",{"_index":218,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["h1redux",{"_index":6026,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["h1{{message}}/h1",{"_index":5338,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["h2click",{"_index":6030,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["h2curs",{"_index":6033,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["h2desugared/h2",{"_index":902,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["h3",{"_index":247,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["h3random",{"_index":4858,"title":{},"body":{"Testing/async.html":{},"Testing/injecting-dependencies.html":{}}}],["h4child",{"_index":344,"title":{},"body":{"Components/projection.html":{}}}],["h6",{"_index":3988,"title":{},"body":{"Observables/using_observables.html":{}}}],["half",{"_index":6569,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["hamburg",{"_index":512,"title":{},"body":{"Di/di_framework.html":{},"Di/inject_and_injectable.html":{},"Di/what_is_di.html":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["hamburger(bun",{"_index":523,"title":{},"body":{"Di/di_framework.html":{}}}],["han",{"_index":2377,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["hand",{"_index":99,"title":{},"body":{"Change-detection/Change_Detection.html":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["handbook",{"_index":2679,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{}}}],["handl",{"_index":2285,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["handleclick(ev",{"_index":3281,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["handler",{"_index":6021,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["happen",{"_index":3909,"title":{},"body":{"Observables/error_handling.html":{},"Observables/using_observables.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["hard",{"_index":6953,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["hark",{"_index":5638,"title":{},"body":{"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{}}}],["harrison",{"_index":2375,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["haserror",{"_index":2078,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["hasexclam",{"_index":2074,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["hasexclamationmark",{"_index":2073,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["hash",{"_index":4191,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["hash&#xff08",{"_index":4255,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["haspress",{"_index":3319,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["haspunctu",{"_index":2089,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["hasreleas",{"_index":3321,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["have",{"_index":2689,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["head",{"_index":4286,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{}}}],["header",{"_index":363,"title":{},"body":{"Components/projection.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["healthcare.gov",{"_index":2785,"title":{},"body":{"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["heavili",{"_index":2991,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["height",{"_index":1249,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Immutable/map_merge.html":{}}}],["hello",{"_index":304,"title":{},"body":{"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Directives/ng_if_directive.html":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Immutable/what_is_immutability.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/introduction.html":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["hello/hello",{"_index":310,"title":{},"body":{"Components/creating_components.html":{}}}],["hellocompon",{"_index":314,"title":{},"body":{"Components/passing_data_into_components.html":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{}}}],["hellonam",{"_index":316,"title":{},"body":{"Components/passing_data_into_components.html":{}}}],["helloworld",{"_index":1551,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["helo",{"_index":1284,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["help",{"_index":1891,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Angular-CLI/command-overview.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["henc",{"_index":6368,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["her",{"_index":6732,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["here",{"_index":631,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["here&#x2019;",{"_index":5954,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["here’",{"_index":5909,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{}}}],["hexo",{"_index":6846,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["hi",{"_index":1610,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/typescript_features.html":{}}}],["hidden",{"_index":2079,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["highlight",{"_index":3283,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["highlight(color",{"_index":3285,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["highlight.directive.t",{"_index":3397,"title":{},"body":{"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["highlightdirect",{"_index":3279,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["highlightmi",{"_index":3403,"title":{},"body":{"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["home",{"_index":4632,"title":{},"body":{"Routing/route_guards.html":{}}}],["homepag",{"_index":4633,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["hook",{"_index":6737,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["host",{"_index":2750,"title":{},"body":{"practice.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["host&#x5143;&#x7d20",{"_index":3290,"title":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}},"body":{}}],["host&#x5143;&#x7d20;&#x7684;&#x6982;&#x5ff5;&#x9002;&#x7528;&#x4e8e;&#x6307;&#x4ee4;&#x548c;&#x7ec4;&#x4ef6;&#x3002",{"_index":3291,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["host/avatar",{"_index":2771,"title":{},"body":{"practice.html":{}}}],["hostbind",{"_index":3311,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["hostlisten",{"_index":2734,"title":{},"body":{"glossary.html":{},"glossary.html#装饰器":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["hot",{"_index":3851,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["hr",{"_index":821,"title":{},"body":{"Directives/ng_if_directive.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["href",{"_index":4566,"title":{},"body":{"Routing/config.html":{},"Routing/config.html#Base-标签":{}}}],["html",{"_index":83,"title":{},"body":{"bootstrapping/file_structure.html":{},"Components/projection.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_style_directive.html":{},"Directives/structural_directives.html":{},"practice.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Modules/directive-duplications.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Project-setup/webpack.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"advanced-components/view_encapsulation.html":{}}}],["html5",{"_index":2005,"title":{},"body":{"Form/nested-form-data.html":{},"Form/validating_forms.html":{},"Form/visual_cues_for_users.html":{}}}],["html5&#x4e3a;&#x5176;&#x8f93;&#x5165;&#x5b57;&#x6bb5;&#x63d0;&#x4f9b",{"_index":2246,"title":{},"body":{"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["html5样式来标记input",{"_index":1950,"title":{},"body":{"Form/getting-started.html":{}}}],["htmlelement",{"_index":2758,"title":{},"body":{"practice.html":{}}}],["htmlelement.prototype.onclick",{"_index":6597,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Zones":{},"zone/zone.html#变化检测":{}}}],["htmlwebpackplugin",{"_index":4367,"title":{},"body":{"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["html和javascript",{"_index":3120,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["html的一种形式，它告诉angular如何呈现这个组件。下面的组件会将nam",{"_index":308,"title":{},"body":{"Components/creating_components.html":{}}}],["html表单的formgroup",{"_index":4037,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["html，angular",{"_index":311,"title":{},"body":{"Components/creating_components.html":{}}}],["http",{"_index":827,"title":{"Http/interceptor.html#Http-拦截器":{},"Http/progress.html#HTTP-进度事件":{}},"body":{"Directives/ng_if_directive.html":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"Immutable/the_case_for_immutability.html":{},"i18n/import-using-jit.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/serving-the-app.html":{},"Observables/observables.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/stateful_and_async_pipes.html":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/json-xhr.html":{},"Testing/mockbackend.html":{}}}],["http.get",{"_index":2359,"title":{},"body":{"Http/catch_and_release.html":{},"Http/retry.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["http.get(url).map",{"_index":2282,"title":{},"body":{"Http/http.html":{}}}],["http.post",{"_index":2269,"title":{},"body":{"Http/catching-rejections.html":{}}}],["http.request(request",{"_index":2343,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["http2",{"_index":4437,"title":{},"body":{"Project-setup/webpack.html":{}}}],["http2&#x65e8;&#x5728;&#x4ee5;&#x4e00;&#x79cd;&#x65b9;&#x5f0f;&#x89e3;&#x51b3;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;&#xff0c;&#x4f46;&#x662f;&#x76f4;&#x5230;&#x66f4;&#x591a;&#x7684;&#x77e5;&#x9053;&#x5b83;&#x7684;&#x6548;&#x679c;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x9700;&#x8981;&#x6346;&#x7ed1;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x4e0d;&#x540c;&#x90e8;&#x5206;&#xff0c;&#x5e76;&#x538b;&#x7f29;&#x5b83;&#x3002",{"_index":4445,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["http://commons.wikimedia.org/wiki/file:hand_tools.jpg",{"_index":6254,"title":{},"body":{"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{}}}],["http://jsbin.com",{"_index":1128,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["http://jsonplaceholder.typicode.com/us",{"_index":3924,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/using_observables_from_other_sources.html":{}}}],["http://localhost:3030/examples/debugging.html:23:9",{"_index":6662,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/examples/debugging.html:28:15",{"_index":6634,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/examples/debugging.html:33:9",{"_index":6664,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/long",{"_index":6652,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:114:43",{"_index":6668,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:154:47",{"_index":6638,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:171:39",{"_index":6657,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:232:26",{"_index":6666,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:242:49",{"_index":6655,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:265:35",{"_index":6636,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:335:33",{"_index":6640,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:927:17",{"_index":6660,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:970:25",{"_index":6642,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:3030/node_modules/zone.js/dist/zone.js:991:33",{"_index":6658,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["http://localhost:4000",{"_index":6865,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["http://localhost:4200",{"_index":3358,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["http://localhost:port",{"_index":5170,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["http_interceptor",{"_index":2303,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["httpclient",{"_index":2265,"title":{},"body":{"Http/catching-rejections.html":{},"Http/http.html":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{}}}],["httpclientmodul",{"_index":2280,"title":{},"body":{"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["httpevent",{"_index":2288,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["httpeventtype.downloadprogress",{"_index":2346,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["httpeventtype.respons",{"_index":2351,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["httpeventtype.uploadprogress",{"_index":2349,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["httphandler",{"_index":2287,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["httpheader",{"_index":2327,"title":{},"body":{"Http/making_requests.html":{}}}],["httpinterceptor",{"_index":2289,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["httpmodul",{"_index":4781,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["httpparam",{"_index":2329,"title":{},"body":{"Http/making_requests.html":{}}}],["httprequest",{"_index":2290,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["https://angular.cn/guide/anim",{"_index":5688,"title":{},"body":{"animation/index.html":{},"animation/index.html#动画":{}}}],["https://angularclass.com",{"_index":2648,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{}}}],["https://api.spotify.com/v1/dsds?q",{"_index":2360,"title":{},"body":{"Http/catch_and_release.html":{},"Http/retry.html":{}}}],["https://api.spotify.com/v1/search",{"_index":2336,"title":{},"body":{"Http/making_requests.html":{}}}],["https://commons.wikimedia.org/wiki/file:lego_dublo_arto_alanenpaa_5.jpg",{"_index":3744,"title":{},"body":{"Modules/modules.html":{},"Modules/modules.html#模块":{}}}],["https://doc.webpack",{"_index":6230,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html":{},"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["https://en.wikipedia.org/w/api.php",{"_index":4813,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/mockbackend.html":{}}}],["https://github.com/angular",{"_index":6138,"title":{},"body":{"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}}}],["https://github.com/angular/angular",{"_index":3326,"title":{},"body":{"Angular-CLI/adding-third-party-libraries.html":{}}}],["https://github.com/zalando",{"_index":6858,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["https://palantir.github.io/tslint/rul",{"_index":3388,"title":{},"body":{"Angular-CLI/linting.html":{}}}],["https://pixabay.com/en/coin",{"_index":98,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["https://pixabay.com/en/pip",{"_index":4110,"title":{},"body":{"Pipes/pipes.html":{}}}],["https://rangle.io",{"_index":3260,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["http头，httpparam",{"_index":2328,"title":{},"body":{"Http/making_requests.html":{}}}],["http库常见例程如get，post，put和delete所有返回observ",{"_index":4022,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["http库现在合并了observ",{"_index":4017,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["http模块向wikipedia.org",{"_index":5004,"title":{},"body":{"Testing/http.html":{}}}],["http模块，一个精心设计的angular",{"_index":2803,"title":{},"body":{"vs_react.html":{}}}],["http请求，我们将使用http",{"_index":2324,"title":{},"body":{"Http/making_requests.html":{}}}],["http调用的服务时，我们不希望用真实请求访问服务器。这是因为我们想要将我们的服务的测试与任何其他外部故障点隔离开。我们的服务可能会工作，但如果api服务器失败或给出我们不期望的值，它可能给人的印象是我们的服务是失败的。此外，随着项目的增长和单元测试的数量的增加，运行大量的测试，http请求将需要很长的时间，可能会给api",{"_index":5409,"title":{},"body":{"Testing/strategies.html":{}}}],["huge",{"_index":3112,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["human",{"_index":6817,"title":{},"body":{"license.html":{},"license.html#License":{}}}],["hundr",{"_index":1738,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["hundred&apo",{"_index":1789,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["hut",{"_index":1741,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["hypothet",{"_index":549,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["i&#x2019;ll",{"_index":7093,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["i+1",{"_index":901,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["i.",{"_index":6438,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["i/o",{"_index":6414,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["i/o，http",{"_index":6215,"title":{},"body":{"tooling/command_line_javascript.html":{}}}],["i18n",{"_index":2515,"title":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}},"body":{"i18n/i18n.html":{},"i18n/process-and-roles.html":{},"i18n/translation-text-extraction.html":{}}}],["i18n&#x7684;&#x76ee;&#x7684;&#x662f",{"_index":2518,"title":{"i18n/i18n.html#i18n的目的是":{}},"body":{}}],["i18n=us",{"_index":2587,"title":{},"body":{"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["i18nfil",{"_index":2534,"title":{},"body":{"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["i18nfile=./locale/messages.fr.xlf",{"_index":2537,"title":{},"body":{"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["i18nformat",{"_index":2535,"title":{},"body":{"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["i18nformat=xlf",{"_index":2539,"title":{},"body":{"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["i18nformat=xmb",{"_index":2618,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["i18n，代表i",{"_index":2516,"title":{},"body":{"i18n/i18n.html":{}}}],["i=\"index",{"_index":903,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/using_multiple_structural_directives.html":{}}}],["i=index",{"_index":964,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["iappstat",{"_index":5799,"title":{},"body":{"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["id",{"_index":263,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"why_angular_2.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reducers_as_state_management.html":{}}}],["id&#x4e0",{"_index":2021,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["id/p",{"_index":4498,"title":{},"body":{"Routing/child_routes.html":{}}}],["id=\"usernam",{"_index":2193,"title":{},"body":{"Form/template-model-binding.html":{}}}],["id=usernam",{"_index":2208,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["idea",{"_index":6974,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ident",{"_index":1598,"title":{},"body":{"ES6&TypeScript/typescript/generics.html":{}}}],["identityt(arg",{"_index":1596,"title":{},"body":{"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["idiom",{"_index":7092,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["id}}/p",{"_index":4539,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["id为3",{"_index":4487,"title":{},"body":{"Routing/child_routes.html":{}}}],["id为5的产品的产品详细信息页面，必须使用以下url",{"_index":4705,"title":{},"body":{"Routing/routeparams.html":{}}}],["id属性小于6",{"_index":3929,"title":{},"body":{"Observables/observables_array_operations.html":{}}}],["ie",{"_index":6416,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["ie和safari",{"_index":5685,"title":{},"body":{"animation/index.html":{}}}],["ifexamplecompon",{"_index":826,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["ifexamplecomponent是否为dom",{"_index":825,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["ignor",{"_index":7058,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["illustr",{"_index":7008,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["imag",{"_index":614,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["imagin",{"_index":6975,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["immedi",{"_index":6507,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["immut",{"_index":34,"title":{},"body":{"Change-detection/additional_resources.html":{},"Change-detection/enforcing_immutability.html":{},"Immutable/lists.html":{},"Immutable/maps.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"zone/context_propagation.html":{}}}],["immutable&#x3002",{"_index":6285,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["immutable.fromj",{"_index":2369,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"Immutable/persistent_and_transient_data_structures.html":{}}}],["immutable.j",{"_index":196,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Immutable/immutable-js.html":{},"Immutable/immutable.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"state-management/reducers_as_state_management.html":{}}}],["immutable.js中的maps是可迭代的，这意味着你可以在map",{"_index":2434,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["immutable.list",{"_index":2390,"title":{},"body":{"Immutable/lists.html":{},"Immutable/persistent_and_transient_data_structures.html":{}}}],["immutable.map",{"_index":228,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{}}}],["immutable.map(firstnam",{"_index":229,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["immutable.mapstr",{"_index":2420,"title":{},"body":{"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{}}}],["immutable.rang",{"_index":2412,"title":{},"body":{"Immutable/lists.html":{},"Immutable/persistent_and_transient_data_structures.html":{}}}],["immutablearrayreduc",{"_index":5984,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["immutablej",{"_index":7039,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["immutableobjectreduc",{"_index":5979,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["impact",{"_index":6949,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["implement",{"_index":335,"title":{},"body":{"Components/responding_to_component_events.html":{},"ES6&TypeScript/es6/destructuring.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"further-reading.html":{},"further-reading.html#Angular":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["impli",{"_index":6445,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["import",{"_index":45,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/using_other_components.html":{},"Components/two_way_data_binding.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#模块系统":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/catching-rejections.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Immutable/maps.html":{},"Http/retry.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/introduction.html#引导应用程序":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"Change-detection/how_change_detection_works.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["improv",{"_index":6956,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["inact",{"_index":2422,"title":{},"body":{"Immutable/map_merge.html":{}}}],["inc",{"_index":1985,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["incident",{"_index":7005,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["includ",{"_index":2720,"title":{},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"further-reading.html#Keeping-up-to-date":{},"Angular-CLI/command-overview.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["incompat",{"_index":1704,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["increasecount",{"_index":3623,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["increment",{"_index":324,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["increment)=\"counteractions.incr",{"_index":6053,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["increment)=\"curseactions.castcurs",{"_index":6058,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["increment)=counteractions.incr",{"_index":6100,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["increment)=curseactions.castcurs",{"_index":6105,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["increment_count",{"_index":4899,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["increment_counter&apo",{"_index":5357,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["incrementasync",{"_index":4930,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["incrementasync(timeinm",{"_index":4925,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["incrementasync)=\"counteractions.incrementasync",{"_index":6056,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["incrementasync)=\"curseactions.castasync",{"_index":6061,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["incrementasync)=counteractions.incrementasync",{"_index":6103,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["incrementasync)=curseactions.castasync",{"_index":6108,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["incrementeditem",{"_index":1116,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["incrementeditems.push(x",{"_index":1115,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["incrementifodd",{"_index":4902,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["incrementifodd)=\"counteractions.incrementifodd",{"_index":6055,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["incrementifodd)=\"curseactions.castifodd",{"_index":6060,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["incrementifodd)=counteractions.incrementifodd",{"_index":6102,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["incrementifodd)=curseactions.castifodd",{"_index":6107,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["incubator/hexo",{"_index":6859,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["index",{"_index":896,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Testing/testbed-configuration.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["index.css",{"_index":3147,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{}}}],["index.html",{"_index":38,"title":{},"body":{"bootstrapping/file_structure.html":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Routing/config.html":{}}}],["index.t",{"_index":3375,"title":{},"body":{"Angular-CLI/creating-components.html":{}}}],["indexkey",{"_index":2948,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["indic",{"_index":6833,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["infer",{"_index":1689,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["inferior",{"_index":7034,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["infin",{"_index":1812,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["infiniteloop",{"_index":1875,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["inform",{"_index":226,"title":{"index.html#More-Informations":{}},"body":{"Change-detection/enforcing_immutability.html":{},"further-reading.html":{},"further-reading.html#TypeScript":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"Change-detection/how_change_detection_works.html":{},"index.html":{},"index.html#More-Informations":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["inherit",{"_index":1345,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["inheritor",{"_index":639,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["inheritor&apo",{"_index":706,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["inheritor.component.t",{"_index":638,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["inheritor/child",{"_index":657,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["init",{"_index":3383,"title":{},"body":{"Angular-CLI/init.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#Karma-配置":{}}}],["initi",{"_index":4914,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["initialst",{"_index":5782,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["inject",{"_index":390,"title":{},"body":{"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"glossary.html":{},"glossary.html#装饰器":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["inject([searchwiki",{"_index":4811,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["inject(chatwidget",{"_index":534,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["injector",{"_index":387,"title":{},"body":{"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/di_framework.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["injector&#x2019;",{"_index":709,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["injector&apo",{"_index":708,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["injector([hamburg",{"_index":524,"title":{},"body":{"Di/di_framework.html":{}}}],["injector.component.t",{"_index":642,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["injector.get(hamburg",{"_index":526,"title":{},"body":{"Di/di_framework.html":{}}}],["injector/child",{"_index":658,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["injector’",{"_index":646,"title":{},"body":{"Di/the_injector_tree.html":{}}}],["inlin",{"_index":1776,"title":{"Project-setup/loaders.html#Inline":{}},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"Project-setup/loaders.html":{},"Testing/karma-config.html":{}}}],["innerloc",{"_index":6577,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["innertext).toequ",{"_index":4871,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["input",{"_index":240,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"glossary.html":{},"glossary.html#装饰器":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Observables/using_observables_from_other_sources.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"Change-detection/how_change_detection_works.html":{}}}],["input.compon",{"_index":379,"title":{},"body":{"Components/using_other_components.html":{}}}],["input.root",{"_index":2097,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["input.root.control",{"_index":2098,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["input.root.controls.password",{"_index":2100,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["input.valu",{"_index":2101,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["input.value.indexof",{"_index":2075,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["input.value.indexof(punctu",{"_index":2092,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["input.value.length",{"_index":2087,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["inputproperti",{"_index":6039,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["input处理这个问题可能会很快弄乱，这是内容投影的地方。组件默认情况下支持投影，您可以使用ngcont",{"_index":351,"title":{},"body":{"Components/projection.html":{}}}],["input，但如果你想提供样式化的html",{"_index":350,"title":{},"body":{"Components/projection.html":{}}}],["insid",{"_index":6454,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["instal",{"_index":214,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/typings.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Angular-CLI/adding-third-party-libraries.html":{},"Angular-CLI/setup.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"tooling/back_end_code_sharing_and_distribution.html":{},"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{},"index.html":{},"index.html#Getting-Started":{}}}],["instanc",{"_index":644,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["instanceof",{"_index":1544,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["instead",{"_index":1821,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Immutable/lists.html":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["intellisens",{"_index":6945,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["intercept",{"_index":6369,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["intercept(req",{"_index":2294,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["interest",{"_index":6430,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["interfac",{"_index":1608,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["interleav",{"_index":6441,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["intermediari",{"_index":4148,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["intern",{"_index":6730,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"license.html":{},"license.html#License":{}}}],["intersect",{"_index":1756,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["introduc",{"_index":6995,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["introduct",{"_index":2589,"title":{},"body":{"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["intuit",{"_index":7007,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["invalid",{"_index":2234,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["invoc",{"_index":6570,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["invok",{"_index":1709,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["invoketask",{"_index":6370,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["in​​fer",{"_index":1686,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["isarray(messag",{"_index":1618,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["isarray(top",{"_index":1121,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["isdebug",{"_index":1827,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["isdon",{"_index":1816,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["isodd",{"_index":900,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["isodd=\"odd",{"_index":904,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["isodd=odd",{"_index":965,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["ispress",{"_index":3317,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["isselected(num",{"_index":861,"title":{},"body":{"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{}}}],["issu",{"_index":2485,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["istanbul",{"_index":5158,"title":{},"body":{"Testing/karma-config.html":{},"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{}}}],["istanbul&apo",{"_index":5130,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["it&#x2019;",{"_index":137,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["it&apos;",{"_index":1387,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["it'",{"_index":1356,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{}}}],["it(&apos;multipli",{"_index":5503,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["item",{"_index":282,"title":{},"body":{"Components/app_structure_with_components.html":{},"Directives/using_multiple_structural_directives.html":{},"further-reading.html":{},"further-reading.html#Angular":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Angular-CLI/creating-other-things.html":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["item.compon",{"_index":377,"title":{},"body":{"Components/using_other_components.html":{}}}],["items.foreach",{"_index":1112,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["items.map",{"_index":1117,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["iter",{"_index":10,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"Directives/ng_for_directive.html":{},"Immutable/maps_are_iterable.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["it’",{"_index":118,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"state-management/reading_your_application_state_using_selectors.html":{}}}],["i’ll",{"_index":6916,"title":{},"body":{"why_TypeScript.html":{}}}],["j",{"_index":1206,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["jan",{"_index":1218,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/typescript/property_decorators.html":{}}}],["jane",{"_index":1277,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["jasmin",{"_index":4932,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"Testing/filename-conventions.html":{},"Testing/simple-test.html":{},"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{}}}],["jasmine&#x5df2;&#x7ecf;&#x4f7f;&#x7528;&#x4e86;tdd&#x98ce;&#x683c;&#xff0c;&#x56e0;&#x6b64;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;chai&#x4f5c;&#x4e3a;&#x5176;bdd&#x63a5;&#x53e3;&#xff0c;&#x4e3b;&#x8981;&#x662f;&#x901a;&#x8fc7;&#x4f7f;&#x7528",{"_index":5515,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["jasmine&apo",{"_index":5126,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["jasmine已经使用了tdd风格，因此我们将使用chai作为其bdd",{"_index":5501,"title":{},"body":{"Testing/using-chai.html":{}}}],["jasmine的许多功能可以在angular的测试模块中使用，但是angular",{"_index":5415,"title":{},"body":{"Testing/test-components.html":{}}}],["jasmine的许多功能在angular的测试模块中使用，但是angular在测试组件时还需要一些非常具体的包装器和routin",{"_index":4963,"title":{},"body":{"Testing/components.html":{}}}],["javascript",{"_index":197,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Di/inject_and_injectable.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/validating_forms.html":{},"Immutable/javascript-solutions.html":{},"Immutable/lists.html":{},"Immutable/maps.html":{},"Immutable/what_is_immutability.html":{},"why_angular_2.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Pipes/custom_pipes.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/webpack.html":{},"Testing/toolchain.html":{},"state-management/review_of_reducers_and_pure_functions.html":{},"tooling/command_line_javascript.html":{},"tooling/the_command_line.html":{},"tooling/tooling.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone_primer.html":{},"zone/zone_primer.html#What":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["javascript&#x4ee3;&#x7801;&#x53ef;&#x4ee5;&#x9009;&#x62e9;&#x4f7f;&#x7528;&#x4ee5;&#x4e0b;&#x65b9;&#x6cd5;&#x4e4b;&#x4e00;&#x5c06",{"_index":1191,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["javascript&#x547d;&#x4ee4;&#x884c;&#xff1a;nodej",{"_index":6217,"title":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}},"body":{}}],["javascript&#x5de5;&#x5177;&#x94f",{"_index":6255,"title":{"tooling/tooling.html#JavaScript工具链":{}},"body":{}}],["javascript&#x5f00;&#x53d1;&#x5de5;&#x5177;&#x5927;&#x591a;&#x9762;&#x5411;&#x547d;&#x4ee4;&#x884c;&#x3002",{"_index":6248,"title":{},"body":{"tooling/the_command_line.html#命令行":{}}}],["javascript&#x5f15;&#x64ce;&#x8fd0;&#x884c;&#x3002;node.js&#x7528;&#x4e8e;&#x5728;&#x670d;&#x52a1;&#x5668;&#x4e0a;&#x7f16;&#x5199;&#x5feb;&#x901f;&#x6267;&#x884c;&#x4ee3;&#x7801;&#xff0c;&#x4ee5;&#x6709;&#x6548;&#x5730;&#x5904;&#x7406;&#x4e8b;&#x4ef6;&#x548c;&#x975e;&#x963b;&#x585e;i/o&#x3002",{"_index":6219,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["javascript&#x662f;&#x5728;1995&#x5e74;&#x521b;&#x5efa;&#x7684;&#xff0c;&#x4f46;&#x8bed;&#x8a00;&#x4eca;&#x5929;&#x4ecd;&#x7136;&#x6b23;&#x6b23;&#x5411;&#x8363;&#x3002;&#x6709;&#x5b50;&#x96c6;&#xff0c;&#x8d85;&#x96c6;&#xff0c;&#x5f53;&#x524d;&#x6700;&#x65b0;&#x7248;&#x672c;&#x4e3a;es6&#xff0c;&#x8fd9;&#x5e26;&#x6765;&#x4e86;&#x5f88;&#x591a;&#x65b0;&#x7684;&#x7279;&#x6027;&#x3002",{"_index":1288,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["javascript&#x7684;&#x7ee7;&#x627f;&#x4e0e;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x4e2d;&#x7684;&#x7ee7;&#x627f;&#x7684;&#x5de5;&#x4f5c;&#x4e0d;&#x540c;&#xff0c;&#x8fd9;&#x53ef;&#x80fd;&#x5f88;&#x6df7;&#x4e71;&#x3002",{"_index":1359,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#继承":{}}}],["javascript&#x7a0b;&#x5e8f;&#x5458;&#xff0c;&#x8fd9;&#x5e76;&#x4e0d;&#x610f;&#x5473;&#x7740;&#x5f00;&#x53d1;&#x5fc5;&#x987b;&#x5728;typescript&#x6216;es2015&#x4e2d;&#x5b8c;&#x6210;&#xff1a;&#x7a0b;&#x5e8f;&#x5458;&#x4ecd;&#x7136;&#x53ef;&#x4ee5;&#x7f16;&#x5199;&#x8fd0;&#x884c;&#x539f;&#x751f;&#x7684;javascript&#x3002",{"_index":3053,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["javascript&#x89e3;&#x91ca;&#x5668;&#x3002",{"_index":6222,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["javascript”语言的正式名叫“ecmascript",{"_index":1099,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html":{}}}],["javascript中使用reduc",{"_index":5961,"title":{},"body":{"state-management/reducers_and_pure_functions.html":{}}}],["javascript中实际上有类型的，但他们只是“鸭子类型”，这大概意味着程序员不必去想它们。typescript中也存在javascript",{"_index":1810,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{}}}],["javascript函数中，函数采用可选参数是很常见的。typescript",{"_index":1825,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{}}}],["javascript命令行：nodej",{"_index":6209,"title":{},"body":{"tooling/command_line_javascript.html":{}}}],["javascript和其他编程语言中的switch",{"_index":842,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["javascript和移动的开源库）集成，使其可移植到本机移动。此外，ionic团队正在开发一个基于angular",{"_index":2979,"title":{},"body":{"why_angular_2.html":{}}}],["javascript引擎运行。node.js用于在服务器上编写快速执行代码，以有效地处理事件和非阻塞i/o",{"_index":6212,"title":{},"body":{"tooling/command_line_javascript.html":{}}}],["javascript是在1995年创建的，但语言今天仍然欣欣向荣。有子集，超集，当前最新版本为es6",{"_index":1286,"title":{},"body":{"ES6&TypeScript/es6/es6.html":{}}}],["javascript模块，以便从其他javascript",{"_index":1303,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{}}}],["javascript程序员，这并不意味着开发必须在typescript或es2015中完成：程序员仍然可以编写运行原生的javascript",{"_index":2972,"title":{},"body":{"why_angular_2.html":{}}}],["javascript编写的代码应该可以在任何现代的网络浏览器（firefox，ie9",{"_index":6190,"title":{},"body":{"tooling/chrome.html":{}}}],["javascript，“ecmascript",{"_index":1100,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html":{}}}],["javascript，但是angular",{"_index":1560,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{}}}],["jit",{"_index":2554,"title":{},"body":{"i18n/import-using-jit.html":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["jit&#xff08;just",{"_index":2571,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["jit相比，由aot",{"_index":3210,"title":{},"body":{"Advanced-angular/aot_limitations.html":{}}}],["jit（just",{"_index":2555,"title":{},"body":{"i18n/import-using-jit.html":{}}}],["jit（及时）编译器或aot（ahead",{"_index":2522,"title":{},"body":{"i18n/import-translation-files.html":{}}}],["jo",{"_index":1215,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["john",{"_index":278,"title":{},"body":{"Components/access_child_components_from_template.html":{},"ES6&TypeScript/es6/destructuring.html":{}}}],["jquery.ajax",{"_index":7010,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["jquery.ajax(url",{"_index":7016,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["jqueryajaxset",{"_index":7023,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["jqueryxhr",{"_index":7019,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["jquery甚至是backbone来开发应用程序。我们的团队喜欢angular",{"_index":2802,"title":{},"body":{"vs_react.html":{}}}],["js",{"_index":1677,"title":{},"body":{"ES6&TypeScript/typescript/typeScript.html":{},"why_angular_2.html":{},"Project-setup/summary.html":{},"Routing/query_params.html":{},"Routing/routeparams.html":{},"Testing/karma-config.html":{},"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["js&#x7684;&#x57fa;&#x672c;&#x529f;&#x80fd;&#x3002;&#x793e;&#x533a;&#x521b;&#x5efa;&#x4e86;&#x4e0d;&#x540c;&#x7684;&#x5de5;&#x5177;&#xff0c;&#x5c06;&#x5176;&#x9996;&#x9009;&#x8bed;&#x6cd5;/&#x529f;&#x80fd;&#x96c6;&#x8f6c;&#x6362;&#x4e3a;&#x6d4f;&#x89c8;&#x5668;&#x652f;&#x6301;&#x7684;&#x8bed;&#x6cd5;/&#x529f;&#x80fd;&#x96c6;&#xff0c;&#x4ee5;&#x907f;&#x514d;&#x5c06;&#x5176;&#x81ea;&#x8eab;&#x7ed1;&#x5b9a;&#x5230;web&#x5e73;&#x53f0;&#x7684;&#x7ea6;&#x675f;&#x3002;&#x8fd9;&#x5728;angular",{"_index":4447,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["jshint",{"_index":6961,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["json",{"_index":269,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Observables/observables_array_operations.html":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/karma-config.html":{},"state-management/actions.html":{}}}],["jsonp",{"_index":5094,"title":{},"body":{"Testing/json-xhr.html":{}}}],["jsonp和xhr",{"_index":5089,"title":{},"body":{"Testing/json-xhr.html":{}}}],["jsonp或xhr模块获取数据，而不是传统的http",{"_index":5090,"title":{},"body":{"Testing/json-xhr.html":{}}}],["json和html",{"_index":5164,"title":{},"body":{"Testing/karma-config.html":{}}}],["js的基本功能。社区创建了不同的工具，将其首选语法/功能集转换为浏览器支持的语法/功能集，以避免将其自身绑定到web平台的约束。这在angular",{"_index":4438,"title":{},"body":{"Project-setup/webpack.html":{}}}],["judochop",{"_index":1768,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{}}}],["justifi",{"_index":6337,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["justin",{"_index":2778,"title":{},"body":{"vs_react.html":{}}}],["k",{"_index":1207,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["karma",{"_index":3351,"title":{"Testing/karma-config.html#Karma-配置":{}},"body":{"Angular-CLI/command-overview.html":{},"Angular-CLI/testing.html":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/karma-config.html":{},"Testing/karma-config.html#Karma-配置":{},"Testing/karma-config.html#概述":{},"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{}}}],["karma&#x4f7f;&#x7528",{"_index":5479,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["karma&#x662f;&#x6211;&#x4eec;&#x6d4b;&#x8bd5;&#x5de5;&#x4f5c;&#x6d41;&#x7a0b;&#x7684;&#x57fa;&#x7840;&#x3002",{"_index":5174,"title":{},"body":{"Testing/karma-config.html#Karma-配置":{}}}],["karma&#x662f;&#x65e0;&#x4f9d;&#x8d56;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5176;&#x4ed6;&#x6d4b;&#x8bd5;&#x6846;&#x67b6;&#x4e0e;&#x5176;&#x4ed6;&#x5de5;&#x5177;&#xff08;&#x5982;&#x4ee3;&#x7801;&#x8986;&#x76d6;&#x62a5;&#x544a;&#xff0c;spy&#x6d4b;&#x8bd5;&#xff0c;e2e&#x7b49;&#xff09;&#x7ed3;&#x5408;&#x3002",{"_index":5474,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["karma.conf.j",{"_index":3394,"title":{},"body":{"Angular-CLI/testing.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#Karma-配置":{},"Testing/karma-config.html#概述":{}}}],["karma.conf.js&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x6211;&#x4eec;&#x5e0c;&#x671b;&#x5305;&#x542b;&#x7684;&#x6d4b;&#x8bd5;&#x6587;&#x4ef6;&#x653e;&#x5728;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684;&#x6587;&#x4ef6",{"_index":5190,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["karma.config.j",{"_index":4969,"title":{},"body":{"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{}}}],["karma。下面是我们的karma测试的输出。如您所见，我们有一个测试已通过，在chrom",{"_index":4970,"title":{},"body":{"Testing/execute.html":{}}}],["karma与测试框架（如jasmine）或构建系统（如webpack",{"_index":5132,"title":{},"body":{"Testing/karma-config.html":{}}}],["karma是无依赖的，所以我们可以使用其他测试框架与其他工具（如代码覆盖报告，spy测试，e2",{"_index":5460,"title":{},"body":{"Testing/toolchain.html":{}}}],["kati",{"_index":5711,"title":{},"body":{"state-management/actions.html":{}}}],["kb",{"_index":3108,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Pipes/custom_pipes.html":{}}}],["kb&#xff0c;&#x5e76;&#x901a;&#x8fc7;&#x8df3;&#x8fc7;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x7684;&#x7f16;&#x8bd1;&#x51cf;&#x5c11;&#x52a0;&#x8f7d;&#x65f6;&#x95f4;&#x3002",{"_index":3138,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["kebab",{"_index":1030,"title":{},"body":{"Directives/ng_style_directive.html":{}}}],["keep",{"_index":2725,"title":{"further-reading.html#Keeping-up-to-date":{}},"body":{"further-reading.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["key",{"_index":452,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"Immutable/maps.html":{}}}],["key&#39",{"_index":457,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{}}}],["key&apo",{"_index":490,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["keyboard",{"_index":5564,"title":{},"body":{"a11y/key-concerns.html":{},"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["kick(spe",{"_index":1753,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["kicker",{"_index":1752,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["kickpunch",{"_index":1759,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["kilobyt",{"_index":4048,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["kind",{"_index":1894,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["king",{"_index":2404,"title":{},"body":{"Immutable/lists.html":{}}}],["kingsroad",{"_index":875,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["kingsroad&apo",{"_index":997,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["kirk",{"_index":879,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["kirk&apo",{"_index":1001,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["know",{"_index":5923,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["known",{"_index":2688,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["kopek",{"_index":102,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["label",{"_index":259,"title":{},"body":{"Components/access_child_components_from_template.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["labelactor:/label",{"_index":248,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["lack",{"_index":6997,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["languag",{"_index":6930,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["larg",{"_index":6924,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["largefiles",{"_index":4073,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["last",{"_index":897,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["lastnam",{"_index":194,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/es6/destructuring.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Change-detection/how_change_detection_works.html":{}}}],["latenc",{"_index":6469,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["later",{"_index":6328,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["launcher&apo",{"_index":5131,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["lazi",{"_index":3625,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["lazili",{"_index":3678,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["lazy.compon",{"_index":3672,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["lazy.rout",{"_index":3673,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["lazy/counter.servic",{"_index":3628,"title":{},"body":{"Modules/lazy-load-di.html":{}}}],["lazy/lazy.module#lazymodul",{"_index":3670,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["lazycompon",{"_index":3615,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["lazymodul",{"_index":3610,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["lazy”所需的代码将被下载，我们将在浏览器中看到消息“lazi",{"_index":3679,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["lead",{"_index":2713,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["leaf",{"_index":6023,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["learn",{"_index":2682,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["leav",{"_index":6739,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["left",{"_index":6029,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["legal",{"_index":6840,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["legend",{"_index":1997,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["lego",{"_index":3737,"title":{},"body":{"Modules/modules.html":{},"Modules/modules.html#模块":{}}}],["lend",{"_index":1983,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["length",{"_index":1273,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Immutable/lists.html":{}}}],["less",{"_index":1616,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["lesser",{"_index":7037,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["let",{"_index":1749,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["let&#x2019;",{"_index":3934,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["letter",{"_index":208,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["lettuc",{"_index":519,"title":{},"body":{"Di/di_framework.html":{},"Di/what_is_di.html":{},"ES6&TypeScript/es6/arrow_functions.html":{}}}],["let’",{"_index":2488,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"Observables/observables_array_operations.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"why_TypeScript.html":{}}}],["level",{"_index":5776,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["li",{"_index":4020,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["librari",{"_index":2721,"title":{},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"Angular-CLI/adding-third-party-libraries.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["libzon",{"_index":6498,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["libzone&#x8868;&#x793a;&#x4e00;&#x4e9b;&#x7b2c;&#x4e09;&#x65b9;&#x5e93;&#xff0c;&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x65e0;&#x6cd5;&#x63a7;&#x5236;&#x3002",{"_index":6523,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["libzone.run",{"_index":6505,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["licens",{"_index":94,"title":{"license.html#License":{}},"body":{"Change-detection/Change_Detection.html":{},"Modules/modules.html":{},"Modules/modules.html#模块":{},"Pipes/pipes.html":{},"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{},"license.html":{},"license.html#License":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["licensor",{"_index":6828,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["life",{"_index":4108,"title":{},"body":{"Pipes/pipes.html":{}}}],["lifecycl",{"_index":5644,"title":{},"body":{"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["lifetim",{"_index":2476,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["limit",{"_index":7033,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["line",{"_index":1509,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["link",{"_index":2436,"title":{},"body":{"Immutable/maps_are_iterable.html":{},"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"license.html":{},"license.html#Under-the-following-terms":{}}}],["lint",{"_index":1640,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"Angular-CLI/cli.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/linting.html":{}}}],["lion",{"_index":885,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["lion&apo",{"_index":1004,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["lisp",{"_index":5707,"title":{},"body":{"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["list",{"_index":281,"title":{},"body":{"Components/app_structure_with_components.html":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Routing/child_routes.html":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{}}}],["list&apo",{"_index":4527,"title":{},"body":{"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html#声明路由参数":{}}}],["list.compon",{"_index":376,"title":{},"body":{"Components/using_other_components.html":{}}}],["list.push",{"_index":2498,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["list.withmut",{"_index":2492,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["list?page=2",{"_index":4595,"title":{},"body":{"Routing/query_params.html":{},"Routing/query_params.html#传递可选参数":{}}}],["listen",{"_index":6503,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["listtop",{"_index":1170,"title":{},"body":{"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["liter",{"_index":1219,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/shapes.html":{}}}],["literal.attribut",{"_index":1220,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["littl",{"_index":3921,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["live",{"_index":2677,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{}}}],["load",{"_index":58,"title":{},"body":{"bootstrapping/file_structure.html":{},"Directives/ng_if_directive.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["load:&apo",{"_index":1340,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["loadchildren",{"_index":3669,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["loader",{"_index":1652,"title":{"Project-setup/loaders.html#Loaders":{}},"body":{"ES6&TypeScript/typescript/linting.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Loaders":{},"Project-setup/loaders.html#Inline":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["loader&apo",{"_index":4270,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{}}}],["loaders.istanbulinstrument",{"_index":5147,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["loader（npm",{"_index":1646,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{}}}],["loader）来实现的，它插入到webpack",{"_index":1647,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{}}}],["loadtim",{"_index":3302,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["loandetailspag",{"_index":4710,"title":{},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["local",{"_index":2437,"title":{},"body":{"Immutable/maps_are_iterable.html":{},"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"practice.html":{},"Angular-CLI/command-overview.html":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"index.html":{},"index.html#Getting-Started":{}}}],["locale=fr",{"_index":2538,"title":{},"body":{"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["locale_id",{"_index":2559,"title":{},"body":{"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["localeid",{"_index":2565,"title":{},"body":{"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["localhost:3000/product",{"_index":4488,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html":{},"Routing/query_params.html#传递可选参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{}}}],["localhost：4200",{"_index":3390,"title":{},"body":{"Angular-CLI/serving-the-app.html":{},"Angular-CLI/testing.html":{}}}],["locat",{"_index":6020,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["location.href",{"_index":3259,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["lodash",{"_index":1881,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["log",{"_index":950,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["log(a",{"_index":211,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["log(b",{"_index":206,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["log(data",{"_index":1611,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["log(error",{"_index":3898,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["log(form.valu",{"_index":2172,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["log(form.value.usernam",{"_index":2196,"title":{},"body":{"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["log(list.s",{"_index":2497,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["log(messag",{"_index":1620,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Immutable/what_is_immutability.html":{}}}],["log(message.join",{"_index":1619,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["log(mor",{"_index":1472,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["log(movi",{"_index":2414,"title":{},"body":{"Immutable/lists.html":{}}}],["log(movie.toobject",{"_index":2387,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["log(movie1.episod",{"_index":2464,"title":{},"body":{"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{}}}],["log(movie1.get",{"_index":2432,"title":{},"body":{"Immutable/maps.html":{}}}],["log(movie2.episod",{"_index":2465,"title":{},"body":{"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{}}}],["log(movie2.get",{"_index":2433,"title":{},"body":{"Immutable/maps.html":{}}}],["log(myep",{"_index":2514,"title":{},"body":{"Immutable/what_is_immutability.html":{}}}],["log(myfeatur",{"_index":2446,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["log(on",{"_index":1270,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["log(parameterindex",{"_index":1924,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["log(prefix",{"_index":1540,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["log(sizeinbyt",{"_index":4061,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["log(str",{"_index":1512,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["log(submitbutton",{"_index":2428,"title":{},"body":{"Immutable/map_merge.html":{}}}],["log(t.nam",{"_index":1711,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["log(token1",{"_index":462,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["log(top",{"_index":1124,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["log(valu",{"_index":1515,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["log(w",{"_index":1869,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["log(x",{"_index":1114,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["log(zone.current.nam",{"_index":6743,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["log.bind",{"_index":1396,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["logger",{"_index":455,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["logger&apo",{"_index":4223,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["logger/index",{"_index":448,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{}}}],["loggerapiconfig",{"_index":447,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["loggerconfig",{"_index":464,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["loggermodul",{"_index":444,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["loggerservic",{"_index":442,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["logic",{"_index":5933,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["login",{"_index":2039,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Routing/route_guards.html":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["login(usernam",{"_index":2267,"title":{},"body":{"Http/catching-rejections.html":{}}}],["login_send",{"_index":5710,"title":{},"body":{"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["login_user_error",{"_index":5865,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["login_user_pend",{"_index":5863,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["login_user_success",{"_index":5864,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["loginform",{"_index":2036,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["loginform.controls.password",{"_index":2045,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["loginform.controls.usernam",{"_index":2044,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["loginform.valid",{"_index":2147,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["loginform.valu",{"_index":2040,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["loginrouteguard",{"_index":4629,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现CanActivate":{}}}],["loginsendact",{"_index":5709,"title":{},"body":{"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["loginservic",{"_index":615,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{}}}],["loginservice.isloggedin",{"_index":4636,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{}}}],["loginuser(credenti",{"_index":5867,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["loginwidget",{"_index":621,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["loglevel",{"_index":5118,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["logmessag",{"_index":1826,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["logout/login",{"_index":618,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["logout_us",{"_index":5866,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["logoutus",{"_index":5873,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["logoutwidget",{"_index":622,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["logposit",{"_index":1923,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["logzon",{"_index":6354,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["logzone(timingzon",{"_index":6742,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["logzone.run",{"_index":6366,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["long",{"_index":6426,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"license.html":{},"license.html#You-are-free-to":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["longer",{"_index":7021,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["longform",{"_index":4058,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["longrequest",{"_index":2341,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["look",{"_index":4511,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["loop&#xff09;&#x6765;&#x5feb;&#x901f;&#x5199;&#x5165;&#x548c;&#x6d4b;&#x8bd5;javascript&#x4ee3;&#x7801;&#x3002",{"_index":6221,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["loop）来快速写入和测试javascript",{"_index":6214,"title":{},"body":{"tooling/command_line_javascript.html":{}}}],["lord",{"_index":876,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["lose",{"_index":7060,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["lot",{"_index":2500,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["love",{"_index":5585,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["lower",{"_index":6400,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["lowercas",{"_index":4126,"title":{},"body":{"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{}}}],["ls",{"_index":1914,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["m",{"_index":1893,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["m338",{"_index":6253,"title":{},"body":{"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{}}}],["maclaren",{"_index":934,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["maclaren&apo",{"_index":991,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["macro",{"_index":6440,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["macrotask",{"_index":6436,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["made",{"_index":6834,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["main",{"_index":217,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"Change-detection/how_change_detection_works.html":{},"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["main()[root",{"_index":6575,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["main.t",{"_index":76,"title":{},"body":{"bootstrapping/file_structure.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html":{},"Modules/introduction.html#引导应用程序":{}}}],["maincompon",{"_index":156,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["maincomponent_changedetector",{"_index":157,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["maintain",{"_index":6395,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["make",{"_index":5761,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["makehamburg",{"_index":518,"title":{},"body":{"Di/di_framework.html":{}}}],["malleabl",{"_index":7035,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["mani",{"_index":2698,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["manner",{"_index":6835,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["manual",{"_index":6988,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["map",{"_index":1467,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/maps.html":{},"Immutable/maps_are_iterable.html":{},"Immutable/nested-objects.html":{},"Http/retry.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Testing/karma-config.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["map&apo",{"_index":4429,"title":{},"body":{"Project-setup/summary.html#总结":{},"Testing/karma-config.html#概述":{}}}],["map((respons",{"_index":5000,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["map.delet",{"_index":2367,"title":{},"body":{"Immutable/deleting_keys.html":{}}}],["map.deletein",{"_index":2368,"title":{},"body":{"Immutable/deleting_keys.html":{}}}],["map.merg",{"_index":2418,"title":{},"body":{"Immutable/map_merge.html":{}}}],["map.upd",{"_index":2461,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["mapabc",{"_index":1462,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["mapabcd",{"_index":1463,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["mapfilt",{"_index":2449,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["mapfilter.filt",{"_index":2450,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["mapmap",{"_index":2447,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["mapmap.map",{"_index":2448,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["mapreduc",{"_index":2451,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["mapreduce.reduc",{"_index":2452,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["marbl",{"_index":2707,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["margin",{"_index":775,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["mark",{"_index":2082,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["markup",{"_index":5563,"title":{},"body":{"a11y/key-concerns.html":{},"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["mask.pip",{"_index":3450,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/multiple-elements.html":{}}}],["mask.pipe&apo",{"_index":3479,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["mask.pipe.t",{"_index":3442,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["maskedsect",{"_index":3757,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["maskedsection.replac",{"_index":3760,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["match",{"_index":655,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["materi",{"_index":2661,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#TypeScript":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"plus.html":{},"plus.html#插件":{},"license.html":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["math",{"_index":557,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Testing/simple-test.html":{}}}],["math&apo",{"_index":5395,"title":{},"body":{"Testing/simple-test.html#简单的测试":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["math.random",{"_index":560,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["maxlength",{"_index":2223,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{}}}],["mayb",{"_index":1820,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["maybeerror",{"_index":1769,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["mb",{"_index":3113,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Pipes/custom_pipes.html":{}}}],["mb&#x76f8;&#x6bd4;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x51cf;&#x5c11;428.8",{"_index":3137,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["mb相比，我们可以减少428.8",{"_index":3107,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["mckenzi",{"_index":1965,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["mdn",{"_index":1063,"title":{},"body":{"Directives/structural_directives.html":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["mdn&#x6587;&#x6863",{"_index":1075,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["mdn:const",{"_index":1234,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["mean",{"_index":7009,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["meaning",{"_index":6621,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["measur",{"_index":6409,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["mechan",{"_index":6462,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["medium",{"_index":6822,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["megabyt",{"_index":4049,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["mental",{"_index":6558,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["merg",{"_index":236,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Immutable/map_merge.html":{}}}],["messag",{"_index":1614,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"Immutable/what_is_immutability.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["message&apo",{"_index":5337,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html#验证方法和属性":{}}}],["message.compon",{"_index":5327,"title":{},"body":{"Testing/overriding.html":{},"Testing/verify.html":{}}}],["message.component&apo",{"_index":5543,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["message.component.t",{"_index":5523,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["message.spec.t",{"_index":5524,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["messagecompon",{"_index":5015,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["messages.fr.xlf",{"_index":2560,"title":{},"body":{"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["messages.fr.xlf!text",{"_index":2564,"title":{},"body":{"i18n/import-using-jit.html":{}}}],["messeng",{"_index":2784,"title":{},"body":{"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["metadata",{"_index":4180,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{}}}],["metadata&apo",{"_index":4225,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["metaprogram",{"_index":7055,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["method",{"_index":1346,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["methoddecor",{"_index":1568,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["michel",{"_index":933,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["microtask",{"_index":6431,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["middl",{"_index":6022,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["middlenam",{"_index":1278,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["middlewar",{"_index":5783,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["migrat",{"_index":3977,"title":{},"body":{"Observables/summary.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["min(pow",{"_index":4063,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["minahan",{"_index":889,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["minahan&apo",{"_index":1008,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["mindset",{"_index":7052,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["minifi",{"_index":3355,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["minimum",{"_index":2086,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["minlength",{"_index":2085,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["mirror",{"_index":2439,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["mismatchedpassword",{"_index":2102,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["miss",{"_index":1705,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["mock",{"_index":723,"title":{},"body":{"Di/what_is_di.html":{},"Testing/alt-http-mocking.html":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/injecting-dependencies.html":{},"Testing/mockbackend.html":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["mock&#x7b56;&#x7565",{"_index":4819,"title":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}},"body":{}}],["mockbackend",{"_index":4775,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/json-xhr.html":{},"Testing/json-xhr.html#测试JSONP和XHR后端":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["mockbackend.connections.subscrib",{"_index":5265,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["mockbackend测试http",{"_index":5251,"title":{},"body":{"Testing/mockbackend.html":{}}}],["mockbrowserjsonp",{"_index":5095,"title":{},"body":{"Testing/json-xhr.html":{},"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["mockchatwidget",{"_index":552,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["mockconnect",{"_index":5263,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["mockhttp",{"_index":4806,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["mockquoteservic",{"_index":4864,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["mockredux",{"_index":4906,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["mockredux(mockst",{"_index":4911,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["mockrespond",{"_index":5278,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["mockrespons",{"_index":4786,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["mockstat",{"_index":4909,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["mockstate.count",{"_index":4918,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["mode",{"_index":2472,"title":{},"body":{"Immutable/object_freeze.html":{}}}],["model",{"_index":2183,"title":{"Form/template-model-binding.html#使用-Model-绑定":{}},"body":{"Form/template-model-binding.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["models/appst",{"_index":5849,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["modifi",{"_index":2243,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["modul",{"_index":1648,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"further-reading.html":{},"further-reading.html#Angular":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["module&apo",{"_index":1889,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["moduleresolut",{"_index":1902,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["modules/app.modul",{"_index":5428,"title":{},"body":{"Testing/testbed-configuration.html":{}}}],["modulewithprovid",{"_index":3458,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["mon",{"_index":1861,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["monkey",{"_index":6349,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zone.html":{},"zone/zone.html#Zones":{}}}],["mon、tu",{"_index":1871,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["more",{"_index":1471,"title":{"index.html#More-Informations":{}},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"glossary.html":{},"glossary.html#装饰器":{},"Angular-CLI/command-overview.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"index.html":{},"index.html#More-Informations":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["mostli",{"_index":2685,"title":{},"body":{"further-reading.html":{},"further-reading.html#General-Coding-Practice-and-Functional-Programming":{}}}],["motto&#x652f;&#x6301;&#x5230;v1.3&#x3002",{"_index":3046,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["motto支持到v1.3",{"_index":2969,"title":{},"body":{"why_angular_2.html":{}}}],["mousedown",{"_index":3318,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["mousemov",{"_index":6450,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["mouseup",{"_index":3320,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["move",{"_index":2762,"title":{},"body":{"practice.html":{}}}],["movi",{"_index":189,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"Immutable/what_is_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["movie.actor",{"_index":192,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["movie.compon",{"_index":216,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["movie.delet",{"_index":2386,"title":{},"body":{"Immutable/deleting_keys.html":{}}}],["movie.episod",{"_index":2513,"title":{},"body":{"Immutable/what_is_immutability.html":{}}}],["movie.get",{"_index":2454,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["movie.get(&#39;mpaa&#39;).set(&#39;rating&#39;，&#39;pg&#39",{"_index":2457,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["movie.mpaa.r",{"_index":2456,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["movie.set",{"_index":2407,"title":{},"body":{"Immutable/lists.html":{}}}],["movie.titl",{"_index":191,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["movie1",{"_index":2429,"title":{},"body":{"Immutable/maps.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{}}}],["movie2",{"_index":2430,"title":{},"body":{"Immutable/maps.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{}}}],["movie2.episod",{"_index":2463,"title":{},"body":{"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{}}}],["movie2.set",{"_index":2431,"title":{},"body":{"Immutable/maps.html":{}}}],["movieapp",{"_index":6803,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["moviecompon",{"_index":108,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["moviecomponent.actor",{"_index":176,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["moviecomponent.slogan",{"_index":174,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["moviecomponent.titl",{"_index":175,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["moviecomponent_changedetector",{"_index":158,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["movies.push(immutable.map",{"_index":2403,"title":{},"body":{"Immutable/lists.html":{}}}],["movies.s",{"_index":2413,"title":{},"body":{"Immutable/lists.html":{}}}],["movies.upd",{"_index":2406,"title":{},"body":{"Immutable/lists.html":{}}}],["movies.zipwith",{"_index":2410,"title":{},"body":{"Immutable/lists.html":{}}}],["mozilla",{"_index":6188,"title":{},"body":{"tooling/chrome.html":{}}}],["mpaa",{"_index":2379,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["mport",{"_index":3761,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["ms",{"_index":6645,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["much",{"_index":2503,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["multi",{"_index":2304,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["multipli",{"_index":5391,"title":{},"body":{"Testing/simple-test.html":{}}}],["mustach",{"_index":4440,"title":{},"body":{"Project-setup/webpack.html":{},"Project-setup/webpack.html#Webpack":{}}}],["mutabl",{"_index":209,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Immutable/persistent_and_transient_data_structures.html":{}}}],["mutablelist",{"_index":2493,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["mutablelist.push(v",{"_index":2496,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["my_act",{"_index":5708,"title":{},"body":{"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["myactionservic",{"_index":4900,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["myag",{"_index":1736,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["myapp",{"_index":2254,"title":{},"body":{"Http/cancel_request.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{}}}],["mycomponentctrl",{"_index":297,"title":{},"body":{"Components/components.html":{}}}],["mydirect",{"_index":3276,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["myep",{"_index":2512,"title":{},"body":{"Immutable/what_is_immutability.html":{}}}],["myfeatur",{"_index":2442,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["myform",{"_index":255,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["mymodul",{"_index":1271,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["mynam",{"_index":1212,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["mytoppings.list",{"_index":1389,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["n",{"_index":4033,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["n&#xff09;&#x662f;&#x4f7f;&#x8f6f;&#x4ef6;&#x548c;web&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x9002;&#x5e94;&#x591a;&#x79cd;&#x8bed;&#x8a00;&#x7684;&#x8fc7;&#x7a0b;&#xff0c;&#x5141;&#x8bb8;&#x4ed6;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x88ab;&#x591a;&#x4e2a;&#x8bed;&#x8a00;&#x7528;&#x6237;&#x4f7f;&#x7528;&#x3002",{"_index":2520,"title":{},"body":{"i18n/i18n.html#i18n的目的是":{}}}],["n.split",{"_index":4034,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["n/a",{"_index":1281,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["naiv",{"_index":4142,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["name",{"_index":260,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/two_way_data_binding.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/maps.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{},"Angular-CLI/creating-an-app.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/creating-routes.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/observables_array_operations.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["name!/p",{"_index":315,"title":{},"body":{"Components/passing_data_into_components.html":{}}}],["name&#xff08",{"_index":4253,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["name/h1",{"_index":2591,"title":{},"body":{"i18n/marking-text-in-templates.html":{}}}],["name/p",{"_index":306,"title":{},"body":{"Components/creating_components.html":{}}}],["name=\"sidebar\"/rout",{"_index":4464,"title":{},"body":{"Routing/aux-routes.html":{}}}],["name=\"usernam",{"_index":2192,"title":{},"body":{"Form/template-model-binding.html":{}}}],["name=$ev",{"_index":382,"title":{},"body":{"Components/two_way_data_binding.html":{}}}],["name=sidebar/rout",{"_index":4480,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["name=usernam",{"_index":2207,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["name].[hash].bundle.j",{"_index":4409,"title":{},"body":{"Project-setup/summary.html":{}}}],["name].[hash].j",{"_index":4187,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{}}}],["name].[hash].js.map",{"_index":4190,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{}}}],["name].component.css",{"_index":3372,"title":{},"body":{"Angular-CLI/creating-components.html":{}}}],["name].component.html",{"_index":3373,"title":{},"body":{"Angular-CLI/creating-components.html":{}}}],["name].component.spec.t",{"_index":3374,"title":{},"body":{"Angular-CLI/creating-components.html":{}}}],["name].component.t",{"_index":3371,"title":{},"body":{"Angular-CLI/creating-components.html":{}}}],["name]=hero.nam",{"_index":2770,"title":{},"body":{"practice.html":{}}}],["name]。[ent",{"_index":3378,"title":{},"body":{"Angular-CLI/creating-other-things.html":{}}}],["name}}/h1",{"_index":2597,"title":{},"body":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["nan",{"_index":1813,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["nativ",{"_index":5667,"title":{},"body":{"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["native&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x56e2;&#x961f;&#x5bf9;react&#x7684;&#x7ecf;&#x9a8c;&#x6709;&#x9650;&#xff0c;&#x800c;&#x4e14;&#x751f;&#x6001;&#x7cfb;&#x7edf;&#x9891;&#x7e41;&#x66f4;&#x65b0;&#x3002",{"_index":2858,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["nativeel",{"_index":2757,"title":{},"body":{"practice.html":{}}}],["nativeelement.firstchild",{"_index":2765,"title":{},"body":{"practice.html":{}}}],["nativeelement.parentel",{"_index":2761,"title":{},"body":{"practice.html":{}}}],["nativescript",{"_index":2978,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{}}}],["native应用程序时，我们的团队对react",{"_index":2794,"title":{},"body":{"vs_react.html":{}}}],["nav",{"_index":3658,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["navig",{"_index":2797,"title":{"Routing/routerlink.html#Navigating-Programmatically":{}},"body":{"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routerlink.html":{},"Routing/routerlink.html#Navigating-Programmatically":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["need",{"_index":4915,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["needsexclam",{"_index":2076,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["neg",{"_index":7067,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["nest",{"_index":6396,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["netflix",{"_index":3847,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{}}}],["network",{"_index":5636,"title":{},"body":{"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{}}}],["never",{"_index":1858,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["new",{"_index":331,"title":{},"body":{"Components/responding_to_component_events.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/di_framework.html":{},"Di/what_is_di.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Angular-CLI/creating-an-app.html":{},"Angular-CLI/creating-other-things.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"Change-detection/how_change_detection_works.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["new.target",{"_index":1120,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["newlin",{"_index":1928,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["newmessag",{"_index":5326,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["next",{"_index":2286,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["next.handle(clonedrequest",{"_index":2302,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["nextpag",{"_index":4601,"title":{},"body":{"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{}}}],["ng",{"_index":357,"title":{},"body":{"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"i18n/import-translation-files.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"practice.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-an-app.html":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/creating-routes.html":{},"Angular-CLI/init.html":{},"Angular-CLI/linting.html":{},"Angular-CLI/serving-the-app.html":{},"Angular-CLI/testing.html":{}}}],["ng2",{"_index":2719,"title":{"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"Testing/complex-actions.html":{},"Testing/simple-actions.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/state-management.html":{},"state-management/state-management.html#状态管理":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["ngaftercontentcheck",{"_index":5642,"title":{},"body":{"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["ngaftercontentinit",{"_index":5597,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{},"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["ngafterviewcheck",{"_index":5643,"title":{},"body":{"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["ngafterviewinit",{"_index":5591,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["ngc",{"_index":2533,"title":{},"body":{"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{}}}],["ngchellocompon",{"_index":289,"title":{},"body":{"Components/components.html":{}}}],["ngclass",{"_index":746,"title":{"Directives/ng_class_directive.html#NgClass-指令":{}},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#NgClass-指令":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["ngclass=\"cent",{"_index":747,"title":{},"body":{"Directives/ng_class_directive.html":{}}}],["ngclass=cent",{"_index":798,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["ngclass]=\"['warn",{"_index":757,"title":{},"body":{"Directives/ng_class_directive.html":{}}}],["ngclass]=[&apos;warning&apo",{"_index":805,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个数组":{}}}],["ngconf",{"_index":20,"title":{},"body":{"Change-detection/additional_resources.html":{}}}],["ngcours",{"_index":287,"title":{},"body":{"Components/components.html":{}}}],["ngdocheck",{"_index":5641,"title":{},"body":{"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["ngfor",{"_index":190,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Routing/routeparams.html":{},"Routing/routeparams.html#链接到带参数的路由":{}}}],["ngfor=\"let",{"_index":865,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/using_multiple_structural_directives.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{}}}],["ngfor=let",{"_index":961,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["ngform",{"_index":256,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["ngforof]=\"[1,2,3,4,5,6",{"_index":1087,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["ngforof]=\"episod",{"_index":895,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["ngforof]=\"tab",{"_index":1093,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["ngforof]=episod",{"_index":963,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["ngif",{"_index":818,"title":{},"body":{"Directives/ng_if_directive.html":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"practice.html":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{}}}],["ngif=\"exist",{"_index":822,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["ngif=\"item",{"_index":1088,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["ngif=ref.childnodes.length",{"_index":2776,"title":{},"body":{"practice.html":{}}}],["ngmodel",{"_index":105,"title":{},"body":{"Change-detection/Change_Detection.html":{},"Components/access_child_components_from_template.html":{},"Components/two_way_data_binding.html":{},"Form/form.html":{},"Form/form.html#Forms":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["ngmodel)]=\"usernam",{"_index":2194,"title":{},"body":{"Form/template-model-binding.html":{}}}],["ngmodel)]=usernam",{"_index":2209,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["ngmodelchang",{"_index":381,"title":{},"body":{"Components/two_way_data_binding.html":{}}}],["ngmodelgroup",{"_index":2002,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["ngmodelparadigm",{"_index":2006,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["ngmodul",{"_index":65,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Components/using_other_components.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"glossary.html":{},"glossary.html#装饰器":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["ngonchang",{"_index":5640,"title":{},"body":{"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["ngonchange($ev",{"_index":341,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["ngonchange(v",{"_index":337,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["ngondestroy",{"_index":951,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["ngoninit",{"_index":949,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"practice.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["ngredux",{"_index":4898,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["ngredux.configurestore(reduc",{"_index":5784,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["ngreduxmodul",{"_index":5762,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["ngredux（和任何其他依赖项），就像测试其他angular",{"_index":4934,"title":{},"body":{"Testing/complex-actions.html":{}}}],["ngrx",{"_index":2717,"title":{"further-reading.html#Redux-and-ngrx":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{},"state-management/redux.html#Redux-和-Ngrx":{},"state-management/redux.html#What-is-Ngrx":{}},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"state-management/actions.html":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"state-management/example_application.html":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/redux.html":{},"state-management/redux.html#What-is-Ngrx":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/state-management.html":{},"state-management/state-management.html#状态管理":{}}}],["ngrx&#x2019;",{"_index":5953,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["ngrx&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x5c06;&#x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5206;&#x89e3;&#x6210;&#x5177;&#x6709;&#x5355;&#x4e2a;&#x5173;&#x6ce8;&#x9886;&#x57df;&#x7684;&#x8f83;&#x5c0f;&#x7684;reducer&#x3002",{"_index":5795,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["ngrx&#x88ab;&#x521b;&#x5efa;&#x4e3a;&#x4e0e;angular&#x548c;rxjs&#x4e13;&#x95e8;&#x4f7f;&#x7528;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x4e25;&#x91cd;&#x4f9d;&#x8d56;&#x4e8e;&#x53ef;&#x89c2;&#x5bdf;&#x7684;&#x8303;&#x4f8b;&#x3002",{"_index":6016,"title":{},"body":{"state-management/redux.html#What-is-Ngrx":{}}}],["ngrx&#x901a;&#x8fc7",{"_index":5839,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["ngrx/core",{"_index":5733,"title":{},"body":{"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{}}}],["ngrx/effect",{"_index":5734,"title":{},"body":{"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"state-management/configuring_your_application.html":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["ngrx/router",{"_index":5830,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["ngrx/store",{"_index":5714,"title":{},"body":{"state-management/actions.html":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"state-management/configuring_your_application.html":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["ngrx’",{"_index":5907,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{}}}],["ngrx允许我们将您的应用程序分解成具有单个关注领域的较小的reduc",{"_index":5788,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html":{}}}],["ngrx是一套实现与redux",{"_index":6007,"title":{},"body":{"state-management/redux.html":{}}}],["ngrx被创建为与angular和rxj",{"_index":6008,"title":{},"body":{"state-management/redux.html":{}}}],["ngstyle",{"_index":1025,"title":{"Directives/ng_style_directive.html#NgStyle-指令":{}},"body":{"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["ngstyle]=\"alertstyl",{"_index":1034,"title":{},"body":{"Directives/ng_style_directive.html":{}}}],["ngstyle]=alertstyl",{"_index":1062,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["ngsubmit",{"_index":257,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["ngsubmit)=register(signupform",{"_index":2190,"title":{},"body":{"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["ngswitch",{"_index":841,"title":{},"body":{"Directives/ng_switch_directives.html":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{}}}],["ngswitch]=\"tab",{"_index":854,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["ngswitch]=\"tabnumb",{"_index":1092,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["ngswitchcas",{"_index":863,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["ngswitchcase=\"1\"tab",{"_index":855,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["ngswitchcase=\"2\"tab",{"_index":856,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["ngswitchcase=\"3\"app",{"_index":857,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["ngswitchcase=\"i",{"_index":1094,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["ngswitchdefault",{"_index":864,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["ngswitchdefaultselect",{"_index":858,"title":{},"body":{"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{}}}],["ngtools/webpack",{"_index":3146,"title":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["ngzone",{"_index":6595,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Zones":{},"zone/zone.html#在-Zone-内":{},"zone/zone.html#变化检测":{}}}],["ngzone&#x516c;&#x5f00;&#x4e86;&#x4e00;&#x7ec4;observable&#xff0c;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x786e;&#x5b9a;angular&#x2019;s&#x533a;&#x57df;&#x7684;&#x5f53;&#x524d;&#x72b6;&#x6001;&#x6216;&#x7a33;&#x5b9a;&#x6027;&#x3002",{"_index":6681,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["ngzone.onerror.subscrib",{"_index":6609,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["ngzone.onstable.subscrib",{"_index":6605,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["ngzone.onunstable.subscrib",{"_index":6607,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["ngzone公开了一组observable，允许我们确定angular’",{"_index":6598,"title":{},"body":{"zone/zone.html":{}}}],["nichola",{"_index":234,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["nicknam",{"_index":1806,"title":{},"body":{"ES6&TypeScript/typescript/typescript_classes.html":{}}}],["node",{"_index":1681,"title":{},"body":{"ES6&TypeScript/typescript/typeScript_start.html":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"tooling/back_end_code_sharing_and_distribution.html":{}}}],["node.j",{"_index":1906,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"tooling/command_line_javascript.html":{}}}],["node.js&#x662f;&#x4e00;&#x4e2a;javascript&#x8fd0;&#x884c;&#x65f6;&#x73af;&#x5883;&#xff0c;&#x5141;&#x8bb8;javascript&#x4ee3;&#x7801;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e4b;&#x5916;&#x4f7f;&#x7528;googl",{"_index":6218,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["node.js是一个javascript运行时环境，允许javascript代码在浏览器之外使用googl",{"_index":6210,"title":{},"body":{"tooling/command_line_javascript.html":{}}}],["node.js最初是用于在javascript中编写服务器代码，但今天它被javascript",{"_index":6216,"title":{},"body":{"tooling/command_line_javascript.html":{}}}],["node_env",{"_index":4340,"title":{},"body":{"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["node_env=product",{"_index":4338,"title":{},"body":{"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["node_modul",{"_index":1654,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["node_module/systemjs/dist/system.j",{"_index":1312,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["node_modules/.bin/ng",{"_index":2617,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["node_modules/.bin/ngc",{"_index":2536,"title":{},"body":{"i18n/import-using-aot.html":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["nodejs一起安装，并允许您访问各种第三方javascript",{"_index":6199,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html":{}}}],["noimplicitani",{"_index":1919,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["noinfo",{"_index":5150,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["non",{"_index":2216,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Immutable/object_freeze.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["none",{"_index":788,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{}}}],["nopars",{"_index":4277,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["notanact",{"_index":1658,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["note",{"_index":2727,"title":{},"body":{"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["notic",{"_index":1716,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["notif",{"_index":2440,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["notifi",{"_index":1400,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["notion",{"_index":6983,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["notsur",{"_index":1819,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["nov",{"_index":6646,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["now",{"_index":4910,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["now()).tostr",{"_index":634,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["npm",{"_index":213,"title":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}},"body":{"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/typings.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Angular-CLI/setup.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"tooling/back_end_code_sharing_and_distribution.html":{},"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{},"index.html":{},"index.html#Getting-Started":{}}}],["npm&#x5141;&#x8bb8;&#x524d;&#x540e;&#x4efb;&#x52a1;&#x7ed1;&#x5b9a;&#xff0c;&#x65b9;&#x6cd5;&#x662f;&#x5148;&#x5c06;&#x5355;&#x8bcd",{"_index":4349,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["npm&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x5728",{"_index":4342,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["npm作为依赖项安装在我们的项目中，或/和作为karma",{"_index":5124,"title":{},"body":{"Testing/karma-config.html":{}}}],["npm安装typescript",{"_index":1678,"title":{},"body":{"ES6&TypeScript/typescript/typeScript_start.html":{}}}],["npm安装的软件包使用commonj",{"_index":4171,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["npm安装软件包，并设置开发环境以检查package.json",{"_index":3325,"title":{},"body":{"Angular-CLI/adding-third-party-libraries.html":{}}}],["npm脚本内部运行npm",{"_index":4339,"title":{},"body":{"Project-setup/npm_scripts_integration.html":{}}}],["ns",{"_index":4793,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["null",{"_index":1228,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typings.html":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Immutable/what_is_immutability.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["num",{"_index":323,"title":{},"body":{"Components/responding_to_component_events.html":{},"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{}}}],["num/p",{"_index":320,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["number",{"_index":198,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Immutable/what_is_immutability.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Angular-CLI/command-overview.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["number&#x6574;&#x6570;&#xff0c;&#x6d6e;&#x70b9;&#x6570;&#xff0c",{"_index":1835,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["number:'1.4",{"_index":3309,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["numbers.reduc",{"_index":1466,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["n）是使软件和web",{"_index":2517,"title":{},"body":{"i18n/i18n.html":{}}}],["oathkeep",{"_index":935,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["object",{"_index":123,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["object&#x201d;&#x6309;&#x94ae;&#x3002",{"_index":144,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["object&apo",{"_index":812,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{}}}],["object.assign",{"_index":2462,"title":{},"body":{"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["object.freez",{"_index":2469,"title":{},"body":{"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{}}}],["object.onscheduletask",{"_index":6651,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["object/button",{"_index":6808,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["object和array",{"_index":2389,"title":{},"body":{"Immutable/immutable-js.html":{}}}],["observ",{"_index":2291,"title":{"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/observables_array_operations.html#Observables-数组操作":{}},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/observables_vs_promises.html":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Routing/query_params.html":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/zone.html":{}}}],["observa&#xff5e;bl",{"_index":6184,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["observable&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8ba2;&#x9605;&#x5b83;&#x6765;&#x83b7;&#x53d6;&#x8def;&#x7531;&#x53c2;&#x6570;&#xff08;&#x89c1",{"_index":4733,"title":{},"body":{"Routing/routeparams.html#读取路由参数":{}}}],["observable.interv",{"_index":4151,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["observable.of",{"_index":4007,"title":{},"body":{"Observables/using_observables.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["observable.of(descript",{"_index":2273,"title":{},"body":{"Http/catching-rejections.html":{}}}],["observable.of（1，2，3）.foreach（dosometh",{"_index":4004,"title":{},"body":{"Observables/using_observables.html":{}}}],["observable.throw",{"_index":2362,"title":{},"body":{"Http/catch_and_release.html":{}}}],["observableani",{"_index":4997,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["observablecount",{"_index":5911,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["observablehttpev",{"_index":2295,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["observablenumb",{"_index":5917,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["observables!/b",{"_index":3987,"title":{},"body":{"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{}}}],["observables如何在angular",{"_index":4023,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["observable中将observ",{"_index":3999,"title":{},"body":{"Observables/using_observables.html":{}}}],["observable和方法来确定angular的区域的状态，并在angular",{"_index":6596,"title":{},"body":{"zone/zone.html":{}}}],["observable完成时，promis",{"_index":4002,"title":{},"body":{"Observables/using_observables.html":{}}}],["observable时，您还可以返回自定义回调onunsubscrib",{"_index":3901,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["observable的subscrib",{"_index":4000,"title":{},"body":{"Observables/using_observables.html":{}}}],["observable运算符的默认行为是在发布.complete（）或.error",{"_index":3903,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["observable遇到错误时，promis",{"_index":4003,"title":{},"body":{"Observables/using_observables.html":{}}}],["observable，这在理解observ",{"_index":4014,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["observa～bl",{"_index":6149,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["observer.complet",{"_index":3998,"title":{},"body":{"Observables/using_observables.html":{}}}],["observer.error",{"_index":3906,"title":{},"body":{"Observables/error_handling.html":{}}}],["observer.next",{"_index":3838,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{}}}],["obsv",{"_index":3837,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["obsv.connect",{"_index":3855,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["obsv.subscrib",{"_index":3844,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["occur",{"_index":6464,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["odd",{"_index":899,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Testing/complex-actions.html":{}}}],["odd&apo",{"_index":4946,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{}}}],["odd/button",{"_index":6045,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["offici",{"_index":2671,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#Other":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["ok",{"_index":1227,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"Advanced-angular/creating_an_attribute_directive.html":{},"zone/tracking_async_operations.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ok=\"clos",{"_index":5586,"title":{},"body":{"advanced-components/access_child_components.html":{}}}],["ok=\"next",{"_index":5581,"title":{},"body":{"advanced-components/access_child_components.html":{}}}],["ok=clos",{"_index":5617,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["ok=next",{"_index":5614,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["okay",{"_index":1822,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["old",{"_index":1507,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["old&apo",{"_index":1523,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["on",{"_index":1269,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Immutable/persistent_and_transient_data_structures.html":{},"Angular-CLI/command-overview.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/routerlink.html":{},"Routing/routerlink.html#RouterLink":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["onc",{"_index":3361,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Observables/using_observables.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["onchang",{"_index":334,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["onclick",{"_index":3277,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["ondestroy",{"_index":4495,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["one&apo",{"_index":4558,"title":{},"body":{"Routing/child_routes.html#链接":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/routerlink.html":{},"Routing/routerlink.html#Navigating-Programmatically":{}}}],["one&apos;]compon",{"_index":4472,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{},"Routing/routerlink.html":{},"Routing/routerlink.html#RouterLink":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["one']\"compon",{"_index":4452,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/routeroutlet.html":{}}}],["one/a",{"_index":4453,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/routerlink.html":{},"Routing/routerlink.html#RouterLink":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["onerror",{"_index":6602,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["oninit",{"_index":3747,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["oninvoketask",{"_index":6362,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["onmicrotaskempti",{"_index":6600,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["onmousedown",{"_index":1702,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["onpush",{"_index":107,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["onpush”变化检测策略，从而减少了angular",{"_index":251,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["onscheduletask",{"_index":6356,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["onstabl",{"_index":6601,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["onsubmit",{"_index":271,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["onsubmit(myform",{"_index":258,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["onunst",{"_index":6599,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["onunsubscrib",{"_index":3894,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["onzoneerror",{"_index":6610,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["onzoneerror(error",{"_index":6613,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["onzonest",{"_index":6606,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["onzoneunst",{"_index":6608,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["opaquetoken",{"_index":432,"title":{"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["opaquetoken(nam",{"_index":460,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["open",{"_index":6864,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["oper",{"_index":1545,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/summary.html":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#测试复杂的-Actions":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["opinion",{"_index":2665,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{}}}],["opt",{"_index":1946,"title":{},"body":{"Form/getting-started.html":{},"Form/getting-started.html#入门":{}}}],["option",{"_index":2212,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Immutable/persistent_and_transient_data_structures.html":{},"further-reading.html":{},"further-reading.html#TypeScript":{},"Angular-CLI/command-overview.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["option&#x200a;&#x2014;&#x200a;th",{"_index":7094,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["orang",{"_index":754,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["order",{"_index":5914,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["origin",{"_index":1533,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"license.html":{},"license.html#Under-the-following-terms":{}}}],["original.nam",{"_index":1541,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["original.prototyp",{"_index":1548,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["originalpromisethen",{"_index":6330,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["originalpromisethen.cal",{"_index":6334,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["originalsettimeout",{"_index":6311,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["other",{"_index":6842,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["otherepisod",{"_index":924,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["otherepisodes.pop",{"_index":944,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["ourzonewatchingservic",{"_index":6604,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["out",{"_index":2764,"title":{},"body":{"practice.html":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["outerloc",{"_index":6573,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["outlet",{"_index":3662,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["outlet/rout",{"_index":3661,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["outlet:/div",{"_index":4463,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["outlin",{"_index":2490,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["output",{"_index":325,"title":{},"body":{"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Immutable/what_is_immutability.html":{},"glossary.html":{},"glossary.html#装饰器":{},"Angular-CLI/command-overview.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["outputlist",{"_index":1122,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["outstand",{"_index":6470,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["over",{"_index":2237,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["overrid",{"_index":1549,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["overridecompon",{"_index":5321,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["overridedirect",{"_index":5322,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["overridemodul",{"_index":5320,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["overridepip",{"_index":5323,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["overview",{"_index":4491,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{}}}],["overwrit",{"_index":6312,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["p",{"_index":219,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"Change-detection/how_change_detection_works.html":{}}}],["p&apo",{"_index":4132,"title":{},"body":{"Pipes/using_pipes.html#链接管道":{}}}],["p.name",{"_index":1232,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["package.json",{"_index":3347,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-an-app.html":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"tooling/back_end_code_sharing_and_distribution.html":{},"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["pad",{"_index":355,"title":{},"body":{"Components/projection.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{}}}],["page",{"_index":3364,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["page&apo",{"_index":4669,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["pagenum",{"_index":4599,"title":{},"body":{"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{}}}],["param",{"_index":1775,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Http/making_requests.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["paramet",{"_index":1477,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Routing/child_routes.html":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{}}}],["parameter1",{"_index":4122,"title":{},"body":{"Pipes/using_pipes.html":{}}}],["parameter2",{"_index":4123,"title":{},"body":{"Pipes/using_pipes.html":{}}}],["parameterdecor",{"_index":1571,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["parameterindex",{"_index":1572,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["parametervalu",{"_index":4120,"title":{},"body":{"Pipes/using_pipes.html":{}}}],["params.subscrib",{"_index":4509,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#访问父路由的参数":{}}}],["parent",{"_index":339,"title":{},"body":{"Components/responding_to_component_events.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["parent&#x2019;",{"_index":4551,"title":{},"body":{"Routing/child_routes.html#访问父路由的参数":{}}}],["parent.run",{"_index":6731,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["parent.run.appli",{"_index":6738,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["parentcount",{"_index":336,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["parentel",{"_index":2760,"title":{},"body":{"practice.html":{}}}],["parentelement.insertbefore(nativeelement.firstchild",{"_index":2766,"title":{},"body":{"practice.html":{}}}],["parentelement.removechild(nativeel",{"_index":2769,"title":{},"body":{"practice.html":{}}}],["parentrouteid",{"_index":4507,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#访问父路由的参数":{}}}],["parentzonedeleg",{"_index":6357,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["parentzonedelegate.invoketask",{"_index":6365,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["parentzonedelegate.scheduletask(targetzon",{"_index":6361,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["parent’",{"_index":4510,"title":{},"body":{"Routing/child_routes.html":{}}}],["pars",{"_index":942,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["part",{"_index":7071,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["parti",{"_index":3328,"title":{},"body":{"Angular-CLI/adding-third-party-libraries.html":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["partyzon",{"_index":1740,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["pass",{"_index":2505,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["password",{"_index":2035,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Http/catching-rejections.html":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["password.haserror(&apos;ampersandrequired&apo",{"_index":2127,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["password.haserror(&apos;needsexclamation&apo",{"_index":2113,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["password.haserror(&apos;required&apo",{"_index":2155,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["password.haserror('ampersandrequir",{"_index":2094,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{}}}],["password.haserror('needsexclam",{"_index":2080,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{}}}],["password.haserror('requir",{"_index":2145,"title":{},"body":{"Form/reactive-forms_validation.html":{}}}],["password.untouch",{"_index":2144,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["password.valid",{"_index":2143,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["pat",{"_index":1213,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/typescript/property_decorators.html":{}}}],["patch",{"_index":2338,"title":{},"body":{"Http/making_requests.html":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zone.html":{}}}],["patching&#xff08;&#x7334;&#x5b50;&#x8865;&#x4e01;&#xff09",{"_index":6676,"title":{},"body":{"zone/zone.html#Zones":{}}}],["path",{"_index":3356,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["path.resolve(__",{"_index":4192,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{}}}],["path.resolve(__dirnam",{"_index":4185,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["path/to/app.module#appmodul",{"_index":3161,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["path/to/tsconfig.json",{"_index":3159,"title":{},"body":{"Advanced-angular/aot_config.html":{}}}],["pathmatch",{"_index":3667,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{}}}],["pathmatch为’ful",{"_index":4567,"title":{},"body":{"Routing/config.html":{}}}],["patten",{"_index":874,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["patten&apo",{"_index":996,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["pattern",{"_index":2214,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["pattern)&#x5c06;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x7ed1;&#x5b9a;&#x5230;store&#x3002;&#x4e3a;&#x4e86;&#x6f14;&#x793a;&#x5b83;&#x662f;&#x5982;&#x4f55;&#x5de5;&#x4f5c;&#x7684;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x770b;&#x4e00;&#x4e2a;&#x5e26;&#x6709;&#x8ba1;&#x6570;&#x5668;&#x7ec4;&#x4ef6;&#x7684;&#x5c0f;&#x4f8b;&#x5b50;&#x3002",{"_index":6153,"title":{},"body":{"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}}}],["pattern)将我们的组件绑定到stor",{"_index":6141,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["patti",{"_index":514,"title":{},"body":{"Di/di_framework.html":{},"Di/what_is_di.html":{}}}],["patty(pattytyp",{"_index":721,"title":{},"body":{"Di/what_is_di.html":{}}}],["pattytyp",{"_index":719,"title":{},"body":{"Di/what_is_di.html":{}}}],["payload",{"_index":2268,"title":{},"body":{"Http/catching-rejections.html":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["paymentcard",{"_index":1981,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["paymentform",{"_index":2003,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["pb",{"_index":4042,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["pci",{"_index":5637,"title":{},"body":{"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{}}}],["pcount",{"_index":319,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["pcounter",{"_index":3621,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["peager",{"_index":3629,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["penguin",{"_index":1247,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#子类化":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["penguin(bird",{"_index":1252,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{}}}],["penguin.prototyp",{"_index":1350,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["penguin.prototype.constructor",{"_index":1352,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["penguin.prototype.swim",{"_index":1353,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["penguin.swim",{"_index":1254,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["penguin.walk",{"_index":1253,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["peopl",{"_index":7038,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["perceiv",{"_index":6429,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["perform",{"_index":2484,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["performance.now",{"_index":6727,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["permit",{"_index":6844,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["persist",{"_index":2473,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["person",{"_index":1223,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["person.id",{"_index":3926,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["person.nam",{"_index":1225,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["personrecord",{"_index":7042,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["pettabyt",{"_index":4051,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["pg",{"_index":2381,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["phantom",{"_index":5457,"title":{},"body":{"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{}}}],["phantomj",{"_index":5117,"title":{},"body":{"Testing/karma-config.html":{},"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{}}}],["phase",{"_index":32,"title":{},"body":{"Change-detection/additional_resources.html":{}}}],["phello",{"_index":305,"title":{},"body":{"Components/creating_components.html":{},"Components/passing_data_into_components.html":{}}}],["phenomen",{"_index":6935,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["phone",{"_index":1967,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["pi",{"_index":1298,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["pick",{"_index":6966,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["pickl",{"_index":521,"title":{},"body":{"Di/di_framework.html":{},"Di/what_is_di.html":{}}}],["pipe",{"_index":2735,"title":{},"body":{"glossary.html":{},"glossary.html#装饰器":{},"Angular-CLI/creating-other-things.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/pipes.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["pipelin",{"_index":4112,"title":{},"body":{"Pipes/pipes.html":{}}}],["pipenam",{"_index":4121,"title":{},"body":{"Pipes/using_pipes.html":{}}}],["pipetransform",{"_index":3754,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["pix",{"_index":4109,"title":{},"body":{"Pipes/pipes.html":{}}}],["pizza",{"_index":1684,"title":{},"body":{"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["place",{"_index":1748,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Angular-CLI/command-overview.html":{}}}],["plain",{"_index":6998,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["plaincreditcard.slic",{"_index":3758,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["platformbrows",{"_index":77,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["platformbrowser().bootstrapmodulefactory(appmodulengfactori",{"_index":80,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["platformbrowserdynam",{"_index":70,"title":{},"body":{"bootstrapping/file_structure.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/introduction.html":{},"Modules/introduction.html#引导应用程序":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["platformbrowserdynamic().bootstrapmodul",{"_index":84,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["platformbrowserdynamic().bootstrapmodule(appmodul",{"_index":73,"title":{},"body":{"bootstrapping/file_structure.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Modules/introduction.html":{},"Modules/introduction.html#引导应用程序":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["platformbrowserdynamictest",{"_index":5021,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["play",{"_index":3848,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["playground",{"_index":2675,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{}}}],["plazi",{"_index":3617,"title":{},"body":{"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{}}}],["pleas",{"_index":2700,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"index.html":{},"index.html#More-Informations":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["plu",{"_index":6852,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["pluck",{"_index":5913,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["plugin",{"_index":2563,"title":{},"body":{"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["plugin&apo",{"_index":4425,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["plumb",{"_index":4111,"title":{},"body":{"Pipes/pipes.html":{}}}],["podcast",{"_index":2729,"title":{},"body":{"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{}}}],["point",{"_index":6508,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["pointi",{"_index":892,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["pop",{"_index":2455,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["popul",{"_index":643,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["port",{"_index":3359,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Angular-CLI/serving-the-app.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["port是port属性中指定的数字（如果未指定，则默认值为9876",{"_index":5171,"title":{},"body":{"Testing/karma-config.html":{}}}],["possibl",{"_index":6433,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["post",{"_index":2162,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"further-reading.html#Keeping-up-to-date":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["postcss",{"_index":3154,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{}}}],["pow",{"_index":4066,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["power",{"_index":4059,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["pproduct",{"_index":4497,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{}}}],["practic",{"_index":2683,"title":{"further-reading.html#General-Coding-Practice-and-Functional-Programming":{}},"body":{"further-reading.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["pre",{"_index":1908,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["prebuild",{"_index":4337,"title":{},"body":{"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["prefer",{"_index":3346,"title":{},"body":{"Angular-CLI/command-overview.html":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["prefix",{"_index":1531,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Angular-CLI/init.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{}}}],["preload",{"_index":1649,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{}}}],["preloaders&#x6570;&#x7ec4;&#x7684;&#x5de5;&#x4f5c;&#x65b9;&#x5f0f;&#x5c31;&#x50cf;&#x52a0;&#x8f7d;&#x5668;&#x6570;&#x7ec4;&#x4e00;&#x6837;&#xff0c;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684;&#x4efb;&#x52a1;&#x94fe;&#xff0c;&#x5728;loader&#x4efb;&#x52a1;&#x94fe;&#x4e4b;&#x524d;&#x6267;&#x884c;&#x3002",{"_index":4324,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["preloaders数组的工作方式就像加载器数组一样，它是一个单独的任务链，在load",{"_index":4282,"title":{},"body":{"Project-setup/loaders.html":{}}}],["preprocessor",{"_index":5112,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["present",{"_index":370,"title":{},"body":{"Components/structuring_applications_with_components.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["preserv",{"_index":7069,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["press",{"_index":3322,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{}}}],["prevent",{"_index":5151,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["preview",{"_index":6862,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["previous",{"_index":2238,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["previousactor",{"_index":122,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{}}}],["previousactorfirstnam",{"_index":185,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["previousactorlastnam",{"_index":187,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["previousslogan",{"_index":117,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{}}}],["previoustitl",{"_index":121,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{}}}],["price",{"_index":4115,"title":{},"body":{"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["price&apo",{"_index":4130,"title":{},"body":{"Pipes/using_pipes.html#链接管道":{}}}],["primit",{"_index":536,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["print",{"_index":1470,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"tooling/command_line_javascript.html":{},"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["printout",{"_index":1617,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["printoutput",{"_index":1613,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["pristin",{"_index":2242,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["privat",{"_index":392,"title":{},"body":{"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/what_is_di.html":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"practice.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"zone/zone.html":{},"zone/zone.html#在-Zone-内":{}}}],["pro",{"_index":6240,"title":{},"body":{"tooling/source_control.html":{},"tooling/source_control.html#源码控制：Git":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["probabl",{"_index":7045,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["problem",{"_index":2137,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["proceed",{"_index":6472,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["process",{"_index":6950,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["product",{"_index":2712,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routeparams.html#读取路由参数":{}}}],["product.id",{"_index":4707,"title":{},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#链接到带参数的路由":{}}}],["product.nam",{"_index":4708,"title":{},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#链接到带参数的路由":{}}}],["productdetail",{"_index":4494,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#读取路由参数":{}}}],["productlist",{"_index":4493,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#链接到带参数的路由":{}}}],["productpric",{"_index":4118,"title":{},"body":{"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{}}}],["profil",{"_index":273,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["profile.nam",{"_index":274,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["profilecompon",{"_index":277,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["program",{"_index":2684,"title":{"further-reading.html#General-Coding-Practice-and-Functional-Programming":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}},"body":{"further-reading.html":{},"further-reading.html#General-Coding-Practice-and-Functional-Programming":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["programmat",{"_index":4713,"title":{"Routing/routerlink.html#Navigating-Programmatically":{}},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routerlink.html":{}}}],["progress",{"_index":2348,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["project",{"_index":359,"title":{},"body":{"Components/projection.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Angular-CLI/command-overview.html":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["projectlist",{"_index":5801,"title":{},"body":{"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["promis",{"_index":1287,"title":{},"body":{"ES6&TypeScript/es6/es6.html":{},"ES6&TypeScript/es6/es6.html#ES6":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/observables_vs_promises.html":{},"Observables/using_observables.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["promise.prototype.then",{"_index":6329,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["promise.then",{"_index":6439,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["promises。（promis",{"_index":6497,"title":{},"body":{"zone/tracking_async_operations.html":{}}}],["promises和observ",{"_index":3974,"title":{},"body":{"Observables/observables_vs_promises.html":{}}}],["promises需要调用者访问返回promis",{"_index":3976,"title":{},"body":{"Observables/observables_vs_promises.html":{}}}],["promise，事件，集合或使用api上可用的许多运算符创建observ",{"_index":4015,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["promise，我们可以从测试中返回一个promis",{"_index":4931,"title":{},"body":{"Testing/complex-actions.html":{}}}],["promiss",{"_index":6451,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["prone",{"_index":6989,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["properli",{"_index":5924,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["properti",{"_index":114,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detector_classes.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Immutable/lists.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["properties&#x201d;&#x6309;&#x94ae;&#x65f6;&#x89c6;&#x56fe;&#x4e0d;&#x4f1a;&#x53d1;&#x751f;&#x4efb;&#x4f55;&#x53d8;&#x5316;&#x3002",{"_index":131,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["properties/button",{"_index":6806,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["propertydecor",{"_index":1565,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["propertykey",{"_index":1566,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["propertynam",{"_index":2189,"title":{},"body":{"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["protect",{"_index":1807,"title":{},"body":{"ES6&TypeScript/typescript/typescript_classes.html":{}}}],["prototyp",{"_index":1347,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["prototype.then",{"_index":6331,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["protractor",{"_index":3362,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["protractor.conf.j",{"_index":3396,"title":{},"body":{"Angular-CLI/testing.html":{}}}],["prove",{"_index":7046,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["provid",{"_index":88,"title":{},"body":{"bootstrapping/bootstrapping_providers.html":{},"Di/angular2_di.html":{},"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Http/http.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Immutable/maps_are_iterable.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"plus.html":{},"plus.html#插件":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["providedfeatur",{"_index":2444,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["providedfeatures.push(featur",{"_index":2445,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["psecond",{"_index":4138,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["ptotal",{"_index":4116,"title":{},"body":{"Pipes/using_pipes.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["public",{"_index":96,"title":{},"body":{"Change-detection/Change_Detection.html":{},"Change-detection/change_detector_classes.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Pipes/pipes.html":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{},"Change-detection/how_change_detection_works.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["publicpath",{"_index":4188,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["publish",{"_index":3852,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["punch(pow",{"_index":1755,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["puncher",{"_index":1754,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["punctuat",{"_index":2090,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["punctuationvalid",{"_index":2088,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["purchas",{"_index":6976,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["purchase(paymentform",{"_index":2004,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["purchaser.j",{"_index":6985,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["pure",{"_index":4141,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["purescript",{"_index":7077,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["purpos",{"_index":6826,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["push",{"_index":2415,"title":{},"body":{"Immutable/lists.html":{}}}],["pushpa",{"_index":1226,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["put",{"_index":2337,"title":{},"body":{"Http/making_requests.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["pyour",{"_index":3748,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["q",{"_index":2333,"title":{},"body":{"Http/making_requests.html":{}}}],["queri",{"_index":4600,"title":{},"body":{"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["querylist",{"_index":5579,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["querylistalertcompon",{"_index":5589,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["queryparam",{"_index":4596,"title":{},"body":{"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{}}}],["queue",{"_index":6435,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["quick",{"_index":2703,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["quickli",{"_index":6851,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["quora",{"_index":2939,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["quot",{"_index":4857,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quote&#x2019;&#x3002;&#x5982;&#x679c;&#x662f;&#xff0c;&#x5219;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x901a;&#x8fc7;&#x6d4b;&#x8bd5;&#x5e76;&#x6309;&#x9884;&#x671f;&#x5de5;&#x4f5c;&#xff1b;&#x5982;&#x679c;&#x6ca1;&#x6709;&#xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x4e0d;&#x6b63;&#x786e;&#x5730;&#x8f93;&#x51fa;&#x5f15;&#x53f7;&#x3002",{"_index":5086,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quote&apo",{"_index":4882,"title":{},"body":{"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quote.compon",{"_index":4863,"title":{},"body":{"Testing/async.html":{},"Testing/injecting-dependencies.html":{}}}],["quote.component.t",{"_index":5017,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quote.servic",{"_index":4856,"title":{},"body":{"Testing/async.html":{},"Testing/injecting-dependencies.html":{}}}],["quote.spec.t",{"_index":5018,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quote/h3",{"_index":4859,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quotecompon",{"_index":4854,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quotecomponent&#xff0c",{"_index":4889,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["quoteservic",{"_index":4855,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["quoteservice.getquote().then",{"_index":4862,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["r",{"_index":203,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["radiu",{"_index":1275,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["random",{"_index":558,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["randomfactori",{"_index":556,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["rangl",{"_index":3255,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{},"README.html":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["rangle&#x2019;",{"_index":6874,"title":{"README.html#Rangle’s-Angular-2-Training-Book":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}},"body":{}}],["rangle&#x5728;&#x8fd9;&#x91cc;&#x521b;&#x5efa;&#x4e86;&#x81ea;&#x5df1;&#x7684;&#x5217;&#x8868;&#xff0c;&#x5e76;&#x4e14;&#x8fd8;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x4f7f;&#x7528;aot&#x6d4b;&#x8bd5;&#x529f;&#x80fd;&#x7684;&#x6c99;&#x76d2;&#x3002",{"_index":3217,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["rangle&#x7684;&#x57f9;&#x8bad;&#x8bfe;&#x7a0b",{"_index":6887,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["rangle.io",{"_index":3273,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{},"README.html":{}}}],["rangle.io&#x8fd8;&#x6709;&#x4e00;&#x672c",{"_index":6890,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["rangle’",{"_index":6866,"title":{},"body":{"README.html":{}}}],["rangle在这里创建了自己的列表，并且还提供了一个用于使用aot",{"_index":3207,"title":{},"body":{"Advanced-angular/aot_limitations.html":{}}}],["rate",{"_index":2380,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/nested-objects.html":{}}}],["raw",{"_index":1513,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{}}}],["re",{"_index":2283,"title":{},"body":{"Http/http.html":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["reach",{"_index":11,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{}}}],["react",{"_index":2641,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["react&#x200a;&#x2014;&#x4e2d;&#x65ad;&#x652f;&#x6301;&#x5f88;&#x5feb;&#xff0c;&#x4fdd;&#x6301;&#x66f4;&#x65b0;&#x662f;&#x5f88;&#x56f0;&#x96be;&#x7684",{"_index":2900,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["react&#x662f;&#x4e00;&#x4e2a",{"_index":2843,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["react&#x672c;&#x8eab;&#x662f;&#x4ee4;&#x4eba;&#x60ca;&#x8bb6;&#x7684;&#xff0c;&#x5728;&#x6211;&#x4eec;&#x7684;&#x56e2;&#x961f;&#x4e2d;&#x6ca1;&#x6709;&#x4e00;&#x4e2a;&#x5173;&#x4e8e;react&#x672c;&#x8eab;&#x7684;&#x610f;&#x89c1;&#x3002;&#x4e0d;&#x5e78;&#x7684;&#x662f;&#xff0c;&#x6211;&#x4eec;&#x9009;&#x62e9;&#x7684;&#x5e93;&#x5374;&#x4e0d;&#x53ef;&#x540c;&#x65e5;&#x800c;&#x8bed;&#x3002;&#x4f46;&#x8fd9;&#x662f;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x7684;&#x9519;&#x8bef;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x5bf9;&#x4f60;&#x7684;&#x521d;&#x59cb;&#x9009;&#x62e9;&#x66f4;&#x52a0;&#x8c28;&#x614e;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x907f;&#x514d;&#x8fd9;&#x4e9b;&#x95ee;&#x9898;&#x3002;&#x7136;&#x800c;&#xff0c;&#x603b;&#x662f;&#x5b58;&#x5728;&#x4f60;&#x6b63;&#x5728;&#x4f7f;&#x7528;&#x7684;&#x5e93;&#x88ab;&#x5e9f;&#x5f03;&#x7684;&#x98ce;&#x9669;&#x3002",{"_index":2864,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["react&#x7528;&#x4e8e;&#x6211;&#x4eec;&#x7684;&#x4f01;&#x4e1a;&#x7ea7;&#x5e94;&#x7528;&#x5f00;&#x53d1",{"_index":2815,"title":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}},"body":{}}],["reactiv",{"_index":2687,"title":{"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["reactiveformsmodul",{"_index":1948,"title":{},"body":{"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["react中构建一个应用程序时，我们真的喜欢这个库。我们对所有的可能性感到兴奋，前期学习远低于angular。当我们开始构建我们的第一个react",{"_index":2793,"title":{},"body":{"vs_react.html":{}}}],["react和angular",{"_index":2808,"title":{},"body":{"vs_react.html":{}}}],["react库，现在我必须决定所有其他将要用到的支持库：路由，model",{"_index":2788,"title":{},"body":{"vs_react.html":{}}}],["react本身是令人惊讶的，在我们的团队中没有一个关于react",{"_index":2799,"title":{},"body":{"vs_react.html":{}}}],["react来快速创建一个mvp",{"_index":2795,"title":{},"body":{"vs_react.html":{}}}],["read",{"_index":2710,"title":{"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["readabl",{"_index":2670,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"license.html":{},"license.html#License":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["reader",{"_index":7027,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["readonli",{"_index":1714,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/example_application.html":{},"state-management/example_application.html#示例应用":{}}}],["real",{"_index":4711,"title":{},"body":{"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["realiz",{"_index":6993,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["realli",{"_index":7017,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["reason",{"_index":2382,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["rebuild",{"_index":3352,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["receiv",{"_index":2352,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["recip",{"_index":555,"title":{},"body":{"Di/injection_beyond_classes.html":{}}}],["record",{"_index":7040,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["red",{"_index":760,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_style_directive.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["redirectto",{"_index":3666,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{}}}],["redistribut",{"_index":6821,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["reduc",{"_index":1469,"title":{"Testing/reducers.html#测试-Reducers":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"Immutable/lists.html":{},"Immutable/maps_are_iterable.html":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/redux.html":{},"Testing/redux.html#测试-Redux":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux.html":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"state-management/using_redux_with_components.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["reducer&#x662f;&#x4e00;&#x4e2a;&#x5e26;&#x6709;&#x7b7e;&#x540d",{"_index":5965,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["reducer&#x662f;&#x4e00;&#x4e2a;&#x5e26;&#x7b7e;&#x540d;&#x7684;&#x51fd;&#x6570",{"_index":6118,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["reducer&#x7684;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x793a;&#x4f8b;&#x662f;sum&#x51fd;&#x6570;&#xff1a",{"_index":6123,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["reducer&apo",{"_index":5770,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["reducer.t",{"_index":5975,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["reducers&#x5e94;&#x8be5;&#x662f;&#x7eaf;&#x51fd;&#x6570;&#xff0c;&#x610f;&#x5473;&#x7740;&#x5b83;&#x4eec;&#x4e0d;&#x4ea7;&#x751f;&#x4efb;&#x4f55;&#x526f;&#x4f5c;&#x7528;&#x3002",{"_index":6122,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["reducers&apo",{"_index":5355,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["reducer操作是同步的，这使我们的全局状态容易跟踪，同时也是为什么redux",{"_index":5343,"title":{},"body":{"Testing/reducers.html":{}}}],["reducer时的另一个考虑因素是确保它们是不可变的，而不是修改应用程序的状态。如果您改变应用程序状态，它可能会导致意外的行为。有几种方法可以帮助维护reducer的不变性。一种方法是使用es6",{"_index":5978,"title":{},"body":{"state-management/reducers_as_state_management.html":{}}}],["reducer的一个简单示例是sum",{"_index":6116,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html":{}}}],["reducer相同，我们只是想创建一个新的reduc",{"_index":6038,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["reducer，其中每个属性将指向其中一个较小的reduc",{"_index":5790,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html":{}}}],["reducer，就可以配置angular",{"_index":5740,"title":{},"body":{"state-management/configuring_your_application.html":{}}}],["redux",{"_index":2716,"title":{"further-reading.html#Redux-and-ngrx":{},"Testing/redux.html#测试-Redux":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{},"state-management/redux.html#Redux-和-Ngrx":{},"state-management/redux.html#什么是-Redux":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"Testing/after-thoughts.html":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/karma-config.html#完成配置":{},"Testing/karma-config.html#其他资源":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/redux.html":{},"Testing/setup.html":{},"Testing/setup.html#测试设置":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"Testing/typings.html":{},"Testing/typings.html#Typings":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/defining_your_main_application_state.html":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/state-management.html":{},"state-management/state-management.html#状态管理":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["redux#th",{"_index":6140,"title":{},"body":{"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}}}],["redux&#x2019;",{"_index":5787,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["redux&#x201c;&#x9009;&#x62e9;&#x6a21;&#x5f0f;&#x201d;&#x6837;&#x5f0f;&#x4e0",{"_index":6181,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["redux&#x4f7f;&#x7528;&#x4e00;&#x4e2a;&#x79f0;&#x4e3a;actions&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x5b83;&#x63cf;&#x8ff0;&#x4e86;&#x5bf9;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x72b6;&#x6001;&#x66f4;&#x6539;&#x3002",{"_index":5716,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["redux&#x548c;&#x7ec4;&#x4ef6;&#x67b6;&#x6784",{"_index":6064,"title":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}},"body":{}}],["redux&#x5728;&#x5176;&#x751f;&#x6001;&#x7cfb;&#x7edf;&#x4e2d;&#x63d0;&#x4f9b;&#x4e86;&#x8bb8;&#x591a;&#x5de5;&#x5177;&#x548c;&#x4e2d;&#x95f4;&#x4ef6;&#xff0c;&#x4ee5;&#x4fc3;&#x8fdb;&#x4f18;&#x96c5;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5f00;&#x53d1;&#x3002",{"_index":5833,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["redux&#x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":6169,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["redux&#x5c06;&#x67e5;&#x627e;&#x4e0e;&#x7c7b;&#x53d8;&#x91cf;&#x540d;&#x79f0;&#x76f8;&#x540c;&#x7684;store&#x5c5e;&#x6027;&#x3002;&#x5b83;&#x7701;&#x7565;&#x4e86;&#x5c3e;&#x968f;&#x7684",{"_index":6172,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["redux&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684;reducer&#x4e0d;&#x5e94;&#x8be5;&#x6539;&#x53d8;state&#xff0c;&#x800c;&#x662f;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x526f;&#x672c;&#xff0c;&#x5e76;&#x4e14;&#x65e0;&#x526f;&#x4f5c;&#x7528;&#x3002",{"_index":5991,"title":{},"body":{"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}}}],["redux&#x662f;javascript&#x5e94;&#x7528;&#x7684;&#x72b6;&#x6001;&#x7ba1;&#x7406;&#x5668;&#xff0c;&#x5e76;&#x901a;&#x8fc7;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x5177;&#x6709;&#x5355;&#x5411;&#x6570;&#x636e;&#x6d41;&#x6765;&#x4fdd;&#x6301;flux&#x67b6;&#x6784;&#x7684;&#x6838;&#x5fc3;&#x539f;&#x7406;&#x3002",{"_index":6011,"title":{},"body":{"state-management/redux.html#什么是-Redux":{}}}],["redux&#x7684",{"_index":6151,"title":{},"body":{"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}}}],["redux&#x7684;&#x4e00;&#x4e2a;&#x529f;&#x80fd;&#xff0c;&#x5b83;&#x65e8;&#x5728;&#x5e2e;&#x52a9;&#x60a8;&#x4ee5;&#x58f0;&#x660e;&#x65b9;&#x5f0f;&#x5c06",{"_index":6167,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["redux&#x7684;&#x6838;&#x5fc3;&#x6982;&#x5ff5;&#x4e4b;&#x4e00;&#x662f;reducer&#x3002",{"_index":5964,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["redux&#x7684;&#x72b6;&#x6001;&#x7ba1;&#x7406;&#x5f88;&#x53d7;&#x6b22;&#x8fce;&#xff0c;&#x5e76;&#x4e14;&#x542f;&#x53d1;&#x4e86",{"_index":6014,"title":{},"body":{"state-management/redux.html#What-is-Ngrx":{}}}],["redux&apo",{"_index":4227,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["redux.dispatch",{"_index":4904,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["redux.getst",{"_index":4903,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{}}}],["redux/ng2",{"_index":6139,"title":{},"body":{"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}}}],["redux’",{"_index":5775,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{}}}],["redux中，reduc",{"_index":4768,"title":{},"body":{"Testing/after-thoughts.html":{}}}],["redux使用一个称为act",{"_index":5706,"title":{},"body":{"state-management/actions.html":{}}}],["redux和@ngrx",{"_index":6009,"title":{},"body":{"state-management/redux.html":{}}}],["redux和ngrx",{"_index":5823,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{}}}],["redux将查找与类变量名称相同的stor",{"_index":6146,"title":{},"body":{"state-management/using_redux_with_components.html":{}}}],["redux应用程序中的reducer不应该改变st",{"_index":5973,"title":{},"body":{"state-management/reducers_as_state_management.html":{}}}],["redux应用程序都有一组功能，称为“act",{"_index":5846,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["redux是javascript应用的状态管理器，并通过在应用程序中具有单向数据流来保持flux",{"_index":6005,"title":{},"body":{"state-management/redux.html":{}}}],["redux的核心概念之一是reduc",{"_index":5958,"title":{},"body":{"state-management/reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html":{}}}],["redux，st",{"_index":6019,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["redux，你可以将一系列事件重播到reduc",{"_index":5972,"title":{},"body":{"state-management/reducers_as_state_management.html":{}}}],["ref.childnodes.length",{"_index":2773,"title":{},"body":{"practice.html":{}}}],["refactor",{"_index":5927,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["refcount",{"_index":3857,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["refer",{"_index":939,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Immutable/persistent_and_transient_data_structures.html":{},"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"practice.html":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["reflect",{"_index":4179,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["refng",{"_index":2774,"title":{},"body":{"practice.html":{}}}],["regex",{"_index":2221,"title":{},"body":{"Form/validating_forms.html":{}}}],["regex&#x8bed;&#x6cd5;&#x7684;&#x4e00;&#x4e2a;&#x4e0d;&#x592a;&#x5f3a;&#x5927;&#x7684;&#x7248;&#x672c;&#x3002",{"_index":2229,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["region",{"_index":1976,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["regist",{"_index":2163,"title":{"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["register(form",{"_index":2187,"title":{},"body":{"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["register(signupform",{"_index":2184,"title":{},"body":{"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["registeruser(form",{"_index":2171,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{}}}],["registeruser(signupform",{"_index":2168,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{}}}],["registr",{"_index":454,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["reinforc",{"_index":7002,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["reject",{"_index":4006,"title":{},"body":{"Observables/using_observables.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["relationship",{"_index":6567,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["releas",{"_index":2397,"title":{},"body":{"Immutable/lists.html":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["reli",{"_index":7015,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["reliabl",{"_index":6948,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["reload",{"_index":2678,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{}}}],["remain",{"_index":7062,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["remap",{"_index":5129,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["remapistanbulreport",{"_index":5159,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["remix",{"_index":6825,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["remov",{"_index":2749,"title":{},"body":{"practice.html":{}}}],["removecom",{"_index":1920,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["removehost",{"_index":2754,"title":{},"body":{"practice.html":{}}}],["renam",{"_index":6947,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["render",{"_index":2752,"title":{},"body":{"practice.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone_primer.html":{},"zone/zone_primer.html#Why":{}}}],["renderer.setelementstyl",{"_index":3286,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["renderer.setelementstyle(el.nativeel",{"_index":3399,"title":{},"body":{"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["repeat",{"_index":5936,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["repeatedli",{"_index":5951,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["repl&#xff08;read",{"_index":6220,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["replac",{"_index":6962,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["repl（read",{"_index":6213,"title":{},"body":{"tooling/command_line_javascript.html":{}}}],["repo",{"_index":2672,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{}}}],["report",{"_index":5113,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["reportprogress",{"_index":2340,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["repositori",{"_index":6857,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["repres",{"_index":6499,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["req.clon",{"_index":2297,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["req.headers.set",{"_index":2298,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{}}}],["request",{"_index":2256,"title":{},"body":{"Http/cancel_request.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Observables/using_observables_from_other_sources.html":{}}}],["request.unsubscrib",{"_index":2264,"title":{},"body":{"Http/cancel_request.html":{}}}],["request.url",{"_index":5274,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["requestmethod",{"_index":5262,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["requir",{"_index":2142,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["require(&apos;./src/index.ts&apo",{"_index":4172,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{}}}],["require(&apos;ts!./src/index.ts&apo",{"_index":4266,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{}}}],["require(&apos;ts!tslint!./src/index.ts&apo",{"_index":4267,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{}}}],["require(&apos;zone.js/dist/long",{"_index":6623,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["require).context(&apos;./&apo",{"_index":5139,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["requirej",{"_index":1304,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["require调用，使用regex",{"_index":5137,"title":{},"body":{"Testing/karma-config.html":{}}}],["res.json()).subscrib",{"_index":2284,"title":{},"body":{"Http/http.html":{}}}],["reset",{"_index":5850,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}}}],["resolut",{"_index":1903,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["resolv",{"_index":4005,"title":{},"body":{"Observables/using_observables.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/route_guards.html":{},"Routing/route_guards.html#路由拦截":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["resolve,reject",{"_index":4928,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{}}}],["resourc",{"_index":3150,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#AoT-配置":{}}}],["respond",{"_index":5277,"title":{},"body":{"Testing/mockbackend.html":{}}}],["respons",{"_index":1770,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["response.json",{"_index":2365,"title":{},"body":{"Http/catch_and_release.html":{},"Http/retry.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["responseopt",{"_index":4782,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["responseoptions&#xff0c",{"_index":5308,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["rest",{"_index":1476,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["restor",{"_index":6314,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["restrict",{"_index":290,"title":{},"body":{"Components/components.html":{},"license.html":{},"license.html#Under-the-following-terms":{}}}],["result",{"_index":330,"title":{},"body":{"Components/responding_to_component_events.html":{},"Http/cancel_request.html":{},"Testing/alt-http-mocking.html":{},"Testing/mockbackend.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["result.artists.item",{"_index":2260,"title":{},"body":{"Http/cancel_request.html":{}}}],["result.emit",{"_index":332,"title":{},"body":{"Components/responding_to_component_events.html":{}}}],["results&apo",{"_index":4831,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["retest",{"_index":3353,"title":{},"body":{"Angular-CLI/command-overview.html":{}}}],["retri",{"_index":2319,"title":{},"body":{"Http/http_with_rxjs.html":{},"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{},"Http/retry.html":{}}}],["retrycount",{"_index":2467,"title":{},"body":{"Http/retry.html":{}}}],["return",{"_index":522,"title":{},"body":{"Di/di_framework.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typings.html":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Http/catching-rejections.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Immutable/lists.html":{},"Immutable/maps_are_iterable.html":{},"Http/retry.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/route_guards.html#异步路由哨兵":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["reverse().join",{"_index":4035,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["reversed:/b",{"_index":4028,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["revisit",{"_index":2489,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["revok",{"_index":6829,"title":{},"body":{"license.html":{},"license.html#You-are-free-to":{}}}],["rewrit",{"_index":6964,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["rey",{"_index":2374,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["rich",{"_index":6936,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ridley",{"_index":2373,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["right",{"_index":3338,"title":{},"body":{"Angular-CLI/command-overview.html":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["rigid",{"_index":7036,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["rimraf",{"_index":4336,"title":{},"body":{"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["ring",{"_index":2396,"title":{},"body":{"Immutable/lists.html":{}}}],["rio",{"_index":267,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Components/app_structure_with_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Modules/directive-duplications.html":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{}}}],["riski",{"_index":6928,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["role",{"_index":3315,"title":{},"body":{"Advanced-angular/setting_properties_in_a_directive.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["root",{"_index":50,"title":{},"body":{"bootstrapping/file_structure.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Modules/introduction.html":{},"Modules/lazy-loading-module.html":{},"Modules/multiple-elements.html":{},"Pipes/custom_pipes.html":{},"Pipes/stateful_and_async_pipes.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"advanced-components/access_child_components.html":{},"advanced-components/elementref.html":{},"state-management/creating_your_applications_root_reducer.html":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["root&apo",{"_index":977,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html#ElementRef":{}}}],["rootloc",{"_index":6488,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["rootlocationrestor",{"_index":6490,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["rootreduc",{"_index":5744,"title":{},"body":{"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{},"state-management/creating_your_applications_root_reducer.html":{},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["rootzon",{"_index":6258,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["rootzone&#x548c;attach&#x5c5e;&#x6027",{"_index":6277,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["rootzone.fork",{"_index":6263,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["rootzone.run",{"_index":6561,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["rootzone和attach",{"_index":6261,"title":{},"body":{"zone/context_propagation.html":{}}}],["rose",{"_index":928,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["rose&apo",{"_index":985,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["round",{"_index":4060,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["round(siz",{"_index":4068,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["rout",{"_index":2984,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/creating-routes.html":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/redirects.html":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routerlink.html":{},"Routing/routerlink.html#Navigating-Programmatically":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["route.params.subscrib",{"_index":4504,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["router",{"_index":2724,"title":{},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#声明路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["router.navig",{"_index":4598,"title":{},"body":{"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#链接到带参数的路由":{}}}],["router.routerstate.par",{"_index":4508,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#访问父路由的参数":{}}}],["routerlink",{"_index":4456,"title":{"Routing/routerlink.html#RouterLink":{}},"body":{"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"Routing/query_params.html":{},"Routing/query_params.html#传递查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#链接到带参数的路由":{},"Routing/routerlink.html":{},"Routing/routerlink.html#RouterLink":{}}}],["routerlink=\"eager\"eager/a",{"_index":3659,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["routerlink=\"lazy\"lazy/a",{"_index":3660,"title":{},"body":{"Modules/lazy-loading-module.html":{}}}],["routerlink=eagereager/a",{"_index":3692,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["routerlink=lazylazy/a",{"_index":3693,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["routerlink]=\"['/compon",{"_index":4451,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/routeroutlet.html":{}}}],["routerlink]=\"['overview']\"overview/a",{"_index":4499,"title":{},"body":{"Routing/child_routes.html":{}}}],["routerlink]=\"['specs']\"techn",{"_index":4500,"title":{},"body":{"Routing/child_routes.html":{}}}],["routerlink]=[&apos;/compon",{"_index":4471,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{},"Routing/routerlink.html":{},"Routing/routerlink.html#RouterLink":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["routerlink]=[&apos;overview&apos;]overview/a",{"_index":4540,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["routerlink]=[&apos;specs&apos;]techn",{"_index":4541,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["routermodul",{"_index":3664,"title":{"Routing/config.html#RouterModule":{}},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["routermodule.forchild(rout",{"_index":3675,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["routermodule.forroot",{"_index":4570,"title":{},"body":{"Routing/config.html":{},"Routing/config.html#RouterModule":{}}}],["routermodule.forroot(rout",{"_index":3671,"title":{},"body":{"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Routing/config.html":{},"Routing/config.html#RouterModule":{},"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["routeroutlet",{"_index":4744,"title":{},"body":{"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["routerstatesnapshot",{"_index":4640,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["rti",{"_index":238,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["rubl",{"_index":101,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["rule",{"_index":3157,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Angular-CLI/command-overview.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["run",{"_index":3349,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["run()&#x5757;&#x65f6;&#xff0c;&#x8c03;&#x7528;invok",{"_index":6782,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["run()块时，调用invok",{"_index":6746,"title":{},"body":{"zone/zoneDelegate.html":{}}}],["run(...argu",{"_index":6734,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["run1",{"_index":6482,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["run1()[zonea",{"_index":6494,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["runoutsideangular",{"_index":6617,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#变化检测":{}}}],["runtim",{"_index":3110,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["russia",{"_index":100,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["rxj",{"_index":2316,"title":{"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}},"body":{"Http/http_with_rxjs.html":{},"Http/retry.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Observables/cold_vs_hot_observables.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/state-management.html":{},"state-management/using_redux_with_components.html":{}}}],["rxjs&#xff08;&#x63a8;&#x8350;&#xff09",{"_index":6137,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["rxjs/add/observable/of",{"_index":4783,"title":{},"body":{"Testing/alt-http-mocking.html":{}}}],["rxjs/add/operator/filt",{"_index":4024,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["rxjs/add/operator/map",{"_index":2330,"title":{},"body":{"Http/making_requests.html":{},"Observables/using_observables_from_other_sources.html":{}}}],["rxjs/observ",{"_index":2292,"title":{},"body":{"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Observables/using_observables.html":{},"Testing/alt-http-mocking.html":{}}}],["rxjs/rx",{"_index":2358,"title":{},"body":{"Http/catch_and_release.html":{},"Http/retry.html":{},"Observables/using_observables_from_other_sources.html":{},"state-management/configuring_your_application.html":{}}}],["rxjs的模型用于处理action",{"_index":5824,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{}}}],["rxmarbl",{"_index":2702,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Observables/summary.html":{}}}],["rxmarbles.com",{"_index":3932,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["s",{"_index":6863,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["sa",{"_index":3743,"title":{},"body":{"Modules/modules.html":{},"Modules/modules.html#模块":{},"license.html":{},"license.html#License":{}}}],["safe",{"_index":5926,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["saga",{"_index":5829,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["sake",{"_index":940,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["sam",{"_index":1216,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/template_strings.html":{}}}],["same",{"_index":119,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["samplehello",{"_index":2590,"title":{},"body":{"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["san",{"_index":778,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["sat",{"_index":1866,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["save",{"_index":215,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/typings.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Routing/route_guards.html":{},"state-management/adding_ngrx_to_your_project.html":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["saveformsguard",{"_index":4631,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#在路由上注册路由哨兵":{},"Routing/route_guards.html#实现-CanDeactivate":{}}}],["savkin",{"_index":29,"title":{},"body":{"Change-detection/additional_resources.html":{}}}],["say",{"_index":6405,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["say(b",{"_index":1926,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["saynam",{"_index":1280,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["sayname(jan",{"_index":1282,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["sayname(john",{"_index":1283,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["scale",{"_index":1459,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["schedul",{"_index":6347,"title":{"zone/task_scheduling.html#Task-Scheduling":{}},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["scheduletask",{"_index":6351,"title":{},"body":{"zone/task_scheduling.html":{}}}],["school",{"_index":2990,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["schwarzenegg",{"_index":231,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["sci",{"_index":2383,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["scope",{"_index":292,"title":{},"body":{"Components/components.html":{},"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"why_angular_2.html":{}}}],["scope1",{"_index":1200,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["scope2",{"_index":1204,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["script",{"_index":1310,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"Angular-CLI/command-overview.html":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["script/task",{"_index":6412,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["search",{"_index":2255,"title":{},"body":{"Http/cancel_request.html":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["search&apo",{"_index":4844,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["search(term",{"_index":2331,"title":{},"body":{"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["searchfield.valu",{"_index":2258,"title":{},"body":{"Http/cancel_request.html":{}}}],["searchinfo",{"_index":4790,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["searchservic",{"_index":2325,"title":{},"body":{"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{}}}],["searchservice.search",{"_index":2257,"title":{},"body":{"Http/cancel_request.html":{}}}],["searchwiki",{"_index":4784,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html":{},"Testing/async-execution.html#异步执行测试":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["searchwiki.search",{"_index":4815,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["searchwiki.setfoo",{"_index":5270,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["searchxml(term",{"_index":5001,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["second",{"_index":4139,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["section",{"_index":253,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Components/projection.html":{},"a11y/why-a11y.html":{},"a11y/why-a11y.html#无障碍法":{}}}],["see",{"_index":2499,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Routing/config.html":{},"Routing/config.html#路由定义对象":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现CanActivate":{},"Routing/route_guards.html#实现-CanDeactivate":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["seed",{"_index":6848,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["seed.git",{"_index":6860,"title":{},"body":{"index.html":{},"index.html#Getting-Started":{}}}],["seem",{"_index":7006,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["select",{"_index":364,"title":{},"body":{"Components/projection.html":{},"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["select=\"footer\"/ng",{"_index":362,"title":{},"body":{"Components/projection.html":{}}}],["select=\"header\"/ng",{"_index":361,"title":{},"body":{"Components/projection.html":{}}}],["selector",{"_index":48,"title":{"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}},"body":{"bootstrapping/file_structure.html":{},"Change-detection/enforcing_immutability.html":{},"Components/access_child_components_from_template.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"practice.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"Change-detection/how_change_detection_works.html":{}}}],["selector、templ",{"_index":303,"title":{},"body":{"Components/creating_components.html":{}}}],["sell",{"_index":6922,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["semant",{"_index":5562,"title":{},"body":{"a11y/key-concerns.html":{},"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["semi",{"_index":6926,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["send",{"_index":2435,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["sendrequest",{"_index":1771,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["seo",{"_index":6898,"title":{},"body":{"a11y/why-a11y.html":{}}}],["separ",{"_index":5932,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["sequenc",{"_index":4009,"title":{},"body":{"Observables/using_observables.html":{}}}],["seriesnumb",{"_index":2411,"title":{},"body":{"Immutable/lists.html":{}}}],["serif",{"_index":779,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{}}}],["serv",{"_index":3357,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Angular-CLI/serving-the-app.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["server",{"_index":2616,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Angular-CLI/command-overview.html":{},"index.html":{},"index.html#Getting-Started":{}}}],["serverrequest",{"_index":1399,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["servic",{"_index":545,"title":{"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}},"body":{"Di/inject_and_injectable.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Angular-CLI/creating-other-things.html":{},"Routing/route_guards.html":{},"Testing/alt-http-mocking.html":{},"Testing/mockbackend.html":{},"state-management/configuring_your_application.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/state-management.html":{},"state-management/state-management.html#状态管理":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["service&apo",{"_index":4681,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["services/hamburg",{"_index":530,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["services/uniqu",{"_index":629,"title":{},"body":{"Di/the_injector_tree.html":{}}}],["sessionact",{"_index":5862,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["set",{"_index":2332,"title":{},"body":{"Http/making_requests.html":{},"Immutable/lists.html":{},"Immutable/maps.html":{},"Immutable/nested-objects.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Angular-CLI/command-overview.html":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["setin",{"_index":2459,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["setinterv",{"_index":6442,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone.html":{},"zone/zone.html#变化检测":{}}}],["setinterval(callback",{"_index":6458,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["setmessag",{"_index":5521,"title":{},"body":{"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["setmessage&#xff0c",{"_index":5546,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["setmessage(newmessag",{"_index":5325,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{}}}],["settab(num",{"_index":860,"title":{},"body":{"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{}}}],["settimeout",{"_index":1211,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone.html":{},"zone/zone.html#Zones":{},"zone/zone.html#Debugging":{}}}],["settimeout&#x8c03;&#x7528;&#x65f6;&#x7684;zone&#x662f;rootzon",{"_index":6515,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["settimeout&#x8c03;&#x7528;&#x65f6;&#x7684;zone&#x662f;zonea",{"_index":6517,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["settimeout(callback",{"_index":6457,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["settimeout(stepon",{"_index":6626,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["settimeout(steptwo",{"_index":6628,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["settimeout调用时的zone是rootzon",{"_index":6476,"title":{},"body":{"zone/tracking_async_operations.html":{}}}],["settimeout调用时的zone是zonea",{"_index":6484,"title":{},"body":{"zone/tracking_async_operations.html":{}}}],["settimeout，promis",{"_index":6594,"title":{},"body":{"zone/zone.html":{}}}],["setup",{"_index":6957,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["set将总是返回调用map",{"_index":2458,"title":{},"body":{"Immutable/nested-objects.html":{}}}],["seven",{"_index":1203,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["sevenalso",{"_index":1202,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["sever",{"_index":5918,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["shadow",{"_index":781,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{}}}],["shakable&#x6027;&#xff0c;&#x5e76;&#x53ef;&#x5f00;&#x653e;&#x4e8e;&#x5404;&#x79cd;&#x5176;&#x4ed6;&#x4f18;&#x5316;&#x3002;&#x50cf;rollup&#x548c;googl",{"_index":3142,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["shakable性，并可开放于各种其他优化。像rollup和googl",{"_index":3123,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["shake",{"_index":2957,"title":{},"body":{"why_angular_2.html":{}}}],["shaking&#x3002",{"_index":3025,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["shallow",{"_index":6271,"title":{},"body":{"zone/context_propagation.html":{}}}],["shape",{"_index":1655,"title":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}},"body":{"ES6&TypeScript/typescript/shapes.html":{}}}],["share",{"_index":645,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"license.html":{},"license.html#You-are-free-to":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["sharealik",{"_index":6816,"title":{},"body":{"license.html":{},"license.html#License":{},"license.html#Under-the-following-terms":{}}}],["shared/counter.servic",{"_index":3814,"title":{},"body":{"Modules/shared-modules-di.html":{}}}],["shared/shared.modul",{"_index":3790,"title":{},"body":{"Modules/shared-di-tree.html":{},"Modules/shared-modules-di.html":{}}}],["sharedmodul",{"_index":3788,"title":{},"body":{"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["sharedmodule.forroot",{"_index":3791,"title":{},"body":{"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["sharereplay",{"_index":2317,"title":{},"body":{"Http/http_with_rxjs.html":{},"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{}}}],["shim",{"_index":4177,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{}}}],["shim&apo",{"_index":4219,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["shortcom",{"_index":5920,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["shortcut",{"_index":7048,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["shorter",{"_index":2139,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["should，expect或assert接口。chai还利用“功能链”形成类似英语的句子，用于以更加用户友好的方式描述测试。chai",{"_index":5467,"title":{},"body":{"Testing/toolchain.html":{}}}],["show",{"_index":2509,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["showalert",{"_index":5577,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["showalert(step",{"_index":5593,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["showmainnavig",{"_index":5802,"title":{},"body":{"state-management/defining_your_main_application_state.html":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["showmessag",{"_index":1823,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["shrinkout",{"_index":5690,"title":{},"body":{"animation/index.html":{}}}],["sidebar",{"_index":4457,"title":{},"body":{"Routing/aux-routes.html":{}}}],["sign",{"_index":2165,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["signatur",{"_index":7011,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["signific",{"_index":7079,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["signup",{"_index":2164,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{}}}],["signupform",{"_index":2167,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{}}}],["signupformcompon",{"_index":2170,"title":{},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{}}}],["silent",{"_index":2471,"title":{},"body":{"Immutable/object_freeze.html":{}}}],["similar",{"_index":6446,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["simpl",{"_index":6025,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["simpleredux",{"_index":5763,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["simpli",{"_index":3914,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["simplifi",{"_index":5949,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["singl",{"_index":5772,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["singlerun",{"_index":5167,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["sinon",{"_index":5458,"title":{},"body":{"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{}}}],["size",{"_index":764,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Immutable/lists.html":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["sizeinbyt",{"_index":4065,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["skeleton",{"_index":6849,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["slogan",{"_index":116,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["slogan，title和actor",{"_index":177,"title":{},"body":{"Change-detection/change_detector_classes.html":{}}}],["slow",{"_index":2510,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["slower",{"_index":2501,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["small",{"_index":4144,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["smaller",{"_index":3114,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{}}}],["smart",{"_index":367,"title":{},"body":{"Components/structuring_applications_with_components.html":{}}}],["smith",{"_index":1279,"title":{},"body":{"ES6&TypeScript/es6/destructuring.html":{}}}],["snapshot",{"_index":6572,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["snippet",{"_index":4795,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["snow",{"_index":877,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["snow&apo",{"_index":999,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["socket",{"_index":547,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["solid",{"_index":245,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/projection.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"Change-detection/how_change_detection_works.html":{}}}],["solo",{"_index":2378,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["solv",{"_index":2483,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["some_act",{"_index":5982,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["someexpress",{"_index":836,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["somefunct",{"_index":1394,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["somemethod",{"_index":1392,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["somenam",{"_index":527,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["someobject",{"_index":1393,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["someobject.somemethod",{"_index":1391,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["someon",{"_index":6986,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["someth",{"_index":3907,"title":{},"body":{"Observables/error_handling.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["sometim",{"_index":2475,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["somevalu",{"_index":5980,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["soon",{"_index":6432,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["sort",{"_index":6978,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["sourc",{"_index":2668,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/init.html":{},"Project-setup/summary.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["sourcemap",{"_index":1921,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["sourcemapfilenam",{"_index":4189,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["spam",{"_index":5152,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["span",{"_index":295,"title":{},"body":{"Components/components.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"practice.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Testing/overriding.html":{}}}],["span/span",{"_index":4796,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["spanactor.firstnam",{"_index":6813,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["spanactor.get('firstnam",{"_index":249,"title":{},"body":{"Change-detection/enforcing_immutability.html":{}}}],["spanhello",{"_index":293,"title":{},"body":{"Components/components.html":{}}}],["spanmessage/span",{"_index":5329,"title":{},"body":{"Testing/overriding.html":{}}}],["spec",{"_index":1478,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"Angular-CLI/creating-other-things.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Testing/filename-conventions.html":{},"Testing/filename-conventions.html#文件名约定":{},"Testing/karma-config.html":{}}}],["spec.t",{"_index":3395,"title":{},"body":{"Angular-CLI/testing.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["special",{"_index":6402,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["specif",{"_index":2213,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["specifi",{"_index":1895,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["specs&#x201d",{"_index":4521,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["specs/a",{"_index":4501,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{}}}],["spi",{"_index":5463,"title":{},"body":{"Testing/toolchain.html":{}}}],["spot",{"_index":7088,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["spotifi",{"_index":2326,"title":{},"body":{"Http/making_requests.html":{}}}],["spread",{"_index":1474,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["spread和rest运算符，但它们不是根据ecmascript",{"_index":1473,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{}}}],["spyon",{"_index":5466,"title":{},"body":{"Testing/toolchain.html":{},"Testing/toolchain.html#测试工具链":{}}}],["spyon(mockhttp",{"_index":4808,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["spyon(mockredux",{"_index":4919,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["src",{"_index":1311,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"Angular-CLI/creating-components.html":{},"Angular-CLI/creating-other-things.html":{},"Angular-CLI/init.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["src&#39",{"_index":4281,"title":{},"body":{"Project-setup/loaders.html":{}}}],["src&apo",{"_index":4323,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["src/index.html",{"_index":4368,"title":{},"body":{"Project-setup/plugins.html":{},"Project-setup/summary.html":{}}}],["src/index.t",{"_index":4175,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{}}}],["src/tests.entry.t",{"_index":5145,"title":{},"body":{"Testing/karma-config.html":{}}}],["src文件夹中输出.js和.metadata.json",{"_index":2619,"title":{},"body":{"i18n/translation-text-extraction.html":{}}}],["sroffset",{"_index":4789,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["st",{"_index":1973,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["stabl",{"_index":6611,"title":{},"body":{"zone/zone.html":{}}}],["stable&apo",{"_index":6692,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["stack",{"_index":6397,"title":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["stackoverflow",{"_index":2643,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{},"practice.html":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["stackshar",{"_index":2941,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["stackshare取的是stacks数量，但是由于其并不区分angular版本，所以用相当一部分属于1.x",{"_index":2946,"title":{},"body":{"why_angular_2.html":{}}}],["stage",{"_index":2480,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["standard",{"_index":7081,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["star",{"_index":2370,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/maps.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{}}}],["start",{"_index":3893,"title":{"index.html#Getting-Started":{}},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["startasync",{"_index":6625,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["starter",{"_index":3105,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/setup.html":{},"Testing/setup.html#测试设置":{},"Testing/testbed-configuration.html":{}}}],["starter&#x4e2d;&#x7684;karma.conf.js&#x6587;&#x4ef6",{"_index":5245,"title":{},"body":{"Testing/karma-config.html#完成配置":{}}}],["starter&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x9009;&#x62e9;&#x5c06;&#x6240;&#x6709;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x6346;&#x7ed1;&#x5728;&#x4e00;&#x8d77;&#x3002",{"_index":5213,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["starter&#x4e2d;&#xff0c;&#x63d2;&#x4ef6;&#x548c;&#x52a0;&#x8f7d;&#x7a0b;&#x5e8f;&#x4ece;&#x5b83;&#x4eec;&#x81ea;&#x5df1;&#x7684;&#x6587;&#x4ef6;&#x4e2d;&#x5bfc;&#x51fa;&#xff0c;&#x4ee5;&#x4fbf;&#x901a;&#x8fc7;webpack",{"_index":5208,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["starter&#x4e2d;&#xff0c;&#x6b64;&#x914d;&#x7f6e;&#x5728",{"_index":5438,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["starter&#x4e2d;&#xff0c;&#x8fd9;&#x4e2a;&#x8fc7;&#x7a0b;&#x662f;&#x7528",{"_index":5202,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["starter&#x9879;&#x76ee;&#x4f7f;&#x7528;&#x7684;karma.conf.js&#x4e2d;&#x7684;&#x6838;&#x5fc3;&#x5c5e;&#x6027;&#x7684;&#x793a;&#x4f8b;&#x3002",{"_index":5248,"title":{},"body":{"Testing/karma-config.html#其他资源":{}}}],["starter中的karma.conf.j",{"_index":5172,"title":{},"body":{"Testing/karma-config.html":{}}}],["starter中，插件和加载程序从它们自己的文件中导出，以便通过webpack",{"_index":5154,"title":{},"body":{"Testing/karma-config.html":{}}}],["starter项目使用的karma.conf.j",{"_index":5173,"title":{},"body":{"Testing/karma-config.html":{}}}],["startup",{"_index":3118,"title":{},"body":{"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["stat",{"_index":5148,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["state",{"_index":2421,"title":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}},"body":{"Immutable/map_merge.html":{},"vs_react.html":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"animation/index.html":{},"animation/index.html#动画":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/defining_your_main_application_state.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["state&apo",{"_index":5356,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["state,action.payload.valu",{"_index":5987,"title":{},"body":{"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["state./h1",{"_index":6027,"title":{},"body":{"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["static",{"_index":3459,"title":{},"body":{"Modules/feature-modules.html":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["statu",{"_index":3891,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{}}}],["steep",{"_index":2690,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["step",{"_index":5583,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["stepon",{"_index":6627,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["steps/button",{"_index":5588,"title":{},"body":{"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["steptwo",{"_index":6629,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["still",{"_index":1546,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Immutable/persistent_and_transient_data_structures.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["storag",{"_index":2438,"title":{},"body":{"Immutable/maps_are_iterable.html":{}}}],["store",{"_index":2722,"title":{"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}},"body":{"further-reading.html":{},"further-reading.html#Redux-and-ngrx":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["store&#x4e4b;&#x95f4;&#x7684;react",{"_index":5838,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["store.count",{"_index":6147,"title":{},"body":{"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["store.dispatch(createaction(counteractions.decr",{"_index":5853,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}}}],["store.dispatch(createaction(counteractions.incr",{"_index":5852,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["store.dispatch(createaction(counteractions.reset",{"_index":5854,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}}}],["store.dispatch(createaction(sessionactions.login_user_error",{"_index":5872,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["store.dispatch(createaction(sessionactions.login_user_pend",{"_index":5868,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["store.dispatch(createaction(sessionactions.login_user_success",{"_index":5871,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["store.dispatch(createaction(sessionactions.logout_us",{"_index":5874,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["store.select",{"_index":5858,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["store.select(&apos;counter&apo",{"_index":5910,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["store.select([&apos;counter&apo",{"_index":5915,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["store.select(appst",{"_index":5928,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["store/act",{"_index":5746,"title":{},"body":{"state-management/configuring_your_application.html":{}}}],["store/effect",{"_index":5748,"title":{},"body":{"state-management/configuring_your_application.html":{}}}],["store/rootreduc",{"_index":5745,"title":{},"body":{"state-management/configuring_your_application.html":{}}}],["storeappst",{"_index":5851,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["storemodul",{"_index":5742,"title":{},"body":{"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["storemodule.providestor",{"_index":5741,"title":{},"body":{"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["storemodule.providestore(rootreduc",{"_index":5749,"title":{},"body":{"state-management/configuring_your_application.html":{},"state-management/configuring_your_application.html#配置你的应用":{}}}],["storetoken(authdata.id_token",{"_index":2276,"title":{},"body":{"Http/catching-rejections.html":{}}}],["store之间的react",{"_index":5826,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html":{}}}],["str",{"_index":1730,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["strategi",{"_index":1904,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["stream",{"_index":3922,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["street",{"_index":1971,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["strict",{"_index":1395,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"Immutable/object_freeze.html":{},"Project-setup/summary.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["strict&apo",{"_index":4422,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["strict”模式下，它将是未定义的。这引出另一个es6",{"_index":1406,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{}}}],["string",{"_index":172,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/projection.html":{},"Di/inject_and_injectable.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Di/what_is_di.html":{},"Directives/ng_class_directive.html":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Immutable/maps.html":{},"Http/retry.html":{},"Immutable/what_is_immutability.html":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"Change-detection/how_change_detection_works.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["string&apo",{"_index":797,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["stringifi",{"_index":270,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["stringify(form.valu",{"_index":272,"title":{},"body":{"Components/access_child_components_from_template.html":{}}}],["stronger",{"_index":6931,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["structur",{"_index":19,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"Directives/directives.html":{},"Directives/directives.html#指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Immutable/persistent_and_transient_data_structures.html":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["structuraldirective=express",{"_index":1064,"title":{},"body":{"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{}}}],["structuraldirective]=\"express",{"_index":1065,"title":{},"body":{"Directives/structural_directives.html":{}}}],["structuraldirective]=express",{"_index":1081,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["studi",{"_index":7028,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["stuff",{"_index":4794,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["style",{"_index":241,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Components/creating_components.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"further-reading.html":{},"further-reading.html#Angular":{},"Angular-CLI/init.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{},"Project-setup/loaders.html#Webpack-配置":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"Change-detection/how_change_detection_works.html":{}}}],["style!css?sourcemap",{"_index":4271,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/summary.html":{}}}],["style(height",{"_index":5691,"title":{},"body":{"animation/index.html":{}}}],["style({height",{"_index":5704,"title":{},"body":{"animation/index.html#动画":{}}}],["style=\"bord",{"_index":353,"title":{},"body":{"Components/projection.html":{},"Routing/aux-routes.html":{}}}],["style=\"color",{"_index":4460,"title":{},"body":{"Routing/aux-routes.html":{}}}],["style=\"float",{"_index":6028,"title":{},"body":{"state-management/redux_and_component_architecture.html":{}}}],["style=\"margin",{"_index":3989,"title":{},"body":{"Observables/using_observables.html":{}}}],["style=\"pad",{"_index":1026,"title":{},"body":{"Directives/ng_style_directive.html":{}}}],["style=bord",{"_index":4478,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["style=color",{"_index":4476,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["style=float",{"_index":6084,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["style=pad",{"_index":1040,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["styleexamplecompon",{"_index":1029,"title":{},"body":{"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["styles/style.css",{"_index":4284,"title":{},"body":{"Project-setup/loaders.html":{}}}],["sub",{"_index":4503,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["sub.unsubscrib",{"_index":4506,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{}}}],["subdir",{"_index":5162,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["submit",{"_index":264,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Immutable/map_merge.html":{}}}],["submitbutton",{"_index":2425,"title":{},"body":{"Immutable/map_merge.html":{}}}],["subscrib",{"_index":2259,"title":{},"body":{"Http/cancel_request.html":{},"Http/catching-rejections.html":{},"Http/making_requests.html":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["subscribe回调被调用时，它接收的数据将是一个json对象的列表，其id属性大于或等于6，其名称属性已添加到“dr",{"_index":3930,"title":{},"body":{"Observables/observables_array_operations.html":{}}}],["subscript",{"_index":3843,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{}}}],["subscription.unsubscrib",{"_index":3899,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["substitut",{"_index":6819,"title":{},"body":{"license.html":{},"license.html#License":{}}}],["subsystem",{"_index":6996,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["subs测试和mock",{"_index":5464,"title":{},"body":{"Testing/toolchain.html":{}}}],["such",{"_index":3917,"title":{},"body":{"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["suggest",{"_index":6836,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["sum",{"_index":5962,"title":{},"body":{"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["summari",{"_index":6818,"title":{},"body":{"license.html":{},"license.html#License":{}}}],["sun",{"_index":1867,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["super",{"_index":1119,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#子类化":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["super.run",{"_index":6729,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["superset",{"_index":6963,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["support",{"_index":6943,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["sure",{"_index":3266,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["svg",{"_index":2753,"title":{},"body":{"practice.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["sweet",{"_index":7087,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["swim",{"_index":1251,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#子类化":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["switch",{"_index":862,"title":{},"body":{"Directives/ng_switch_directives.html":{},"Angular-CLI/command-overview.html":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"state-management/reducers_as_state_management.html":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["switch语句。而不是每个reducer需要显式订阅分发器，每个动作都会传递到每个reducer，它处理它感兴趣的动作，然后返回新状态到下一个reduc",{"_index":5976,"title":{},"body":{"state-management/reducers_as_state_management.html":{}}}],["sword",{"_index":925,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["swords&apo",{"_index":981,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["symbol",{"_index":1567,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"Immutable/what_is_immutability.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["sync",{"_index":6423,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["synchron",{"_index":6466,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["syntax",{"_index":1475,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["system",{"_index":6932,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["system.import",{"_index":1307,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["systemj",{"_index":1305,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#模块系统":{},"i18n/import-using-jit.html":{}}}],["systemjs&apo",{"_index":2578,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["systemjs库作为polyfil",{"_index":1309,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{}}}],["systemjs文本插件来导入原始xlf",{"_index":2568,"title":{},"body":{"i18n/import-using-jit.html":{}}}],["t",{"_index":1597,"title":{},"body":{"ES6&TypeScript/typescript/generics.html":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"Routing/route_guards.html":{},"Routing/route_guards.html#实现-CanDeactivate":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["t.name",{"_index":1717,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["tab",{"_index":844,"title":{},"body":{"Directives/ng_switch_directives.html":{},"Directives/using_multiple_structural_directives.html":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["tab.cont",{"_index":1095,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["tab.titl",{"_index":1091,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["tab/app",{"_index":859,"title":{},"body":{"Directives/ng_switch_directives.html":{}}}],["tab/tab",{"_index":1096,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["tabnumb",{"_index":1097,"title":{},"body":{"Directives/using_multiple_structural_directives.html":{}}}],["tag",{"_index":1511,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["take",{"_index":1969,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["take(differ",{"_index":4152,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["taken",{"_index":6954,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["talk",{"_index":2711,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["tammi",{"_index":1224,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["tap",{"_index":2236,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["target",{"_index":1532,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"ES6&TypeScript/typescript/parameter_decorators.html":{},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["targetnumb",{"_index":4149,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["targetzon",{"_index":6359,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["task",{"_index":3342,"title":{"zone/task_scheduling.html#Task-Scheduling":{}},"body":{"Angular-CLI/command-overview.html":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["task.invok",{"_index":6353,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["task.sourc",{"_index":6360,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["tb",{"_index":4041,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["tdd",{"_index":5447,"title":{},"body":{"Testing/testing.html":{}}}],["tdd&#x6d4b;&#x8bd5",{"_index":5449,"title":{"Testing/testing.html#TDD测试":{}},"body":{}}],["tdd（测试驱动开发）风格或bdd",{"_index":5498,"title":{},"body":{"Testing/using-chai.html":{}}}],["tdd（阅读介绍！），那么什么是bdd",{"_index":5499,"title":{},"body":{"Testing/using-chai.html":{}}}],["tea",{"_index":2666,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{}}}],["team",{"_index":6939,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["technic",{"_index":2732,"title":{},"body":{"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{},"Routing/child_routes.html":{}}}],["technolog",{"_index":6841,"title":{},"body":{"license.html":{},"license.html#Under-the-following-terms":{}}}],["tell",{"_index":6987,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["templat",{"_index":51,"title":{},"body":{"bootstrapping/file_structure.html":{},"Change-detection/enforcing_immutability.html":{},"Components/components.html":{},"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Directives/using_multiple_structural_directives.html":{},"practice.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"Change-detection/how_change_detection_works.html":{}}}],["template=\"structuraldirect",{"_index":1066,"title":{},"body":{"Directives/structural_directives.html":{}}}],["template=structuraldirect",{"_index":1086,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["templateref",{"_index":3225,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{}}}],["templateref&#xff0c",{"_index":3240,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["templaterefdelaycontext",{"_index":3303,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{}}}],["templateurl",{"_index":268,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Components/responding_to_component_events.html":{},"Components/two_way_data_binding.html":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{}}}],["term",{"_index":2334,"title":{"license.html#Under-the-following-terms":{}},"body":{"Http/making_requests.html":{},"Http/catch_and_release.html":{},"Http/retry.html":{},"Testing/async-execution.html":{},"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{},"license.html":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["term&apo",{"_index":4846,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["termin",{"_index":227,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["terser",{"_index":7085,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["test",{"_index":1650,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_features.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/creating-other-things.html":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/async.html":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/execute.html":{},"Testing/execute.html#执行测试脚本":{},"Testing/injecting-dependencies.html":{},"Testing/overriding.html":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/simple-test.html":{},"Testing/verify.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["test&apo",{"_index":1850,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["test.j",{"_index":1682,"title":{},"body":{"ES6&TypeScript/typescript/typeScript_start.html":{}}}],["test.t",{"_index":1680,"title":{},"body":{"ES6&TypeScript/typescript/typeScript_start.html":{}}}],["test\\.t",{"_index":5140,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["testb",{"_index":4779,"title":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["testbed.compilecomponents().then",{"_index":5425,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["testbed.configurecompil",{"_index":5423,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["testbed.configuretestingmodul",{"_index":4810,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["testbed.createcomponent(examplecompon",{"_index":5431,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["testbed.createcomponent(quotecompon",{"_index":4866,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["testbed.inittestenviron",{"_index":5023,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["testbed.inittestingenviron",{"_index":5026,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["testbed.overridecomponent(messagecompon",{"_index":5328,"title":{},"body":{"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["testbed.platform",{"_index":5422,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["testcontext",{"_index":5138,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["testcontext.keys().foreach(testcontext",{"_index":5141,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["testm",{"_index":5504,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["testme.should.be.a(&apos;number&apo",{"_index":5508,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["testme.should.equal(16",{"_index":5509,"title":{},"body":{"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["tests.configur",{"_index":5427,"title":{},"body":{"Testing/testbed-configuration.html":{}}}],["tests.configure.t",{"_index":5418,"title":{},"body":{"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["tests.entri",{"_index":5491,"title":{},"body":{"Testing/typings.html":{},"Testing/typings.html#Typings":{}}}],["tests.entry.t",{"_index":5136,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["text",{"_index":262,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Immutable/map_merge.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["textboxcompon",{"_index":3289,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{},"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["textbox组件作为host",{"_index":3288,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{}}}],["tfunction",{"_index":1563,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["theme",{"_index":6847,"title":{"index.html":{},"index.html#hexo-theme-doc-seed":{}},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{}}}],["thencallback",{"_index":6453,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["thencallback.promise.then(thencallback",{"_index":6452,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["thenref",{"_index":837,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["theori",{"_index":6933,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["therefor",{"_index":6465,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["thing",{"_index":883,"title":{},"body":{"Directives/ng_for_directive.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["things&apo",{"_index":1003,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["think",{"_index":2695,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["third",{"_index":6504,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["this.actor",{"_index":124,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/enforcing_immutability.html":{}}}],["this.formattoppings(this.top",{"_index":1390,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["this.http.get",{"_index":4998,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["this.router.navigate([&apos;/compon",{"_index":4737,"title":{},"body":{"Routing/routerlink.html":{},"Routing/routerlink.html#Navigating-Programmatically":{}}}],["this.store.select(appst",{"_index":5943,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["this值（即不会新产生自己作用域下的thi",{"_index":1133,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{}}}],["though",{"_index":6918,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["three",{"_index":1198,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/destructuring.html":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"Immutable/persistent_and_transient_data_structures.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["three&apo",{"_index":4562,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["threealso",{"_index":1197,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["through",{"_index":2706,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["throughout",{"_index":4513,"title":{},"body":{"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["throw",{"_index":1874,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{},"Immutable/object_freeze.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["thunk",{"_index":4178,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"state-management/getting_more_from_redux_and_ngrx.html":{},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["thunk&#xff09;&#xff0c;&#x5219;&#x201c;actioncreatorservice&#x201d;&#x6a21;&#x5f0f;&#x975e;&#x5e38;&#x65b9;&#x4fbf;&#x3002",{"_index":5892,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["thunk&apo",{"_index":4222,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html#总结":{}}}],["thunk），则“actioncreatorservic",{"_index":5857,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html":{}}}],["thur",{"_index":1864,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["tick",{"_index":4853,"title":{},"body":{"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["tick(1000",{"_index":5282,"title":{},"body":{"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["tie",{"_index":5937,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["tight",{"_index":7000,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["tim",{"_index":872,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["time",{"_index":2491,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-translation-files.html":{},"i18n/import-using-aot.html":{},"Advanced-angular/aot.html":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["time&#x201d;&#xff08;aot&#xff09;&#x7f16;&#x8bd1;&#xff0c;&#x5e76;&#x4e14;&#x5c06;&#x9700;&#x8981;&#x7a0d;&#x5fae;&#x4e0d;&#x540c;&#x7684;&#x5f15;&#x5bfc;&#x8fc7;&#x7a0b;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5728;&#x53e6;&#x4e00;&#x90e8;&#x5206;&#x4e2d;&#x8ba8;&#x8bba;&#x3002",{"_index":3607,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["time&#x201d;&#xff08;jit&#xff09;&#x7f16;&#x8bd1;&#x3002",{"_index":3603,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["time&#x7f16;&#x8bd1;&#x5668;&#x3002;&#x4e0e;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x7531;angular",{"_index":3133,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["time&#xff09;&#x7f16;&#x8bd1;&#x5668;&#x3002",{"_index":2526,"title":{},"body":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{},"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["time&#xff09;&#x7f16;&#x8bd1;&#x5668;&#x56fd;&#x9645;&#x5316;&#xff0c;&#x60a8;&#x5fc5;&#x987b;&#xff1a",{"_index":2542,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["time&#xff09;&#x7f16;&#x8bd1;&#x5668;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x52a0;&#x8f7d;&#x65f6;&#x52a8;&#x6001;&#x7f16;&#x8bd1;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002;&#x8981;&#x505a;&#x5230;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x9700;&#x8981;&#x4f9d;&#x9760;3&#x4e2a;&#x63d0;&#x4f9b;&#x8005;&#x544a;&#x8bc9;jit&#x7f16;&#x8bd1;&#x5668;&#x5982;&#x4f55;&#x7ffb;&#x8bd1;&#x7279;&#x5b9a;&#x8bed;&#x8a00;&#x7684;&#x6a21;&#x677f;&#x6587;&#x672c;&#xff1a",{"_index":2572,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["timeinm",{"_index":4929,"title":{},"body":{"Testing/complex-actions.html":{},"Testing/complex-actions.html#异步-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["timeoutcb1",{"_index":6478,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["timeoutcb1()[rootzon",{"_index":6491,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["timeoutcb2",{"_index":6486,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["timeoutcb2()[zonea",{"_index":6496,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["timeoutid",{"_index":3892,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["timestamp",{"_index":4800,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["time”（aot",{"_index":3557,"title":{},"body":{"Modules/introduction.html":{}}}],["time”（jit",{"_index":3555,"title":{},"body":{"Modules/introduction.html":{}}}],["time编译器。与在运行时由angular",{"_index":3103,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["time（aot",{"_index":75,"title":{},"body":{"bootstrapping/file_structure.html":{}}}],["time）编译器在应用程序加载时动态编译应用程序。要做到这一点，我们将需要依靠3个提供者告诉jit",{"_index":2556,"title":{},"body":{"i18n/import-using-jit.html":{}}}],["timingzon",{"_index":6726,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["timingzone(rootzon",{"_index":6741,"title":{},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["titl",{"_index":120,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Change-detection/change_detector_classes.html":{},"Change-detection/enforcing_immutability.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/using_multiple_structural_directives.html":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Change-detection/how_change_detection_works.html":{}}}],["title]=\"titl",{"_index":224,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Change-detection/how_change_detection_works.html":{}}}],["tmp",{"_index":5660,"title":{},"body":{"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["tmp.appendchild(el",{"_index":5663,"title":{},"body":{"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["tmp.innerhtml",{"_index":5664,"title":{},"body":{"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["today",{"_index":7076,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["todd",{"_index":2968,"title":{},"body":{"why_angular_2.html":{}}}],["todo",{"_index":280,"title":{},"body":{"Components/app_structure_with_components.html":{}}}],["todoappmodul",{"_index":380,"title":{},"body":{"Components/using_other_components.html":{}}}],["todoinputcompon",{"_index":378,"title":{},"body":{"Components/using_other_components.html":{}}}],["todoitemcompon",{"_index":374,"title":{},"body":{"Components/using_other_components.html":{}}}],["todolistcompon",{"_index":373,"title":{},"body":{"Components/using_other_components.html":{}}}],["toequal",{"_index":5346,"title":{},"body":{"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{},"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{}}}],["tofu",{"_index":718,"title":{},"body":{"Di/what_is_di.html":{}}}],["togeth",{"_index":2995,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{}}}],["toggleexist",{"_index":824,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["token",{"_index":458,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{}}}],["token1",{"_index":459,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["token2",{"_index":461,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["tomato",{"_index":520,"title":{},"body":{"Di/di_framework.html":{},"Di/what_is_di.html":{}}}],["tool",{"_index":3337,"title":{},"body":{"Angular-CLI/command-overview.html":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["toolabl",{"_index":7063,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["top",{"_index":516,"title":{},"body":{"Di/di_framework.html":{},"Di/what_is_di.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"Observables/using_observables.html":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["topic",{"_index":2696,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{}}}],["topmost",{"_index":6407,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["toppings(top",{"_index":722,"title":{},"body":{"Di/what_is_di.html":{}}}],["toppings.foreach",{"_index":1123,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["toppings.length",{"_index":1125,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["toqual",{"_index":5392,"title":{},"body":{"Testing/simple-test.html":{},"Testing/simple-test.html#简单的测试":{}}}],["toronto",{"_index":1975,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["total",{"_index":6411,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["totalhit",{"_index":4791,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["touch",{"_index":2240,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["tower",{"_index":2400,"title":{},"body":{"Immutable/lists.html":{}}}],["trace",{"_index":6427,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["track",{"_index":6348,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["trackbi",{"_index":905,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["trackbyid",{"_index":923,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["trackbyid(index",{"_index":945,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["train",{"_index":6867,"title":{"README.html#Rangle’s-Angular-2-Training-Book":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}},"body":{"README.html":{}}}],["transact",{"_index":6415,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["transform",{"_index":2479,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"license.html":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["transform(plaincreditcard",{"_index":3755,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["transform(sizeinbyt",{"_index":4057,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["transform(targetnumb",{"_index":4150,"title":{},"body":{"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["transient",{"_index":2474,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["transit",{"_index":2986,"title":{},"body":{"why_angular_2.html":{},"animation/index.html":{},"animation/index.html#动画":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["translat",{"_index":2557,"title":{},"body":{"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["translations_format",{"_index":2558,"title":{},"body":{"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["transpil",{"_index":2997,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["travers",{"_index":15,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{}}}],["tree",{"_index":14,"title":{},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"why_angular_2.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{}}}],["tri",{"_index":6325,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["trigger",{"_index":3348,"title":{},"body":{"Angular-CLI/command-overview.html":{},"animation/index.html":{},"animation/index.html#动画":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["trivial",{"_index":7032,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["true",{"_index":195,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"Components/components.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_if_directive.html":{},"Directives/ng_for_directive.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{},"Immutable/maps_are_iterable.html":{},"Advanced-angular/setting_properties_in_a_directive.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/using_observables.html":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Routing/route_guards.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{}}}],["true/fals",{"_index":1811,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["true，angular",{"_index":767,"title":{},"body":{"Directives/ng_class_directive.html":{}}}],["true，如果用户单击“取消”，则该值将为fals",{"_index":4644,"title":{},"body":{"Routing/route_guards.html":{}}}],["true，这些class",{"_index":790,"title":{},"body":{"Directives/ng_class_directive.html":{}}}],["trycount",{"_index":2468,"title":{},"body":{"Http/retry.html":{}}}],["ts",{"_index":1651,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Loaders":{},"Project-setup/loaders.html#Inline":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Testing/karma-config.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ts1148",{"_index":1886,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["ts2322",{"_index":1692,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["tsc",{"_index":1612,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["tsconfig",{"_index":2674,"title":{},"body":{"further-reading.html":{},"further-reading.html#TypeScript":{}}}],["tsconfig.json",{"_index":1917,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["tsconfigpath",{"_index":3158,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["tslint",{"_index":1643,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{},"Angular-CLI/command-overview.html":{},"Angular-CLI/linting.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/loaders.html":{},"Project-setup/loaders.html#Inline":{},"Project-setup/summary.html":{}}}],["tslint.json",{"_index":3345,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Angular-CLI/linting.html":{}}}],["tslint也可以配置一个tslint.json",{"_index":1644,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{}}}],["ts和spec",{"_index":3379,"title":{},"body":{"Angular-CLI/creating-other-things.html":{}}}],["ttf",{"_index":4276,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["tue",{"_index":1862,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["tupl",{"_index":1857,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["tweak",{"_index":6968,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["two",{"_index":31,"title":{},"body":{"Change-detection/additional_resources.html":{},"Directives/ng_for_directive.html":{},"ES6&TypeScript/es6/destructuring.html":{},"Immutable/lists.html":{},"Routing/child_routes.html":{},"Routing/child_routes.html#链接":{},"Routing/config.html":{},"Routing/redirects.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["two&apo",{"_index":4560,"title":{},"body":{"Routing/child_routes.html#链接":{},"Routing/config.html#路由定义对象":{},"Routing/config.html#RouterModule":{},"Routing/redirects.html#将路由器重定向到另一条路由":{}}}],["two&apos;]compon",{"_index":4473,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["two']\"compon",{"_index":4454,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/routeroutlet.html":{}}}],["two/a",{"_index":4455,"title":{},"body":{"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{}}}],["type",{"_index":261,"title":{"Testing/typings.html#Typings":{}},"body":{"Components/access_child_components_from_template.html":{},"Di/inject_and_injectable.html":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typings.html":{},"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{},"Http/making_requests.html":{},"Observables/using_observables_from_other_sources.html":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/complex-actions.html#异步-Action":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"Testing/typings.html":{},"Testing/typings.html#Typings":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["type=\"button",{"_index":221,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"Directives/ng_class_directive.html":{},"Directives/ng_if_directive.html":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Change-detection/how_change_detection_works.html":{}}}],["type=\"text",{"_index":2191,"title":{},"body":{"Form/template-model-binding.html":{},"Form/visual_cues_for_users.html":{}}}],["type=button",{"_index":813,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{},"Advanced-angular/creating_an_attribute_directive.html":{}}}],["type=text",{"_index":2206,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["typecheck",{"_index":7057,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["typedpropertydescriptor",{"_index":1570,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["typeerror",{"_index":1229,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["types!&#x201d",{"_index":7098,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["types/lodash",{"_index":1880,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["typescript",{"_index":538,"title":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{},"further-reading.html#TypeScript":{},"why_TypeScript.html#Angular-Why-TypeScript":{}},"body":{"Di/inject_and_injectable.html":{},"Di/what_is_di.html":{},"ES6&TypeScript/ES6&TypeScript.html":{},"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typeScript.html":{},"ES6&TypeScript/typescript/typeScript_start.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typings.html":{},"ES6&TypeScript/typescript/working_with_tsc.html":{},"further-reading.html":{},"further-reading.html#Angular":{},"further-reading.html#TypeScript":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"why_angular_2.html":{},"why_angular_2.html#Angular-2-的优点":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Angular-CLI/testing.html":{},"Observables/observables_array_operations.html":{},"Project-setup/loaders.html":{},"Testing/alt-http-mocking.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["typescript&#x2019;",{"_index":7096,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["typescript&#x4e0d;&#x662f;&#x6838;&#x5fc3;javascript&#xff0c;&#x6240;&#x4ee5;webpack&#x9700;&#x8981;&#x4e00;&#x70b9;&#x989d;&#x5916;&#x7684;&#x5e2e;&#x52a9;&#x6765;&#x89e3;&#x6790",{"_index":4287,"title":{},"body":{"Project-setup/loaders.html#Loaders":{}}}],["typescript&#x6dfb;&#x52a0",{"_index":1840,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["typescript&#x7279;&#x6027",{"_index":1829,"title":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{}},"body":{}}],["typescript&#xff0c;&#x8bb0;&#x5f55;&#x7684;&#x6700;&#x4f73;&#x5b9e;&#x8df5;&#xff0c;&#x4ee5;&#x53ca;angular",{"_index":2881,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["typescript/es6",{"_index":4173,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["typescript1.8.2",{"_index":1884,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["typescript1.8.2之后，tsc有一个默认规则–module选项：target",{"_index":1912,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["typescript’",{"_index":7030,"title":{},"body":{"why_TypeScript.html":{}}}],["typescript不是核心javascript，所以webpack",{"_index":4264,"title":{},"body":{"Project-setup/loaders.html":{}}}],["typescript中编写单元测试，因此.ts文件必须转换为纯javascript",{"_index":5144,"title":{},"body":{"Testing/karma-config.html":{}}}],["typescript代码生成javascript",{"_index":1809,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html":{}}}],["typescript工件，它不是ecmascript",{"_index":1607,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html":{}}}],["typescript必须转换为es5",{"_index":1675,"title":{},"body":{"ES6&TypeScript/typescript/typeScript.html":{}}}],["typescript时，@inject",{"_index":535,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["typescript是es6的超集，这意味着所有es6功能都是typescript的一部分，但并非所有typescript功能都是es6",{"_index":1674,"title":{},"body":{"ES6&TypeScript/typescript/typeScript.html":{}}}],["typescript是javascript，下面的javascript通常是一个jit",{"_index":1656,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html":{}}}],["typescript有一个名为tslint的包（npm",{"_index":1641,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{}}}],["typescript来描述由javascript",{"_index":1878,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["typescript比es6",{"_index":1683,"title":{},"body":{"ES6&TypeScript/typescript/typeScript_start.html":{}}}],["typescript比我们显示的更多帮助;为了简洁，我们通过grep过滤）。有两个引用“module”的帮助条目，–module是一个typescript",{"_index":1910,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{}}}],["typescript源文件编译为es5",{"_index":1679,"title":{},"body":{"ES6&TypeScript/typescript/typeScript_start.html":{}}}],["typescript的主要特征之一是添加类型信息，也因此得名。这种类型信息可以帮助javascript",{"_index":1676,"title":{},"body":{"ES6&TypeScript/typescript/typeScript.html":{}}}],["typescript的接口一样工作，事实上typescript",{"_index":1657,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html":{}}}],["typescript的类型让angular",{"_index":537,"title":{},"body":{"Di/inject_and_injectable.html":{}}}],["typescript的继承与es6",{"_index":1808,"title":{},"body":{"ES6&TypeScript/typescript/typescript_classes.html":{}}}],["typescript程序员需要调用没有类型信息的javascript",{"_index":1876,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["typescript类型的一个常见误解是代码需要在每个可能的机会上显式地描述类型。幸运的是这不是这样。typescript",{"_index":1685,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["typescript编写的，我们需要类库定义，我们将使用（chai和jasmin",{"_index":5490,"title":{},"body":{"Testing/typings.html":{}}}],["typescript，angular",{"_index":1102,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html":{}}}],["typescript，记录的最佳实践，以及angular",{"_index":2806,"title":{},"body":{"vs_react.html":{}}}],["u",{"_index":640,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["u.valu",{"_index":641,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["udemi",{"_index":2928,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["ui",{"_index":284,"title":{},"body":{"Components/components.html":{},"state-management/reducers_as_state_management.html":{},"state-management/state-management.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["ui&#x72b6;&#x6001;&#x5982;&#x5207;&#x6362;&#xff0c;&#x8b66;&#x62a5;&#x548c;&#x9519;&#x8bef;&#x6d88;&#x606f",{"_index":6129,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["ui呈现和/或经由组件api",{"_index":371,"title":{},"body":{"Components/structuring_applications_with_components.html":{}}}],["ul",{"_index":4019,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["uncaught",{"_index":6631,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["unchang",{"_index":2241,"title":{},"body":{"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["undefin",{"_index":1129,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"Immutable/what_is_immutability.html":{},"Testing/complex-actions.html":{},"Testing/complex-actions.html#条件-Action":{},"Testing/reducers.html":{},"Testing/reducers.html#测试-Reducers":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{}}}],["undefined&#x3002",{"_index":1155,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["under",{"_index":95,"title":{"license.html#Under-the-following-terms":{}},"body":{"Change-detection/Change_Detection.html":{},"Directives/structural_directives.html":{},"Directives/structural_directives.html#结构指令":{},"Modules/modules.html":{},"Modules/modules.html#模块":{},"Pipes/pipes.html":{},"advanced-components/advanced-components.html":{},"advanced-components/advanced-components.html#Advanced-Components":{},"tooling/tooling.html":{},"tooling/tooling.html#JavaScript工具链":{},"license.html":{},"license.html#Under-the-following-terms":{}}}],["underlin",{"_index":748,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["understand",{"_index":2697,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["uniqu",{"_index":628,"title":{},"body":{"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{}}}],["unit",{"_index":3350,"title":{},"body":{"Angular-CLI/command-overview.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["units.length",{"_index":4064,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["units[pow",{"_index":4071,"title":{},"body":{"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["unless",{"_index":1888,"title":{},"body":{"ES6&TypeScript/typescript/working_with_tsc.html":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["unlik",{"_index":6447,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["unpredict",{"_index":6463,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["unsav",{"_index":4647,"title":{},"body":{"Routing/route_guards.html":{},"Routing/route_guards.html#异步路由哨兵":{}}}],["unstabl",{"_index":6612,"title":{},"body":{"zone/zone.html":{}}}],["unstable&apo",{"_index":6693,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["unsubscrib",{"_index":2253,"title":{},"body":{"Http/cancel_request.html":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["unsubscribe方法，除非我们想提前取消或我们的observ",{"_index":3902,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["unsubscribe（）将取消一个成员的回调监听observ",{"_index":3900,"title":{},"body":{"Observables/disposing_subscriptions_and_releasing_resources.html":{}}}],["until",{"_index":5925,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["untouch",{"_index":2148,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["untyp",{"_index":7022,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["up",{"_index":2166,"title":{"further-reading.html#Keeping-up-to-date":{}},"body":{"Form/template-driven_forms.html":{},"Form/template-driven_forms.html#模版驱动表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"further-reading.html":{},"Angular-CLI/command-overview.html":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"index.html":{},"index.html#Getting-Started":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["updat",{"_index":2416,"title":{},"body":{"Immutable/lists.html":{},"Immutable/nested-objects.html":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["upload",{"_index":2350,"title":{},"body":{"Http/progress.html":{},"Http/progress.html#HTTP-进度事件":{}}}],["upon",{"_index":2481,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"license.html":{},"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["url",{"_index":4272,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Routing/child_routes.html":{},"Routing/config.html":{},"Routing/routeparams.html":{},"Routing/routeroutlet.html":{},"Routing/why_routing.html":{},"Testing/alt-http-mocking.html":{},"Testing/http.html":{},"Testing/mockbackend.html":{}}}],["url发出get",{"_index":5273,"title":{},"body":{"Testing/mockbackend.html":{}}}],["url，但在其他情况下，我们可以看到是否已设置某些头，或者是否已发送某些post",{"_index":5275,"title":{},"body":{"Testing/mockbackend.html":{}}}],["us",{"_index":2392,"title":{"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}},"body":{"Immutable/lists.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Angular-CLI/command-overview.html":{},"Modules/modules.html":{},"Modules/modules.html#模块":{},"Observables/summary.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/summary.html":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/state-management.html":{},"state-management/state-management.html#状态管理":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"license.html":{},"license.html#Under-the-following-terms":{},"index.html":{},"index.html#hexo-theme-doc-seed":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["usag",{"_index":6854,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{}}}],["useclass",{"_index":550,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Http/interceptor.html":{},"Http/interceptor.html#Http-拦截器":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["usefactori",{"_index":554,"title":{},"body":{"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{}}}],["user",{"_index":831,"title":{},"body":{"Directives/ng_if_directive.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"index.html":{},"index.html#More-Informations":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["user.first",{"_index":833,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["user.last",{"_index":832,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["usernam",{"_index":1951,"title":{},"body":{"Form/getting-started.html":{},"Form/getting-started.html#入门":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/template-model-binding.html":{},"Form/template-model-binding.html#使用-Model-绑定":{},"Http/catching-rejections.html":{},"state-management/actions.html":{},"state-management/actions.html#Actions":{}}}],["username.haserror(&apos;minlength&apo",{"_index":2153,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["username.haserror(&apos;required&apo",{"_index":2154,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["username.haserror('minlength",{"_index":2138,"title":{},"body":{"Form/reactive-forms_validation.html":{}}}],["username.haserror('requir",{"_index":2141,"title":{},"body":{"Form/reactive-forms_validation.html":{}}}],["username.root.controls.password",{"_index":2046,"title":{},"body":{"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["username.untouch",{"_index":2135,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["username.valid",{"_index":2134,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["userobserv",{"_index":830,"title":{},"body":{"Directives/ng_if_directive.html":{}}}],["usevalu",{"_index":449,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["usual",{"_index":6399,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["util",{"_index":1534,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["ux",{"_index":3223,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{}}}],["v",{"_index":4012,"title":{},"body":{"Observables/using_observables.html":{}}}],["v1.0.26",{"_index":2951,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["v15.4.0",{"_index":2949,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["v2.1.3",{"_index":2950,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["v2.2.1",{"_index":2947,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["v8",{"_index":6211,"title":{},"body":{"tooling/command_line_javascript.html":{},"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["val",{"_index":338,"title":{},"body":{"Components/responding_to_component_events.html":{},"Immutable/persistent_and_transient_data_structures.html":{}}}],["valid",{"_index":1659,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html":{},"ES6&TypeScript/typescript/shapes.html#Shapes":{},"ES6&TypeScript/typescript/typescript_classes.html":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["validators.minlength",{"_index":2133,"title":{},"body":{"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["validators.minlength(5",{"_index":2083,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["validators.requir",{"_index":2077,"title":{},"body":{"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["valu",{"_index":265,"title":{},"body":{"Components/access_child_components_from_template.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"Form/visual_cues_for_users.html":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Http/catching-rejections.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/disposing_subscriptions_and_releasing_resources.html":{},"Observables/error_handling.html":{},"Observables/using_observables.html":{},"Observables/using_observables_from_other_sources.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"state-management/reducers_as_state_management.html":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["valuechang",{"_index":3849,"title":{},"body":{"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["valuechanges，它返回一个我们可以订阅的observ",{"_index":4038,"title":{},"body":{"Observables/using_observables_from_other_sources.html":{}}}],["values.push(v",{"_index":4013,"title":{},"body":{"Observables/using_observables.html":{}}}],["values.push(valu",{"_index":3910,"title":{},"body":{"Observables/error_handling.html":{},"Observables/using_observables.html":{}}}],["van",{"_index":873,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["var",{"_index":200,"title":{},"body":{"Change-detection/enforcing_immutability.html":{},"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"practice.html":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["variabl",{"_index":1231,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["variat",{"_index":5919,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{}}}],["var已经使用，这将是有效的es5。然而typescript",{"_index":1697,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["vcs）是git",{"_index":6239,"title":{},"body":{"tooling/source_control.html":{}}}],["veggiehamburg",{"_index":717,"title":{},"body":{"Di/what_is_di.html":{}}}],["vendor",{"_index":4169,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#Bundle":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["veri",{"_index":6927,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["verif",{"_index":1991,"title":{},"body":{"Form/nested-form-data.html":{},"Form/nested-form-data.html#嵌套表单数据":{}}}],["verifi",{"_index":4835,"title":{},"body":{"Testing/async-execution.html":{}}}],["version",{"_index":2477,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["victor",{"_index":28,"title":{},"body":{"Change-detection/additional_resources.html":{}}}],["video",{"_index":24,"title":{},"body":{"Change-detection/additional_resources.html":{}}}],["view",{"_index":81,"title":{},"body":{"bootstrapping/file_structure.html":{},"bootstrapping/bootstrapping_providers.html":{},"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"Components/access_child_components_from_template.html":{},"Components/responding_to_component_events.html":{},"Components/projection.html":{},"Components/two_way_data_binding.html":{},"Di/avoiding_collisions_opaque_token.html":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{},"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个字符串":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/ng_switch_directives.html":{},"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Directives/ng_style_directive.html":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/using_multiple_structural_directives.html":{},"ES6&TypeScript/es6/refresher_on_this.html":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"Form/reactive-forms_basics.html":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Form/reactive-forms_validation.html":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Http/cancel_request.html":{},"Http/catch_and_release.html":{},"i18n/import-using-jit.html":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-di-tree.html":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/observables_array_operations.html":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Pipes/custom_pipes.html":{},"Pipes/custom_pipes.html#自定义管道":{},"Pipes/using_pipes.html":{},"Pipes/using_pipes.html#链接管道":{},"Pipes/stateful_and_async_pipes.html":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Routing/aux-routes.html":{},"Routing/aux-routes.html#使用辅助路由":{},"Routing/child_routes.html":{},"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/query_params.html":{},"Routing/query_params.html#读取查询参数":{},"Routing/route_guards.html":{},"Routing/route_guards.html#异步路由哨兵":{},"Routing/routeparams.html":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routeroutlet.html":{},"Routing/routeroutlet.html#动态添加路由组件":{},"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async.html":{},"Testing/async.html#测试异步操作":{},"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/overriding.html":{},"Testing/overriding.html#覆盖测试的依赖关系":{},"Testing/verify.html":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{},"advanced-components/component_lifecycle.html":{},"advanced-components/component_lifecycle.html#组件生命周期":{},"advanced-components/elementref.html":{},"advanced-components/elementref.html#ElementRef":{},"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html":{},"state-management/using_redux_with_components.html#计数器示例":{},"Change-detection/how_change_detection_works.html":{}}}],["viewchild",{"_index":2736,"title":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}},"body":{"glossary.html":{},"glossary.html#装饰器":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["viewchildren",{"_index":2737,"title":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}},"body":{"glossary.html":{},"glossary.html#装饰器":{},"advanced-components/access_child_components.html":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["viewcontainerref",{"_index":3226,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{}}}],["viewcontainerref.createembeddedview",{"_index":3304,"title":{},"body":{"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{}}}],["viewcontainerref的createembeddedview",{"_index":3324,"title":{},"body":{"Advanced-angular/view_containers_and_embedded_views.html":{}}}],["viewencapsulation.non",{"_index":5668,"title":{},"body":{"advanced-components/view_encapsulation.html":{},"advanced-components/view_encapsulation.html#视图封装":{}}}],["violenc",{"_index":2385,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/nested-objects.html":{}}}],["visibl",{"_index":6571,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["visibledigit",{"_index":3756,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["visiblesect",{"_index":3759,"title":{},"body":{"Modules/multiple-elements.html":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["visit",{"_index":3254,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{},"index.html":{},"index.html#More-Informations":{}}}],["visitrangl",{"_index":3258,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["visitranglecompon",{"_index":3257,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["visual",{"_index":2704,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"a11y/key-concerns.html":{},"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["vm",{"_index":3098,"title":{},"body":{"Advanced-angular/aot.html":{}}}],["vm&#x5d4c;&#x5165;&#x5728;&#x4e3b;&#x673a;&#x73af;&#x5883;&#x4e2d;&#xff0c;&#x4f8b;&#x5982;&#x6d4f;&#x89c8;&#x5668;&#x6216;&#x8282;&#x70b9;&#xff0c;&#x8d1f;&#x8d23;&#x901a;&#x8fc7;&#x4efb;&#x52a1;&#x8c03;&#x5ea6;javascript&#x6267;&#x884c;&#x3002",{"_index":6791,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["vm&#x7684;&#x529f;&#x80fd;&#xff08;&#x5982;&#x5185;&#x8054;&#x7f13;&#x5b58;&#xff09;&#x6765;&#x63d0;&#x9ad8;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x65f6;&#x6027;&#x80fd;&#x3002",{"_index":3128,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["vm嵌入在主机环境中，例如浏览器或节点，负责通过任务调度javascript",{"_index":6790,"title":{},"body":{"zone/zone_primer.html":{}}}],["void",{"_index":1564,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{},"ES6&TypeScript/typescript/interfaces.html":{},"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/type_inference.html":{},"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{},"ES6&TypeScript/typescript/typescript_features.html":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"ES6&TypeScript/typescript/typings.html":{},"Advanced-angular/creating_a_structural_directive.html":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Advanced-angular/providing_context_variables_to_directives.html":{},"Advanced-angular/view_containers_and_embedded_views.html":{},"Testing/testbed-configuration.html":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{},"animation/index.html":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["void&apo",{"_index":5705,"title":{},"body":{"animation/index.html#动画":{}}}],["void和nev",{"_index":1859,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["void表示没有任何类型。例如一个函数没有返回值时，那他返回的的类型是void",{"_index":1873,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["vovka",{"_index":93,"title":{},"body":{"Change-detection/Change_Detection.html":{}}}],["vs",{"_index":16,"title":{"vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}},"body":{"Change-detection/angular_1_vs_angular_2.html":{},"vs_react.html":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"vs_vue2.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Observables/cold_vs_hot_observables.html":{},"Observables/observables_vs_promises.html":{}}}],["vue",{"_index":2642,"title":{},"body":{"compare.html":{},"compare.html#与其他框架比较":{},"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["vue2",{"_index":2924,"title":{"vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2":{}},"body":{"vs_vue2.html":{},"why_angular_2.html":{}}}],["w",{"_index":1550,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["wait",{"_index":834,"title":{},"body":{"Directives/ng_if_directive.html":{},"practice.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["walk",{"_index":1248,"title":{},"body":{"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#子类化":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["want",{"_index":937,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"Advanced-angular/creating_an_attribute_directive.html":{},"Testing/simple-actions.html":{},"Testing/simple-actions.html#测试简单的-Action":{},"state-management/configuring_your_application_to_use_redux.html":{},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{}}}],["war",{"_index":2371,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/maps.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/what_is_immutability.html":{}}}],["warehous",{"_index":1746,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["warn",{"_index":759,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["warrior",{"_index":1762,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["warrior.judochop",{"_index":1767,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["warrior.kick",{"_index":1763,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["warrior.punch",{"_index":1765,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["watch",{"_index":178,"title":{},"body":{"Change-detection/change_detector_classes.html":{},"why_angular_2.html":{},"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Angular-CLI/command-overview.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["watcher",{"_index":7080,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["waterpark",{"_index":1742,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["way",{"_index":2694,"title":{},"body":{"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"license.html":{},"license.html#Under-the-following-terms":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["wcag",{"_index":6899,"title":{},"body":{"a11y/why-a11y.html":{},"a11y/why-a11y.html#无障碍法":{}}}],["we&#x2019;r",{"_index":5786,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{}}}],["weaker",{"_index":7082,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["web",{"_index":372,"title":{"a11y/a11y.html#Angular-2-中的-Web-无障碍":{}},"body":{"Components/structuring_applications_with_components.html":{},"Observables/using_observables_from_other_sources.html":{},"Project-setup/webpack.html":{},"a11y/a11y.html":{},"a11y/key-concerns.html":{},"animation/index.html":{},"animation/index.html#动画":{},"tooling/chrome.html":{},"a11y/why-a11y.html":{},"a11y/why-a11y.html#无障碍法":{}}}],["web&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5305;&#x62ec;&#x5f88;&#x591a;&#x4e0d;&#x540c;&#x7684;&#x5305;&#x548c;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#xff0c;&#x91cd;&#x8981;&#x7684;&#x662f;&#x8981;&#x6709;&#x4e00;&#x4e9b;&#x7b80;&#x5355;&#x7684;&#x65b9;&#x5f0f;&#x89e3;&#x91ca;&#x8fd9;&#x4e00;&#x5207;&#x3002",{"_index":4443,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["web&#x6d4f;&#x89c8;&#x5668",{"_index":6192,"title":{"tooling/chrome.html#Web浏览器":{}},"body":{}}],["web.j",{"_index":4417,"title":{},"body":{"Project-setup/summary.html":{},"Testing/karma-config.html":{}}}],["webpack",{"_index":1306,"title":{"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/webpack.html#Webpack":{}},"body":{"ES6&TypeScript/es6/es6_modules.html":{},"ES6&TypeScript/es6/es6_modules.html#模块系统":{},"i18n/import-using-jit.html":{},"further-reading.html":{},"further-reading.html#Other":{},"Advanced-angular/aot_config.html":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/loaders.html":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/plugins.html":{},"Project-setup/plugins.html#插件":{},"Project-setup/project-setup.html":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{},"Project-setup/webpack.html":{},"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{},"tooling/module_loading_bundling_and_build_tasks.html":{}}}],["webpack&#x4e5f;&#x505a;&#x7c7b;&#x4f3c;&#x70ed;&#x90e8;&#x7f72;&#x548c;&#x4ee3;&#x7801;&#x4f18;&#x5316;&#xff0c;&#x6211;&#x4eec;&#x6ca1;&#x6709;&#x8986;&#x76d6;&#x3002;&#x6709;&#x5173;&#x66f4;&#x591a;&#x4fe1;&#x606f;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x67e5;&#x770b",{"_index":4435,"title":{},"body":{"Project-setup/summary.html#更进一步":{}}}],["webpack&#x4e5f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x63d2;&#x4ef6;&#x6269;&#x5c55;&#xff0c;&#x4f8b;&#x5982;&#x538b;&#x7f29;&#x548c;&#x6df7;&#x6dc6;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;webpack&#x7684;uglifyjs&#x63d2;&#x4ef6;&#x5b8c;&#x6210;&#x3002",{"_index":6237,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["webpack&#x5728;&#x7ed1;&#x5b9a;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x5757;&#x5e76;&#x8f93;&#x51fa;&#x5b83;&#x4eec;&#x65f6;&#x8f6c;&#x6362;&#x4ee3;&#x7801;&#x3002",{"_index":4241,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["webpack&#x5de5;&#x5177;&#x94fe;&#x3002",{"_index":3171,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["webpack&#x662f;&#x4e00;&#x4e2a;javascript&#x6a21;&#x5757;&#x6253;&#x5305;&#x5de5;&#x5177;&#x3002",{"_index":6233,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["webpack&#x6839;&#x636e;&#x9879;&#x76ee;&#x6839;&#x6587;&#x4ef6;&#x5939;&#x4e2d;&#x53ef;&#x7528;&#x7684",{"_index":4365,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["webpack&#x7684;&#x6838;&#x5fc3;&#x6982;&#x5ff5;&#x662f;bundle&#x3002",{"_index":4200,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["webpack&#x77e5;&#x9053;&#x53ea;&#x6709;&#x5982;&#x4f55;&#x6253;&#x5305;javascript&#x3002",{"_index":6235,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["webpack&#x80fd;&#x591f;&#x89e3;&#x6790;&#x8fd9;&#x4e9b;&#x5c5e;&#x6027;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x6bcf;&#x4e2a;&#x5c5e;&#x6027;&#x90fd;&#x6709;&#x4e00;&#x7ec4;&#x4e0d;&#x540c;&#x7684;&#x53ef;&#x7528;&#x4e8e;&#x66ff;&#x6362;&#x7684;&#x53c2;&#x6570;&#x3002;&#x5728;&#x8fd9;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528",{"_index":4252,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["webpack&#x8fd8;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x52a0;&#x8f7d;&#x975e;javascript&#x8d44;&#x6e90;&#xff0c;&#x4f8b;&#x5982;&#xff1a;css&#xff0c;svg&#xff0c;&#x5b57;&#x4f53;&#x6587;&#x4ef6;&#x7b49;&#x3002;&#x4e3a;&#x4e86;&#x5c06;&#x8fd9;&#x4e9b;&#x8d44;&#x6e90;&#x9644;&#x52a0;&#x5230;&#x6211;&#x4eec;&#x7684;&#x5305;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5728;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6a21;&#x5757;&#x4e2d;&#x5bfc;&#x5165;&#x5b83;&#x4eec;&#x3002",{"_index":4327,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["webpack&#x9010;&#x4e2a;&#x904d;&#x5386;&#x6bcf;&#x4e2a;&#x5165;&#x53e3;&#x70b9;&#x3002",{"_index":4206,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["webpack&#x901a;&#x8fc7;&#x63d0;&#x4f9b;&#x4e00;&#x4e2a;&#x901a;&#x7528;&#x63a5;&#x53e3;&#x6765;&#x96c6;&#x6210;&#x6240;&#x6709;&#x8fd9;&#x4e9b;&#x5de5;&#x5177;&#xff0c;&#x5e76;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x7b80;&#x5316;&#x6211;&#x4eec;&#x7684;&#x5de5;&#x4f5c;&#x6d41;&#x548c;&#x907f;&#x514d;&#x590d;&#x6742;&#x6027;&#x89e3;&#x51b3;&#x8fd9;&#x4e9b;&#x95ee;&#x9898;&#x3002",{"_index":4450,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["webpack&apo",{"_index":5127,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["webpack.config.j",{"_index":3155,"title":{},"body":{"Advanced-angular/aot_config.html":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Project-setup/installation_and_usage.html":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/installation_and_usage.html#设置和使用":{},"Project-setup/npm_scripts_integration.html":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["webpack.config.js文件配置装载程序。例如，typescript",{"_index":4268,"title":{},"body":{"Project-setup/loaders.html":{}}}],["webpack.j",{"_index":4416,"title":{},"body":{"Project-setup/summary.html":{},"Testing/karma-config.html":{}}}],["webpack.optimize.commonschunkplugin",{"_index":4408,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["webpack.optimize.uglifyjsplugin",{"_index":4411,"title":{},"body":{"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["webpackserv",{"_index":5149,"title":{},"body":{"Testing/karma-config.html":{},"Testing/karma-config.html#概述":{}}}],["webpack中，通过入口点配置bundl",{"_index":4170,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["webpack也可以通过插件扩展，例如压缩和混淆可以使用webpack的uglifyj",{"_index":6229,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html":{}}}],["webpack及其插件的最简单的方法是通过npm",{"_index":4165,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["webpack可以在尝试运行tsc之前运行tslint",{"_index":1645,"title":{},"body":{"ES6&TypeScript/typescript/linting.html":{}}}],["webpack如何生成bundl",{"_index":4183,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["webpack如何转换我们的bundl",{"_index":4265,"title":{},"body":{"Project-setup/loaders.html":{}}}],["webpack是一个javascript",{"_index":6226,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html":{}}}],["webpack的angular",{"_index":5374,"title":{},"body":{"Testing/setup.html":{}}}],["webpack的最常见方法是通过cli",{"_index":4167,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["webpack的核心概念是bundl",{"_index":4168,"title":{},"body":{"Project-setup/installation_and_usage.html":{}}}],["webpack知道只有如何打包javascript",{"_index":6227,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html":{}}}],["webpack还允许我们加载非javascript资源，例如：css，svg",{"_index":4283,"title":{},"body":{"Project-setup/loaders.html":{}}}],["webpack，那么在karma配置对象中的属性webpack是我们可以使用karma配置webpack",{"_index":5153,"title":{},"body":{"Testing/karma-config.html":{}}}],["websit",{"_index":6850,"title":{},"body":{"index.html":{},"index.html#hexo-theme-doc-seed":{},"index.html#Getting-Started":{},"index.html#More-Informations":{}}}],["web开发人员需要始终注意的事情，angular",{"_index":3090,"title":{},"body":{"Accessibility/accessibility.html":{}}}],["web开发者需要始终注意的事情，angular",{"_index":5559,"title":{},"body":{"a11y/a11y.html":{}}}],["web浏览器没有模块或导入的概念，他们只知道如何加载javascript",{"_index":1302,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html":{}}}],["wed",{"_index":1863,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{},"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["week",{"_index":1860,"title":{},"body":{"ES6&TypeScript/typescript/typings.html":{}}}],["weekli",{"_index":2726,"title":{},"body":{"further-reading.html":{},"further-reading.html#Keeping-up-to-date":{}}}],["weight",{"_index":762,"title":{},"body":{"Directives/ng_class_directive.html":{},"Directives/ng_class_directive.html#绑定一个数组":{},"Directives/ng_style_directive.html":{},"ES6&TypeScript/es6/delegation.html":{},"ES6&TypeScript/es6/delegation.html#委托":{},"ES6&TypeScript/es6/inheritance.html":{},"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["weight&apo",{"_index":1044,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["weiss",{"_index":927,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["weiss&apo",{"_index":983,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["welcome|an",{"_index":2588,"title":{},"body":{"i18n/marking-text-in-templates.html":{},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["well",{"_index":6972,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["we’r",{"_index":5766,"title":{},"body":{"state-management/configuring_your_application_to_use_redux.html":{}}}],["whatev",{"_index":6449,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["whenev",{"_index":3354,"title":{},"body":{"Angular-CLI/command-overview.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["whenstabl",{"_index":5029,"title":{},"body":{"Testing/injecting-dependencies.html":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["wherea",{"_index":6371,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["whole",{"_index":6967,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["widget",{"_index":540,"title":{},"body":{"Di/inject_and_injectable.html":{},"Di/injection_beyond_classes.html":{}}}],["widget&apo",{"_index":577,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["width",{"_index":2423,"title":{},"body":{"Immutable/map_merge.html":{}}}],["wikipedia",{"_index":4805,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/mockbackend.html":{}}}],["wikisearch.servic",{"_index":4785,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/mockbackend.html":{}}}],["wikisearch.spec.t",{"_index":4777,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["wikisearch.t",{"_index":4994,"title":{},"body":{"Testing/http.html":{},"Testing/http.html#测试HTTP请求":{}}}],["will/may",{"_index":6420,"title":{},"body":{"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["willi",{"_index":6811,"title":{},"body":{"Change-detection/how_change_detection_works.html":{}}}],["win",{"_index":890,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["window",{"_index":3264,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{},"Advanced-angular/listening_to_an_element_host.html":{},"tooling/the_command_line.html":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["window.confirm",{"_index":3271,"title":{},"body":{"Advanced-angular/creating_an_attribute_directive.html":{}}}],["window对象，这将是一个方便的功能，特别是类型完成ev",{"_index":1706,"title":{},"body":{"ES6&TypeScript/typescript/type_inference.html":{}}}],["winter",{"_index":869,"title":{},"body":{"Directives/ng_for_directive.html":{}}}],["without",{"_index":953,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["withsesamese",{"_index":716,"title":{},"body":{"Di/what_is_di.html":{}}}],["woff",{"_index":4274,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["woff2",{"_index":4275,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["wolf",{"_index":884,"title":{},"body":{"Directives/ng_for_directive.html":{},"Directives/ng_for_directive.html#局部变量":{}}}],["won&#x2019;t",{"_index":5956,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["wonder",{"_index":6942,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["won’t",{"_index":5921,"title":{},"body":{"state-management/reading_your_application_state_using_selectors.html":{},"why_TypeScript.html":{}}}],["word",{"_index":7014,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["wordcount",{"_index":4798,"title":{},"body":{"Testing/alt-http-mocking.html":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["work",{"_index":1131,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"further-reading.html":{},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{},"Testing/simple-test.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["work&apo",{"_index":5397,"title":{},"body":{"Testing/simple-test.html#简单的测试":{},"Testing/using-chai.html":{},"Testing/using-chai.html#使用Chai":{}}}],["worker&#x4e2d;&#x6e32;&#x67d3;html&#x6765;&#x63d0;&#x9ad8;&#x6027;&#x80fd;&#x3002;&#x6839;&#x636e;application/site&#xff0c;&#x8fd9;&#x79cd;&#x540c;&#x6784;&#x5448;&#x73b0;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x6237;&#x7684;&#x4f53;&#x9a8c;&#x611f;&#x89c9;&#x66f4;&#x52a0;&#x5373;&#x65f6;&#x3002",{"_index":3065,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["worker中渲染html来提高性能。根据application/sit",{"_index":2977,"title":{},"body":{"why_angular_2.html":{}}}],["workflow",{"_index":7070,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["world",{"_index":307,"title":{},"body":{"Components/creating_components.html":{},"Components/passing_data_into_components.html":{},"ES6&TypeScript/typescript/class_decorators.html":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"Immutable/what_is_immutability.html":{},"Modules/introduction.html":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["world!&apo",{"_index":6764,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["world&#x201d;&#x7ec4;&#x4ef6;&#xff0c;&#x6ca1;&#x6709;&#x4ec0;&#x4e48;&#x6709;&#x8da3;&#x7684;&#x3002;&#x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c",{"_index":3576,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["world/p",{"_index":309,"title":{},"body":{"Components/creating_components.html":{}}}],["wrap",{"_index":2772,"title":{},"body":{"practice.html":{},"state-management/reading_your_application_state_using_selectors.html":{},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["wrappedcallback",{"_index":6332,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["writabl",{"_index":1715,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["write",{"_index":2388,"title":{},"body":{"Immutable/deleting_keys.html":{},"Immutable/lists.html":{},"Immutable/map_merge.html":{},"Immutable/maps.html":{},"Immutable/nested-objects.html":{},"Immutable/object_assign.html":{},"Immutable/object_freeze.html":{},"Immutable/persistent_and_transient_data_structures.html":{},"Immutable/what_is_immutability.html":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["written",{"_index":2669,"title":{},"body":{"further-reading.html":{},"further-reading.html#Angular":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["wrong",{"_index":7013,"title":{},"body":{"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["x",{"_index":1113,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{},"ES6&TypeScript/typescript/typings.html":{},"Http/interceptor.html":{},"state-management/reducers_and_pure_functions.html":{},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/review_of_reducers_and_pure_functions.html":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["x18n",{"_index":2614,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x1f4c4",{"_index":5658,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x200a;&#x2014;&#x7531;facebook&#x652f;&#x6301;&#xff0c;&#x662f;&#x4e00;&#x4e2a;&#x5728;js&#x8bed;&#x8a00;&#x4e2d;&#x7684;&#x5e93;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x6846;&#x67b6;&#x3002",{"_index":2836,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x200a;&#x2014;&#x7531;google&#x652f;&#x6301;&#xff0c;&#x662f;&#x6700;&#x65b0;&#x7684;js&#xff08;javascript&#xff09;&#x6846;&#x67b6;&#x3002",{"_index":2830,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x2013;aot&#xff0c;&#x4f46;&#x662f;&#x7531;&#x4e8e;angular",{"_index":3203,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x2014",{"_index":6845,"title":{},"body":{"license.html#You-are-free-to":{},"license.html#Under-the-following-terms":{}}}],["x2018;epics&#x2019",{"_index":6000,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x2018;random&#x2019",{"_index":597,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x201c;$scope&#x201d",{"_index":3085,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["x201c;&#x51b7;&#x201d",{"_index":3858,"title":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}},"body":{}}],["x201c;&#x70ed;&#x201d",{"_index":3859,"title":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}},"body":{}}],["x201c;&#x7bad;&#x5934;&#x51fd;&#x6570;&#x201d;&#x3002;&#x7bad;&#x5934;&#x51fd;&#x6570;&#x80fd;&#x4f7f;&#x9ad8;&#x9636;&#x51fd;&#x6570;&#x66f4;&#x5bb9;&#x6613;&#x7684;&#x5de5;&#x4f5c;&#x3002",{"_index":1137,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x201c;basscss",{"_index":3180,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x201c;broken&#x201d",{"_index":7103,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["x201c;if",{"_index":7097,"title":{},"body":{"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["x201c;recipes&#x201d;&#x7684;&#x53e6;&#x5916;&#x4e24;&#x4e2a;&#x793a;&#x4f8b;&#x3002",{"_index":591,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x201c;technic",{"_index":4520,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x201d",{"_index":3951,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x201d;&#x4e0a;&#x3002;&#x56fe;&#x4e2d;&#x53ef;&#x4ee5;&#x770b;&#x51fa;vue2&#x975e;&#x5e38;&#x5c11;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x4e0b;&#x9762;&#x6bd4;&#x8f83;&#x4e2d;&#x4e0d;&#x518d;&#x5355;&#x72ec;&#x7edf;&#x8ba1;&#x3002",{"_index":3012,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x2026",{"_index":1193,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/es6.html#ES6":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x2502",{"_index":3473,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x2514;&#x2500;&#x2500",{"_index":3474,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x251c;&#x2500;&#x2500",{"_index":3472,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x26a0;&#xfe0f;&#x6bcf;&#x4e2a;&#x8fdb;&#x5ea6;&#x4e8b;&#x4ef6;&#x90fd;&#x4f1a;&#x89e6;&#x53d1;&#x66f4;&#x6539;&#x68c0;&#x6d4b;&#x3002",{"_index":2357,"title":{},"body":{"Http/progress.html#HTTP-进度事件":{}}}],["x26a1;&#xfe0f;&#x4e86;&#x89e3;&#x66f4;&#x591a;webpack&#x63a8;&#x8350;&#x8bbf;&#x95ee;&#xff1a",{"_index":6238,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["x26a1;&#xfe0f;&#x5927;&#x591a;&#x6570;&#x52a8;&#x753b;&#x90fd;&#x80fd;&#x7528;&#x7b49;&#x6548;&#x7684;css&#x6765;&#x5b9e;&#x73b0;&#xff0c;&#x5982;&#x679c;&#x6bd4;&#x8f83;&#x7b80;&#x5355;&#x7684;&#x52a8;&#x753b;&#x5e76;&#x4e0d;&#x63a8;&#x8350;&#x4f7f;&#x7528;&#x52a8;&#x753b;&#x5e93;&#x3002;&#x8fd9;&#x91cc;&#x4e3e;&#x4e2a;&#x5355;&#x72ec;&#x63d0;&#x4e00;&#x4e0b;auto&#x5c5e;&#x6027;&#x503c;&#x8ba1;&#x7b97;&#x7684;&#x4f8b;&#x5b50;&#xff0c;&#x8fd9;&#x4e9b;&#x5143;&#x7d20;&#x76f4;&#x5230;&#x8fd0;&#x884c;&#x65f6;&#x624d;&#x4f1a;&#x77e5;&#x9053;&#x5c5e;&#x6027;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x7528;css&#x5f88;&#x96be;&#x89e3;&#x51b3;&#x4e86;&#xff0c;&#x6240;&#x4ee5;angular&#x63d0;&#x4f9b;&#x4e86",{"_index":5700,"title":{},"body":{"animation/index.html#动画":{}}}],["x26a1;&#xfe0f;&#x63a8;&#x8350;windows&#x7528;&#x6237;&#x4f7f;&#x7528",{"_index":6252,"title":{},"body":{"tooling/the_command_line.html#命令行":{}}}],["x26a1;&#xfe0f;&#xff1a;&#x6587;&#x4e2d;&#x5305;&#x542b;&#x6b64;&#x6807;&#x7b7e;&#x7684;&#x7684;&#x6bb5;&#x843d;&#x6216;&#x53e5;&#x5b50;&#x5747;&#x4e3a;&#x8bd1;&#x8005;&#x989d;&#x5916;&#x6dfb;&#x52a0;&#x3002",{"_index":6896,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x3002",{"_index":417,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Directives/structural_directives.html#结构指令":{},"ES6&TypeScript/es6/classes.html#类":{},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"ES6&TypeScript/es6/inheritance.html#子类化":{},"ES6&TypeScript/typescript/generics.html#泛型":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{},"Http/interceptor.html#Http-拦截器":{},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"why_angular_2.html#数据说话⚡️":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{},"Modules/directive-duplications.html#指令复制":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/plugins.html#插件":{},"Routing/config.html#路由定义对象":{},"Routing/redirects.html#将路由器重定向到另一条路由":{},"Routing/route_guards.html#异步路由哨兵":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/karma-config.html#完成配置":{},"Testing/karma-config.html#其他资源":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone.html#Zones":{},"zone/zone.html#变化检测":{}}}],["x3002;&#x4e00;&#x65e6",{"_index":5899,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x3002;&#x4e0d;&#x9075;&#x5b88;&#x8fd9;&#x4e9b;&#x89c4;&#x5219;&#x4f1a;&#x4f7f;&#x60a8;&#x627f;&#x62c5;&#x8d23;&#x4efb;&#x3002",{"_index":6913,"title":{},"body":{"a11y/why-a11y.html#无障碍法":{}}}],["x3002;&#x4e3a;&#x4e86;&#x5728;&#x94fe;&#x63a5;&#x5e8f;&#x5217;&#x4e2d;&#x4f7f;&#x7528",{"_index":3958,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x3002;&#x524d;&#x7aef;&#x6846;&#x67b6;&#x5e76;&#x4e0d;&#x662f;&#x6240;&#x8c13",{"_index":2653,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x3002;&#x5728;&#x6211;&#x4eec;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x6bcf;&#x4e2a;bundle&#x4fdd;&#x5b58;&#x5230;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684;&#x6587;&#x4ef6;&#x4e2d;&#x3002;&#x6b64;&#x6587;&#x4ef6;&#x7684;&#x540d;&#x79f0;&#x7531",{"_index":4260,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x3002;&#x5982;&#x679c",{"_index":420,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x3002;&#x6b64;&#x5916;&#xff0c;&#x901a;&#x8fc7;&#x5728;&#x6784;&#x5efa;&#x8fc7;&#x7a0b;&#x4e2d;&#x5f15;&#x5165;&#x7f16;&#x8bd1;&#x4ee3;&#x7801;&#xff0c;aot&#x4f7f;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x66f4;&#x5177;tre",{"_index":3141,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x3002;&#x6e90;&#x4ee3;&#x7801;&#x4e5f;&#x53ef;&#x4ee5;&#x5728;github&#x4e0a;&#x83b7;&#x5f97;&#x3002",{"_index":4436,"title":{},"body":{"Project-setup/summary.html#更进一步":{}}}],["x3002;&#x8ba9;&#x6211;&#x4eec;&#x4ece;&#x4e00;&#x4e2a;&#x201c;&#x51b7;&#x201d",{"_index":3861,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x3002;&#x8ba9;&#x6211;&#x4eec;&#x5148;&#x5173;&#x6ce8;&#x540e;&#x8005;&#x3002",{"_index":3476,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x3002;&#x8bf7;&#x52a1;&#x5fc5;&#x58f0;&#x660e;&#x7ec4;&#x4ef6;&#x4e0a;&#x9700;&#x8981;&#x7684;&#x6240;&#x6709;&#x5c5e;&#x6027;&#x3002",{"_index":2205,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["x3002;&#x8fd8;&#x8981;&#x6ce8;&#x610f;&#x5728",{"_index":1366,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x7279;&#x5b9a;&#x7684;&#x7ec4;&#x4ef6;&#x6ca1;&#x6709",{"_index":674,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x3002;&#x8fd9;&#x4e9b;&#x8bf7;&#x6c42;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x5177;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x5bf9;&#x5e94;&#x7684;&#x6a21;&#x62df;&#x6570;&#x636e;&#x96c6;&#x5408;&#x3002;&#x5f53;&#x901a;&#x8fc7",{"_index":5314,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x3002;&#x8fd9;&#x5728;&#x5f88;&#x5927;&#x7a0b;&#x5ea6;&#x4e0a;&#x7b80;&#x5355;&#x548c;&#x589e;&#x5f3a;&#x4e86;&#x6211;&#x4eec;&#x7684;&#x8868;&#x5355;&#x3002",{"_index":1942,"title":{},"body":{"Form/form.html#Forms":{}}}],["x3002;reduc",{"_index":5969,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["x3002;reduce&#x901a;&#x5e38;&#x901a;&#x8fc7",{"_index":6120,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["x4e00;&#x4e2a",{"_index":1624,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x4e00;&#x4e2a;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#x5408;&#x5e76;&#x6240;&#x6709;&#x9879;&#x76ee;&#x7684;&#x4efb;&#x52a1;/&#x6784;&#x5efa;&#x547d;&#x4ee4;&#x901a;&#x8fc7;npm&#x3002",{"_index":4978,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x4e00;&#x4e2a;&#x5e38;&#x7528;&#x7684;&#x63d2;&#x4ef6;&#x662f",{"_index":4370,"title":{},"body":{"Project-setup/plugins.html#插件":{}}}],["x4e00;&#x4e2a;&#x6539;&#x53d8;http&#x5934;&#x7684;&#x62e6;&#x622a;&#x5668;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x8bb8;&#x591a;&#x4e0d;&#x540c;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x5305;&#x62ec;&#xff1a",{"_index":2311,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["x4e00;&#x4e2a;&#x6709;&#x7528;&#x7684;&#x7c7b;&#x6bd4;&#x662f;&#x89c2;&#x770b;&#x9884;&#x5f55;&#x5236;&#x7684;&#x89c6;&#x9891;&#xff0c;&#x4f8b;&#x5982;&#x5728;netflix&#x4e0a;&#x3002",{"_index":3865,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x4e00;&#x4e2a;&#x6a21;&#x5757;&#x7684;&#x57fa;&#x672c;&#x4f7f;&#x7528",{"_index":3558,"title":{"Modules/introduction.html#一个模块的基本使用":{}},"body":{}}],["x4e00;&#x4e2a;&#x73b0;&#x4ee3;&#x7684;javascript",{"_index":4442,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["x4e00;&#x4e2a;&#x7528;&#x4e8",{"_index":5312,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x4e00;&#x4e2a;&#x7b80;&#x5316;&#x7684;&#xff0c;&#x201c;&#x672c;&#x5730;js&#x201d;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x7684;&#x5b9e;&#x73b0;&#x3002",{"_index":3058,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x51fd;&#x6570;&#x63a5;&#x53d7",{"_index":2108,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x4e00;&#x4e2a;&#x7c7b;&#x7684;&#x4f8b;&#x5b50;&#xff0c;&#x4f46;&#x5b83;&#x4f7f;&#x7528;angular",{"_index":579,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x4e00;&#x4e2a;&#x8868;&#x793a;&#x6307;&#x4ee4;&#x9644;&#x52a0;&#x7684",{"_index":3241,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x4e00;&#x4e2a;&#x8def;&#x7531;&#x5668;&#x5e93;&#xff0c;&#x5b83;&#x4f3c;&#x4e4e;&#x6709;&#x5f88;&#x597d;&#x7684;&#x652f;&#x6301;&#xff0c;&#x662f;&#x7531;exponentjs&#x5f00;&#x53d1;&#x7684;&#xff0c;&#x4ed6;&#x4eec;&#x4ee5;react&#x751f;&#x6001;&#x7cfb;&#x7edf;&#x4e2d;&#x7684;&#x4f18;&#x8d28;&#x5de5;&#x5177;&#x800c;&#x95fb;&#x540d;&#x3002",{"_index":2860,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4e00;&#x4e2a;&#x91cd;&#x8981;&#x7684;&#x6ce8;&#x610f;&#x4e8b;&#x9879;&#x662f;&#xff0c",{"_index":595,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x4e00;&#x4e9b;&#x4eae;&#x70b9;&#xff1a",{"_index":1289,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x4e00;&#x4e9b;&#x5e38;&#x89c1;&#x7684;&#x5c5e;&#x6027;&#x662f;&#xff1a",{"_index":4580,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x4e00;&#x4e9b;&#x670d;&#x52a1;&#x5229;&#x7528;jsonp&#x6216;xhr&#x6a21;&#x5757;&#x83b7;&#x53d6;&#x6570;&#x636e;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x4f20;&#x7edf;&#x7684;http&#x6a21;&#x5757;&#x3002",{"_index":5097,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x4e00;&#x4e9b;&#x9009;&#x9879;&#x5305;&#x542b;&#x5728;&#x65b9;&#x62ec;&#x53f7;&#x4e2d;&#x7684;&#x5355;&#x8bcd;&#x3002",{"_index":4251,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x4e00;&#x5207;&#x5c31;&#x7eea;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x73b0;&#x5728;&#x53ef;&#x4ee5;&#x5728;&#x6839;&#x7ec4;&#x4ef6;&#x4e2d;&#x4f7f;&#x7528",{"_index":3775,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x4e00;&#x65e6;&#x4f60;&#x51b3;&#x5b9a;&#x4e86;&#x4e00;&#x4e2a;&#x98ce;&#x683c;&#xff0c;&#x4f60;&#x5e94;&#x8be5;&#x4fdd;&#x6301;&#x8fd9;&#x79cd;&#x98ce;&#x683c;&#x4e3a;&#x6240;&#x6709;&#x5176;&#x4ed6;&#x6d4b;&#x8bd5;&#x3002",{"_index":5517,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["x4e00;&#x65e6;&#x521b;&#x5efa;&#x4e86;reducer&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x914d;&#x7f6e;angular&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e86;&#x3002",{"_index":5751,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["x4e00;&#x65e6;&#x6211;&#x4eec;&#x7684",{"_index":5551,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x4e00;&#x79cd;&#x65b9;&#x6cd5;&#x662f;&#x4f7f;&#x7528",{"_index":1444,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x4e00;&#x822c;&#x6765;&#x8bf4;&#xff0c;angular",{"_index":2879,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4e00;&#x8d77;&#x4f20;&#x8f93;&#x3002",{"_index":6276,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x4e00;&#x8d77;&#x5de5;&#x4f5c;&#x4ee5;&#x542f;&#x7528;aot&#x7f16;&#x8bd1;&#x3002",{"_index":3199,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x4e0a;&#x4e00;&#x6837;&#x3002",{"_index":2025,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x4e0a;&#x4e0b;&#x6587;&#x4f20;&#x64ad",{"_index":6272,"title":{"zone/context_propagation.html#上下文传播":{}},"body":{}}],["x4e0a;&#x4e0b;&#x6587;&#x4f20;&#x64ad;&#x5141;&#x8bb8;&#x5c06;&#x6570;&#x636e;&#x9644;&#x52a0;&#x5230",{"_index":6273,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x4e0a;&#x4f7f;&#x7528;&#xff0c;&#x5b83;&#x4f1a;&#x548c;&#x653e;&#x5728",{"_index":2024,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x4e0a;&#x573a;&#x4e86;&#x3002",{"_index":500,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x4e0a;&#x624b;&#x7b80;&#x5355",{"_index":2906,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4e0a;&#x7684",{"_index":1589,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{},"Form/getting-started.html#入门":{},"Routing/routeparams.html#读取路由参数":{},"Routing/routerlink.html#Navigating-Programmatically":{}}}],["x4e0a;&#x7684;&#x64cd;&#x4f5c",{"_index":6110,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x4e0a;&#x8ff0;&#x547d;&#x4ee4;&#x5c06;&#x5728",{"_index":2634,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x4e0a;&#x9762;&#x5217;&#x51fa;&#x7684;&#x793a;&#x4f8b;&#x53ea;&#x662f;redux&#x4e2d;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x7684;&#x4e00;&#x79cd;&#x65b9;&#x6cd5;&#x3002",{"_index":4770,"title":{},"body":{"Testing/after-thoughts.html#Afterthoughts":{}}}],["x4e0a;&#x9762;&#x6f14;&#x793a;&#x4e86;&#x88c5;&#x9970;&#x65b9;&#x6cd5;&#x7684;&#x53c2;&#x6570;&#x3002;&#x719f;&#x6089;angular",{"_index":1931,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4f7f;&#x7528;&#x4e86;&#x7bad;&#x5934;&#x51fd;&#x6570",{"_index":1322,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4f7f;&#x7528;angular",{"_index":601,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x662f;&#x4e00;&#x4e2a;&#x51b7;&#x7684",{"_index":3873,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x4e0a;&#x9762;&#x7684;&#x793a;&#x4f8b;&#x6f14;&#x793a;&#x4e86;&#x6211;&#x4eec;&#x80fd;&#x591f;&#x66f4;&#x6539",{"_index":1238,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{}}}],["x4e0b;&#x9762;&#x4ee3;&#x7801;&#x4e0e;&#x4e0a;&#x9762;&#x51e0;&#x4e4e;&#x7b49;&#x4ef7;&#xff1a",{"_index":1142,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x4e0b;&#x9762;&#x5f02;&#x6b65;action&#x600e;&#x4e48;&#x529e;&#xff1f",{"_index":4950,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x4e0b;&#x9762;&#x6211;&#x4eec;&#x4f7f;&#x7528;systemjs&#x6765;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x3002",{"_index":1332,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["x4e0b;&#x9762;&#x6211;&#x4eec;&#x5c55;&#x793a;&#x4e86;&#x5728",{"_index":1385,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x4e0b;&#x9762;&#x662f",{"_index":4591,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x4e0b;&#x9762;&#x662f;&#x4e00;&#x4e2a;&#x63cf;&#x8ff0;&#x5bf9;&#x8c61;&#x5b57;&#x9762;&#x91cf;&#x7684;&#x63a5;&#x53e3;&#x7684;&#x793a;&#x4f8b;&#xff1a",{"_index":1638,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x4e0b;&#x9762;&#x662f;&#x63cf;&#x8ff0;&#x51fd;&#x6570;api&#x7684;&#x63a5;&#x53e3;&#x7684;&#x793a;&#x4f8b;&#xff1a",{"_index":1632,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x4e0b;&#x9762;&#x662f;&#x6765;&#x81ea;&#x4e0a;&#x9762;&#x793a;&#x4f8b;&#x7684;&#x4e24;&#x4e2a;&#x5806;&#x6808;&#x5feb;&#x7167;&#xff0c;&#x5176;&#x793a;&#x51fa;&#x4e86;&#x6bcf;&#x4e2a;&#x5806;&#x6808;&#x5e27;&#x7684;&#x5173;&#x8054;&#x533a;&#x57df;&#x3002",{"_index":6593,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x4e0b;&#x9762;&#x6765;&#x770b;&#x770b;&#x5982;&#x4f55;&#x4f7f;&#x7528;&#x5b83;&#xff1a",{"_index":5443,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x663e;&#x793a;&#x5982;&#x4f55;&#x4f7f;&#x7528;&#x59d4;&#x6d3e;&#x4e0",{"_index":1258,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x4e0b;&#x9762;&#x7684;&#x793a;&#x4f8b;&#x4ee3;&#x7801;&#x663e;&#x793a;&#x5982;&#x4f55;&#x4f7f;&#x7528",{"_index":1363,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x4e0b;&#x9762;&#x7684;&#x793a;&#x4f8b;&#x4f1a;&#x4e3a;&#x60a8;&#x6d4b;&#x8bd5;redux&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6253;&#x4e0b;&#x575a;&#x5b9e;&#x7684;&#x57fa;&#x7840;&#x3002",{"_index":5364,"title":{},"body":{"Testing/redux.html#测试-Redux":{}}}],["x4e0b;&#x9762;&#x7684;typescript&#x662f;javascript&#xff0c;&#x4e0b;&#x9762;&#x7684;javascript&#x901a;&#x5e38;&#x662f;&#x4e00;&#x4e2a;jit&#xff08;&#x5373;&#x65f6;&#x7f16;&#x8bd1;&#x5668;&#xff09;&#x3002",{"_index":1660,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x4e0d;&#x4e3a;&#x4eba;&#x77e5;&#x7684;&#x662f;&#xff0c;&#x6709;&#x4e00;&#x4e2a;mozilla",{"_index":6195,"title":{},"body":{"tooling/chrome.html#Web浏览器":{}}}],["x4e0d;&#x4ec5;&#x5982;&#x6b64;&#xff0c;&#x8fd9;&#x4e9b;&#x7ec6;&#x8282;&#x901a;&#x8fc7;&#x6a21;&#x5757;&#x5bfc;&#x51fa;&#x88ab;&#x6df7;&#x6dc6;&#xff0c;&#x8fd9;&#x53ef;&#x80fd;&#x5bfc;&#x81f4;&#x6709;&#x95ee;&#x9898;&#x7684;&#x8c03;&#x8bd5;&#x3002;&#x73b0;&#x5728;&#x8be5;&#x8f6e;&#x5230",{"_index":499,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5b83;&#x7684;&#x7a33;&#x5b9a;&#x6027;&#xff0c;&#x5e76;&#x4e14;&#x4e0d;&#x4f1a;&#x89e6;&#x53d1;&#x53d8;&#x5316;&#x68c0;&#x6d4b",{"_index":6707,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x4e0d;&#x4f1a;&#x62a5;&#x9519;&#x3002",{"_index":1856,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x4e0d;&#x4f1a;&#x6307;&#x5411;&#x671f;&#x671b;&#x7684;&#x5bf9;&#x8c61;&#xff1a;&#x5728;&#x201c;strict&#x201d;&#x6a21;&#x5f0f;&#x4e0b;&#xff0c;&#x5b83;&#x5c06;&#x662f;&#x672a;&#x5b9a;&#x4e49;&#x7684;&#x3002;&#x8fd9;&#x5f15;&#x51fa;&#x53e6;&#x4e00;&#x4e2a;es6&#x7279;&#x6027",{"_index":1452,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x4e0d;&#x4f1a;&#x751f;&#x6210;&#x4efb;&#x4f55;&#x4ee3;&#x7801;&#xff0c;&#x5b83;&#x4ec5;&#x5728;&#x5f00;&#x53d1;&#x671f;&#x95f4;&#x88ab;typescript&#x7528;&#x4e8e;&#x7c7b;&#x578b;&#x68c0;&#x67e5;&#x3002",{"_index":1631,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x4e0d;&#x4f1a;&#x88ab;&#x8bbe;&#x7f6e;&#x3002",{"_index":5626,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x4e0d;&#x4f7f;&#x7528;&#x201c;strict&#x201d;&#x6a21;&#x5f0f;&#xff0c;&#x8fd9;&#x662f;&#x6307;&#x8c03;&#x7528",{"_index":1432,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x4e0d;&#x51fa;&#x6240;&#x6599;&#xff0c;&#x4ed6;&#x4eec;&#x51b3;&#x5b9a;&#x5bf9;&#x5b83;&#x4eec;&#x7684;&#x914d;&#x7f6e;&#x5bf9;&#x8c61;&#x4f7f;&#x7528;&#x76f8;&#x540c;&#x7684;&#x4ee4;&#x724c;&#xff0c;&#x5373;&#x5b57;&#x7b26;&#x4e32",{"_index":485,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x4e0d;&#x540c;&#x4e8e;&#x5355;&#x72ec;&#x5b9a;&#x4e49;&#x6bcf;&#x4e2a;&#x8def;&#x7531;&#x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x4f7f;&#x7528",{"_index":4746,"title":{},"body":{"Routing/routeroutlet.html#动态添加路由组件":{}}}],["x4e0d;&#x5e78;&#x7684;&#x662f;&#xff0c;&#x4f7f;&#x7528;jsonp&#x6a21;&#x5757;&#x7684;&#x670d;&#x52a1;&#x4f7f;&#x7528;&#x660e;&#x663e;&#x4e0d;&#x540c;&#x7684;&#x7c7b;&#x6765;&#x6a21;&#x62df;&#x540e;&#x7aef;&#x3002",{"_index":5106,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x4e0d;&#x5e78;&#x7684;&#x662f;&#xff0c;&#x8fd9;&#x4e2a;&#x7cfb;&#x7edf;&#x662f;&#x4f5c;&#x7528;&#x6709;&#x9650;&#xff0c;&#x5e76;&#x4e14;&#x5c06;&#x9700;&#x8981;&#x66f4;&#x591a;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x624d;&#x80fd;&#x5904;&#x7406;&#x590d;&#x6742;&#x7684;&#x5f62;&#x5f0f;&#x6216;&#x7528;&#x6237;&#x884c;&#x4e3a;&#x3002",{"_index":2248,"title":{},"body":{"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["x4e0d;&#x662f;&#x53ea;&#x4f7f;&#x7528",{"_index":4847,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["x4e0d;&#x77e5;&#x9053;&#x53eb;&#x505a",{"_index":3652,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x4e0d;&#x8981;&#x7f16;&#x5199;&#x5177;&#x6709;&#x5931;&#x8d25;&#x72b6;&#x6001;&#x7684;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x3002",{"_index":5408,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x4e0e",{"_index":1667,"title":{"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x4e0e;&#x4ee5;&#x524d;&#x4e0d;&#x540c;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x662f;&#x5c06;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x76f4;&#x63a5;&#x653e;&#x5728",{"_index":3535,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x4e0e;&#x5176;&#x4ed6;&#x6846;&#x67b6;&#x6bd4;&#x8f83",{"_index":2649,"title":{"compare.html#与其他框架比较":{}},"body":{}}],["x4e0e;&#x53ef;&#x8fed;&#x4ee3;&#x6a21;&#x5f0f;&#x7684;&#x6865;&#x6881;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x5c06;&#x5b83;&#x4eec;&#x6982;&#x5ff5;&#x5316;&#x4e3a;&#x96c6;&#x5408;&#x3002",{"_index":3938,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x4e0e;&#x6a21;&#x5757",{"_index":3779,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x4e0e;&#x7236",{"_index":6307,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x4e0e;&#x7528;&#x6237;&#x4f53;&#x9a8c;&#x548c;seo&#x53e0;&#x52a0",{"_index":6907,"title":{"a11y/why-a11y.html#与用户体验和SEO叠加":{}},"body":{}}],["x4e0e;&#x8bb8;&#x591a;&#x5176;&#x4ed6;&#x670d;&#x52a1;&#xff0c;&#x6709;&#x52a9;&#x4e8e;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x5448;&#x73b0;angular",{"_index":3487,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x4e16;&#x754c;&#x5404;&#x56fd;&#x90fd;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x53ef;&#x8bbf;&#x95ee;&#x6027;&#x89c4;&#x5219;&#xff0c;&#x4e3b;&#x8981;&#x56f4;&#x7ed5;&#x4e24;&#x4e2a;&#x4e3b;&#x8981;&#x6307;&#x5357;&#x96c6;&#x5408;&#xff1a",{"_index":6912,"title":{},"body":{"a11y/why-a11y.html#无障碍法":{}}}],["x4e1c;&#x897f;&#x65f6;&#xff0c;angular",{"_index":605,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x4e2d;&#x3002",{"_index":3822,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Testing/filename-conventions.html#文件名约定":{}}}],["x4e2d;&#x3002;&#x8fd9;&#x662f;&#x4e3a;&#x4e86;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x5728;&#x5f02;&#x6b65;&#x6d4b;&#x8bd5;&#x533a;&#x57df;&#x8fd0;&#x884c;&#x3002;&#x4f7f;&#x7528;&#x5f02;&#x6b65;&#x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x6d4b;&#x8bd5;&#x533a;&#x57df;&#xff0c;&#x8fd9;&#x5c06;&#x786e;&#x4fdd;&#x6240;&#x6709;&#x5f02;&#x6b65;&#x529f;&#x80fd;&#x5728;&#x7ed3;&#x675f;&#x6d4b;&#x8bd5;&#x4e4b;&#x524d;&#x5df2;&#x7ecf;&#x5b8c;&#x6210;&#x3002",{"_index":5088,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x4e2d;&#x3002;&#x90a3;&#x6211;&#x4eec;&#x5148;&#x4e0d;&#x8c08;&#x6280;&#x672f;&#x7ec6;&#x8282;&#xff0c;&#x5148;&#x7528;&#x6570;&#x636e;&#x8bf4;&#x8bdd;&#x3002",{"_index":3008,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x4e2d;&#x4f7f;&#x7528",{"_index":128,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x4e2d;&#x4f7f;&#x7528;&#x6b64;&#x670d;&#x52a1;&#x3002",{"_index":3825,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x4e2d;&#x4f7f;&#x7528;&#x76f8;&#x540c;&#x7684;&#x670d;&#x52a1;&#x3002",{"_index":3648,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x4e2d;&#x4f7f;&#x7528;&#xff0c;&#x6ca1;&#x6709;&#x5176;&#x4ed6;&#x6a21;&#x5757;&#x5e94;&#x8be5;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":3505,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x4e2d;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x8ba1;&#x65f6;&#x5668;&#x7684",{"_index":5894,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x4e2d;&#x5220;&#x9664",{"_index":1023,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x4e2d;&#x5305;&#x542b;&#x56de;&#x8c03;&#x7684;&#x51fd;&#x6570;&#x8986;&#x76d6;api&#x3002",{"_index":6377,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x4e2d;&#x5bfc;&#x5165;&#x76f8;&#x540c;&#x7684;&#x6a21;&#x5757;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x4f1a;&#x8c03;&#x7528",{"_index":3806,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x4e2d;&#x5bfc;&#x5165;&#x8fd9;&#x4e2a;&#x6a21;&#x5757;&#xff0c;&#x8c03;&#x7528",{"_index":3802,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x4e2d;&#x6267;&#x884c;&#x3002",{"_index":6520,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x4e2d;&#x627e;&#x5230;&#x7684;&#x4ee3;&#x7801;&#x7684;&#x53d8;&#x4f53;&#x3002",{"_index":3410,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x4e2d;&#x63d0;&#x4f9b;&#x4e86;&#x8bb8;&#x591a;&#x51fd;&#x6570;&#xff0c;&#x4f7f;&#x6211;&#x4eec;&#x80fd;&#x591f;&#x6709;&#x6548;&#x5730;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x3002",{"_index":5038,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x4e2d;&#x67e5;&#x627e;&#x5b83;&#x4eec;&#x3002",{"_index":3971,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x4e2d;&#x6ce8;&#x518c",{"_index":6540,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x4e2d;&#x6d4b;&#x8bd5;&#x51cf;&#x901f;&#x5668;&#xff1a",{"_index":5350,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x4e2d;&#x72ec;&#x7acb;&#x884c;&#x4e3a;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x589e;&#x52a0;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x503c;&#xff0c;&#x800c;&#x4e0d;&#x6539;&#x53d8;&#x53e6;&#x4e00;&#x4e2a;&#x3002",{"_index":3829,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x4e2d;&#x7684",{"_index":3175,"title":{"a11y/a11y.html#Angular-2-中的-Web-无障碍":{}},"body":{"Advanced-angular/aot_config.html#AoT-配置":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"zone/zone.html#Debugging":{}}}],["x4e2d;&#x7684;&#x4e00;&#x4e9b;&#x65b0;&#x7279;&#x6027;&#xff1a",{"_index":3076,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x4e2d;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x5217;&#x8868;&#x4e2d;&#xff1a",{"_index":5737,"title":{},"body":{"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{}}}],["x4e2d;&#x7684;&#x5176;&#x4ed6",{"_index":3956,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x4e2d;&#x7684;&#x8def;&#x7531;&#x51fa;&#x53e3;&#x3002",{"_index":4537,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x4e2d;&#x7684;promise&#x5df2;&#x7ecf;&#x89e3;&#x51b3;&#xff0c;&#x7ed9;&#x7ec4;&#x4ef6;&#x4e00;&#x4e2a;&#x8bbe;&#x7f6e;&#x62a5;&#x4ef7;&#x503c;&#x7684;&#x673a;&#x4f1a;&#x3002;&#x6211;&#x4eec;&#x8c03;&#x7528",{"_index":5080,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x4e2d;&#x88ab;&#x8c03;&#x7528",{"_index":6532,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x4e2d;&#x8fd0;&#x884c;&#x7684;&#x4ee3;&#x7801;&#x5e94;&#x8be5;&#x4e0e;&#x5728;&#x7236",{"_index":6292,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x4e2d;&#x8fd0;&#x884c;&#x7684;&#x4ee3;&#x7801;&#x76f8;&#x540c;&#xff0c;&#x524d;&#x63d0;&#x662f;&#x5b50",{"_index":6293,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x4e2d;&#x8fd0;&#x884c;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x3002",{"_index":6538,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x4e2d;&#x9009;&#x62e9;&#x3002",{"_index":5631,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["x4e2d;&#xff0c",{"_index":1183,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{},"Testing/execute.html#执行测试脚本":{}}}],["x4e2d;&#xff0c;&#x4f60;&#x5c06;&#x5728;&#x65e5;&#x5fd7;&#x4e2d;&#x770b;&#x5230;&#x5f53;&#x4ee3;&#x7801;&#x8fd0;&#x884c;&#x5728;&#x5b83;&#x7684;&#x5916;&#x90e8;&#x65f6;&#xff0c;angular&#x7684;&#x533a;&#x57df;&#x4f1a;&#x53d1;&#x751f;&#x4ec0;&#x4e48;&#x3002",{"_index":6704,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x4e2d;&#xff0c;&#x5b83;&#x5305;&#x542b;&#x4e00;&#x4e2a;require&#x8c03;&#x7528;&#xff0c;&#x4f7f;&#x7528;regex&#x6a21;&#x5f0f;&#x5bfc;&#x5165;&#x6587;&#x4ef6",{"_index":5191,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5305;&#x542b;&#x4e86;&#x6765;&#x81ea",{"_index":5493,"title":{},"body":{"Testing/typings.html#Typings":{}}}],["x4e2d;&#xff0c;&#x8fd9;&#x5c06;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":4893,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x4e3a;&#x4e86;&#x4f7f;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6210;&#x529f;&#x652f;&#x6301;&#x591a;&#x79cd;&#x8bed;&#x8a00;&#xff0c;&#x591a;&#x4e2a;&#x56e2;&#x961f;&#x6210;&#x5458;&#x5fc5;&#x987b;&#x5bc6;&#x5207;&#x81f4;&#x529b;&#x4e8e;&#x5171;&#x540c;&#x52aa;&#x529b;&#x3002",{"_index":2603,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["x4e3a;&#x4e86;&#x4f7f;&#x6211;&#x4eec;&#x7684;&#x4ee3;&#x7801;&#x4e0e;&#x5f53;&#x524d;&#x7684;&#x6d4f;&#x89c8;&#x5668;&#x4e00;&#x8d77;&#x4f7f;&#x7528;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;systemjs&#x5e93;&#x4f5c;&#x4e3a;polyfill&#xff1a",{"_index":1337,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["x4e3a;&#x4e86;&#x4f7f;&#x7528;&#x8def;&#x7531;&#x54e8;&#x5175;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5728;&#x6211;&#x4eec;&#x5e0c;&#x671b;&#x5b83;&#x4eec;&#x8fd0;&#x884c;&#x7684;&#x7279;&#x5b9a;&#x8def;&#x7531;&#x4e0a;&#x6ce8;&#x518c;&#x5b83;&#x4eec;&#x3002",{"_index":4663,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x4e3a;&#x4e86;&#x5145;&#x5206;&#x5229;&#x7528;zon",{"_index":6302,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x4e3a;&#x4e86;&#x5206;&#x79bb;&#x5173;&#x6ce8;&#x70b9;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x5e38;&#x5e0c;&#x671b;&#x5b50;&#x5143;&#x7d20;&#x5904;&#x7406;&#x81ea;&#x5df1;&#x7684;&#x884c;&#x4e3a;&#x5e76;&#x4f20;&#x9012",{"_index":5608,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x4e3a;&#x4e86;&#x5728;angular&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x4e4b;&#x5916;&#x8fd0;&#x884c;&#x4ee3;&#x7801;&#xff0c",{"_index":6698,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x4e3a;&#x4e86;&#x5b9a;&#x4e49;&#x8f85;&#x52a9;&#x8def;&#x7531;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x9996;&#x5148;&#x6dfb;&#x52a0;&#x4e00;&#x4e2a;&#x547d;&#x540d;&#x7684;&#x8def;&#x7531;&#x51fa;&#x53e3;&#xff0c;&#x5176;&#x4e2d;&#x8981;&#x5448;&#x73b0;&#x8f85;&#x52a9;&#x8def;&#x7531;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":4469,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x4e3a;&#x4e86;&#x5b9e;&#x73b0;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x4fee;&#x6539",{"_index":3797,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x4e3a;&#x4e86;&#x5b9e;&#x73b0;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x6a21;&#x62df;&#x6211;&#x4eec;&#x7684;http&#x670d;&#x52a1;&#x3002",{"_index":5285,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x4e3a;&#x4e86;&#x5e2e;&#x52a9;&#x7ec4;&#x4ef6;&#x66f4;&#x901a;&#x7528;&#x548c;&#x53ef;&#x91cd;&#x7528;&#xff0c;&#x503c;&#x5f97;&#x5c1d;&#x8bd5;&#x5c06;&#x5b83;&#x4eec;&#x5206;&#x6210",{"_index":6072,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x4e3a;&#x4e86;&#x5f15;&#x5bfc;&#x6211;&#x4eec;&#x57fa;&#x4e8e;&#x6a21;&#x5757;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x901a;&#x77e5;angular&#x54ea;&#x4e00;&#x4e2a;&#x662f;&#x6211;&#x4eec;&#x7684;&#x6839;&#x6a21;&#x5757;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x6267;&#x884c;&#x7f16;&#x8bd1;&#x3002;&#x8fd9;&#x79cd;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x7684;&#x7f16;&#x8bd1;&#x4e5f;&#x79f0;&#x4e3a;&#x201c;just",{"_index":3602,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["x4e3a;&#x4e86;&#x663e;&#x793a;&#x8fd9;&#x79cd;&#x5173;&#x7cfb;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x5f00;&#x59cb;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x6a21;&#x5757;&#xff0c;&#x4f5c;&#x4e3a;&#x6211;&#x4eec;&#x7684;&#x793a;&#x4f8b;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x6839;&#x6a21;&#x5757;&#x3002",{"_index":3685,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x4e3a;&#x4e86;&#x663e;&#x793a;&#x8fd9;&#x79cd;&#x884c;&#x4e3a;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x7ee7;&#x7eed;&#x4e0a;&#x4e00;&#x8282;&#x7684;&#x793a;&#x4f8b;&#xff0c;&#x5e76;&#x5411;&#x6211;&#x4eec;&#x7684",{"_index":3633,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x4e3a;&#x4e86;&#x66f4;&#x597d;&#x5730;&#x6f14;&#x793a;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;&#xff0c;&#x6211;&#x4eec;&#x5047;&#x8bbe;&#x60f3;&#x5728",{"_index":6750,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x4e3a;&#x4e86;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684;angular",{"_index":5475,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x4e3a;&#x4e86;&#x6d4b;&#x8bd5;&#x8fd9;&#x4e2a;&#x7ec4;&#x4ef6;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x542f;&#x52a8",{"_index":5045,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x4e3a;&#x4e86;&#x786e;&#x4fdd;&#x6587;&#x672c;&#x88ab;&#x6210;&#x529f;&#x7ffb;&#x8bd1;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x4ec5;&#x8981;&#x6307;&#x5b9a;&#x54ea;&#x4e9b;&#x6587;&#x672c;&#x9700;&#x8981;&#x7ffb;&#x8bd1;&#xff0c;&#x800c;&#x4e14;&#x8fd8;&#x9700;&#x8981;&#x63d0;&#x4f9b;&#x63cf;&#x8ff0;&#x548c;&#x8bed;&#x5883;&#x542b;&#x4e49;&#x3002",{"_index":2594,"title":{},"body":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["x4e3a;&#x4e86;&#x7b80;&#x5316;&#x64cd;&#x4f5c;&#x521b;&#x5efa;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x5de5;&#x5382;&#x51fd;&#x6570;&#x6765;&#x5904;&#x7406;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x91cd;&#x590d;&#x7684;&#x90e8;&#x5206;&#xff1a",{"_index":5729,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x4e3a;&#x4e86;&#x80fd;&#x591f;&#x5b9a;&#x4e49;&#x6a21;&#x5757;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x4f7f;&#x7528;&#x88c5;&#x9970;&#x5668",{"_index":3560,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x4e3a;&#x4e86;&#x80fd;&#x591f;&#x5f15;&#x5bfc;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;angular&#x9700;&#x8981;&#x77e5;&#x9053;&#x54ea;&#x4e2a;&#x662f;&#x6839;&#x6a21;&#x5757;&#x3002",{"_index":3591,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x4e3a;&#x4e86;&#x80fd;&#x591f;&#x6e32;&#x67d3;&#x8fd9;&#x4e2a;&#x5185;&#x5bb9;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5c06",{"_index":3252,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x4e3a;&#x4e86;&#x80fd;&#x591f;&#x8bbf;&#x95ee;&#x6a21;&#x677f;&#x9a71;&#x52a8;&#x8868;&#x5355;&#x4e2d;&#x7684;&#x53cc;&#x5411;&#x7ed1;&#x5b9a;&#xff0c;&#x8bf7;&#x4f7f;&#x7528;&#x201c;banana",{"_index":2203,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["x4e3a;&#x4e86;&#x89e3;&#x51b3;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;&#xff0c;&#x94a9;&#x5b50;&#x88ab;&#x6307;&#x5b9a;&#x4e3a;fork",{"_index":6776,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x4e3a;&#x4e86;&#x8bf4;&#x660e;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x52a8;&#x7269;&#x56ed;&#x5e94;&#x7528;&#xff0c;&#x5176;&#x4e2d;&#x521b;&#x5efa;&#x9e1f;&#x7c7b;&#x3002;&#x5728;&#x7ecf;&#x5178;&#x7ee7;&#x627f;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x57fa;&#x7c7b;&#xff0c;&#x7136;&#x540e;&#x5c06;&#x5176;&#x5b50;&#x7c7b;&#x5316;&#x4ee5;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x6d3e;&#x751f;&#x7c7b;&#x3002",{"_index":1361,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#继承":{}}}],["x4e3a;&#x4e86;&#x8c03;&#x7528;&#x8fd9;&#x4e9b;&#x51fd;&#x6570;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x9996;&#x5148;&#x521d;&#x59cb;&#x5316",{"_index":5548,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x4e3a;&#x4e86;&#x901a;&#x8fc7;&#x547d;&#x4ee4;&#x884c;&#x8fd0;&#x884c;karma&#xff0c;&#x5b83;&#x5fc5;&#x987b;&#x5168;&#x5c40;&#x5b89;&#x88c5;&#xff08",{"_index":4976,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x4e3a;&#x4e86;&#x907f;&#x514d;&#x4e24;&#x4e2a;&#x5177;&#x6709;&#x76f8;&#x540c;&#x540d;&#x79f0;&#x7684;&#x4ee4;&#x724c;&#x4e4b;&#x95f4;&#x7684;&#x51b2;&#x7a81;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5c1d;&#x8bd5;&#x91cd;&#x547d;&#x540d;&#x5bfc;&#x5165;&#xff0c;&#x5982;&#x4e0b;&#x6240;&#x793a;&#x3002",{"_index":486,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x6211;&#x4eec;&#x9009;&#x62e9;angular",{"_index":2813,"title":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}},"body":{}}],["x4e3a;&#x4ec0;&#x4e48;&#x6807;&#x51c6;&#x5de5;&#x5177;&#x4e0d;&#x8d77;&#x4f5c;&#x7528",{"_index":6766,"title":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}},"body":{}}],["x4e3a;&#x4ec0;&#x4e48;&#x8981;&#x7528;&#x8def;&#x7531;&#xff1f",{"_index":4756,"title":{"Routing/why_routing.html#为什么要用路由？":{}},"body":{}}],["x4e3a;&#x4ec0;&#x4e48;&#x9700;&#x8981;&#x65e0;&#x969c;&#x788d",{"_index":6901,"title":{"a11y/why-a11y.html#为什么需要无障碍":{}},"body":{}}],["x4e3a;&#x4ec0;&#x4e48;angular&#x66f4;&#x597d;&#xff1f",{"_index":2883,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4e3a;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7279;&#x5b9a;&#x7684;&#x5ba2;&#x6237;&#x7aef;&#x903b;&#x8f91",{"_index":4203,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x4e3a;&#x6b64;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528",{"_index":6090,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x4e3a;&#x6b64;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x786e;&#x4fdd;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6a21;&#x5757;&#x7684;&#x5f15;&#x5bfc;&#x9636;&#x6bb5;&#x4e2d;&#x5bfc;&#x5165",{"_index":2050,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x4e3a;&#x6bcf;&#x79cd;&#x8bed;&#x8a00;&#x9884;&#x6784;&#x5efa;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5305",{"_index":2543,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x4e3a;&#x81ea;&#x5df1;&#x7684;&#x539f;&#x56e0;&#x3002",{"_index":6547,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x4e3b;&#x8981;&#x7279;&#x70b9;&#xff1a",{"_index":2831,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4e3b;&#x8981;&#x7684;&#x9650;&#x5236;&#x662f;&#xff0c;&#x7531;&#x4e8e;&#x7f16;&#x8bd1;&#x539f;&#x59cb;&#x4ee3;&#x7801;&#x7684;&#x65b9;&#x5f0f;&#xff0c;aot&#x4e0d;&#x80fd;&#x4e0e;&#x5e38;&#x89c1;&#x7684;&#x4ee3;&#x7801;&#x6a21;&#x5f0f;&#x4e00;&#x8d77;&#x4f7f;&#x7528;&#xff0c;&#x4f8b;&#x5982;&#xff0c;&#x6a21;&#x5757;&#x7684;&#x9ed8;&#x8ba4;&#x5bfc;&#x51fa;&#xff0c;&#x6a21;&#x677f;&#x7684;&#x6a21;&#x677f;&#x6587;&#x5b57;&#x4ee5;&#x53ca;&#x63d0;&#x4f9b;&#x8005;&#xff0c;&#x8def;&#x7531;&#x6216;&#x58f0;&#x660e;&#x4e2d;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":3213,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["x4e3b;&#x9898;&#x548c;&#x5176;&#x4ed6;&#x53ef;&#x5b9a;&#x5236;&#x7684;&#x5e94;&#x7528;&#x9886;&#x57df",{"_index":5811,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x4e3b;html&#x7684;&#x6837;&#x5f0f;&#x4f20;&#x64ad;&#x5230;&#x7ec4;&#x4ef6;&#x3002",{"_index":5673,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x4e4b;&#x540",{"_index":5651,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x4e4b;&#x540e;&#x6211;&#x4eec;&#x518d;&#x6b21;&#x4f7f;&#x7528;&#x4e86",{"_index":1604,"title":{},"body":{"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["x4e4b;&#x95f4;&#x5171;&#x4eab;&#xff0c;&#x8bc1;&#x660e;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x4f7f;&#x7528",{"_index":3812,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x4e4b;&#x95f4;&#x7684;&#x5dee;&#x5f02",{"_index":3077,"title":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}},"body":{}}],["x4e4d;&#x4e00;&#x770b;&#xff0c;&#x8fd9;&#x4f3c;&#x4e4e;&#x5e76;&#x4e0d;&#x662f;&#x975e;&#x5e38;&#x6709;&#x7528;&#xff08;&#x5373;&#x4f7f;&#x662f;&#x9519;&#x8bef;&#x63d0;&#x53ca;&#x539f;&#x59cb;&#x7c7b;&#x578b;&#xff09;&#xff0c;&#x4f46;&#x968f;&#x7740;&#x7c7b;&#x578b;&#x6ce8;&#x91ca;&#x53d8;&#x5f97;&#x66f4;&#x52a0;&#x590d;&#x6742;&#xff0c",{"_index":1780,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x4e50;&#x961f;&#x4e0d;&#x4f1a;&#x4ece;&#x5934;&#x5f00;&#x59cb;&#x64ad;&#x653e;&#xff0c;&#x540e;&#x6765;&#x8005;&#x5fc5;&#x987b;&#x4ece;&#x90a3;&#x91cc;&#x5f00;&#x59cb;&#x89c2;&#x770b;&#x8868;&#x6f14;&#x3002",{"_index":3871,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x6a21;&#x677f;&#x5f15;&#x7528;&#x53d8;&#x91cf;&#x3002",{"_index":5601,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x6307;&#x5176;&#x4ed6;&#x4e1c;&#x897f;&#x3002;&#x6709;&#x4e24;&#x79cd;&#x57fa;&#x672c;&#x60c5;&#x51b5;&#x4f60;&#x5e94;&#x8be5;&#x8bb0;&#x4f4f;&#x3002",{"_index":1423,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5728;&#x524d;&#x9762;&#x7684;&#x793a;&#x4f8b;&#x4e2d;&#xff0c;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x7ec4;&#x4ef6;&#x90fd;&#x5c06;&#x63a5;&#x6536;&#x76f8;&#x540c;&#x7684;&#x968f;&#x673a;&#x6570;&#x3002",{"_index":662,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x662f;&#x5c06;&#x6240;&#x6709;&#x6d4b;&#x8bd5;&#x6253;&#x5305;&#x5230;&#x5355;&#x4e2a;&#x5305;&#x4e2d;&#xff0c;&#x8fd8;&#x662f;&#x5c06;&#x6bcf;&#x4e2a;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x90fd;&#x5305;&#x542b;&#x5728;&#x81ea;&#x5df1;&#x7684;&#x5305;&#x4e2d;&#x7b49;&#x3002;&#x65e0;&#x8bba;&#x5982;&#x4f55;&#xff0c;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e0d;&#x5e94;&#x4e0e;&#x5176;&#x4f59;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4ee3;&#x7801;&#x6346;&#x7ed1;&#x5728;&#x4e00;&#x8d77;&#xff08;&#x5c24;&#x5176;&#x662f;&#x5728;&#x751f;&#x4ea7;&#x4e2d;&#xff01;&#xff09;&#x3002",{"_index":5212,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x4e5f;&#x90fd;&#x662f;&#x7c7b;&#x6807;&#x8bc6;&#x7b26;&#x3002",{"_index":570,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x4e86;&#x1f525",{"_index":3031,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x4e8b;&#x4ef6;&#x662f;&#x68d8;&#x624b;&#x7684;&#xff0c;&#x56e0;&#x4e3a",{"_index":6747,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x4e8b;&#x5b9e;&#x4e0a;&#xff0c;angular",{"_index":733,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x4ea4;&#x53c9;&#x7c7b;&#x578b",{"_index":1793,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x4ea4;&#x53c9;&#x7c7b;&#x578b;&#x662f;&#x4e24;&#x79cd;&#x6216;&#x66f4;&#x591a;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x7ec4;&#x5408;&#x3002",{"_index":1794,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x4ec0;&#x4e48;&#x662f",{"_index":6010,"title":{"state-management/redux.html#什么是-Redux":{}},"body":{}}],["x4ec5",{"_index":3533,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x4ec5;&#x4f7f;&#x7528;&#x952e;&#x76d8;&#x65f6;&#xff0c;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5fc5;&#x987b;&#x4ecd;&#x7136;&#x53ef;&#x7528",{"_index":5569,"title":{},"body":{"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["x4ec5;&#x5f53;&#x6b64;&#x6d4b;&#x8bd5;&#x8fd4;&#x56de;true&#x65f6;&#xff0c;&#x624d;&#x4f1a;&#x663e;&#x793a;&#x9519;&#x8bef;&#x6d88;&#x606f;&#x3002",{"_index":2161,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["x4ece;&#x4e0a;&#x4e00;&#x4e2a;&#x767b;&#x5f55;&#x8868;&#x5355;&#x6784;&#x5efa;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5feb;&#x901f;&#x8f7b;&#x677e;&#x5730;&#x6dfb;&#x52a0;&#x9a8c;&#x8bc1;&#x3002",{"_index":2150,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["x4ece;&#x5185;&#x90e8;&#x5b9a;&#x4e49;&#x548c;&#x8fd4;&#x56de;&#x7684;&#x51fd;&#x6570;&#x6210;&#x4e3a;&#x9a8c;&#x8bc1;&#x5668;&#x3002",{"_index":2122,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x4ece;&#x6d4f;&#x89c8;&#x5668;&#x52a0;&#x8f7d;&#x6a21;&#x5757",{"_index":1331,"title":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}},"body":{}}],["x4ece;&#x7ec4;&#x4ef6;&#x4e2d;&#x7684",{"_index":5629,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["x4ece;angular",{"_index":735,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x4ed4;&#x7ec6;&#x89c2;&#x5bdf;&#x90a3;&#x6761;&#x8def;&#x7531;&#x7684;&#x5b9a;&#x4e49;&#xff1a",{"_index":3707,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x4ed6;&#x4eec;&#x6709;&#x6570;&#x767e;&#x4e07;&#x7684;&#x7528;&#x6237;&#xff0c;&#x4ee5;&#x53ca;&#x6570;&#x767e;&#x4e07;&#x6216;&#x6570;&#x5341;&#x4ebf;&#x7f8e;&#x5143;&#xff0c;&#x53d7;&#x4ed6;&#x4eec;&#x7ba1;&#x7406;&#x7684;&#x8f6f;&#x4ef6;&#x5f71;&#x54cd;&#x3002",{"_index":2890,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4ed6;&#x4eec;&#x8fd8;&#x575a;&#x6301;&#x4f7f;&#x7528;&#x4e00;&#x79cd;&#x6280;&#x672f;&#x5f88;&#x957f;&#x65f6;&#x95f4;&#xff0c;&#x9700;&#x8981;&#x4e00;&#x81f4;&#x6027;&#xff0c;&#x6e05;&#x6670;&#x7684;&#x6700;&#x4f73;&#x5b9e;&#x8df5;&#x548c;&#x6700;&#x5c0f;&#x672a;&#x77e5;&#x3002",{"_index":2892,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4ee3;&#x66ff;&#x3002",{"_index":5104,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x4ee3;&#x7801;&#x8986;&#x76d6;&#x662f",{"_index":5226,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x4ee5;&#x4e0a;&#x793a;&#x4f8b;&#x5fc5;&#x987b;&#x4f7f;&#x7528",{"_index":1721,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x4ee5;&#x4e0b;&#x662f;&#x4e24;&#x79cd;&#x6280;&#x672f;&#x7684;&#x7b80;&#x8981;&#x6982;&#x8ff0;&#xff1a",{"_index":2829,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4ee5;&#x4e0b;&#x662f;&#x5982;&#x4f55;&#x4f7f;&#x7528;&#x6cd5;&#x8bed;&#x7684;&#x7ffb;&#x8bd1;&#x63d0;&#x4f9b;&#x5546;&#x6765;&#x7ffb;&#x8bd1;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002;&#x6211;&#x4eec;&#x5047;&#x8bbe;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x662f",{"_index":2576,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x4ee5;&#x4e0b;&#x662f;&#x6211;&#x4eec;&#x5bf9",{"_index":2595,"title":{},"body":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["x4ee5;&#x4e0b;&#x662f;&#x7531;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#x7ec4;&#x6210;&#x7684;&#x57fa;&#x672c;&#x6a21;&#x5757;&#x7684;&#x6837;&#x5b50;&#xff1a",{"_index":3572,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x4ee5;&#x540c;&#x6837;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x5728;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x6709;&#x4e00;&#x4e2a;&#x6839;&#x7ec4;&#x4ef6;&#x548c;&#x8bb8;&#x591a;&#x53ef;&#x80fd;&#x7684;&#x6b21;&#x7ea7;&#x7ec4;&#x4ef6;&#xff0c",{"_index":3589,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x4ee5;&#x5b57;&#x7b26;&#x4e32;&#x5f62;&#x5f0f;&#x8fd4;&#x56de;&#x6587;&#x4ef6;&#x5185;&#x5bb9;&#x3002",{"_index":4330,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x4efb;&#x52a1",{"_index":6473,"title":{"zone/tasks.html#任务":{}},"body":{}}],["x4efb;&#x52a1;&#x4e4b;&#x524d;&#x6267;&#x884c;&#x3002",{"_index":4353,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x4efb;&#x52a1;&#x5728;&#x6211;&#x4eec;&#x7684",{"_index":4352,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x4efb;&#x52a1;&#x6267;&#x884c;&#x7684;&#x53ef;&#x89c2;&#x5bdf;&#x6027",{"_index":6309,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x4efb;&#x52a1;&#x6267;&#x884c;&#xff1b",{"_index":4356,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x4efb;&#x52a1;&#x8fd0;&#x884c",{"_index":4357,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x4efb;&#x52a1;&#xff0c;&#x6267;&#x884c",{"_index":4358,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x4f01;&#x4e1a;&#x5728;&#x4e09;&#x4e2a;&#x4e0d;&#x540c;&#x9886;&#x57df;&#x91cf;&#x5316;&#x98ce;&#x9669;&#xff1a;&#x652f;&#x6301;&#xff0c;&#x793e;&#x533a;&#x548c;&#x98ce;&#x9669;&#x3002",{"_index":2895,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4f01;&#x4e1a;&#x5982;&#x4f55;&#x91cf;&#x5316;&#x98ce;&#x9669;&#xff1f",{"_index":2894,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4f18;&#x79c0;&#x7684;&#x505a;&#x6cd5;&#x662f;&#x5c06;&#x7ec4;&#x4ef6;&#x6d4b;&#x8bd5;&#x4e0e;&#x670d;&#x52a1;&#x6d4b;&#x8bd5;&#x5206;&#x5f00",{"_index":5063,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x4f1a;&#x4f7f;&#x7528;&#x51fd;&#x6570;&#x6240;&#x5728;&#x4e0a;&#x4e0b;&#x6587;&#x7684",{"_index":1147,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x4f1a;&#x5728",{"_index":6531,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x4f1a;&#x5c1d;&#x8bd5;&#x5185;&#x8054;css&#xff0c;&#x800c;&#x7f3a;&#x5c11;&#x5fc5;&#x8981;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x3002",{"_index":3174,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x4f20;&#x64ad",{"_index":6580,"title":{"zone/zone-propagation.html#Zone-传播":{}},"body":{}}],["x4f20;&#x64ad;&#x3002",{"_index":6542,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x4f20;&#x9012;&#x53ef;&#x9009;&#x53c2;&#x6570",{"_index":4602,"title":{"Routing/query_params.html#传递可选参数":{}},"body":{}}],["x4f20;&#x9012;&#x67e5;&#x8be2;&#x53c2;&#x6570",{"_index":4608,"title":{"Routing/query_params.html#传递查询参数":{}},"body":{}}],["x4f2a;&#x9009;&#x62e9;&#x5668;&#x3002",{"_index":2247,"title":{},"body":{"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["x4f46;&#x5b83;&#x5c06;&#x7d27;&#x7d27;&#x7ed1;&#x5b9a;&#x5230;&#x90a3;&#x4e2a;&#x7279;&#x5b9a;&#x7684;&#x72b6;&#x6001;&#x5207;&#x7247;&#x548c;&#x90a3;&#x4e9b;&#x5177;&#x4f53;&#x7684;&#x52a8;&#x4f5c;&#x3002",{"_index":6069,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x4f46;&#x662f",{"_index":1669,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x4f46;&#x662f;&#x547d;&#x4ee4;&#x884c;&#x4e3a;&#x81ea;&#x52a8;&#x5316;&#x5f00;&#x53d1;&#x4efb;&#x52a1;&#x63d0;&#x4f9b;&#x4e86;&#x66f4;&#x597d;&#x7684;&#x652f;&#x6301;&#xff0c;&#x56e0;&#x6b64;&#x503c;&#x5f97;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":6250,"title":{},"body":{"tooling/the_command_line.html#命令行":{}}}],["x4f46;&#x662f;&#x5f53;&#x6d89;&#x53ca;&#x5230;&#x5728;&#x540c;&#x4e00;&#x4ee3;&#x7801;&#x5e93;&#x4e0a;&#x5355;&#x72ec;&#x5de5;&#x4f5c;&#x7684;&#x591a;&#x4e2a;&#x56e2;&#x961f;&#x6216;&#x6765;&#x81ea;&#x4e0d;&#x540c;&#x6765;&#x6e90;&#x7684;&#x7b2c;&#x4e09;&#x65b9;&#x6a21;&#x5757;&#x65f6;&#xff0c;&#x8fd9;&#x4e9b;&#x51b2;&#x7a81;&#x6210;&#x4e3a;&#x4e00;&#x4e2a;&#x66f4;&#x5927;&#x7684;&#x95ee;&#x9898;&#x3002",{"_index":473,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x4f46;&#x662f;&#x7bad;&#x5934;&#x51fd;&#x6570;&#x548c;&#x4e00;&#x822c;&#x51fd;&#x6570;&#x6709;&#x4e00;&#x4e2a;&#x5f88;&#x91cd;&#x8981;&#x7684;&#x533a;&#x522b;&#xff1a",{"_index":1143,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x4f46;&#x662f;&#x8fd9;&#x4e00;&#x6b21;&#xff0c;&#x6211;&#x4eec;&#x660e;&#x786e;&#x544a;&#x8bc9;angular&#xff0c;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x53ea;&#x53d6;&#x51b3;&#x4e8e;&#x5b83;&#x7684;&#x8f93;&#x5165;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x4eec;&#x90fd;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#x3002",{"_index":138,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x4f46;&#x662f;&#xff0c",{"_index":1422,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x4f46;&#x662f;&#xff0c;&#x5982;&#x679c;&#x6211;&#x4eec;&#x4ec",{"_index":1022,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x4f46;&#x662f;&#xff0c;&#x5f53",{"_index":3526,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x4f46;&#x662f;&#xff0c;&#x5f53;&#x5904;&#x7406;&#x590d;&#x6742;&#x6216;&#x6df1;&#x5c42;&#x5d4c;&#x5957;&#x7684;&#x5bf9;&#x8c61;&#x65f6;&#xff0c;&#x53ef;&#x80fd;&#x5f88;&#x96be;&#x4f7f;&#x7528;&#x6b64;&#x8bed;&#x6cd5;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x7ef4;&#x62a4;&#x4e0d;&#x53d8;&#x6027;&#x3002;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#x50cf;immutable.js&#x8fd9;&#x6837;&#x7684;&#x5e93;&#x53ef;&#x4ee5;&#x63d0;&#x4f9b;&#x5e2e;&#x52a9;&#x3002",{"_index":6004,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x4f46;&#x662f;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x81ea;&#x7531;&#x4f7f;&#x7528;&#x5176;&#x4ed6;&#x6d4f;&#x89c8;&#x5668;&#x3002",{"_index":6194,"title":{},"body":{"tooling/chrome.html#Web浏览器":{}}}],["x4f46;&#x662f;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x81ea;&#x7531;&#x5730;&#x9009;&#x62e9;&#x5176;&#x4ed6;&#x65b9;&#x6cd5;&#x3002",{"_index":5815,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x4f46;&#x66f4;&#x91cd;&#x8981;&#x7684;&#x662f;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x6bcf;&#x5f53;&#x6211;&#x4eec;&#x8bd5;&#x56fe;&#x53bb",{"_index":3705,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x4f46;&#x6700;&#x597d;&#x4e0d;&#x8981;&#x5305;&#x62ec;&#x5728;&#x60a8;&#x7684;&#x751f;&#x4ea7;&#x6784;&#x5efa;&#x4e2d;&#xff0c;angular&#x5c06;&#x8df3;&#x8fc7;&#x8bbe;&#x7f6e;&#x66f4;&#x957f;&#x7684;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#x5728;&#x751f;&#x4ea7;&#x6a21;&#x5f0f;&#xff08",{"_index":6711,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x4f46;&#x95ee;&#x9898;&#x662f;&#xff0c;&#x6211;&#x4eec;&#x5982;&#x4f55;&#x9a8c;&#x8bc1;&#x670d;&#x52a1;&#x662f;&#x9694;&#x79bb;&#x7684;&#xff0c;&#x4e0d;&#x80fd;&#x5728;&#x5c5e;&#x4e8e;&#x4e0d;&#x540c;&#x6a21;&#x5757;&#x7684;&#x7ec4;&#x4ef6;&#x4e2d;&#x4f7f;&#x7528;&#xff1f",{"_index":3646,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x4f53;&#x79ef",{"_index":3023,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x4f5c;&#x4e3a",{"_index":4522,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x4f5c;&#x4e3a;&#x5176;&#x6765;&#x6e90;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":3880,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x7684;&#x6d4b;&#x8bd5;&#x5e73;&#x53f0;&#xff0c;&#x5b83;&#x4eec;&#x4e5f;&#x4ece;angular&#x5bfc;&#x5165;&#xff0c;&#x5e76;&#x5141;&#x8bb8;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x88ab;&#x5f15;&#x5bfc;&#x8fdb;&#x884c;&#x6d4b;&#x8bd5;&#x3002;&#x8fd9;&#x5bf9;&#x4e8e;&#x4f7f;&#x7528",{"_index":5057,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x4f5c;&#x4e3a;&#x5b83;&#x4eec;&#x7684;&#x7236;&#x7ec4;&#x4ef6;&#x3002",{"_index":685,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x4f5c;&#x4e3a;&#x5bf9;&#x6d4f;&#x89c8;&#x5668;&#x5177;&#x6709;&#x66f4;&#x7b80;&#x5355;&#x7684;&#x903b;&#x8f91;&#xff08;&#x56e0;&#x6b64;&#x6e32;&#x67d3;&#x901f;&#x5ea6;&#x66f4;&#x5feb;&#xff09;&#x7684;&#x6298;&#x8877;&#xff0c;&#x4e0e;&#x201c;&#x52a8;&#x6001;&#x201d;jit&#x76f8;&#x6bd4;&#xff0c;&#x7531;aot&#x751f;&#x6210;&#x7684;&#x4ee3;&#x7801;&#x5b9e;&#x9645;&#x4e0a;&#x66f4;&#x5197;&#x957f;&#x3002",{"_index":3221,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["x4f5c;&#x4e3a;&#x5f00;&#x53d1;&#x4eba;&#x5458;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x6ce8;&#x610f;&#x5728;&#x6839;&#x6a21;&#x5757;&#x4e2d;&#x5bfc;&#x5165",{"_index":3596,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x4f5c;&#x4e3a;&#x6587;&#x4ef6;&#x7684;&#x9ed8;&#x8ba4;&#x5bfc;&#x51fa;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x9700;&#x8981;&#x5728",{"_index":3718,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x4f5c;&#x4e3a;&#x7ec4;&#x4ef6;&#x5360;&#x4f4d;&#x7b26",{"_index":4747,"title":{},"body":{"Routing/routeroutlet.html#动态添加路由组件":{}}}],["x4f5c;&#x4e3a;&#x7ecf;&#x9a8c;&#x6cd5;&#x5219;&#xff0c;&#x5728;&#x4ece;&#x529f;&#x80fd;&#x6a21;&#x5757;&#x5bfc;&#x51fa;&#x670d;&#x52a1;&#x65f6;&#xff0c",{"_index":3548,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x4f5c;&#x4e3a;&#x8f93;&#x5165;&#xff0c;&#x5e76;&#x81ea;&#x52a8;&#x8ba2;&#x9605;&#x8f93;&#x5165;&#xff0c;&#x6700;&#x7ec8;&#x8fd4;&#x56de;&#x53d1;&#x5c04;&#x7684;&#x503c;&#x3002",{"_index":4154,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["x4f5c;&#x8005;&#xff1a;justin",{"_index":2816,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4f60;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1447,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x4f60;&#x4ece;&#x4e00;&#x5f00;&#x59cb;&#x5c31;&#x53c2;&#x52a0;&#x4e00;&#x4e2a;&#x73b0;&#x573a;&#x4e50;&#x961f;&#x8868;&#x6f14;&#xff0c;&#x4f46;&#x6709;&#x4e9b;&#x4eba;&#x53ef;&#x80fd;&#x8fdf;&#x5230;25&#x5206;&#x949f;&#x7684;&#x8282;&#x76ee;&#x3002",{"_index":3870,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x4f60;&#x4f1a;&#x6ce8;&#x610f;&#x5230;&#x8fd9;&#x4e2a;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#x5305;&#x62ec;&#x66f4;&#x591a;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x5305;&#x62ec;zone&#x81ea;&#x5df1;&#x7684;&#x4efb;&#x52a1;&#x7ba1;&#x7406;&#xff08;&#x4f8b;&#x5982",{"_index":6722,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x4f60;&#x4f1a;&#x6ce8;&#x610f;&#x5230;&#xff0c;&#x5728;&#x8fd9;&#x4e24;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x70b9;&#x51fb;&#x6309;&#x94ae;&#x5bfc;&#x81f4;angular&#x533a;&#x57df;&#x53d8;&#x5f97;&#x4e0d;&#x7a33;&#x5b9a;&#xff0c;&#x7531;&#x4e8e;zone.js&#x8865;&#x4e01;&#x548c;&#x76d1;&#x542c",{"_index":6705,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x5728;&#x51e0;&#x4e2a;&#x8f6c;&#x6362;&#x5668;&#x4e4b;&#x95f4;&#x8fdb;&#x884c;&#x9009;&#x62e9;&#xff0c;&#x4f46;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;typescript&#xff0c;angular&#x56e2;&#x961f;&#x4e5f;&#x4f7f;&#x7528;&#x5b83;&#x6765;&#x7f16;&#x5199;&#x7684",{"_index":1108,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x5728;observable`&#x4e2d;&#x4f7f;&#x7528;&#x5f88;&#x591a;&#x5176;&#x4ed6;&#x7684;&#x6570;&#x7ec4;&#x64cd;&#x4f5c",{"_index":3969,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x628a;&#x4f60;&#x7684;&#x6d4b;&#x8bd5;&#x811a;&#x672c;&#x653e;&#x5728;&#x4efb;&#x4f55;&#x4f60;&#x559c;&#x6b22;&#x7684;&#x5730;&#x65b9;&#xff0c;&#x867d;&#x7136;&#x4fdd;&#x6301;&#x5b83;&#x4eec;&#x63a5;&#x8fd1;&#x4f60;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#xff0c;&#x4f7f;&#x5b83;&#x4eec;&#x66f4;&#x5bb9;&#x6613;&#x627e;&#x5230;&#xff0c;&#x5e76;&#x7ed9;&#x65b9;&#x4fbf;&#x90a3;&#x4e9b;&#x4e0d;&#x719f;&#x6089;&#x6e90;&#x4ee3;&#x7801;&#x7684;&#x4eba;&#x4e86;&#x89e3;&#x7279;&#x5b9a;&#x7684;&#x4ee3;&#x7801;&#x662f;&#x5982;&#x4f55;&#x5de5;&#x4f5c;&#x7684;&#x3002",{"_index":4993,"title":{},"body":{"Testing/filename-conventions.html#文件名约定":{}}}],["x4f60;&#x53ef;&#x80fd;&#x9700;&#x8981;&#x4e00;&#x904d;&#x53c8;&#x4e00;&#x904d;&#x5730;&#x5199;&#x505a;&#x76f8;&#x540c;&#x7684;&#x4e8b;&#x60c5;&#x3002",{"_index":2116,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x4f60;&#x603b;&#x662f;&#x5e0c;&#x671b;&#x4f60;&#x7684;&#x6d4b;&#x8bd5;&#x901a;&#x8fc7",{"_index":5407,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x4f60;&#x80fd;&#x53d1;&#x73b0;&#x5dee;&#x522b;&#x5417;&#xff1f",{"_index":3540,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x4f7f",{"_index":4100,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x4f7f;&#x7528",{"_index":801,"title":{"Form/template-model-binding.html#使用-Model-绑定":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Advanced-angular/aot_config.html#AoT-配置":{},"Routing/query_params.html#传递查询参数":{},"Routing/routerlink.html#RouterLink":{},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{},"Testing/async-execution.html#异步执行测试":{},"state-management/actions.html#Actions":{}}}],["x4f7f;&#x7528;&#x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x6211;&#x4eec;&#x9996;&#x5148;&#x8c03;&#x7528",{"_index":6714,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x4f7f;&#x7528;&#x4efb;&#x4f55;&#x7c7b;&#x578b",{"_index":1842,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x4f7f;&#x7528;&#x5176;&#x4ed6;&#x8f93;&#x5165;&#x9a8c;&#x8bc1;&#x8f93;&#x5165",{"_index":2128,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x4f7f;&#x7528;&#x539f;&#x59cb",{"_index":3172,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x4f7f;&#x7528;&#x5728",{"_index":6376,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x4f7f;&#x7528;&#x590d;&#x6742;&#x6587;&#x672c;&#x7f16;&#x8f91;&#x5668;&#xff08;&#x6216;ide&#xff09;&#x7684;&#x5f00;&#x53d1;&#x8005;&#x4f1a;&#x6ce8;&#x610f;&#x5230;&#x81ea;&#x52a8;&#x5b8c;&#x6210;&#x548c;&#x7c7b;&#x578b;&#x5efa;&#x8bae;&#x7684;&#x663e;&#x7740;&#x6539;&#x8fdb;&#x3002",{"_index":3050,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x4f7f;&#x7528;&#x59d4;&#x6258;&#xff0c;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x5c06;&#x5305;&#x542b;&#x5bf9;&#x4e0d;&#x540c;&#x5bf9;&#x8c61;&#x7684;&#x5f15;&#x7528;&#xff0c;&#x5b83;&#x5c06;&#x5207;&#x6362;&#x6267;&#x884c;&#x529f;&#x80fd;&#x7684;&#x8bf7;&#x6c42;&#x3002",{"_index":1257,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x4f7f;&#x7528;&#x5e73;&#x9762;&#x5bf9;&#x8c61;&#xff0c;&#x4f7f;&#x5f97;&#x52a8;&#x4f5c;&#x662f;&#x53ef;&#x5e8f;&#x5217;&#x5316;&#x7684;&#xff0c;&#x5e76;&#x4e14;&#x53ef;&#x4ee5;&#x91cd;&#x64ad;&#x5230;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x72b6;&#x6001;&#x3002",{"_index":5727,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x4f7f;&#x7528;&#x6211;&#x4eec;&#x5f53;&#x524d;&#x7684;&#x914d;&#x7f6e;&#xff0c;&#x5f53;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x88ab;&#x5f15;&#x5bfc;&#x5e76;&#x4e14;&#x6211;&#x4eec;&#x7684;&#x6839;&#x6a21;&#x5757;&#x88ab;&#x52a0;&#x8f7d;&#x5230;&#x5185;&#x5b58;&#x4e2d;&#x65f6;&#xff0c",{"_index":3524,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x4f7f;&#x7528;&#x63d0;&#x4f9b;&#x7684;api&#x5904;&#x7406;&#x66f4;&#x590d;&#x6742;&#x7684;&#x9a8c;&#x8bc1;&#x548c;&#x5b50;&#x7a97;&#x4f53;&#x3002",{"_index":1945,"title":{},"body":{"Form/form.html#Forms":{}}}],["x4f7f;&#x7528;&#x66ff;&#x4ee3;html5&#x6807;&#x7b7e;&#x683c;&#x5f0f",{"_index":2020,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x4f7f;&#x7528;&#x6a21;&#x5757;&#x5c06;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7684;&#x76f8;&#x5173;&#x529f;&#x80fd;&#x5206;&#x7ec4;&#x7684;&#x53e6;&#x4e00;&#x4e2a;&#x4f18;&#x70b9;&#x662f;&#x80fd;&#x591f;&#x6309;&#x9700;&#x52a0;&#x8f7d;&#x90a3;&#x4e9b;&#x7247;&#x6bb5;&#x3002",{"_index":3681,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x4f7f;&#x7528;&#x6b64;&#x65b9;&#x6cd5;&#xff0c;angular&#x7684;&#x533a;&#x57df;&#x4e0d;&#x4f1a;&#x4e0e;&#x60a8;&#x7684;&#x4ee3;&#x7801;&#x4ea4;&#x4e92;&#xff0c;&#x5e76;&#x4e14;&#x5728;&#x5168;&#x5c40;&#x533a;&#x57df;&#x53d8;&#x5f97;&#x7a33;&#x5b9a;&#x65f6;&#x4e0d;&#x4f1a;&#x63a5;&#x6536;&#x4e8b;&#x4ef6;&#x3002",{"_index":6701,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x4f7f;&#x7528;&#x6b64;&#x914d;&#x7f6e;&#xff0c;&#x4e24;&#x4e2a;&#x6a21;&#x5757;&#x7684;&#x7ec4;&#x4ef6;&#x90fd;&#x53ef;&#x4ee5;&#x8bbf;&#x95e",{"_index":3823,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x4f7f;&#x7528;&#x7684;&#x201c;&#x8fde;&#x63a5;&#x201d;&#x6837;&#x5f0f;&#x6709;&#x70b9;&#x4e0d;&#x540c;;&#x7136;&#x800c;&#x901a;&#x8fc7;&#x4f7f;&#x7528;angular",{"_index":6182,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x4f7f;&#x7528;&#x7684;&#x7b7e;&#x540d;&#x3002",{"_index":1588,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x4f7f;&#x7528;&#x793a;&#x4f8b;&#xff1a",{"_index":6387,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x4f7f;&#x7528;&#x89d2;&#x5ea6;i18n&#x5de5;&#x5177;&#x5c06;&#x6d88;&#x606f;&#x63d0;&#x53d6;&#x5230;&#x5de5;&#x4e1a;&#x6807;&#x51c6;&#x7ffb;&#x8bd1;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":2608,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["x4f7f;&#x7528;&#x8def;&#x7531;&#x53c2;&#x6570",{"_index":4714,"title":{"Routing/routeparams.html#使用路由参数":{}},"body":{}}],["x4f7f;&#x7528;&#x8f85;&#x52a9;&#x8def;&#x7531",{"_index":4465,"title":{"Routing/aux-routes.html#使用辅助路由":{}},"body":{}}],["x4f7f;&#x7528;angular",{"_index":400,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{},"why_angular_2.html#Angular-2-的优点":{}}}],["x4f7f;&#x7528;angular&#x7684;i18n",{"_index":2605,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["x4f7f;&#x7528;angular&#x7f16;&#x8bd1;&#x5668;&#x5bfc;&#x5165;&#x5df2;&#x5b8c;&#x6210;&#x7684;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6",{"_index":2610,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["x4f7f;&#x7528;aot&#x7f16;&#x8bd1;&#x5668;&#x5bfc;&#x5165;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6",{"_index":2540,"title":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}},"body":{}}],["x4f7f;&#x7528;aot&#xff0c;&#x4e0",{"_index":3135,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x4f7f;&#x7528;chai",{"_index":5510,"title":{"Testing/using-chai.html#使用Chai":{}},"body":{}}],["x4f7f;&#x7528;javascript&#x7f16;&#x5199;&#x7684;&#x4ee3;&#x7801;&#x5e94;&#x8be5;&#x53ef;&#x4ee5;&#x5728;&#x4efb;&#x4f55;&#x73b0;&#x4ee3;&#x7684;&#x7f51;&#x7edc;&#x6d4f;&#x89c8;&#x5668;&#xff08;firefox&#xff0c;ie9",{"_index":6197,"title":{},"body":{"tooling/chrome.html#Web浏览器":{}}}],["x4f7f;&#x7528;jit",{"_index":2569,"title":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}},"body":{}}],["x4f7f;&#x7528;mockbackend&#x6d4b;&#x8bd5;http&#x8bf7;&#x6c42",{"_index":5283,"title":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}},"body":{}}],["x4f7f;&#x7528;redux&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x5c06;&#x4e00;&#x7cfb;&#x5217;&#x4e8b;&#x4ef6;&#x91cd;&#x64ad;&#x5230;reducer&#x4e2d;&#xff0c;&#x4ece;&#x800c;&#x83b7;&#x5f97;&#x65b0;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x72b6;&#x6001;&#x3002",{"_index":5990,"title":{},"body":{"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}}}],["x4f7f;&#x7528;rxjs&#x64cd;&#x4f5c;&#x7b26;&#x5b9e;&#x73b0;&#x66f4;&#x591a;&#x9ad8;&#x7ea7;&#x7279;&#x6027",{"_index":2320,"title":{"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{}},"body":{}}],["x4f7f;&#x7528;scheduletask",{"_index":6379,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x4f7f;&#x7528;webpack&#x7684;&#x6700;&#x5e38;&#x89c1;&#x65b9;&#x6cd5;&#x662f;&#x901a;&#x8fc7;cli&#x3002;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x8fd0;&#x884c;&#x547d;&#x4ee4;&#x4f1a;&#x6267;&#x884c",{"_index":4198,"title":{},"body":{"Project-setup/installation_and_usage.html#安装":{},"Project-setup/installation_and_usage.html#设置和使用":{}}}],["x4f7f;&#x7528;webpack&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x914d;&#x7f6e;&#x5982;&#x4f55;&#x6346;&#x7ed1;&#x6211;&#x4eec;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5",{"_index":5211,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x4f7f;&#x7528;zone.js&#x8ddf;&#x8e2a;&#x6240;&#x6709;&#x7684;&#x5f02;&#x6b65;&#x8c03;&#x7528;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x4e3a;&#x6211;&#x4eec;&#x63d0;&#x4f9b;&#x66f4;&#x957f;&#xff0c;&#x66f4;&#x8be6;&#x7ec6;&#x7684;&#x4e8b;&#x4ef6;&#x548c;&#x8c03;&#x7528;&#x7684;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x66f4;&#x5bb9;&#x6613;&#x627e;&#x5230;&#x5bfc;&#x81f4;&#x5f02;&#x5e38;&#x7684;&#x539f;&#x56e0;&#x3002",{"_index":6709,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x4f8b;&#x5982;&#x3002",{"_index":4321,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x4f8b;&#x5982;&#xff0c",{"_index":2314,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{},"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x4f8b;&#x5982;&#xff0c;&#x4ee5;&#x4e0b;&#x4ee3;&#x7801;&#x5b9a;&#x4e49;&#x4e86;&#x5728;&#x8def;&#x5f84",{"_index":4740,"title":{},"body":{"Routing/routerlink.html#RouterLink":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5047;&#x8bbe;&#x6211;&#x4eec;&#x6709;&#x4e00;&#x4e2a",{"_index":4664,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5047;&#x8bbe;&#x7528;&#x6237;&#x5df2;&#x5c06;&#x4fe1;&#x606f;&#x952e;&#x5165;&#x9875;&#x9762;&#x4e0a;&#x7684;&#x8868;&#x5355;&#xff0c;&#x4f46;&#x5c1a;&#x672a;&#x63d0;&#x4ea4;&#x8868;&#x5355;&#x3002",{"_index":4653,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5728;&#x5177;&#x6709;&#x5206;&#x9875;&#x5217;&#x8868;&#x7684;&#x8def;&#x7531;&#x4e0a;&#xff0c;&#x7f51;&#x5740;&#x53ef;&#x80fd;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff0c;&#x8868;&#x793a;&#x6211;&#x4eec;&#x5df2;&#x52a0;&#x8f7d;&#x7b2c;&#x4e8c;&#x4e2a;&#x7f51;&#x9875;&#xff1a",{"_index":4604,"title":{},"body":{"Routing/query_params.html#传递可选参数":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c",{"_index":973,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x5b57;&#x7b26;&#x4e32",{"_index":467,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5982;&#x679c;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x591a;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x8ddf;&#x8e2a;&#x9875;&#x9762;&#x4e0a;&#x7684;&#x4e0d;&#x540c;&#x5185;&#x5bb9;&#x600e;&#x4e48;&#x529e;&#xff1f",{"_index":6070,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x4e3a;&#x8f93;&#x51fa;&#x5305;&#x6ce8;&#x5165;&#x811a;&#x672c;&#x6807;&#x8bb0;&#x3002",{"_index":4372,"title":{},"body":{"Project-setup/plugins.html#插件":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5f53;&#x7528;&#x6237;&#x5bfc;&#x822a;&#x79bb;&#x5f00;&#x65f6;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x6709;&#x4e00;&#x4e2a;&#x5bf9;&#x8bdd;&#x670d;&#x52a1;&#x8bf7;&#x6c42;&#x7528;&#x6237;&#x786e;&#x8ba4;&#x5bfc;&#x822a;&#x3002",{"_index":4699,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["x4f8b;&#x5982;&#xff0c;&#x60a8;&#x53ef;&#x80fd;&#x60f3;&#x8981;&#x8986;&#x76d6;&#x7ec4;&#x4ef6;&#x7684;&#x6a21;&#x677f;&#x3002;&#x8fd9;&#x5bf9;&#x4e8e;&#x6d4b;&#x8bd5;&#x5927;&#x578b;&#x7ec4;&#x4ef6;&#x7684;&#x4e00;&#x5c0f;&#x90e8;&#x5206;&#x5f88;&#x6709;&#x7528;&#xff0c;&#x56e0;&#x4e3a;&#x60a8;&#x53ef;&#x4ee5;&#x5ffd;&#x7565;dom&#x7684;&#x5176;&#x4f59;&#x90e8;&#x5206;&#x7684;&#x8f93;&#x51fa;&#xff0c;&#x5e76;&#x4e14;&#x53ea;&#x5173;&#x6ce8;&#x60a8;&#x611f;&#x5174;&#x8da3;&#x7684;&#x90e8;&#x5206;&#x3002",{"_index":5335,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["x4f8b;&#x5982;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x5e0c;&#x671b;&#x4e00;&#x4e9b;&#x8def;&#x7ebf;&#x53ea;&#x6709;&#x5728;&#x7528;&#x6237;&#x767b;&#x5f55;&#x6216;&#x63a5;&#x53d7;&#x6761;&#x6b3e;&#x548c;&#x6761;&#x4ef6;&#x540e;&#x624d;&#x53ef;&#x8bbf;&#x95ee;&#x3002",{"_index":4650,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x4f8b;&#x5982;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x7ec4;&#x4ef6;&#x7c7b",{"_index":5602,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x4f8b;&#x5982;&#xff0c;&#x6cd5;&#x8bed;&#x8bed;&#x8a00;&#x547d;&#x4ee4;&#x770b;&#x8d77;&#x6765;&#x50cf;&#x8fd9;&#x6837;&#xff1a",{"_index":2553,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x4f8b;&#x5982;&#xff0c;&#x8003;&#x8651;&#x5c06;&#x7ec4;&#x4ef6;&#x4ee3;&#x7801;&#x91cd;&#x6784;&#x5230;&#x670d;&#x52a1;&#x4e2d;&#xff0c;&#x5e76;&#x4e13;&#x6ce8;&#x4e8e;&#x670d;&#x52a1;&#x6d4b;&#x8bd5;&#xff0c;&#x53cd;&#x4e4b;&#x4ea6;&#x7136;&#x3002",{"_index":5368,"title":{},"body":{"Testing/refactor.html#重构难以测试的代码":{}}}],["x4f8b;&#x5982;&#xff0c;&#x8ba1;&#x7b97;&#x7ea2;&#x8272;&#x70b9;&#x51fb;&#x6b21;&#x6570;&#x4e0e;&#x84dd;&#x8272;&#x70b9;&#x51fb;&#x6b21;&#x6570;&#x3002",{"_index":6071,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x4f8b;&#x5982;&#xff0c;&#x8fdb;&#x5165",{"_index":4238,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x4f8b;&#x5982;&#xff1a",{"_index":410,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{},"Di/injection_beyond_classes.html#类以外的注入":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"Project-setup/loaders.html#Webpack-配置":{},"Routing/child_routes.html#链接":{}}}],["x4f8b;&#x5982;&#xff1a;&#x4ea7;&#x54c1;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#x9875;&#x9762;&#x53ef;&#x80fd;&#x6709;&#x4e00;&#x4e2a;&#x6807;&#x7b7e;&#x5f0f;&#x5bfc;&#x822a;&#x90e8;&#x5206;&#xff0c;&#x9ed8;&#x8ba4;&#x663e;&#x793a;&#x4ea7;&#x54c1;&#x6982;&#x8ff0;&#x3002",{"_index":4516,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x4f8b;&#x5b50",{"_index":6703,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x4f9d;&#x8d56;&#x4ed6;&#x4eba",{"_index":2913,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x4f9d;&#x8d56;&#x5176;&#x5b83;&#x670d;&#x52a1;&#x7684",{"_index":5901,"title":{"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}},"body":{}}],["x4f9d;&#x8d56;&#xff0c;&#x5728;&#x8fd9;&#x91cc;&#x6211;&#x4eec;&#x5c06;&#x4e3a;&#x7ec4;&#x4ef6;&#x63d0;&#x4f9b;&#x6a21;&#x62df;&#x6570;&#x636e;&#x3002",{"_index":5068,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x4fdd;&#x5b58;&#x539f;&#x59cb;&#x7684;settimeout&#x5f15;&#x7528",{"_index":6341,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["x4fdd;&#x5b58;settimeout&#x7684;&#x539f;&#x59cb;&#x5f15;&#x7528",{"_index":6375,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x4fdd;&#x6301;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x72b6;&#x6001",{"_index":4762,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x4fee;&#x6539;&#x5e94;&#x7528;&#x7684",{"_index":5876,"title":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}},"body":{}}],["x4fee;&#x6539;&#x6b64;&#x5bf9;&#x8c61;&#x7684;&#x67d0;&#x4e9b;&#x5c5e;&#x6027;&#x5c06;&#x544a;&#x8bc9;karma&#x6211;&#x4eec;&#x60f3;&#x8981;&#x505a;&#x4ec0;&#x4e48;&#x3002",{"_index":5181,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x503c;&#x3002;&#x8bf7;&#x770b;&#x4e0b;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#xff1a",{"_index":1148,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x503c;&#x5c06;&#x5728;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x4e2d;&#x6301;&#x7eed;&#x3002",{"_index":3645,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x503c;&#x8986;&#x76d6;&#x7b2c;&#x4e00;&#x4e2a",{"_index":496,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x503c;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x662f;&#x6700;&#x540e;&#x63d0;&#x4f9b;&#x7684;&#x3002",{"_index":497,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x5047;&#x5b9a;&#x6211;&#x4eec;&#x6a21;&#x5757;&#x7684;&#x6839;&#xff08;&#x552f;&#x4e00;&#xff09;&#x7ec4;&#x4ef6;&#x662f",{"_index":3583,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5047;&#x8bbe;&#x4f60;&#x6709;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x5b83;&#x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x201c;&#x6700;&#x5c0f;&#x201d;&#x53c2;&#x6570;&#x5e76;&#x8fd4;&#x56de;&#x53e6;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x3002",{"_index":2121,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x5047;&#x8bbe;&#x4f60;&#x8981;&#x63d0;&#x4ea4;&#x4e00;&#x4e2a;&#x7c7b;&#x4f3c;&#x4e0b;&#x9762;&#x7684;&#x6570;&#x636e;&#xff1a",{"_index":2010,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x5047;&#x8bbe;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x663e;&#x793a;&#x4ea7;&#x54c1;&#x5217;&#x8868;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002;&#x5f53;&#x7528;&#x6237;&#x70b9;&#x51fb;&#x5217;&#x8868;&#x4e2d;&#x7684;&#x4ea7;&#x54c1;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x8981;&#x663e;&#x793a;&#x4e00;&#x4e2a;&#x9875;&#x9762;&#xff0c;&#x663e;&#x793a;&#x8be5;&#x4ea7;&#x54c1;&#x7684;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#x3002;&#x4e3a;&#x6b64;&#x4f60;&#x5fc5;&#x987b;&#xff1a",{"_index":4715,"title":{},"body":{"Routing/routeparams.html#使用路由参数":{}}}],["x50cf;&#x7ec4;&#x4ef6;&#x4e00;&#x6837;&#xff0c;&#x670d;&#x52a1;&#x901a;&#x5e38;&#x9700;&#x8981;&#x4f9d;&#x8d56;&#xff0c;angular&#x901a;&#x8fc7;&#x670d;&#x52a1;&#x7c7b;&#x7684;&#x6784;&#x9020;&#x51fd;&#x6570;&#x6ce8;&#x5165;&#x3002;&#x7531;&#x4e8e;&#x6211;&#x4eec;&#x5728;angular&#x7684;&#x5f15;&#x5bfc;&#x8fc7;&#x7a0b;&#x4e4b;&#x5916;&#x521d;&#x59cb;&#x5316;&#x8fd9;&#x4e9b;&#x7c7b;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x81ea;&#x5df1;&#x663e;&#x5f0f;&#x6ce8;&#x5165;&#x8fd9;&#x4e9b;&#x4f9d;&#x8d56;&#x3002;&#x8fd9;&#x662f;&#x901a;&#x8fc7;&#x4f7f;&#x7528;testbed&#x914d;&#x7f6e;&#x6d4b;&#x8bd5;&#x6a21;&#x5757;&#x4f20;&#x56de;&#x6240;&#x9700;&#x7684;&#x4f9d;&#x8d56;&#x9879;&#xff08;&#x5982;http&#x6a21;&#x5757;&#xff09;&#x6765;&#x5b9e;&#x73b0;&#x7684;&#x3002",{"_index":5414,"title":{},"body":{"Testing/strategies.html#注入依赖关系":{}}}],["x5141;&#x8bb8;&#x5728;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x6587;&#x4ef6;&#x7684;&#x5185;&#x5bb9;&#x88ab;&#x6267;&#x884c;&#x4e4b;&#x524d;&#x5bf9;&#x5176;&#x6267;&#x884c;&#x4e00;&#x4e9b;&#x64cd;&#x4f5c;&#x3002",{"_index":5199,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x5141;&#x8bb8;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5728;&#x66f4;&#x4e00;&#x822c;&#x7684;&#x7ea7;&#x522b;&#xff0c;&#x800c;&#x4e0d;&#x53ea;&#x662f;&#x6b63;&#x5728;&#x5448;&#x73b0;&#x7684;&#x5185;&#x5bb9;&#x7684;&#x8be6;&#x7ec6;&#x4fe1;&#x606f",{"_index":5568,"title":{},"body":{"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["x5141;&#x8bb8;&#x6211;&#x4eec;&#x5c06",{"_index":1670,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x5143;&#x6570;&#x636e;&#x3002",{"_index":569,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5143;&#x7d20;&#x4e2d;&#x3002",{"_index":4749,"title":{},"body":{"Routing/routeroutlet.html#动态添加路由组件":{}}}],["x5143;&#x7d20;&#x4e2d;&#x4f7f;&#x7528;&#x4e86",{"_index":3427,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x5143;&#x7d20;&#x4e4b;&#x540e;&#x3002",{"_index":4751,"title":{},"body":{"Routing/routeroutlet.html#动态添加路由组件":{}}}],["x5165;&#x95e8",{"_index":1953,"title":{"Form/getting-started.html#入门":{}},"body":{}}],["x5168;&#x9762;&#x652f;&#x6301;&#x3002",{"_index":2916,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x516c;&#x5f00;&#x4e3b;&#x673a;&#x73af;&#x5883;&#x7684;&#x4efb;&#x52a1;&#x8c03;&#x5ea6;&#x548c;&#x5904;&#x7406;&#x7684;&#x53ef;&#x89c1;&#x6027;&#xff08;&#x8303;&#x56f4;&#x9650;&#x5236;&#x5230;&#x5f53;&#x524d",{"_index":6797,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["x5171;&#x4eab;&#x6a21;&#x5757;&#x548c;&#x4f9d;&#x8d56;&#x6ce8;&#x5165",{"_index":3815,"title":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}},"body":{}}],["x5171;&#x4eab;&#x76f8;&#x540c;&#x7684;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x6811",{"_index":3792,"title":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}},"body":{}}],["x5173;&#x4e8e;&#x201c;&#x884c;&#x4e3a;&#x59d4;&#x6d3e;&#x201d;&#x7684;&#x826f;&#x597d;&#x8ba8;&#x8bba;&#x53ef;&#x4ee5;&#x5728",{"_index":1265,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x5173;&#x6ce8;&#x7528;&#x6237;&#x4f53;&#x9a8c;&#xff1a;&#x5728;&#x67d0;&#x4e9b;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x9632;&#x6b62;&#x610f;&#x5916;&#x8f93;&#x5165;&#x662f;&#x6709;&#x610f;&#x4e49;&#x7684;&#xff0c;&#x5728;&#x5176;&#x4ed6;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5141;&#x8bb8;&#x4e0d;&#x53d7;&#x9650;&#x5236;&#x7684;&#x8f93;&#x5165;&#x662f;&#x6709;&#x610f;&#x4e49;&#x7684;&#xff0c;&#x4f46;&#x63d0;&#x4f9b;&#x7c7b;&#x4f3c;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x4e1c;&#x897f;&#x4ee5;&#x663e;&#x793a;&#x9650;&#x5236;&#x3002",{"_index":2233,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["x5173;&#x952e;&#x5b57;&#x3002",{"_index":1325,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["x5173;&#x952e;&#x5b57;&#x4ec",{"_index":1364,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x5173;&#x952e;&#x5b57;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#x7684;&#x522b;&#x540d;&#x3002",{"_index":1778,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x5173;&#x952e;&#x5b57;&#x5bfc;&#x51fa;&#x3002",{"_index":1321,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["x5173;&#x952e;&#x5b57;&#x6765;&#x5f15;&#x7528;&#x7c7b;&#x7684;&#x5b9e;&#x4f8b;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":1409,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5173;&#x952e;&#x5b57;&#x7684;&#x597d;&#x5904;&#x53d8;&#x5f97;&#x660e;&#x663e;&#x3002",{"_index":1781,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x5173;&#x952e;&#x5b57;&#x7b80;&#x5316;&#x4e86;&#x6ce8;&#x91ca;&#x548c;&#x91cd;&#x7528;&#x8054;&#x5408;&#x7c7b;&#x578b;&#x3002",{"_index":1787,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x5173;&#x952e;&#x5b57;&#xff0c;&#x5b83;&#x7528;&#x4e8e;&#x5c06;&#x53c2;&#x6570;&#x4f20;&#x9012;&#x7ed9;&#x57fa;&#x7c7b",{"_index":1368,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x5173;&#x952e;&#x70b9;&#xff1a",{"_index":6283,"title":{},"body":{"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x5176;&#x4e2d;&#x4e00;&#x4e2a;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x4f60;&#x4e0d;&#x80fd;&#x8f7b;&#x6613;&#x5730;&#x4ece;&#x5b83;&#x7684;&#x5bf9;&#x8c61;&#x4e2d;&#x5206;&#x79bb;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;&#x3002;&#x8003;&#x8651;&#x8fd9;&#x4e2a;&#x4f8b;&#x5b50;&#xff1a",{"_index":1436,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5176;&#x4ed6;&#x4e00;&#x5207;&#x90fd;&#x4fdd;&#x6301;&#x4e0d;&#x53d8",{"_index":5105,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x5176;&#x4ed6;&#x5e38;&#x7528",{"_index":4329,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x5176;&#x4ed6;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x7ec4;&#xff0c;&#x5982",{"_index":1837,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x5176;&#x4ed6;&#x8d44;&#x6e90",{"_index":5246,"title":{"Testing/karma-config.html#其他资源":{}},"body":{}}],["x5177;&#x4f53;&#x6765;&#x8bf4;&#x662f",{"_index":404,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x5177;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x6807;&#x8bc6;&#x7b26;&#xff0c",{"_index":1668,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x5185",{"_index":6680,"title":{"zone/zone.html#在-Zone-内":{}},"body":{}}],["x5185;&#x7684",{"_index":1426,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5185;&#x7684;&#x4ee3;&#x7801;&#x7684;&#x6267;&#x884c;&#x3002",{"_index":6794,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["x5185;&#x7684;&#x6587;&#x672c;&#x53ea;&#x80fd;&#x5728;&#x4e00;&#x884c;&#x4e0a;&#xff0c;&#x6ca1;&#x6709;&#x529e;&#x6cd5;&#x5728;&#x8fd9;&#x4e9b;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x63d2;&#x5165;&#x6570;&#x636e;&#xff0c;&#x8fd9;&#x5bfc;&#x81f4;&#x4e86;&#x5f88;&#x591a;&#x770b;&#x8d77;&#x6765;&#x50cf;&#x4e0b;&#x9762;&#x90a3;&#x6837;&#x4e11;&#x964b;&#x7684;&#x4e32;&#x8054;&#x4ee3;&#x7801;&#xff1a",{"_index":1520,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x5185;&#x7f6e;&#x9a8c;&#x8bc1;&#x5668;&#x975e;&#x5e38;&#x6709;&#x7528;&#xff0c;&#x80fd;&#x591f;&#x5f15;&#x5165;&#x4f60;&#x81ea;&#x5df1;&#x7684;&#x9a8c;&#x8bc1;&#x65b9;&#x5f0f;&#x3002",{"_index":2104,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x5185;&#x90e8",{"_index":6545,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x5185;&#x90e8;&#x7684;&#x8282;&#x70b9;&#x6a21;&#x5757;&#x7684;&#x4fe1;&#x606f;&#x3002",{"_index":3183,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x5185;&#x90e8;&#xff0c",{"_index":1420,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x518d;&#x6b21;&#x6ce8;&#x610f;&#xff0c;&#x5728",{"_index":5632,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["x51c6;&#x5907;&#x5c31;&#x7eea;&#x540e;&#xff0c;&#x4f7f;&#x7528",{"_index":2548,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x51fa;&#x4e8e;&#x8fd9;&#x4e2a;&#x539f;&#x56e0;&#xff0c;&#x8bf8;&#x5982;&#x66f4;&#x65b0;&#x6570;&#x636e;&#x5e93;&#x4e2d;&#x7684;&#x8bb0;&#x5f55;&#xff0c;&#x751f;&#x6210;id&#x7b49;&#x7684;&#x526f;&#x4f5c;&#x7528;&#x5f15;&#x8d77;&#x64cd;&#x4f5c;&#x5e94;&#x8be5;&#x5728;&#x5e94;&#x7528;&#x4e2d;&#x7684;&#x5176;&#x4ed6;&#x5730;&#x65b9;&#x5904;&#x7406;&#xff0c;&#x4f8b;&#x5982;&#x5728;&#x52a8;&#x4f5c;&#x521b;&#x5efa;&#x8005;&#x4e2d;&#xff0c;&#x4f7f;&#x7528;&#x4e2d;&#x95f4;&#x4ef6;&#x4f8b;&#x5982",{"_index":5999,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x51fd;&#x6570;&#x4e0d;&#x662f;javascript&#x4e2d;&#x552f;&#x4e00;&#x4f7f;&#x7528;&#x9017;&#x53f7;&#x5206;&#x9694;&#x5217;&#x8868;&#x7684;&#x5730;&#x65b9",{"_index":1486,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["x51fd;&#x6570;&#x4ee5;&#x67e5;&#x770b;&#x662f;&#x5426;&#x663e;&#x793a;&#x65b0;&#x6d88;&#x606f;&#xff0c;&#x53e6;&#x4e00;&#x4e2a;&#x6d4b;&#x8bd5",{"_index":5541,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x51fd;&#x6570;&#x4ee5;&#x67e5;&#x770b;&#x6e05;&#x9664;&#x6d88;&#x606f;&#x662f;&#x5426;&#x6309;&#x9884;&#x671f;&#x5de5;&#x4f5c;&#x3002",{"_index":5542,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x8fd4;&#x56d",{"_index":4694,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["x51fd;&#x6570;&#x548c;&#x6d88;&#x8d39;&#x8005;&#x4e2d;&#x7684",{"_index":596,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x51fd;&#x6570;&#x5b9e;&#x73b0;&#x4e86",{"_index":4683,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x51fd;&#x6570;&#x5c06;&#x4f1a;&#x8bbe;&#x7f6e;&#x4e00;&#x4e2a;&#x7a7a;&#x6d88;&#x606f;&#x3002",{"_index":5537,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x51fd;&#x6570;&#x5c06;&#x88ab;&#x7981;&#x7528;&#x7684;&#x7ec4;&#x4ef6;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x4f20;&#x9012;&#x7ed9;&#x51fd;&#x6570;&#xff1a",{"_index":4691,"title":{},"body":{"Routing/route_guards.html#实现-CanDeactivate":{}}}],["x51fd;&#x6570;&#x6539;&#x53d8;&#xff0c;&#x800c",{"_index":5536,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x51fd;&#x6570;&#x6765;&#x5b9e;&#x73b0;&#x7684;&#x3002",{"_index":5550,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x51fd;&#x6570;&#x7c7b;&#x578b;&#x5b9a;&#x4e49",{"_index":1798,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x51fd;&#x6570;&#x7c7b;&#x578b;&#x6ce8;&#x91ca;&#x53ef;&#x4ee5;&#x6bd4;&#x5185;&#x7f6e;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#x7684;typescript&#x66f4;&#x52a0;&#x5177;&#x4f53;&#x3002",{"_index":1799,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528",{"_index":1482,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#xff1a",{"_index":1429,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x51fd;&#x6570;&#xff0c;&#x5b83;&#x5c06;&#x4fee;&#x6539;dom&#xff0c;&#x56e0;&#x6b64;&#x5b83;&#x5c06;&#x662f;&#x6211;&#x4eec;&#x6d4b;&#x8bd5;&#x7684;&#x4e3b;&#x8981;&#x76ee;&#x6807;&#x3002",{"_index":5044,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e2e;&#x52a9;angular&#x8ddf;&#x8e2a;&#x5217;&#x8868;&#x4e2d;&#x7684;&#x9879;&#x76ee;&#xff0c;&#x4ee5;&#x4fbf;&#x5b83;&#x53ef;&#x4ee5;&#x68c0;&#x6d4b;&#x54ea;&#x4e9b;&#x9879;&#x76ee;&#x5df2;&#x6dfb;&#x52a0;&#x6216;&#x5220;&#x9664;&#xff0c;&#x5e76;&#x63d0;&#x9ad8;&#x6027;&#x80fd;&#x3002",{"_index":969,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x51fd;&#x6570;&#xff0c;&#x8fd9;&#x5c06;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x7cbe;&#x786e;&#x5730;&#x6a21;&#x62df;&#x65f6;&#x95f4;&#x7684;&#x6d41;&#x901d;&#x3002",{"_index":4876,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x51fd;&#x6570;&#xff1a",{"_index":976,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5206;&#x522b;&#x9644;&#x52a0;&#x5230;&#x4efb;&#x52a1;&#x540d;&#x79f0;&#x3002",{"_index":4350,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x5206;&#x5f00;&#x3002;&#x88c5;&#x8f7d;&#x673a;&#x4ece;&#x53f3;&#x5230;&#x5de6;&#x6267;&#x884c;&#x3002",{"_index":4295,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x5206;&#x79bb;&#x65f6;&#xff0c;&#x5f15;&#x7528;&#x4e22;&#x5931;&#x4e86;&#x3002",{"_index":1442,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":5070,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;&#x4f7f;&#x7528",{"_index":5056,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;&#x6a21;&#x62df;&#x540e;&#x7aef;&#xff0c;&#x521d;&#x59cb;&#x5316;&#x670d;&#x52a1;&#xff0c;&#x5e76;&#x6d4b;&#x8bd5;&#xff0c;&#x770b;&#x770b;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x505a;&#x51fa;&#x7684;&#x8bf7;&#x6c42;&#x662f;&#x5426;&#x6b63;&#x786e;&#xff0c;&#x4ee5;&#x53ca;&#x5982;&#x679c;&#x901a;&#x8fc7;&#x540e;&#x7aef;&#x8fd4;&#x56de;&#x7684;&#x6570;&#x636e;&#x6210;&#x529f;&#x5730;&#x7528;&#x4e8e;&#x8be5;&#x670d;&#x52a1;&#x3002",{"_index":5099,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;&#x6d4b;&#x8bd5;&#x5e73;&#x53f0;&#xff0c;&#x7136;&#x540e;&#x624d;&#x80fd;&#x4f7f;&#x7528;testbed&#x8fdb;&#x884c;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x3002",{"_index":5436,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x4f8b;&#x5b50;&#x3002",{"_index":6763,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x521b;&#x5efa;&#x529f;&#x80fd;&#x6a21;&#x5757",{"_index":3462,"title":{"Modules/feature-modules.html#创建功能模块":{}},"body":{}}],["x521b;&#x5efa;&#x5e94;&#x7528;&#x7684;root",{"_index":5794,"title":{"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}},"body":{}}],["x521b;&#x5efa;&#x64cd;&#x4f5c;&#x53d8;&#x5f97;&#x66f4;&#x52a0;&#x7b80;&#x6d01;&#x548c;&#x5e72;&#x51c0;&#xff1a",{"_index":5732,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x521b;&#x5efa;&#x6d4b;&#x8bd5;&#x5e73;&#x53f0;&#xff08;&#x5982;&#x679c;&#x6d4b;&#x8bd5;&#x5e73;&#x53f0;&#x4e0d;&#x5b58;&#x5728;&#xff09;&#xff0c;&#x7f16;&#x8bd1;&#x6a21;&#x677f;&#xff0c;&#x7136;&#x540e;&#x5bfc;&#x51fa",{"_index":5440,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x521b;&#x5efa;&#x6e90;&#x6587;&#x672c;&#xff08;literal&#xff09;&#x5bf9;&#x8c61;&#x3002",{"_index":1244,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["x521b;&#x5efa;&#x7684;&#x6587;&#x4ef6;&#x5c06;&#x662f;&#x60a8;&#x5c06;&#x4e0e;&#x5c06;&#x4f7f;&#x7528;xliff&#x6587;&#x4ef6;&#x7f16;&#x8f91;&#x5668;&#x586b;&#x5199;&#x7ffb;&#x8bd1;&#x7684;&#x7ffb;&#x8bd1;&#x8005;&#x5171;&#x4eab;&#x7684;&#x6587;&#x4ef6;&#x3002",{"_index":2630,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x521b;&#x5efa;&#x7684;di&#x6811;&#x7684;&#x4e0d;&#x540c;&#x5206;&#x652f;&#x4e2d;&#x3002",{"_index":3655,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x521b;&#x5efa;&#x7ed3;&#x6784;&#x6307;&#x4ee4",{"_index":3232,"title":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}},"body":{}}],["x521b;&#x5efa;&#x8005;&#xff0c;&#x56e0;&#x4e3a;&#x6240;&#x6709;reducer&#x64cd;&#x4f5c;&#x662f;&#x540c;&#x6b65;&#x7684;&#xff0c;&#x8fd9;&#x4f7f;&#x6211;&#x4eec;&#x7684;&#x5168;&#x5c40;&#x72b6;&#x6001;&#x5bb9;&#x6613;&#x8ddf;&#x8e2a;&#xff0c;&#x540c;&#x65f6;&#x4e5f;&#x662f;&#x4e3a;&#x4ec0;&#x4e48;redux&#x7684;&#x62e5;&#x6709;&#x4f17;&#x591a;&#x7c89;&#x4e1d;&#x7684;&#x539f;&#x56e0;&#x3002",{"_index":5348,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x521b;&#x5efa;reducer&#x65f6;&#x7684;&#x53e6;&#x4e00;&#x4e2a;&#x8003;&#x8651;&#x56e0;&#x7d20;&#x662f;&#x786e;&#x4fdd;&#x5b83;&#x4eec;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x4fee;&#x6539;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x72b6;&#x6001;&#x3002;&#x5982;&#x679c;&#x60a8;&#x6539;&#x53d8;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x72b6;&#x6001;&#xff0c;&#x5b83;&#x53ef;&#x80fd;&#x4f1a;&#x5bfc;&#x81f4;&#x610f;&#x5916;&#x7684;&#x884c;&#x4e3a;&#x3002;&#x6709;&#x51e0;&#x79cd;&#x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x5e2e;&#x52a9;&#x7ef4;&#x62a4;reducer&#x7684;&#x4e0d;&#x53d8;&#x6027;&#x3002;&#x4e00;&#x79cd;&#x65b9;&#x6cd5;&#x662f;&#x4f7f;&#x7528;es6&#x7684;&#x65b0;&#x529f;&#x80fd;&#xff0c;&#x5982",{"_index":6001,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x522b;&#x4eba;&#x53ef;&#x4ee5;&#x5728;25&#x5206;&#x949f;&#x540e;&#x5728;&#x81ea;&#x5df1;&#x7684;&#x5bb6;&#x91cc;&#x5f00;&#x59cb;&#x64ad;&#x653e;&#x540c;&#x4e00;&#x90e8;&#x7535;&#x5f71;&#x3002",{"_index":3867,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5230",{"_index":3821,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x5230;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x3002;&#x7136;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x5bf9",{"_index":5295,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x5230;&#x76ee;&#x524d;&#x4e3a;&#x6b62;&#xff0c",{"_index":566,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5230;&#x76ee;&#x524d;&#x4e3a;&#x6b62;&#xff0c;&#x6211;&#x4eec;&#x5df2;&#x7ecf;&#x5c55;&#x793a;&#x4e86;&#x5982;&#x4f55;&#x521b;&#x5efa;&#x548c;&#x4f20;&#x64ad",{"_index":6299,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x5230;&#x76ee;&#x524d;&#x4e3a;&#x6b62;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x95ee;&#x9898;&#x662f;&#x6211;&#x4eec;&#x5728;di&#x6811;&#x7684;&#x4e0d;&#x540c;&#x7ea7;&#x522b;&#x521b;&#x5efa;&#x76f8;&#x540c;&#x670d;&#x52a1;&#x7684;&#x4e24;&#x4e2a;&#x5b9e;&#x4f8b;&#x3002",{"_index":3793,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x5230;&#x76ee;&#x524d;&#x4e3a;&#x6b62;&#xff0c;&#x6ce8;&#x5165;&#x8fc7;&#x7684;&#x552f;&#x4e00;&#x7c7b;&#x578b;&#x662f;&#x7c7b;&#xff0c;&#x4f46;angular",{"_index":562,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5230;&#x76ee;&#x524d;&#x4e3a;&#x6b62;&#xff0c;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x975e;&#x5e38;&#x5e38;&#x89c1;&#x7684;&#x6a21;&#x5757;&#xff0c;&#x4f9d;&#x8d56;&#x4e8",{"_index":3688,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5230;&#x76ee;&#x524d;&#x4e3a;&#x6b62;&#xff0c;angular&#x7684;&#x6587;&#x6863;&#x8d28;&#x91cf;&#x5f88;&#x597d;&#xff0c;&#x4f46;&#x662f;&#x53ea;&#x80fd;&#x6d89;&#x53ca;&#x5230;&#x8bb8;&#x591a;angular",{"_index":2876,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5236;&#x5b9a;&#x4e00;&#x4e2a;&#x573a;&#x666f;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":5404,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x524d;&#x9762;&#x4e3a;&#x4e86;&#x8bf4;&#x660e;&#x7c7b;&#x578b;&#x5173;&#x952e;&#x5b57;&#x800c;&#x63d0;&#x9ad8;&#x4e86;&#x4ee3;&#x7801;&#x7247;&#x6bb5;&#x7684;&#x53ef;&#x8bfb;&#x6027;&#xff0c;&#x8fd9;&#x91cc;&#x662f;&#x5b9a;&#x4e49;&#x4e3a;inline&#x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#x3002",{"_index":1803,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x524d;&#x9762;&#x52a0;&#x4e0a;&#x5176;name&#x5c5e;&#x6027;&#x7684;&#x503c;&#x3002",{"_index":3947,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x5269;&#x4f59;&#x53c2;&#x6570",{"_index":1496,"title":{"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["x5269;&#x4f59;&#x53c2;&#x6570;&#x4e0e;&#x6269;&#x5c55;&#x8bed;&#x53e5;&#x76f8;&#x53cd;&#xff0c;&#x5b83;&#x5c06;&#x4e0d;&#x5b9a;&#x6570;&#x91cf;&#x7684;&#x9017;&#x53f7;&#x5206;&#x9694;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#x6536;&#x96c6;&#x5230;&#x6570;&#x7ec4;&#x4e2d;&#x3002",{"_index":1484,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{}}}],["x5269;&#x4f59;&#x53c2;&#x6570;&#x5171;&#x4eab;&#x6269;&#x5c55;&#x8bed;&#x53e5;&#x7684;&#x7701;&#x7565;&#x53f7;&#x8bed;&#x6cd5;&#xff0c;&#x4f46;&#x76ee;&#x7684;&#x4e0d;&#x540c;&#x3002;&#x5269;&#x4f59;&#x53c2;&#x6570;&#x7528;&#x4e8e;&#x8bbf;&#x95ee;&#x4f20;&#x9012;&#x7ed9;&#x51fd;&#x6570;&#x4e0d;&#x786e;&#x5b9a;&#x6570;&#x91cf;&#x7684;&#x53c2;&#x6570;&#x3002",{"_index":1497,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["x5269;&#x4f59;&#x53c2;&#x6570;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x6570;&#x7ec4;&#xff0c;&#x5b83;&#x63d0;&#x4f9b;&#x5bf9",{"_index":1501,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["x5269;&#x4f59;&#x64cd;&#x4f5c;&#x7b26",{"_index":1294,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x529f;&#x80fd;&#x3002",{"_index":4684,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x529f;&#x80fd;&#x5bfc;&#x822a;&#x5230;&#x8def;&#x7531;&#xff1a",{"_index":4743,"title":{},"body":{"Routing/routerlink.html#Navigating-Programmatically":{}}}],["x529f;&#x80fd;&#x6a21;&#x5757",{"_index":3467,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x52a0;&#x8f7d;&#x3002",{"_index":3726,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x52a0;&#x8f7d;&#x5668;&#x662f;&#x4e00;&#x79cd;&#x914d;&#x7f6e;webpack&#x5982;&#x4f55;&#x8f6c;&#x6362;&#x6211;&#x4eec;&#x7684;bundle&#x4e2d;&#x7684;&#x7279;&#x5b9a;&#x6587;&#x4ef6;&#x7684;&#x8f93;&#x51fa;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":4290,"title":{},"body":{"Project-setup/loaders.html#Loaders":{}}}],["x52a0;&#x8f7d;&#x5668;&#x901a;&#x8fc7;&#x4f7f;&#x7528",{"_index":4293,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x52a0;&#x8f7d;&#x6a21;&#x5757;&#x4e2d;&#x7684;&#x5171;&#x4eab;&#x6a21;&#x5757;&#x5bfc;&#x5165;&#x7684;&#x670d;&#x52a1;&#x3002",{"_index":3817,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x52a0;&#x8f7d;es6&#x6a21;&#x5757;&#x6709;&#x70b9;&#x68d8;&#x624b;&#x3002",{"_index":1335,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["x52a8;&#x4f5c;&#x521b;&#x5efa;&#x8005;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f",{"_index":5893,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x52a8;&#x4f5c;&#x521b;&#x5efa;&#x8005;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5ef6;&#x8fdf;&#x5bf9",{"_index":5897,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x52a8;&#x6001;&#x6dfb;&#x52a0;&#x8def;&#x7531;&#x7ec4;&#x4ef6",{"_index":4745,"title":{"Routing/routeroutlet.html#动态添加路由组件":{}},"body":{}}],["x52a8;&#x753b",{"_index":5693,"title":{"animation/index.html#动画":{}},"body":{}}],["x5305;&#x540d;&#x79f0;&#xff09;&#x548c",{"_index":4254,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5305;&#x7684;&#x5185;&#x5bb9;&#x7684;&#x54c8;&#x5e0c;&#x503c;&#xff09;&#x3002",{"_index":4256,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5305;&#x7ba1;&#x7406;&#x5668;&#x201d;&#x3002",{"_index":6202,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x5305;&#x80fd;&#x591f;&#x5904;&#x7406;typescript&#x6587;&#x4ef6;&#x7684;&#x8fd9;&#x79cd;&#x8f6c;&#x6362;&#x3002",{"_index":4291,"title":{},"body":{"Project-setup/loaders.html#Loaders":{}}}],["x533a;&#x5206;&#x3002",{"_index":6587,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x533a;&#x57df;&#x66f4;&#x65b0;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#x4ee5;&#x663e;&#x793a;&#x533a;&#x57df;&#xff0c;&#x4ee5;&#x63d0;&#x9ad8;&#x53ef;&#x89c1;&#x6027;&#x3002",{"_index":6592,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x533a;&#x57df;&#x6807;&#x8bc6;&#xff08;&#x7531;ng",{"_index":2530,"title":{},"body":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{}}}],["x5347;&#x7ea7;&#x7a0b;&#x5e8f;&#x5141;&#x8bb8;&#x5c06;&#x5927;&#x578b;&#x9879;&#x76ee;&#x9010;&#x4e2a;&#x79fb;&#x52a8;&#x5230;angular",{"_index":2873,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5355;&#x5143;&#x6d4b;&#x8bd5",{"_index":5451,"title":{},"body":{"Testing/testing.html#TDD测试":{}}}],["x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e0e;&#x4e4b;&#x524d;&#x7c7b;&#x4f3c;&#xff0c;&#x4f46;&#x6211;&#x4eec;&#x9700;&#x8981;&#x6a21;&#x62df;&#x6211;&#x4eec;&#x7684;&#x72b6;&#x6001;&#x4ee5;&#x53ca;dispatch&#xff1a",{"_index":4941,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{}}}],["x5355;&#x5143;&#x6d4b;&#x8bd5;&#x5e94;&#x8be5;&#x53ea;&#x9a8c;&#x8bc1;&#x7279;&#x5b9a;&#x5355;&#x5143;&#x4ee3;&#x7801;&#x7684;&#x884c;&#x4e3a;&#x3002;&#x5982;&#x679c;&#x5355;&#x5143;&#x7684;&#x884c;&#x4e3a;&#x88ab;&#x4fee;&#x6539;&#xff0c;&#x5219;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e5f;&#x5c06;&#x88ab;&#x66f4;&#x65b0;&#x3002;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e0d;&#x5e94;&#x8be5;&#x5047;&#x8bbe;&#x4f60;&#x7684;&#x4ee3;&#x7801;&#x5e93;&#x6216;&#x4f60;&#x7684;&#x4f9d;&#x8d56;&#x7684;&#x5176;&#x4ed6;&#x90e8;&#x5206;&#x7684;&#x884c;&#x4e3a;&#x3002;&#x5f53;&#x4f60;&#x7684;&#x4ee3;&#x7801;&#x5e93;&#x7684;&#x5176;&#x4ed6;&#x90e8;&#x5206;&#x88ab;&#x4fee;&#x6539;&#xff0c;&#x4f60;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e0d;&#x5e94;&#x8be5;&#x5931;&#x8d25;&#x3002",{"_index":5455,"title":{},"body":{"Testing/testing.html#TDD测试":{}}}],["x5355;&#x5411;&#x7ed1;&#x5b9a",{"_index":2198,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["x5373;&#x4f7f;&#x60a8;&#x7684;&#x64cd;&#x4f5c;&#x6d89;&#x53ca;&#x5f02;&#x6b65;&#x903b;&#x8f91;&#xff0c;&#x6700;&#x7ec8;&#x7684;&#x5206;&#x6d3e;&#x64cd;&#x4f5c;&#x4ecd;&#x5c06;&#x662f;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;json&#x5bf9;&#x8c61;&#x3002",{"_index":5728,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x5373;&#x4f7f;&#x8fd9;&#x4e2a;&#x5c5e;&#x6027;&#x4e5f;&#x662f;&#x4e00;&#x4e2a;&#x6570;&#x7ec4;&#xff0c;99&#xff05;&#x7684;&#x60c5;&#x51b5;&#x6211;&#x4eec;&#x53ea;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#x3002",{"_index":3570,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5373;&#x4f7f;&#x8fd9;&#x4e9b;&#x6587;&#x4ef6;&#x88ab;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5305;&#x4e2d;&#x7684;&#x67d0;&#x4e2a;&#x6a21;&#x5757;&#x5f15;&#x7528;&#xff0c;&#x6211;&#x4eec;&#x4e5f;&#x5e0c;&#x671b;&#x5c06;&#x8fd9;&#x4e9b;&#x8d44;&#x6e90;&#x5206;&#x79bb;&#x5728;&#x7b2c;&#x4e09;&#x65b9;&#x4ee3;&#x7801;&#x4e2d;&#x3002",{"_index":4233,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x539f;&#x59cb;&#x7684;1.2",{"_index":3136,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x539f;&#x59cb;&#x7c7b;&#x578b;&#x793a;&#x4f8b;&#xff1a",{"_index":1844,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x539f;&#x6587;&#x94fe;&#x63a5",{"_index":2817,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x53c2;&#x6570;&#x88c5;&#x9970;&#x5668",{"_index":1930,"title":{"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}},"body":{}}],["x53cb;&#x597d;&#x7684",{"_index":3006,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x53cc;&#x5411;&#x7ed1;&#x5b9a",{"_index":2200,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["x53cd;&#x6fc0;&#x6d3b;&#x62e6;&#x622a",{"_index":4659,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x53cd;&#x8fc7;&#x6765;&#xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x5fc5;&#x987b;&#x6709;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#x51fd;&#x6570;&#x5728;&#x67d0;&#x5904;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5339;&#x914d;&#x4e0a;&#x9762;&#x63cf;&#x8ff0;&#x7684;&#x88c5;&#x9970;&#x5668;&#x7b7e;&#x540d;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":1593,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x53d1;&#x51fa;&#x6211;&#x4eec;&#x671f;&#x671b;&#x7684;actions&#x3002",{"_index":4937,"title":{},"body":{"Testing/complex-actions.html#测试复杂的-Actions":{}}}],["x53d1;&#x751f;&#x4e86;&#x4ec0;&#x4e48;&#x3002",{"_index":3514,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x53d8;&#x5316;&#x68c0;&#x6d4b",{"_index":6696,"title":{"zone/zone.html#变化检测":{}},"body":{}}],["x53d8;&#x5316;&#x68c0;&#x6d4b;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x4ee5;&#x83b7;&#x5f97;&#x66f4;&#x597d;&#x7684;&#x6027;&#x80fd;&#x3002",{"_index":6185,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x53d8;&#x5316;&#x68c0;&#x6d4b;&#x7b56;&#x7565;&#x3002",{"_index":129,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x53d8;&#x5316;&#x68c0;&#x6d4b;&#x7b56;&#x7565;&#xff1a;onpush",{"_index":126,"title":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}},"body":{}}],["x53d8;&#x91cf;&#xff08;&#x9664;&#x4e86;&#x7bad;&#x5934;&#x51fd;&#x6570;&#xff09;&#xff0c;&#x4f46;&#x662f",{"_index":1499,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["x53e6;&#x4e00;&#x4e2a;&#x53ef;&#x80fd;&#x4ee4;&#x4eba;&#x56f0;&#x60d1;&#x7684;&#x5b9e;&#x4f8b;&#x662f;&#x533f;&#x540d;&#x51fd;&#x6570;&#x6216;&#x5728;&#x5176;&#x4ed6;&#x51fd;&#x6570;&#x4e2d;&#x58f0;&#x660e;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":1449,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x53e6;&#x4e00;&#x4e2a;&#x6709;&#x7528;&#x7684;&#x65b9;&#x6cd5;&#x4f7f;&#x7528;hot",{"_index":3886,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x53e6;&#x4e00;&#x4e2a;&#x670d;&#x52a1",{"_index":483,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x53e6;&#x4e00;&#x4e2a;&#x7528;&#x4e8",{"_index":5547,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c",{"_index":3184,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x81ea;&#x5b9a;&#x4e49;&#x670d;&#x52a1;&#x4f7f;&#x7528;&#x5177;&#x6709",{"_index":3781,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x8fd8;&#x6709;&#x4e00;&#x4e2a;&#x70",{"_index":3868,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x53e6;&#x4e00;&#x79cd;&#x8bf4;&#x6cd5;&#x662f;&#xff0c;angular",{"_index":415,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x53e6;&#x5916",{"_index":5621,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x53e6;&#x5916;&#x8fd8;&#x6709;&#x4e00;&#x4e9b;&#x72ec;&#x7acb;&#x7684;&#x6559;&#x7a0b;&#x7f51;&#x7ad9",{"_index":3015,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x53ea;&#x5728;&#x7ec4;&#x4ef6;&#x88ab;&#x9500;&#x6bc1;&#x4e4b;&#x524d",{"_index":5657,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x53ea;&#x5e94;&#x5728;&#x6839;&#x6a21;&#x5757;&#x4e2d;&#x4f7f;&#x7528",{"_index":3785,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x53ea;&#x662f;&#x4e00;&#x4e2a;&#x201c;hello",{"_index":3575,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x53ea;&#x662f;&#x4e00;&#x4e2a;&#x6309;&#x94ae;&#x6765;&#x589e;&#x52a0;&#x670d;&#x52a1;&#x7684;&#x5185;&#x90e8",{"_index":3826,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x53ea;&#x80fd;&#x901a;&#x8fc7;&#x8f93;&#x5165;&#x6216;&#x9000;&#x51fa;zone.prototype.run&#xff08;&#xff09;&#x6765;&#x8f93;&#x5165;&#x6216;&#x7559;&#x4e0b;&#x533a;&#x57df;&#x3002",{"_index":6591,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x53ea;&#x8981;&#x4f7f;&#x7528;&#x70b9;&#x53f7;&#x8c03;&#x7528",{"_index":1414,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x53ea;&#x9700;&#x66f4;&#x6539;zone.current&#x7684;&#x503c;&#x3002;&#xff08;&#x4e0d;&#x9700;&#x8981;&#x8fdb;&#x4e00;&#x6b65;&#x7684;&#x7334;&#x5b50;&#x8865;&#x4e01;&#xff09",{"_index":6344,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x591a;&#x4e2a;&#x54cd;&#x5e94;&#x3002;&#x5047;&#x8bbe;&#x60a8;&#x7684;&#x670d;&#x52a1;&#x6709;&#x4e24;&#x4e2a;&#x53ef;&#x80fd;&#x7684;get&#x8bf7;&#x6c42",{"_index":5311,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x53ef;&#x4ee5;&#x5206;&#x4e3a;&#x4e24;&#x5927;&#x7c7b;&#xff1a;&#x201c;&#x51b7;&#x201d;&#x548c;&#x201c;&#x70ed;&#x201d",{"_index":3860,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x53ef;&#x4ee5;&#x6307;&#x4e0d;&#x540c;&#x7684;&#x4e1c;&#x897f;&#xff0c;&#x8fd9;&#x53d6;&#x51b3;&#x4e8e;&#x6211;&#x4eec;&#x662f;&#x5426;&#x5904;&#x4e8e;&#x201c;strict&#x201d;&#x6a21;&#x5f0f;&#x3002",{"_index":1431,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x53ef;&#x4ee5;&#x7528;&#x6765;&#x77e5;&#x9053;&#x6846;&#x67b6;&#x4ec0;&#x4e48;&#x65f6;&#x5019",{"_index":6800,"title":{},"body":{"zone/zone_primer.html#Why":{}}}],["x53ef;&#x4ee5;&#x88ab;&#x8ba4;&#x4e3a;&#x662f;&#x7528;&#x4e8e;&#x62a5;&#x544a;&#x6838;&#x5fc3;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e4b;&#x5916;&#x7684;&#x6d4b;&#x8bd5;&#x4f8b;&#x7a0b;&#x7684;&#x67d0;&#x4e9b;&#x65b9;&#x9762;&#x7684;&#x6a21;&#x5757;&#x5316;&#x5de5;&#x5177;&#x3002",{"_index":5225,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x201c;&#x7bad;&#x5934;&#x51fd;&#x6570;&#x201d;&#x6539;&#x5199;&#x5982;&#x4e0b;&#x5f62;&#x5f0f;&#xff1a",{"_index":1140,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x53ef;&#x7528;&#x4e8e;&#x8c03;&#x8bd5;&#xff0c;&#x6d4b;&#x8bd5;&#xff0c;&#x5206;&#x6790",{"_index":6799,"title":{},"body":{"zone/zone_primer.html#Why":{}}}],["x53ef;&#x7528;&#x4e8e;&#x8ddf;&#x8e2a;&#x8de8;&#x5f02;&#x6b65;&#x64cd;&#x4f5c;&#x6301;&#x7eed;&#x7684;&#x8d44;&#x6e90;&#xff0c;&#x5e76;&#x53ef;&#x81ea;&#x52a8;&#x91ca;&#x653e;/&#x6e05;&#x9664;&#x8d44;&#x6e90",{"_index":6801,"title":{},"body":{"zone/zone_primer.html#Why":{}}}],["x53ef;&#x7528;&#x4e8e;karma",{"_index":5230,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x53ef;&#x80fd;&#x4f7f;&#x7528;&#x81ea;&#x5df1;&#x7684",{"_index":6546,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x53ef;&#x89c1;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x5728",{"_index":3501,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x53ef;&#x8bbf;&#x95ee;&#x6027;&#x662f;web&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x9700;&#x8981;&#x59cb;&#x7ec8;&#x6ce8;&#x610f;&#x7684;&#x4e8b;&#x60c5;&#xff0c;angular",{"_index":3092,"title":{},"body":{"Accessibility/accessibility.html#Angular-2中的Web辅助功能":{}}}],["x53ef;&#x8bbf;&#x95ee;&#x6027;&#x662f;web&#x5f00;&#x53d1;&#x8005;&#x9700;&#x8981;&#x59cb;&#x7ec8;&#x6ce8;&#x610f;&#x7684;&#x4e8b;&#x60c5;&#xff0c;angular",{"_index":5561,"title":{},"body":{"a11y/a11y.html#Angular-2-中的-Web-无障碍":{}}}],["x53ef;&#x8bbf;&#x95ee;&#x7684;di&#x6811;&#x7684;&#x8f83;&#x4f4e;&#x5206;&#x652f;&#x4e2d;&#x3002",{"_index":3833,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x53ef;&#x9009;&#x6570;&#x636e;&#xff0c;&#x5982;&#x4efb;&#x52a1;&#x662f;&#x5426;&#x91cd;&#x590d;&#x3002",{"_index":6385,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x53ef;&#x96c7;&#x4f63",{"_index":2902,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x53f0;&#x5f0f;&#x8ba1;&#x7b97;&#x673a;&#x4e5f;&#x5c06;&#x5728;&#x6027;&#x80fd;&#x548c;&#x54cd;&#x5e94;&#x6027;&#x65b9;&#x9762;&#x53d6;&#x5f97;&#x663e;&#x7740;&#x7684;&#x6539;&#x8fdb;&#x3002",{"_index":3063,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x540c;&#x6837;&#x6765;&#x81ea;&#x5916;&#x90e8;&#x4f5c;&#x7528;&#x57df;&#x3002",{"_index":1163,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x540c;&#x6837;&#xff0c",{"_index":1374,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x540c;&#x6837;&#xff0c;&#x5bf9;&#x8c61;&#x5b57;&#x9762;&#x91cf;&#x53ef;&#x4ee5;&#x505a;&#x540c;&#x6837;&#x7684;&#x4e8b;&#x60c5;&#xff1a",{"_index":1495,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["x540c;&#x6837;&#xff0c;&#x6b64;&#x60c5;&#x51b5;&#x4e0b;&#x7684;&#x4efb;&#x4f55",{"_index":2065,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x540c;&#x6b65;action",{"_index":5883,"title":{"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}},"body":{}}],["x540e;&#x7aef;&#x4ee3;&#x7801;&#x5171;&#x4eab;&#x548c;&#x5206;&#x53d1;&#xff1a;npm",{"_index":6200,"title":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}},"body":{}}],["x5411;&#x6bcf;&#x4e2a;&#x4eba;&#x4f38;&#x51fa;&#x63f4;&#x624b",{"_index":6903,"title":{"a11y/why-a11y.html#向每个人伸出援手":{}},"body":{}}],["x5411;&#x7ffb;&#x8bd1;&#x63d0;&#x4f9b;&#x884c;&#x4e1a;&#x6807;&#x51c6;&#x7ffb;&#x8bd1;&#x6e90;&#x6587;&#x4ef6;&#xff0c;&#x7ffb;&#x8bd1;&#x4eba;&#x5458;&#x5c06;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x5e76;&#x5c06;&#x5176;&#x63d0;&#x4f9b;&#x7ed9;&#x60a8;&#x3002",{"_index":2609,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["x5426;&#x5219;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4f7f;&#x7528",{"_index":2063,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x544a;&#x8bc9;webpack&#x6240;&#x6709;&#x7684;&#x8f93;&#x51fa;&#x6587;&#x4ef6;&#x5fc5;&#x987b;&#x4fdd;&#x5b58;&#x5230",{"_index":4258,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5468;&#x8fb9;&#x7684;&#x6280;&#x672f;&#x652f;&#x6301",{"_index":2899,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x547d;&#x4ee4;&#x4e3a;&#x7f16;&#x8bd1;&#x5668;&#x63d0;&#x4f9b;&#x4ee5;&#x4e0b;3&#x4e2a;&#x9009;&#x9879;&#xff1a",{"_index":2549,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x547d;&#x4ee4;&#x751f;&#x6210;&#x65b0;&#x7684;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#xff0c;&#x8fd9;&#x5c06;&#x6307;&#x5bfc;&#x60a8;&#x5b8c;&#x6210;&#x51e0;&#x4e2a;&#x57fa;&#x672c;&#x95ee;&#x9898;&#xff0c;&#x4ee5;&#x4fbf;&#x8fd0;&#x884c;&#x6700;&#x57fa;&#x672c;&#x7684;&#x8bbe;&#x7f6e;&#x3002",{"_index":5178,"title":{},"body":{"Testing/karma-config.html#Karma-配置":{}}}],["x547d;&#x4ee4;&#x751f;&#x6210;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#xff1a",{"_index":2627,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x547d;&#x4ee4;&#x884c",{"_index":6247,"title":{"tooling/the_command_line.html#命令行":{}},"body":{}}],["x547d;&#x4ee4;&#xff1b",{"_index":4359,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x547d;&#x540d;&#x7684;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x3002",{"_index":5176,"title":{},"body":{"Testing/karma-config.html#Karma-配置":{}}}],["x548c",{"_index":405,"title":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{},"state-management/redux.html#Redux-和-Ngrx":{}},"body":{"Di/angular2_di.html#Angular-2’s-DI":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html#注入树":{},"Directives/ng_class_directive.html#绑定一个对象":{},"Directives/structural_directives.html#结构指令":{},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/reactive-forms_validation.html#验证响应式表单":{},"Form/visual_cues_for_users.html#用户的视觉提示":{},"Modules/feature-modules.html#创建功能模块":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Modules/lazy-loading-module.html#延迟加载模块":{},"Modules/shared-di-tree.html#共享相同的依赖注入树":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"Observables/observables_array_operations.html#Observables-数组操作":{},"Project-setup/loaders.html#Webpack-配置":{},"Routing/child_routes.html#定义子路由":{},"Routing/route_guards.html#异步路由哨兵":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/karma-config.html#概述":{},"Testing/using-chai.html#使用Chai":{},"Testing/verify.html#验证方法和属性":{},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{},"advanced-components/view_encapsulation.html#视图封装":{},"animation/index.html#动画":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"state-management/using_redux_with_components.html#计数器示例":{},"zone/zone.html#Zones":{},"a11y/why-a11y.html#无障碍法":{}}}],["x548c;&#x4e0e;&#x5176;&#x4ed6;&#x52a0;&#x8f7d;&#x5668;/&#x63d2;&#x4ef6;&#x5171;&#x4eab;&#x4e0a;&#x4e0b;&#x6587;&#x7684;webpack&#x52a0;&#x8f7d;&#x5668;&#x3002",{"_index":3186,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x548c;&#x5176;&#x4ed6;&#x53ef;&#x80fd;&#x4ee4;&#x4eba;&#x56f0;&#x60d1;&#x7684;&#x6982;&#x5ff5;&#x4e4b;&#x95f4;&#x7684;&#x5dee;&#x5f02;&#xff0c;&#x5c24;&#x5176;&#x662f;&#x5bf9;&#x4e8e;&#x65b0;&#x624b;&#x6765;&#x8bf4;&#x3002",{"_index":3039,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x548c;&#x5806;&#x6808;&#x5e27;&#x3002",{"_index":6585,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x548c;&#x6269;&#x5c55;&#x4ee5;&#x8fdb;&#x4e00;&#x6b65;&#x5c01;&#x88c5;/&#x9694;&#x79bb;&#x5f02;&#x6b65;&#x884c;&#x4e3a;&#xff0c;angular&#x5728;&#x5176",{"_index":6672,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x548c;&#x7ba1;&#x9053",{"_index":3778,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x548c;&#x7eaf;&#x51fd;&#x6570",{"_index":5963,"title":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}},"body":{}}],["x548c;/&#x6216",{"_index":1955,"title":{},"body":{"Form/getting-started.html#入门":{}}}],["x548c;angular&#xff1a",{"_index":2825,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x54cd;&#x5e94;&#x5f0f;&#x8868;&#x5355;&#x57fa;&#x7840",{"_index":2047,"title":{"Form/reactive-forms_basics.html#响应式表单基础":{}},"body":{}}],["x54cd;&#x5e94;&#x5f0f;/&#x6a21;&#x578b;&#x9a71;&#x52a8;&#x7684;&#x8868;&#x5355",{"_index":2027,"title":{"Form/reactive-forms.html#响应式-模型驱动的表单":{}},"body":{}}],["x552f;&#x4e00;&#x7684;&#x533a;&#x522b;&#x662f;&#x5728;&#x54ea;&#x4e2a;&#x7c7b;&#x7528;&#x4e8e;&#x6a21;&#x62df;&#x540e;&#x7aef;&#x3002",{"_index":5101,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x56de;&#x8c03;&#x5728;rootzone&#x4e2d;&#x6267;&#x884c",{"_index":6516,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x56de;&#x8c03;&#x5728;zonea&#x4e2d;&#x6267;&#x884c",{"_index":6518,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x56de;&#x8c03;&#x9700;&#x8981;&#x5728;&#x5f53;&#x524d",{"_index":6383,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x56de;&#x987",{"_index":6117,"title":{"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}},"body":{}}],["x56de;&#x987e;&#x4e00;&#x4e0b",{"_index":1407,"title":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}},"body":{}}],["x56e0;&#x4e3a",{"_index":6295,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x56e0;&#x4e3a;&#x4ece;angular&#x7684;&#x533a;&#x57df;&#x5185;&#x6267;&#x884c;&#x7684;&#x6240;&#x6709;&#x5f02;&#x6b65;&#x4ee3;&#x7801;&#x90fd;&#x53ef;&#x4ee5;&#x89e6;&#x53d1;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#xff0c;&#x6240;&#x4ee5;&#x5f53;&#x4e0d;&#x9700;&#x8981;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x65f6;&#xff0c;&#x60a8;&#x53ef;&#x80fd;&#x66f4;&#x559c;&#x6b22;&#x5728;angular&#x7684;&#x533a;&#x57df;&#x4e4b;&#x5916;&#x6267;&#x884c;&#x4e00;&#x4e9b;&#x4ee3;&#x7801;&#x3002",{"_index":6697,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x56e0;&#x4e3a;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x73b0;&#x5728;&#x77e5;&#x9053",{"_index":150,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x56e0;&#x4e3a;&#x5927;&#x90e8;&#x5206;&#x6559;&#x7a0b;&#x90fd;&#x662f;&#x4ed8;&#x8d39;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6559;&#x7a0b;&#x6570;&#x91cf;&#x7684;&#x591a;&#x5c11;&#x5728;&#x4fa7;&#x9762;&#x53cd;&#x6620;&#x4e86;&#x6846;&#x67b6;&#x7684;&#x5e02;&#x573a;&#x9700;&#x6c42;&#xff0c;&#x5982;&#x679c;&#x6846;&#x67b6;&#x51b7;&#x95e8;&#x7528;&#x7684;&#x4eba;&#x4e0d;&#x591a;&#xff0c;&#x90a3;&#x5fc5;&#x7136;&#x4e0d;&#x4f1a;&#x6709;&#x4eba;&#x53bb;&#x4e3a;&#x5176;&#x5f00;&#x53d1;&#x6559;&#x7a0b;&#x3002",{"_index":2657,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x56e0;&#x4e3a;&#x6211;&#x4eec;&#x4e0d;&#x518d;&#x76f4;&#x63a5;&#x5728;&#x9700;&#x8981;&#x5b83;&#x7684;&#x6bcf;&#x4e2a;&#x7ec4;&#x4ef6;&#x4e2d;&#x5b9a;&#x4e49;&#x6bcf;&#x4e2a;&#x7ec4;&#x4ef6;&#x548c;&#x6307;&#x4ee4;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x9700;&#x8981;&#x77e5;&#x9053;angular&#x6a21;&#x5757;&#x5982;&#x4f55;&#x5904;&#x7406;&#x6307;&#x5411;&#x540c;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#xff08;&#x5177;&#x6709;&#x76f8;&#x540c;&#x7684;&#x9009;&#x62e9;&#x5668;&#xff09;&#x7684;&#x6307;&#x4ee4;&#x548c;&#x7ec4;&#x4ef6;&#x3002",{"_index":3406,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x56e0;&#x4e3a;&#x6211;&#x4eec;&#x5df2;&#x7ecf;&#x5728;&#x6570;&#x7ec4;&#x4e2d;&#x5b9a;&#x4e49;&#x4e86;&#x4e24;&#x4e2a;&#x6307;&#x4ee4;&#xff0c;&#x5e76;&#x4e14;&#x6570;&#x7ec4;&#x662f",{"_index":3433,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x56e0;&#x4e3a;&#x6211;&#x4eec;&#x6ca1;&#x6709;&#x5f3a;&#x5236",{"_index":141,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x56e0;&#x6b64;&#x88c5;&#x9970;&#x5668;&#x6709;&#x56db;&#x4e2a;&#x4e0d;&#x540c;&#x7684;&#x51fd;&#x6570;&#x7b7e;&#x540d;&#xff1a",{"_index":1584,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x56e0;&#x6b64;&#xff0c;&#x4e3a;&#x4e86;&#x4f7f;&#x6211;&#x4eec;&#x7684;&#x7279;&#x6027;&#x6a21;&#x5757;&#x7684;&#x670d;&#x52a1",{"_index":3532,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x56e0;&#x6b64;&#xff0c;&#x590d;&#x6742;&#x7684;&#x9a8c;&#x8bc1;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":2131,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x56e0;&#x6b64;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x6709;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6",{"_index":4990,"title":{},"body":{"Testing/filename-conventions.html#文件名约定":{}}}],["x56e0;&#x6b64;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x4f1a;&#x5c06;angular",{"_index":2851,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x56e0;&#x6b64;&#xff0c;&#x7236",{"_index":6755,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x56fd;&#x9645;&#x5316;&#x4fe1;&#x606f",{"_index":5810,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x56fd;&#x9645;&#x5316;&#xff08;&#x6216;i18n&#xff0c;&#x4ee3;&#x8868;i",{"_index":2519,"title":{},"body":{"i18n/i18n.html#i18n的目的是":{}}}],["x5728",{"_index":3970,"title":{"zone/zone.html#在-Zone-内":{}},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{},"Project-setup/loaders.html#Webpack-配置":{},"Routing/routeparams.html#链接到带参数的路由":{},"Testing/execute.html#执行测试脚本":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/typings.html#Typings":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{},"state-management/redux.html#什么是-Redux":{}}}],["x5728;&#x201c;strict&#x201d;&#x6a21;&#x5f0f;&#x4e0b;&#xff0c",{"_index":1434,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5728;&#x4e00;&#x4e2a;&#x7bad;&#x5934;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#x65f6;&#x5019;&#xff0c;javascript",{"_index":1146,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x5728;&#x4e0a;&#x4e00;&#x8282;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5b66;&#x4e60;&#x4e86;&#x5982;&#x4f55;&#x4f7f;&#x7528;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#xff0c;&#x4f46;&#x901a;&#x5e38;&#x6a21;&#x5757;&#x4e0d;&#x53ef;&#x80fd;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#x3002",{"_index":3764,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x5728;&#x4e0a;&#x4f20;&#x60a8;&#x7684;git&#x5b58;&#x50a8;&#x5e93;&#x65f6;&#x5ffd;&#x7565;&#x8fd9;&#x4e9b;&#x6587;&#x4ef6;&#x53ef;&#x80fd;&#x662f;&#x4e2a;&#x597d;&#x4e3b;&#x610f;&#x3002",{"_index":2640,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x5728;&#x4e0a;&#x56fe;&#x4e2d;&#xff0c;&#x6709;&#x4e00;&#x4e2a;&#x6839;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x5b83;&#x901a;&#x8fc7",{"_index":670,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x5728;&#x4e0a;&#x8ff0;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x7528;&#x6237;b&#x5728;&#x7528;&#x6237;a&#x4e4b;&#x540e;2000ms&#x8ba2;&#x9605;&#x3002;&#x7136;&#x800c;&#xff0c;&#x7528;&#x6237;b&#x5f00;&#x59cb;&#x83b7;&#x5f97;&#x50cf;&#x7528;&#x6237;a&#x7684;&#x503c;&#x53ea;&#x662f;&#x65f6;&#x95f4;&#x504f;&#x79fb;&#x7684;&#x503c;&#x3002",{"_index":3863,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5728;&#x4e0a;&#x8ff0;&#x793a;&#x4f8b;&#x4e2d;&#xff0c;&#x5047;&#x8bb",{"_index":4549,"title":{},"body":{"Routing/child_routes.html#访问父路由的参数":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#xff0c",{"_index":1451,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x7247;&#x6bb5;&#x4e2d;&#xff0c;&#x6bcf;&#x5f53;&#x4ece;hamburger&#x7c7b;&#x4e2d;&#x4f7f;&#x7528",{"_index":1188,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c",{"_index":412,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x5f53;&#x70b9;&#x51fb;&#x94fe;&#x63a5;&#x65f6;&#xff0c;&#x5bf9;&#x5e94;&#x4e8e;&#x6307;&#x5b9a;&#x8def;&#x7531;&#x7684;&#x7ec4;&#x4ef6;&#x5c06;&#x653e;&#x7f6e;&#x5728",{"_index":4750,"title":{},"body":{"Routing/routeroutlet.html#动态添加路由组件":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5141;&#x8bb8;&#x7528;&#x6237;&#x767b;&#x5f55;&#x65f6;&#x7684;&#x8bbf;&#x95ee;&#x3002",{"_index":4687,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5df2;&#x7ecf;&#x5c06;&#x7c7b",{"_index":3561,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x7684",{"_index":6065,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x8def;&#x7531;&#x4e00;&#x94fe;&#x63a5;&#x5230;&#x5f53;&#x524d;&#x8def;&#x7531;&#x7684;&#x5b50;&#x8282;&#x70b9;&#x3002",{"_index":4563,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x73b0;&#x573a;&#x6f14;&#x51fa;&#x5f00;&#x59cb;&#x4e8e;1000ms&#xff0c;&#x7528;&#x6237;a&#x5728;0&#x79d2;&#x5230;&#x8fbe;&#x97f3;&#x4e50;&#x5385;&#x5e76;&#x627e;&#x4e86;&#x4e00;&#x4e2a;&#x597d;&#x4f4d;&#x7f6e;&#xff0c;&#x7528;&#x6237;b&#x5728;2500ms&#x5904;&#x8fbe;&#x5230;&#x5e76;&#x9519;&#x8fc7;&#x4e86;&#x4e00;&#x9996;&#x6b4c;&#x66f2;&#x3002",{"_index":3885,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5728;&#x4e0a;&#x9762;&#x7684;&#x793a;&#x4f8b;&#x4e2d;&#xff0c",{"_index":700,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x5728;&#x4e0b;&#x4e00;&#x8282;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4e86;&#x89e3;&#x5982;&#x4f55;&#x521b;&#x5efa;&#x5177;&#x6709;&#x591a;&#x4e2a;&#x7ec4;&#x4ef6;&#xff0c;&#x670d;&#x52a1;&#x548c;&#x7ba1;&#x9053;&#x7684;&#x6a21;&#x5757;&#x3002",{"_index":3609,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["x5728;&#x4e0b;&#x4e00;&#x8282;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4e86;&#x89e3;&#x5982;&#x4f55;&#x5b89;&#x5168;&#x5730;&#x5b9a;&#x4e49;&#x529f;&#x80fd;&#x6a21;&#x5757;&#x4e2d;&#x7684;&#x670d;&#x52a1;&#x3002",{"_index":3787,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x5728;&#x4e0b;&#x4e00;&#x8282;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5b66;&#x4e60;&#x5982;&#x4f55;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x5171;&#x4eab;&#x670d;&#x52a1;&#x5b9e;&#x4f8b;&#x3002",{"_index":3836,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x5728;&#x4e0b;&#x9762;&#x7684;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#x4e2d;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x5728;&#x8fd9;&#x4e2a;&#x5f02;&#x6b65;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x94fe;&#x4e2d;&#x53d1;&#x751f;&#x7684;&#x4e8b;&#x4ef6;&#x7684;&#x987a;&#x5e8f;&#xff0c;&#x6dfb;&#x52a0;&#x4e86;&#x201c;&#x201d;&#x4ee5;&#x6307;&#x51fa;&#x6211;&#x4eec;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":6721,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x5728;&#x4ee3;&#x7801;&#x8f6c;&#x6362;&#x671f;&#x95f4;&#xff0c",{"_index":1630,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x5728;&#x4ee5;&#x4e0b;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6269;&#x5c55;&#x8bed;&#x53e5;&#x5141;&#x8bb8;&#x8868;&#x8fbe;&#x5f0f;&#x5c31;&#x5730;&#x6269;&#x5c55;&#xff1a",{"_index":1480,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{}}}],["x5728;&#x4ee5;&#x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x914d;&#x7f6e;&#x52a0;&#x8f7d;&#x5668;&#x65f6;&#x8981;&#x5c0f;&#x5fc3",{"_index":4299,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x5728;&#x4f20;&#x7edf;&#x7684;javascript&#x4e2d;&#xff0c;&#x5305;&#x542b;&#x5728;&#x5339;&#x914d;&#x7684",{"_index":1516,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x5728;&#x4f60;&#x7684;&#x64cd;&#x4f5c;&#x521b;&#x5efa;&#x8005;&#x5fc5;&#x987b;&#x4f7f;&#x7528;&#x5176;&#x4ed6;&#x89d2;&#x8272;&#x670d;&#x52a1;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;actioncreatorservice&#x6a21;&#x5f0f;&#x624d;&#x662f;&#x5fc5;&#x9700;&#x7684;&#x3002;&#x8003;&#x8651;&#x4e0b;&#x9762;&#x7684;sessionactions&#x670d;&#x52a1;&#x6765;&#x5904;&#x7406;&#x8fdc;&#x7a0b;api&#x8c03;&#x7528;&#xff1a",{"_index":5902,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{}}}],["x5728;&#x4f7f;&#x7528;http&#x6a21;&#x5757;&#x7684;&#x670d;&#x52a1;&#x4e2d;&#xff0c;&#x7528",{"_index":5102,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x5728;&#x4f7f;web&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x53ef;&#x8bbf;&#x95ee;&#x65f6;&#xff0c;&#x6700;&#x597d;&#x5173;&#x6ce8;&#x4ee5;&#x4e0b;&#x4e09;&#x4e2a;&#x65b9;&#x9762;&#xff1a",{"_index":5567,"title":{},"body":{"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["x5728;&#x5047;&#x8bbe;&#x7684;app&#x7ec4;&#x4ef6;&#x4e2d;&#xff0c;&#x201c;random&#x201d;&#x53ef;&#x4ee5;&#x6ce8;&#x5165;&#xff1a",{"_index":593,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5728;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x4e2d;&#xff0c;&#x5b83;&#x88ab;&#x79f0;&#x4e3a;&#x5305;&#x6216;&#x5e93;&#x3002",{"_index":1318,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["x5728;&#x5178;&#x578b;&#x7684;&#x5e94;&#x7528;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x7ba1;&#x7406;&#x7684;&#x4e1c;&#x897f;&#x5982;&#x4e0b;&#xff1a",{"_index":6127,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x5728;&#x524d;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x6d4b;&#x8bd5;&#x7684;&#x7c7b",{"_index":5032,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5728;&#x529f;&#x80fd;&#x6a21;&#x5757;&#x4e2d;&#x6267;&#x884c;&#x6b64;&#x64cd;&#x4f5c;&#x5c06;&#x5728;&#x4f7f;&#x7528;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x65f6;&#x5bfc;&#x81f4;&#x610f;&#x5916;&#x7684;&#x540e;&#x679c;&#x3002",{"_index":3786,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x5728;&#x533f;&#x540d;&#x51fd;&#x6570;&#x4e2d;&#x7684;&#x503c;&#x662f",{"_index":1154,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x5728;&#x53d1;&#x751f;&#x9519;&#x8bef;&#x65f6;&#x901a;&#x77e5;&#x3002",{"_index":6686,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x5728;&#x540e;&#x7aef;&#xff08;&#x670d;&#x52a1;&#x5668;&#x7aef;&#xff09;&#x4f7f;&#x7528;&#x6a21;&#x5757;&#x662f;&#x76f8;&#x5bf9;&#x7b80;&#x5355;&#x7684;&#xff0c;&#x4f60;&#x53ea;&#x9700;&#x4f7f;&#x7528",{"_index":1324,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["x5728;&#x5927;&#x591a;&#x6570;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x53ea;&#x662f;&#x60f3;&#x8981;&#x914d;&#x7f6e;webpack&#x5982;&#x4f55;&#x751f;&#x6210;bundl",{"_index":4235,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5728;&#x5b9e;&#x8df5;&#x4e2d;&#xff0c;&#x5927;&#x591a;&#x6570;&#x7b2c;&#x4e09;&#x65b9;&#x5e93;&#x4e0d;&#x53ef;&#x80fd;&#x6709;&#x8fd9;&#x79cd;&#x7ec6;&#x7c92;&#x5ea6;zone&#x63a7;&#x5236;&#x3002",{"_index":6525,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x5728;&#x5b9e;&#x9645;&#x5f00;&#x53d1;&#x8fc7;&#x7a0b;&#x4e2d;&#xff0c;&#x4e3a;&#x6bcf;&#x4e2a;action&#x548c;reducer&#x7ef4;&#x62a4;&#x6d4b;&#x8bd5;&#x4ee3;&#x4ef7;&#x592a;&#x9ad8;&#xff0c;&#x5728;&#x67d0;&#x4e9b;&#x60c5;&#x51b5;&#x4e0b;&#x662f;&#x6ca1;&#x4ec0;&#x4e48;&#x5fc5;&#x8981;&#x7684;&#xff08;&#x6bd4;&#x5982;&#x6211;&#x5e94;&#x8be5;&#x5bf9;&#x8fd9;&#x4e2a;json&#x5bf9;&#x8c61;&#x6709;&#x4e00;&#x4e2a;&#x5c5e;&#x6027;&#x8fd4;&#x56de;&#x5417;&#xff1f;&#xff09;&#x3002",{"_index":4771,"title":{},"body":{"Testing/after-thoughts.html#Afterthoughts":{}}}],["x5728;&#x5c06;&#x6807;&#x8bc6;&#x4ee4;&#x724c;&#x8f6c;&#x6362;&#x4e3a",{"_index":503,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x6839;&#x6a21;&#x5757;&#x548c;&#x96f6;&#x4e2a;&#x6216;&#x8bb8;&#x591a;&#x529f;&#x80fd;&#x6a21;&#x5757",{"_index":3590,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;state&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5b58;&#x50a8;&#x7684;&#x4e1c;&#x897f;&#x5982;&#x4e0b;&#xff1a",{"_index":5806,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x5728;&#x5e94;&#x8be5;&#x8bbe;&#x7f6e;foo&#x4e0e;1s&#x5ef6;&#x8fdf;&#x6d4b;&#x8bd5;&#xff0c;&#x4f60;&#x4f1a;&#x6ce8;&#x610f;&#x5230;&#xff0c;&#x6211;&#x4eec;&#x8c03;&#x7528",{"_index":5318,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x5728;&#x5f00;&#x53d1;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x65f6;&#x4e0d;&#x8003;&#x8651;&#x8fd9;&#x4e9b;&#x7528;&#x6237;&#x610f;&#x5473;&#x7740;&#x6392;&#x9664;&#x5927;&#x91cf;&#x7684;&#x4eba;&#x65e0;&#x6cd5;&#x4f7f;&#x7528;&#x5b83;&#x8212;&#x9002;&#x6216;&#x5b8c;&#x5168;&#x3002",{"_index":6906,"title":{},"body":{"a11y/why-a11y.html#向每个人伸出援手":{}}}],["x5728;&#x5f02;&#x6b65;&#x4efb;&#x52a1;&#x6267;&#x884c;&#x4e2d;&#x4fdd;&#x6301;zone&#x3002",{"_index":6796,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["x5728;&#x60a8;&#x5e94;&#x7528;&#x7684;&#x4e3b;&#x6a21;&#x5757;&#x4e2d;&#xff0c;&#x7b80;&#x5355;&#x7684;&#x5c06",{"_index":5752,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["x5728;&#x60a8;&#x7684;&#x63a7;&#x5236;&#x53f0;&#x4e2d;&#xff0c;&#x8fd0;&#x884c;&#x4ee5;&#x4e0b;&#x547d;&#x4ee4;&#x5c06",{"_index":5736,"title":{},"body":{"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{}}}],["x5728;&#x6211;&#x4eec;&#x524d;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5f00;&#x59cb;&#x770b;&#x5230;&#x4e86;&#x3002",{"_index":3464,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5728;&#x6211;&#x4eec;&#x6df1;&#x5165;&#x4e86;&#x89e3;&#x4efb;&#x4f55;&#x8868;&#x5355;&#x7684;&#x529f;&#x80fd;&#x4e4b;&#x524d;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":1954,"title":{},"body":{"Form/getting-started.html#入门":{}}}],["x5728;&#x6211;&#x4eec;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x5c06;&#x6784;&#x5efa;&#x4e00;&#x4e2a;&#x767b;&#x5f55;&#x8868;&#x5355;&#xff0c;&#x6211;&#x4eec;&#x770b;&#x4e0b;&#x9762;&#x7684;&#x5185;&#x5bb9;&#xff1a",{"_index":2052,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x5728;&#x6211;&#x4eec;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x53ea;&#x9700;&#x8981;&#x4f7f",{"_index":3500,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5728;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x677f;&#x4e2d;&#x4f7f;&#x7528;&#x6307;&#x4ee4;&#x7ed9;&#x6211;&#x4eec;&#x6ca1;&#x6709;&#x592a;&#x591a;&#x7684;&#x6837;&#x677f;&#x5feb;&#x901f;&#x539f;&#x578b;&#x7684;&#x80fd;&#x529b;&#xff0c;&#x6211;&#x4eec;&#x88ab;&#x675f;&#x7f1a;&#x4f4f;&#x4e86;&#x3002",{"_index":2028,"title":{},"body":{"Form/reactive-forms.html#响应式-模型驱动的表单":{}}}],["x5728;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x677f;&#x4e2d;&#x6807;&#x8bb0;&#x6587;&#x672c;&#x4ee5;&#x8fdb;&#x884c;&#x7ffb;&#x8bd1",{"_index":2592,"title":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}},"body":{}}],["x5728;&#x6211;&#x4eec;&#x7684;&#x70",{"_index":3883,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5728;&#x6211;&#x4eec;&#x7684;&#x793a;&#x4f8b;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x8981;&#x9a8c;&#x8bc1",{"_index":5300,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x5728;&#x6211;&#x4eec;&#x7684;&#x8def;&#x7531;&#x914d;&#x7f6e;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x6dfb;&#x52a0;&#x6211;&#x4eec;&#x7684;&#x54e8;&#x5175;&#x5230;&#x8be5;&#x8def;&#x7531;&#xff1a",{"_index":4667,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x5728;&#x6700;&#x540e;&#x4e00;&#x4e2a;onmicrotaskempty&#x8fd0;&#x884c;&#x65f6;&#x901a;&#x77e5;&#xff0c;&#x8868;&#x793a;&#x6240;&#x6709;&#x4efb;&#x52a1;&#x5df2;&#x5b8c;&#x6210;&#xff0c;&#x5e76;&#x4e14;&#x5df2;&#x53d1;&#x751f;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x3002",{"_index":6685,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x5728;&#x672a;&#x6765;&#x7684;&#x67d0;&#x4e2a;&#x65f6;&#x95f4;&#x88ab;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x65f6;&#xff0c;&#x5c06;&#x4f7f;&#x7528",{"_index":3527,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x5728;&#x672c;&#x7ae0;&#x4e2d;&#xff0c;&#x60a8;&#x5c06;&#x4f7f;&#x7528;@ngrx&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x8ba1;&#x6570;&#x5668;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":5819,"title":{},"body":{"state-management/example_application.html#示例应用":{}}}],["x5728;&#x672c;&#x7ae0;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x6269;&#x5c55;&#x6211;&#x4eec;&#x4e4b;&#x524d;&#x4f7f;&#x7528;&#x81ea;&#x5b9a;&#x4e49;&#x7ec4;&#x4ef6;&#xff0c;&#x7ba1;&#x9053;&#x548c;&#x670d;&#x52a1;&#x7684;&#x793a;&#x4f8b;&#x3002",{"_index":3766,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x5728;&#x672c;&#x8282;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4ecb;&#x7ecd;&#x60a8;&#x5c06;&#x5728;&#x8bfe;&#x7a0b;&#x5176;&#x4f59;&#x90e8;&#x5206;&#x4f7f;&#x7528;&#x7684;&#x5de5;&#x5177;&#x3002",{"_index":6256,"title":{},"body":{"tooling/tooling.html#JavaScript工具链":{}}}],["x5728;&#x672c;&#x8282;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x8ba8;&#x8bba;&#x8def;&#x7531;&#x5728;&#x5355;&#x9875;&#x5e94;&#x7528;&#x548c;angular",{"_index":4754,"title":{},"body":{"Routing/routing.html#路由":{}}}],["x5728;&#x67d0;&#x4e9b;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x53ef;&#x80fd;&#x4f18;&#x5148;&#x5728;angular&#x7684;&#x533a;&#x57df;&#x5916;&#x6267;&#x884c;&#x7b2c;&#x4e09;&#x65b9;&#x65b9;&#x6cd5;&#xff08;&#x89c1;&#x4e0b;&#x6587;&#xff09;&#x3002",{"_index":6679,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x5728;&#x6811;&#x7684;&#x8f83;&#x4f4e;&#x5206;&#x652f;&#x4e2d;&#x521b;&#x5efa;&#x7684;&#x5b9e;&#x4f8b;&#x4f1a;&#x906e;&#x853d;&#x5728;&#x6839;&#x7ea7;&#x522b;&#x5b9a;&#x4e49;&#x7684;&#x5b9e;&#x4f8b;&#x3002",{"_index":3794,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x5728;&#x6a21;&#x677f;&#x4e2d;&#x5b8c;&#x6210;&#x540e;&#xff0c;&#x60a8;&#x5c06;&#x9700;&#x8981;&#x5b89;&#x88c5;cli&#x548c;&#x5e73;&#x53f0;&#x670d;&#x52a1;&#x5668;&#x5bf9;&#x7b49;&#x4f53;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x8fd8;&#x6ca1;&#x6709;&#xff0c;&#x7136;&#x540e;&#x6267;&#x884c",{"_index":2626,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x5728;&#x6a21;&#x677f;&#x4e2d;&#x6807;&#x8bb0;&#x8981;&#x7ffb;&#x8bd1;&#x7684;&#x77ed;&#x4fe1;&#x3002",{"_index":2607,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["x5728;&#x6a21;&#x677f;&#x4e2d;&#x8bbf;&#x95ee;&#x8868;&#x5355;&#x5b57;&#x6bb5;&#x3002",{"_index":2064,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x5728;&#x6b64;&#x7ec4;&#x4ef6;&#x7684",{"_index":5674,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x5728;&#x6bcf;&#x6b21;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e4b;&#x524d;&#xff0c;&#x5fc5;&#x987b;&#x6839;&#x636e;&#x9700;&#x8981;&#x521b;&#x5efa;&#xff0c;&#x9500;&#x6bc1;&#x548c;&#x91cd;&#x7f6e;&#x6b64;&#x6d4b;&#x8bd5;&#x73af;&#x5883;&#x3002",{"_index":5437,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x5728;&#x6bcf;&#x6b21;&#x68c0;&#x67e5;&#x7ec4;&#x4ef6;&#x5185;&#x5bb9;&#x540",{"_index":5654,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x5728;&#x6bcf;&#x6b21;&#x68c0;&#x67e5;&#x7ec4;&#x4ef6;&#x89c6;&#x56fe;&#x540",{"_index":5656,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x65f6;&#xff0c;&#x5b83;&#x9a7b;&#x7559;&#x5728;&#x4e3a",{"_index":3654,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x5728;&#x6f14;&#x793a;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x811a;&#x672c;&#x6807;&#x8bb0;&#x6765;&#x8bbe;&#x7f6",{"_index":4574,"title":{},"body":{"Routing/config.html#Base-标签":{}}}],["x5728;&#x793a;&#x4f8b;&#x4e2d",{"_index":1553,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["x5728;&#x7b26;&#x5408;es6&#x7684;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#xff0c;&#x4f7f;&#x7528;system&#x5173;&#x952e;&#x5b57;&#x4ee5;&#x5f02;&#x6b65;&#x65b9;&#x5f0f;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x3002",{"_index":1336,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["x5728;&#x7ec4;&#x4ef6;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x4e2d;&#xff0c;host&#x5143;&#x7d20;&#x662f;&#x60a8;&#x901a;&#x8fc7;&#x7ec4;&#x4ef6;&#x914d;&#x7f6e;&#x4e2d;&#x7684;&#x9009;&#x62e9;&#x5668;&#x5b57;&#x7b26;&#x4e32;&#x521b;&#x5efa;&#x7684;&#x6807;&#x8bb0;&#x3002",{"_index":3297,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["x5728;&#x7ee7;&#x627f;&#x90e8;&#x5206;&#xff0c;&#x6211;&#x4eec;&#x7814;&#x7a76;&#x4e86;&#x6269;&#x5c55;&#x7c7b;&#x529f;&#x80fd;&#x7684;&#x4e00;&#x79cd;&#x65b9;&#x6cd5;&#xff0c;&#x53e6;&#x4e00;&#x79cd;&#x65b9;&#x6cd5;&#x662f;&#x4f7f;&#x7528;&#x59d4;&#x6258;&#x6765;&#x6269;&#x5c55;&#x529f;&#x80fd;&#x3002",{"_index":1256,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x5728;&#x7ee7;&#x7eed;&#x4e4b;&#x524d;&#xff0c;&#x6709;&#x4e00;&#x4e2a;&#x91cd;&#x8981;&#x7684;&#x6f84;&#x6e05;&#x8981;&#x505a;&#x3002",{"_index":3587,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5728;&#x7f16;&#x5199;&#x6a21;&#x677f;&#x9a71;&#x52a8;&#x8868;&#x5355;&#x65f6;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x8fd9;&#x4e24;&#x79cd;&#x65b9;&#x6cd5;&#x4e4b;&#x4e00;&#x3002",{"_index":2232,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["x5728;&#x7f16;&#x8bd1;&#x671f;&#x95f4;&#xff0c;angular&#x7684;&#x7f16;&#x8bd1;&#x5668;&#x8fd8;&#x901a;&#x8fc7;&#x8003;&#x8651;javascript",{"_index":3127,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x5728;&#x81ea;&#x5df1;&#x7684;&#x6587;&#x4ef6;&#x4e2d;&#x58f0;&#x660e;&#x6bcf;&#x4e2a;&#x63a5;&#x53e3;&#x662f;&#x5f88;&#x597d;&#x7684;&#x505a;&#x6cd5;&#xff0c;&#x5982;&#x679c;&#x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4f7f;&#x7528;&#x4e86;&#x4e03;&#x4e2a;&#x6216;&#x66f4;&#x591a;&#x63a5;&#x53e3;&#xff0c;&#x5219;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x903b;&#x8f91;&#x76ee;&#x5f55;&#x7ed3;&#x6784;&#x3002",{"_index":5822,"title":{},"body":{"state-management/example_application.html#示例应用":{}}}],["x5728;&#x8868;&#x5355;&#x4e0a;&#x83b7;&#x53d6;&#x3002",{"_index":2132,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x5728;&#x8bb8;&#x591a;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x5404;&#x79cd;&#x5404;&#x6837;&#x590d;&#x6742;&#x7684;&#x5904;&#x7406;&#x5f62;&#x5f0f;&#x3002",{"_index":1939,"title":{},"body":{"Form/form.html#Forms":{}}}],["x5728;&#x8bb8;&#x591a;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x8fd9;&#x4f1a;&#x62a5;&#x9519;&#x3002",{"_index":1438,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5728;&#x8bb8;&#x591a;javascript&#x51fd;&#x6570;&#x4e2d;&#xff0c;&#x51fd;&#x6570;&#x91c7;&#x7528;&#x53ef;&#x9009;&#x53c2;&#x6570;&#x662f;&#x5f88;&#x5e38;&#x89c1;&#x7684;&#x3002;typescript&#x4e3a;&#x6b64;&#x63d0;&#x4f9b;&#x652f;&#x6301;&#xff0c;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":1848,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x5728;&#x8bbe;&#x8ba1;&#x65f6;&#x662f;&#x672a;&#x77e5;&#x7684;&#x3002",{"_index":6768,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x5728;&#x8bbe;&#x8ba1;&#x65f6;&#x95f4;&#x662f;&#x5df2;&#x77e5;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8fd9;&#x6837;&#x5199;&#xff1a",{"_index":6770,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x5728;&#x8bbe;&#x8ba1;&#x65f6;&#xff0c;&#x4e0d;&#x53ef;&#x80fd;&#x77e5;&#x9053;&#x54ea;&#x4e2a",{"_index":6753,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x5728;&#x8def;&#x7531;&#x4e0a;&#x6ce8;&#x518c;&#x8def;&#x7531;&#x54e8;&#x5175",{"_index":4662,"title":{"Routing/route_guards.html#在路由上注册路由哨兵":{}},"body":{}}],["x5728;&#x8fc7;&#x53bb;&#x4e09;&#x5e74;&#x534a;&#x7684;&#x65f6;&#x95f4;&#x91cc;&#xff0c;angularjs&#x5df2;&#x7ecf;&#x6210;&#x4e3a;&#x4e16;&#x754c;&#x4e0a;&#x6570;&#x5341;&#x4e07;&#x7a0b;&#x5e8f;&#x5458;&#x7684;&#x9886;&#x5148;&#x5f00;&#x6e90;javascript&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6846;&#x67b6;&#x3002",{"_index":6875,"title":{},"body":{"README.html#Rangle’s-Angular-2-Training-Book":{}}}],["x5728;&#x8fd9;&#x4e00;&#x70b9;&#x4e0a;&#xff0c;&#x6211;&#x4eec;&#x5b8c;&#x6210;&#x4e86;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6309;&#x9884;&#x671f;&#x8fd0;&#x884c;&#x3002",{"_index":3509,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5728;&#x8fd9;&#x4e00;&#x70b9;&#x4e0a;&#xff0c;&#x6211;&#x4eec;&#x6709;&#x4e00;&#x4e2a;&#x5206;&#x5c42;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x5177;&#x6709;&#x76f8;&#x540c;&#x670d;&#x52a1;&#x7684;&#x4e24;&#x4e2a;&#x5b9e;&#x4f8b;&#xff0c;&#x8fd9;&#x901a;&#x5e38;&#x4e0d;&#x662f;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x7684;&#x3002",{"_index":3529,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x5728;&#x8fd9;&#x4e2a",{"_index":6702,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x5728;&#x8fd9;&#x4e2a;&#x4f8b;&#x5b50;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x5b83;&#x6765;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x7ed3;&#x679c;&#x96c6;&#xff0c;&#x901a;&#x8fc7;&#x8fed;&#x4ee3;&#x6bcf;&#x4e2a;&#x9879;&#x76ee;&#xff0c;&#x5e76;&#x8ffd;&#x52a0;&#x201c;dr.&#x201d",{"_index":3944,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x5728;&#x8fd9;&#x4e2a;&#x9879;&#x76ee;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x6709;&#x4e24;&#x4e2a;&#x5305;&#xff1a",{"_index":4202,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":610,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x63d0;&#x4f9b;&#x4e00;&#x4e2a",{"_index":968,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x5f53;&#x6307;&#x5b9a",{"_index":1053,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x663e;&#x5f0f;&#x8c03;&#x7528",{"_index":3882,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x76f4;&#x63a5;&#x7ed1;&#x5b9a;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x907f;&#x514d;&#x4f7f;&#x7528;&#x65b9;&#x62ec;&#x53f7;&#x5305;&#x88c5;&#x6307;&#x4ee4;&#x3002;&#x8fd8;&#x8981;&#x6ce8;&#x610f",{"_index":800,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6a21;&#x5757;&#x5b9e;&#x73b0;&#x7ec6;&#x8282;&#x6cc4;&#x9732;&#x5230;&#x7236;&#x6a21;&#x5757;&#x3002",{"_index":498,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x70b9;&#x51fb;&#x4e8b;&#x4ef6;&#x7ed1;&#x5b9a;&#x5230;&#x4ec",{"_index":6162,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x88c5;&#x9970;&#x5c5e;&#x6027;&#x7531;&#x4f20;&#x9012;&#x7ed9;&#x88c5;&#x9970;&#x5668;&#x7684;&#x6807;&#x7b7e;&#x66ff;&#x6362;&#x3002",{"_index":1723,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;name&#x5c5e;&#x6027;&#x4e0d;&#x53ef;&#x5199;&#xff0c;&#x5e76;&#x4e14;&#x4fdd;&#x6301;&#x672a;&#x5b9a;&#x4e49;&#x3002",{"_index":1729,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x5728;&#x8fd9;&#x91cc;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x7531;&#x4e8e;&#x5bf9;&#x8c61;&#x7684",{"_index":815,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{}}}],["x5728;&#x8fd9;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x5b83;&#x6765;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x7ed3;&#x679c;&#x96c6;&#xff0c;&#x6392;&#x9664;&#x4efb;&#x4f55;id&#x5c5e;&#x6027;&#x5c0f;&#x4e8e;6&#x7684;&#x7528;&#x6237;&#x3002",{"_index":3949,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x5728;&#x8fd9;&#x91cc;&#xff0c;&#x7531;&#x4e8e;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x8868;&#x8fbe;&#x5f0f;&#x7ed1;&#x5b9a;&#x5230",{"_index":807,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个数组":{}}}],["x5728;&#x9700;&#x8981;/&#x5bfc;&#x5165;&#x6a21;&#x5757;&#x65f6;&#xff0c;&#x53ef;&#x4ee5;&#x5185;&#x8054;&#x914d;&#x7f6e;&#x88c5;&#x8f7d;&#x7a0b;&#x5e8f;&#xff1a",{"_index":4292,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x5728;&#x975e;&#x5e38;&#x7279;&#x6b8a;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x53ef;&#x80fd;&#x9700;&#x8981;&#x591a;&#x4e2a;&#x7ec4;&#x4ef6;&#x6765;&#x5f15;&#x5bfc;&#x6a21;&#x5757;&#xff0c;&#x4f46;&#x662f;&#x6211;&#x4eec;&#x4e0d;&#x4f1a;&#x5728;&#x8fd9;&#x91cc;&#x8ba8;&#x8bba;&#x8fd9;&#x4e9b;&#x8fb9;&#x7f18;&#x60c5;&#x51b5;&#x3002",{"_index":3571,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5728;angular",{"_index":665,"title":{},"body":{"Di/the_injector_tree.html#注入树":{},"Directives/directives.html#指令":{},"Form/template-driven_forms.html#模版驱动表单":{},"why_angular_2.html#Why-Angular-2":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5728;angular&#x4e2d;&#xff0c;&#x5c06;&#x60a8;&#x7684;&#x64cd;&#x4f5c;&#x521b;&#x5efa;&#x8005;&#x5b9a;&#x4e49;&#x4e3a",{"_index":5880,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}}}],["x5728;angular&#xff0c;&#x4e3b;&#x8981;&#x6709;&#x4e09;&#x79cd;&#x7684;&#x65b9;&#x6cd5;&#x6765;&#x89e3;&#x51b3;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;&#x3002",{"_index":6136,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x5728;angular1.x&#x4e2d;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x5e76;&#x4e14;&#x6240;&#x6709;&#x670d;&#x52a1;&#x90fd;&#x662f;&#x5355;&#x4f8b;&#x3002",{"_index":663,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x5728;angular2",{"_index":5189,"title":{},"body":{"Testing/karma-config.html#概述":{},"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x5728;css&#x6587;&#x4ef6;&#x4e2d;&#x5c06",{"_index":4332,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x5728;javascript&#x6587;&#x4ef6;&#x4e2d;&#xff0c;&#x5b83;&#x5c06;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":4210,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x5728;javascript&#x7c7b;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528",{"_index":1408,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5728;javascript&#x9047;&#x5230",{"_index":1591,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x5728;redux&#x4e2d;&#xff0c;reducer&#x4e0d;&#x4f1a;&#x5728;&#x6ca1;&#x6709;&#x64cd;&#x4f5c;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#x8fd0;&#x884c;&#xff0c;&#x53cd;&#x4e4b;&#x4ea6;&#x7136;&#xff0c;&#x56e0;&#x6b64;&#x4e3a;&#x4ec0;&#x4e48;&#x5206;&#x5f00;&#x4ed6;&#x4eec;&#xff1f",{"_index":4773,"title":{},"body":{"Testing/after-thoughts.html#Afterthoughts":{}}}],["x5728;rxj",{"_index":3877,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5728;webpack&#x4e2d;&#xff0c;&#x901a;&#x8fc7;&#x5165;&#x53e3;&#x70b9;&#x914d;&#x7f6e;bundle&#x3002",{"_index":4205,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x5757;&#x88ab;&#x6267;&#x884c;&#x65f6;&#xff0c;intercept",{"_index":6787,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x575a;&#x6301;&#x5df1;&#x89c1;&#x2014;&#x7528;&#x201c;angular",{"_index":2832,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x57fa;&#x4e8e;&#x6211;&#x4eec;&#x4e0e;react&#x548c;angular",{"_index":2919,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x57fa;&#x4e8e;&#x7c7b;&#x7684;&#x4f20;&#x7edf;&#x8bed;&#x8a00;&#x901a;&#x5e38;&#x4fdd;&#x7559",{"_index":1181,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x57fa;&#x4e8e;&#x89d2;&#x8272;&#x5b9e;&#x73b0;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff08;&#x67d0;&#x4e9b;&#x89d2;&#x8272;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#x67d0;&#x4e9b;url&#xff09",{"_index":4764,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x57fa;&#x4e8e;rxjs&#x7684;&#x6a21;&#x578b;&#x7528;&#x4e8e;&#x5904;&#x7406;action&#x6d41;&#x7684;&#x526f;&#x4f5c;&#x7528;&#x3002",{"_index":5836,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["x57fa;&#x7c7b",{"_index":1383,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x58f0;&#x660e;&#x8def;&#x7531;&#x53c2;&#x6570",{"_index":4719,"title":{"Routing/routeparams.html#声明路由参数":{}},"body":{}}],["x5904;&#x7406;&#x7a0b;&#x5e8f;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5728;angular",{"_index":3244,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x591a;&#x53d8;&#x91cf;&#x89e3;&#x6784",{"_index":1483,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{}}}],["x591a;&#x884c;&#x5b57;&#x7b26;&#x4e32",{"_index":1528,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x591a;&#x9879;&#x7814;&#x7a76;&#x8868;&#x660e;&#xff0c;&#x7ea6;15",{"_index":6904,"title":{},"body":{"a11y/why-a11y.html#向每个人伸出援手":{}}}],["x5927;&#x591a;&#x6570;&#x62e6;&#x622a;&#x5668;&#x68c0;&#x67e5;&#x8bf7;&#x6c42;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x5e76;&#x5c06;&#xff08;&#x53ef;&#x80fd;&#x5df2;&#x66f4;&#x6539;&#x7684;&#xff09;&#x8bf7;&#x6c42;&#x8f6c;&#x53d1;&#x7ed9;&#x5b9e;&#x73b0;&#x63a5;&#x53e3",{"_index":2307,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["x5927;&#x591a;&#x6570;&#x8868;&#x5355;&#x793a;&#x4f8b;&#x4f7f;&#x7528;&#x4ee5;&#x4e0b;html5&#x6837;&#x5f0f;&#x6765;&#x6807;&#x8bb0;input&#xff1a",{"_index":1961,"title":{},"body":{"Form/getting-started.html#入门":{}}}],["x5927;&#x591a;&#x6570;redux&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x90fd;&#x6709;&#x4e00;&#x7ec4;&#x529f;&#x80fd;&#xff0c;&#x79f0;&#x4e3a;&#x201c;act",{"_index":5877,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}}}],["x5927;&#x91cf;&#x793e;&#x533a;&#x8ffd;&#x968f;&#x8005;&#xff0c;&#x4f1a;&#x6709;&#x5927;&#x91cf;&#x4eba;&#x624d;&#x50a8;&#x5907;&#x3002",{"_index":2903,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x597d;&#x5427;&#xff0c;&#x8fd9;&#x5f00;&#x59cb;&#x770b;&#x8d77;&#x66f4;&#x5b8c;&#x6574;&#x4e00;&#x4e9b;&#x4e86;&#x3002;&#x867d;&#x7136;&#x8fd8;&#x4e0d;&#x6e05;&#x695a",{"_index":429,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x597d;&#x5904;&#x662f;&#xff1a",{"_index":6306,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x5982;&#x4e0a;&#x6240;&#x793a;&#xff0c;&#x7ed9;&#x5b9a;&#x7c7b;&#x578b;&#x4e3a",{"_index":5619,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x5982;&#x4f55;&#x83b7;&#x53d6;&#x8fd9;&#x4e9b;&#xff1f",{"_index":425,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x5982;&#x4f55;&#x88ab;&#x544a;&#x77e5;&#x5173;&#x4e8e;&#x5b83;&#x7684;&#x4f9d;&#x8d56;&#x3002;&#x4e5f;&#x8bb8;&#x8fd9;&#x4e0e;&#x90a3;&#x4e9b;&#x5947;&#x602a;&#x7684",{"_index":430,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x5982;&#x4f60;&#x6240;&#x89c1;&#xff0c;&#x52a8;&#x4f5c;&#x521b;&#x5efa;&#x8005;&#x662f;&#x7b80;&#x5355;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x5b83;dispatch&#x5305;&#x542b;&#x66f4;&#x591a;&#x63cf;&#x8ff0;&#x72b6;&#x6001;&#x4fee;&#x6539;&#x4fe1;&#x606f;&#x7684;action&#x5bf9;&#x8c61;&#x3002",{"_index":5889,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{}}}],["x5982;&#x60a8;&#x5728;&#x793a;&#x4f8b;&#x4e2d;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x7684;&#xff0c;&#x5f53;&#x5355;&#x51fb;&#x6309;&#x94ae;&#x65f6;&#xff0c;&#x4e24;&#x4e2a;&#x7ec4;&#x4ef6;&#x4e2d;&#x7684;&#x6570;&#x5b57;&#x5c06;&#x540c;&#x6b65;&#x66f4;&#x65b0;&#x3002",{"_index":6085,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5982;&#x679c",{"_index":1854,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x5982;&#x679c;&#x4e0d;&#x8fd9;&#x6837;&#x505a;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x5bfc;&#x81f4;&#x5728;&#x4f7f;&#x7528;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x65f6;&#x51fa;&#x73b0;&#x95ee;&#x9898;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5728;&#x4ee5;&#x4e0b;&#x90e8;&#x5206;&#x4e2d;&#x770b;&#x5230;&#x3002",{"_index":3599,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5982;&#x679c;&#x4f60;&#x4e00;&#x76f4;&#x5728;&#x7528;windows&#xff0c;&#x4f60;&#x53ef;&#x80fd;&#x4f1a;&#x53d1;&#x73b0;&#x8fd9;&#x4e0d;&#x719f;&#x6089;&#x3002",{"_index":6249,"title":{},"body":{"tooling/the_command_line.html#命令行":{}}}],["x5982;&#x679c;&#x4f60;&#x53d1;&#x73b0;&#x4f60;&#x5728;&#x628a;&#x4e00;&#x7ef4;&#x7684;&#x8868;&#x5355;&#x66ff;&#x6362;&#x6210;&#x5d4c;&#x5957;&#x7684;&#x6570;&#x636e;&#x4e0a;&#x9047;&#x5230;&#x4e86;&#x9ebb;&#x70e6;&#xff0c;&#x4e0d;&#x7528;&#x6015;&#xff0c;angular&#x5df2;&#x7ecf;&#x6db5;&#x76d6;&#x4e86;&#x7b80;&#x5355;&#x548c;&#x590d;&#x6742;&#x7684;&#x60c5;&#x51b5;&#x3002",{"_index":2009,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x5982;&#x679c;&#x4f60;&#x6253;&#x7b97;&#x4f7f;&#x7528",{"_index":5738,"title":{},"body":{"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{}}}],["x5982;&#x679c;&#x4f60;&#x9075;&#x5faa",{"_index":5495,"title":{},"body":{"Testing/typings.html#Typings":{}}}],["x5982;&#x679c;&#x4f60;&#x9700;&#x8981;&#x505a;&#x4e00;&#x4e2a;&#x5f02;&#x6b65;&#x8bf7;&#x6c42;&#xff08;&#x5982;&#x670d;&#x52a1;&#x5668;&#x8bf7;&#x6c42;&#xff09;&#x6765;&#x786e;&#x5b9a;&#x7528;&#x6237;&#x662f;&#x5426;&#x53ef;&#x4ee5;&#x5bfc;&#x822a;&#x5230;&#x6216;&#x79bb;&#x5f00;&#x8def;&#x7531;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x7b80;&#x5355;&#x5730;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":4697,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["x5982;&#x679c;&#x5267;&#x96c6;&#x6709;&#x552f;&#x4e00;&#x7684;id&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x6dfb;&#x52a0;&#x4e00;&#x4e2a",{"_index":975,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5982;&#x679c;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5728;&#x5176;&#x81ea;&#x5df1;&#x7684",{"_index":6539,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x7d22;&#x5f15;&#x4e3a;&#x5076;&#x6570;&#xff0c;&#x5219;&#x4e3a;tru",{"_index":959,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x7d22;&#x5f15;&#x662f;&#x5947;&#x6570;&#xff0c;&#x5219;&#x4e3a;tru",{"_index":960,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x9879;&#x662f;&#x53ef;&#x8fed;&#x4ee3;&#x4e2d;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x9879;&#xff0c;&#x5219;&#x4e3a;tru",{"_index":958,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x9879;&#x662f;&#x53ef;&#x8fed;&#x4ee3;&#x4e2d;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x9879;&#xff0c;&#x5219;&#x4e3a;tru",{"_index":957,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5982;&#x679c;&#x5fc5;&#x987b;&#x5904;&#x7406;&#x5f02;&#x6b65;&#x6216;&#x6761;&#x4ef6;actions&#xff08;react",{"_index":5890,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x5982;&#x679c;&#x60a8;&#x66f4;&#x559c;&#x6b22;xmb&#x683c;&#x5f0f;&#x3002",{"_index":2629,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x5982;&#x679c;&#x60a8;&#x7684;&#x670d;&#x52a1;&#x6216;&#x7ec4;&#x4ef6;&#x5931;&#x8d25;&#xff0c;&#x60a8;&#x5c06;&#x5982;&#x4f55;&#x77e5;&#x9053;&#x54ea;&#x4e2a;&#x662f;&#x7f6a;&#x9b41;&#x7978;&#x9996;&#xff1f",{"_index":5065,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5982;&#x679c;&#x60a8;&#x8ba4;&#x4e3a;&#x8fd9;&#x79cd;&#x6750;&#x6599;&#x6709;&#x7528;&#xff0c;&#x60a8;&#x8fd8;&#x5e94;&#x8be5;&#x8003;&#x8651;&#x6ce8;&#x518c;&#x4e00;&#x4e2a",{"_index":6886,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x5982;&#x679c;&#x60a8;&#x9700;&#x8981;&#x5177;&#x6709;&#x9ed8;&#x8ba4;&#x503c;&#x7684;&#x8868;&#x5355;&#xff0c;&#x53ef;&#x4ee5;&#x5f00;&#x59cb;&#x4f7f;&#x7528;ngmodel&#x7684;&#x503c;&#x7ed1;&#x5b9a;&#x8bed;&#x6cd5;&#x3002",{"_index":2199,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x81ea;&#x5b9a;&#x4e49;textbox&#x7ec4;&#x4ef6;&#x4f5c;&#x4e3a;host&#xff0c;&#x4ee3;&#x7801;&#x5c06;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":3296,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5728;&#x8bbe;&#x8ba1;&#x65f6;&#x51b3;&#x5b9a",{"_index":6771,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8ba9",{"_index":4953,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x5728;&#x8fd9;&#x91cc;&#x770b;&#x5230",{"_index":3485,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x586b;&#x5199;&#x8868;&#x5355;&#xff0c;&#x5b83;&#x5c06;&#x4ee5;&#x6211;&#x4eec;&#x9700;&#x8981;&#x7684;api&#x7684;&#x5f62;&#x5f0f;&#x7ed3;&#x675f;&#xff0c;&#x800c;&#x4e14;&#x4ecd;&#x7136;&#x53ef;&#x4ee5;&#x4f9d;&#x9760;html&#x8fdb;&#x884c;&#x9a8c;&#x8bc1;&#x3002",{"_index":2026,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x7c7b",{"_index":3717,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x5c06;&#x4e24;&#x4e2a;&#x6307;&#x4ee4;&#x6dfb;&#x52a0;&#x5230;&#x540c;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x4f1a;&#x53d1;&#x751f;&#x4ec0;&#x4e48;&#xff1f",{"_index":3420,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x5c06;&#x8fd9;&#x4e09;&#x4e2a;&#x5143;&#x7d20;&#x63d0;&#x53d6;&#x5230;&#x81ea;&#x5df1;&#x7684",{"_index":3466,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x5c1d;&#x8bd5;&#x8fd0;&#x884c;&#x8fd9;&#x4e2a;&#x65b0;&#x7248;&#x672c;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x63a7;&#x5236;&#x53f0;&#x4e2d;&#x6536;&#x5230;&#x4e00;&#x6761;&#x9519;&#x8bef;&#x6d88;&#x606f;&#xff1a",{"_index":3650,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x6b63;&#x786e;&#x5730;&#x5b9a;&#x4e49;&#x4e86;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#xff0c;&#x8fd9;&#x4e9b;&#x5f15;&#x7528;&#x5e94;&#x8be5;&#x8fde;&#x63a5;&#x6211;&#x4eec;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x6240;&#x6709;&#x90e8;&#x5206;&#x3002",{"_index":4231,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x7684;&#x65ad;&#x8a00;&#x7b49;&#x4e8e;&#x7ed3;&#x679c;&#x6761;&#x4ef6;&#xff0c;&#x6d4b;&#x8bd5;&#x5c06;&#x901a;&#x8fc7;&#xff0c;&#x5426;&#x5219;&#x5931;&#x8d25;&#x3002",{"_index":5406,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x9012;&#x589e;&#x8ba1;&#x6570;&#x5668;&#xff0c;&#x7136;&#x540e;&#x5728",{"_index":3643,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x5339;&#x914d;&#x591a;&#x4e2a;&#x6761;&#x4ef6;&#xff0c;&#x5219;&#x5c06;&#x6309;&#x987a;&#x5e8f;&#x4f7f;&#x7528;&#x6bcf;&#x4e2a;&#x4efb;&#x52a1;&#x5904;&#x7406;&#x5b83;&#x3002",{"_index":4306,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x5927;&#x5c0f;&#x4f4e;&#x4e8e;&#x67d0;&#x4e2a;&#x9608;&#x503c;&#xff0c;&#x5219;&#x8fd4;&#x56de;base64&#x7f16;&#x7801;&#x6570;&#x636e;url&#xff0c;&#x5426;&#x5219;&#x53ea;&#x8fd4;&#x56de;&#x6587;&#x4ef6;&#x3002",{"_index":4331,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x5982;&#x679c;&#x662f;&#xff0c;&#x90a3;&#x4e48;&#x6d4b;&#x8bd5;&#x6210;&#x529f;&#xff0c;&#x6211;&#x4eec;&#x7684",{"_index":5557,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x5982;&#x679c;&#x6a21;&#x5757;&#x6b63;&#x5728;&#x5bfc;&#x5165",{"_index":3593,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5982;&#x679c;&#x6d4b;&#x8bd5;&#x5931;&#x8d25;&#xff0c;&#x5b83;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5177;&#x6709;&#x4efb;&#x610f;&#x547d;&#x540d;&#x5c5e;&#x6027;&#x7684;&#x5bf9;&#x8c61;&#x3002",{"_index":2110,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x5982;&#x679c;&#x7236",{"_index":6769,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x5982;&#x679c;&#x7528;&#x6237;&#x5c1d;&#x8bd5;&#x79bb;&#x5f00;&#x8def;&#x7531;&#x800c;&#x4e0d;&#x662f;&#x63d0;&#x4ea4;&#x6216;&#x4fdd;&#x5b58;&#x4fe1;&#x606f;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x63d0;&#x793a;&#x7528;&#x6237;&#x3002",{"_index":4655,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x5982;&#x679c;&#x7528;&#x6237;&#x70b9;&#x51fb;id&#x4e3a;3&#x7684;&#x4ea7;&#x54c1;&#xff0c;&#x6211;&#x4eec;&#x8981;&#x663e;&#x793a;&#x4ea7;&#x54c1;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#x9875;&#x9762;&#xff0c;&#x5176;&#x4e2d;&#x5305;&#x542b;&#x6982;&#x8ff0;&#xff1a",{"_index":4518,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5982;&#x679c;&#x770b;&#x8fc7;&#x4e86;&#x4e0a;&#x9762;&#x7684;&#x5728;&#x7ebf;&#x793a;&#x4f8b;&#xff0c;&#x4f60;&#x4f1a;&#x6ce8;&#x610f;&#x5230;&#x8ba1;&#x6570;&#x5668;&#x4f3c;&#x4e4e;&#x5728",{"_index":3828,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x5982;&#x679c;&#x7a0b;&#x5e8f;&#x5458;&#x60f3;&#x8981;&#x5173;&#x95",{"_index":582,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5982;&#x679c;&#x88c5;&#x9970;&#x5668;&#x4ecd;&#x7136;&#x770b;&#x8d77;&#x6765;&#x5f88;&#x56f0;&#x60d1;&#xff0c;&#x4e5f;&#x8bb8;&#x4e00;&#x4e9b;&#x4f8b;&#x5b50;&#x4f1a;&#x5e2e;&#x4f60;&#x7406;&#x6e05;&#x601d;&#x8def;&#x3002",{"_index":1595,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x5982;&#x679c;&#x8fd9;&#x4e9b;&#x4fee;&#x6539;&#x5bfc;&#x81f4;&#x66f4;&#x591a;&#x7684;&#x72b6;&#x6001;&#x66f4;&#x6539;&#x5462;&#xff1f",{"_index":6134,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x5982;&#x679c;&#x8fd9;&#x65f6;&#x79bb;&#x5f00;&#x9875;&#x9762;&#xff0c;&#x4ed6;&#x4eec;&#x5c06;&#x4e22;&#x5931;&#x4fe1;&#x606f;&#x3002",{"_index":4654,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x5982;&#x679c;&#x9700;&#x8981;&#x91cd;&#x5b9a;&#x5411;&#x8def;&#x7531",{"_index":4583,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x5982;&#x679c;&#x9879;&#x76ee;&#x4f7f;&#x7528;webpack&#xff0c;&#x90a3;&#x4e48;&#x5728;karma&#x914d;&#x7f6e;&#x5bf9;&#x8c61;&#x4e2d;&#x7684;&#x5c5e;&#x6027;webpack&#x662f;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;karma&#x914d;&#x7f6e;webpack&#x7684;&#x4f4d;&#x7f6e;&#x3002",{"_index":5207,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x5982;&#x679c;&#x9a8c;&#x8bc1;&#x5668;&#x53ea;&#x662f;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x5b83;&#x4eec;&#x5982;&#x4f55;&#x5141;&#x8bb8;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x6765;&#x63a7;&#x5236;&#x957f;&#x5ea6;&#xff1f",{"_index":2118,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x59cb;&#x7ec8;&#x4f7f;&#x7528",{"_index":3549,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x59d4;&#x6258",{"_index":1255,"title":{"ES6&TypeScript/es6/delegation.html#委托":{}},"body":{}}],["x5b50",{"_index":6289,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x5b50;&#x7c7b",{"_index":1384,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x5b50;&#x7c7b;&#x5316",{"_index":1362,"title":{"ES6&TypeScript/es6/inheritance.html#子类化":{}},"body":{}}],["x5b50;&#x7ec4;&#x4ef6;&#x81ea;&#x5df1;&#x7684;&#x6ce8;&#x5165;&#x7ec4;&#x4ef6;&#x6709;&#x4e00;&#x4e2a;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x5b83;&#x586b;&#x5145;&#x4e86;&#x81ea;&#x5df1;&#x7684",{"_index":710,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x5b50;&#x7ee7;&#x627f;&#x5668;&#x6ca1;&#x6709;&#x6ce8;&#x5165;&#x5668;&#x3002;&#x5b83;&#x5c06;&#x5411;&#x4e0a;&#x904d;&#x5386;&#x7ec4;&#x4ef6;&#x6811;&#xff0c;&#x5bfb;&#x627e;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":707,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x5b50;&#x8def;&#x7531;&#x4fdd;&#x6301;&#x4e0d;&#x53d8;&#x3002",{"_index":4546,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5b50;&#x8def;&#x7531;&#x5177;&#x6709;&#x7a7a;&#x8def;&#x5f84;&#xff0c;&#x56e0;&#x6b64;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#x5c06;&#x52a0;&#x8f7d;&#x5b83;&#x3002",{"_index":4545,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5b57;&#x6bb5;&#x5305;&#x542b;&#x5177;&#x6709;&#x952e;&#x503c;&#x914d;&#x5bf9;&#x7684;&#x5bf9;&#x8c61;&#xff0c;&#x5176;&#x4e2d;&#x952e;&#x662f;&#x547d;&#x4ee4;&#x7684;&#x522b;&#x540d;&#xff0c;&#x503c;&#x662f;&#x8981;&#x6267;&#x884c;&#x7684;&#x547d;&#x4ee4;&#x3002",{"_index":4980,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x5b57;&#x7b26;&#x548c;&#x5b57;&#x7b26;&#x4e32",{"_index":1836,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x5b57;&#x7b26;&#x6765;&#x5206;&#x9694;&#x6a21;&#x5757;&#x5f15;&#x7528;&#x548c;&#x5c06;&#x8981;&#x8fd0;&#x884c;&#x7684;&#x52a0;&#x8f7d;&#x5668;&#x3002;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x591a;&#x4e2a;&#x52a0;&#x8f7d;&#x5668;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x4eec;&#x4ee5;&#x540c;&#x6837;&#x7528",{"_index":4294,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x5b83;&#x4e0e",{"_index":3198,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x5b83;&#x4e0e;nodejs&#x4e00;&#x8d77;&#x5b89;&#x88c5;&#xff0c;&#x5e76;&#x5141;&#x8bb8;&#x60a8;&#x8bbf;&#x95ee;&#x5404;&#x79cd;&#x7b2c;&#x4e09;&#x65b9;javascript&#x6a21;&#x5757;&#x3002",{"_index":6203,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x5b83;&#x4ec5;&#x5b9a;&#x4e49;api&#x7684;&#x201c;&#x7b7e;&#x540d;&#x201d;&#x6216;&#x5f62;&#x72b6;&#x3002",{"_index":1629,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x5b83;&#x4eec;&#x51e0;&#x4e4e;&#x4e0e;&#x8ba1;&#x6570;&#x5668;&#x52a8;&#x4f5c;&#x548c;&#x8ba1;&#x6570;&#x5668;reducer&#x76f8;&#x540c;&#xff0c;&#x6211;&#x4eec;&#x53ea;&#x662f;&#x60f3;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;reducer&#x6765;&#x4fdd;&#x6301;&#x5b83;&#x7684;&#x72b6;&#x6001;&#x3002",{"_index":6088,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5b83;&#x4eec;&#x53ea;&#x80fd;&#x5728;&#x4ea7;&#x54c1;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#x4e2d;&#x627e;&#x5230;&#x3002",{"_index":4524,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5b83;&#x4eec;&#x53ef;&#x4ee5;&#x4e0e;&#x5176;&#x4f59;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x4e00;&#x8d77;&#x5bfc;&#x5165;&#x3002",{"_index":2152,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["x5b83;&#x4f1a;&#x81ea;&#x52a8;&#x8ddf;&#x8e2a;&#x5bfc;&#x822a;&#x4e8b;&#x4ef6;&#x5e76;&#x5c06;&#x5176;&#x53d1;&#x9001;&#x5230;&#x60a8;&#x7684;&#x63d2;&#x4ef6",{"_index":2743,"title":{},"body":{"plus.html#插件":{}}}],["x5b83;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x4ee5;tdd&#xff08;&#x6d4b;&#x8bd5;&#x9a71;&#x52a8;&#x5f00;&#x53d1;&#xff09;&#x98ce;&#x683c;&#x6216;bdd&#xff08;&#x884c;&#x4e3a;&#x9a71;&#x52a8;&#x5f00;&#x53d1;&#xff09;&#x98ce;&#x683c;&#x7f16;&#x5199;&#x6d4b;&#x8bd5;&#x3002",{"_index":5512,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["x5b83;&#x53ea;&#x5bfc;&#x51fa;&#x516c;&#x5171;&#x6307;&#x4ee4;&#x548c;&#x7ba1;&#x9053;&#x3002",{"_index":3492,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5b83;&#x53ea;&#x6709",{"_index":5043,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5b83;&#x5c06;&#x4f7f;&#x7528;&#x641c;&#x7d22;&#x9879;&#x67e5;&#x8be2;&#x7ef4;&#x57fa;&#x767e;&#x79d1;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5e26;&#x6709;&#x67e5;&#x8be2;&#x7ed3;&#x679c;&#x7684;observable&#x3002",{"_index":5011,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x5b83;&#x5c06;&#x5728;src&#x6587;&#x4ef6;&#x5939;&#x4e2d;&#x8f93;&#x51fa;.js&#x548c;.metadata.json&#x6587;&#x4ef6;&#x3002",{"_index":2639,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x5b83;&#x5c06;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e0d;&#x540c;&#x9636;&#x6bb5;&#x7684;&#x5b9e;&#x73b0;&#x7ec6;&#x8282;&#x7ed3;&#x5408;&#x5728;&#x4e00;&#x8d77;&#xff0c;&#x56e0;&#x6b64;&#x5728;&#x8bb8;&#x591a;&#x60c5;&#x51b5;&#x4e0b;&#x53ef;&#x80fd;&#x4e0d;&#x662f;&#x6b63;&#x786e;&#x7684;&#x9009;&#x62e9;&#x3002",{"_index":4300,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x5b83;&#x5df2;&#x7ecf;&#x6210;&#x4e3a;&#x5f00;&#x6e90;&#x5f00;&#x53d1;&#x7684;&#x7ea6;&#x5b9a;&#x4fd7;&#x6210;&#x7684;&#x6e90;&#x7801;&#x63a7;&#x5236;&#x7cfb;&#x7edf;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x7684;&#x5206;&#x6563;&#x6a21;&#x578b;&#x548c;&#x5ef6;&#x8fdf;&#x7684;&#x5206;&#x652f;&#x7279;&#x5f81;&#x3002",{"_index":6244,"title":{},"body":{"tooling/source_control.html#源码控制：Git":{}}}],["x5b83;&#x5fc5;&#x987b;&#x662f;&#x6709;&#x6548;&#x7684;javascript&#x6807;&#x8bc6;&#x7b26;&#x3002",{"_index":4104,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x5b83;&#x62e5;&#x6709;&#x8bcd;&#x6cd5;&#x4f5c;&#x7528;&#x57df;&#x7684;this&#x503c;&#xff08;&#x5373;&#x4e0d;&#x4f1a;&#x65b0;&#x4ea7;&#x751f;&#x81ea;&#x5df1;&#x4f5c;&#x7528;&#x57df;&#x4e0b;&#x7684;thi",{"_index":1166,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x5b83;&#x6536;&#x96c6",{"_index":5611,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x5b83;&#x662f;&#x6709;&#x72b6;&#x6001;&#x7684;&#xff0c;&#x56e0;&#x4e3a;&#x7ba1;&#x9053;&#x7ef4;&#x62a4;&#x5bf9;&#x8f93;&#x5165;&#x7684;&#x9884;&#x8ba2;&#xff0c;&#x5e76;&#x4e14;&#x5176;&#x8fd4;&#x56de;&#x503c;&#x53d6;&#x51b3;&#x4e8e;&#x8be5;&#x9884;&#x8ba2;&#x3002",{"_index":4155,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#AsyncPipe":{}}}],["x5b83;&#x662f;&#x6d4b;&#x8bd5;&#x7ec4;&#x4ef6;&#x7684;&#x4e3b;&#x8981;&#x63a5;&#x5165;&#x70b9;&#xff0c;&#x6211;&#x4eec;&#x5e7f;&#x6cdb;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":5074,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5b83;&#x6709;&#x4e00;&#x4e2a",{"_index":4890,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x5b83;&#x77e5;&#x9053;redux&#xff0c;state&#x7684;&#x7ed3;&#x6784;&#x548c;&#x5b83;&#x9700;&#x8981;&#x8c03;&#x7528;&#x7684;&#x52a8;&#x4f5c;&#x3002",{"_index":6067,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5b83;&#x7f3a;&#x5c11",{"_index":3179,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x5b83;&#x8fd8;&#x4e3a;&#x540e;&#x7aef;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6267;&#x884c;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x7ba1;&#x7406;&#x3002",{"_index":6204,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x5b83;&#x8fd8;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x751f;&#x6210;&#x5173;&#x4e8e;&#x7ed3;&#x679c;&#x7684;&#x5404;&#x79cd;&#x62a5;&#x544a;&#x3002",{"_index":5472,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x5b83;&#x901a;&#x8fc7;&#x4f7f;&#x7528;&#x88c5;&#x8f7d;&#x5668;&#x6765;&#x505a;&#x5230;&#x8fd9;&#x4e00;&#x70b9;&#x3002",{"_index":4289,"title":{},"body":{"Project-setup/loaders.html#Loaders":{}}}],["x5b83;&#x901a;&#x8fc7;&#x904d;&#x5386;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x7684;&#x5f15;&#x7528;&#x6620;&#x5c04;&#x4e00;&#x4e2a;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x56fe;&#x3002",{"_index":4207,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x5b83;&#x9047;&#x5230;&#x7684;&#x6240;&#x6709;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x7136;&#x540e;&#x6253;&#x5305;&#x5230;&#x8be5;&#x6346;&#x7ed1;&#x5305;&#x4e2d;&#x3002",{"_index":4208,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x5b83;&#x96c6;&#x5408;&#x4e86;&#x6211;&#x4eec;&#x7684;&#x5176;&#x4ed6;&#x6d4b;&#x8bd5;&#x5de5;&#x5177;&#x6765;&#x5b9a;&#x4e49;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x4f7f;&#x7528;&#x7684;&#x6846;&#x67b6;&#xff0c;&#x6d4b;&#x8bd5;&#x73af;&#x5883;&#xff0c;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x6267;&#x884c;&#x7684;&#x5177;&#x4f53;&#x64cd;&#x4f5c;&#x7b49;&#x3002;&#x4e3a;&#x4e86;&#x505a;&#x5230;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;karma&#x4f9d;&#x8d56;&#x4e8e;&#x4e00;&#x4e2a;&#x4ee5;&#x9ed8;&#x8ba4",{"_index":5175,"title":{},"body":{"Testing/karma-config.html#Karma-配置":{}}}],["x5b83;&#x9700;&#x8981;&#x5177;&#x6709;&#x5176;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x7684;&#x6a21;&#x5757;&#xff0c;&#x5e76;&#x751f;&#x6210;&#x8868;&#x793a;&#x8fd9;&#x4e9b;&#x6a21;&#x5757;&#x7684;&#x9759;&#x6001;&#x8d44;&#x6e90;&#x3002",{"_index":6234,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["x5b89;&#x88c5",{"_index":4195,"title":{"Project-setup/installation_and_usage.html#安装":{}},"body":{}}],["x5b8c;&#x6210;&#x7684;&#x3002",{"_index":3968,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x5b8c;&#x6210;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x5728;&#x6240;&#x6709;&#x7684;&#x6d4b;&#x8bd5;&#x6587;&#x4ef6;&#xff08;&#x4ee5",{"_index":5203,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x5b8c;&#x6210;&#x914d;&#x7f6e",{"_index":5243,"title":{"Testing/karma-config.html#完成配置":{}},"body":{}}],["x5b98;&#x65b9;&#x6587;&#x6863",{"_index":3409,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{},"Project-setup/summary.html#更进一步":{}}}],["x5b9a;&#x4e49;&#x5982;&#x4e0b;&#xff1a",{"_index":2845,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5b9a;&#x4e49;&#x5b50;&#x8def;&#x7531",{"_index":4514,"title":{"Routing/child_routes.html#定义子路由":{}},"body":{}}],["x5b9a;&#x4e49;&#x5e94;&#x7528;&#x7684;&#x4e3b;&#x72b6;&#x6001",{"_index":5803,"title":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}},"body":{}}],["x5b9a;&#x4e49;&#x8def;&#x7531;&#x4e4b;&#x95f4;&#x7684;&#x94fe;&#x63a5",{"_index":4738,"title":{"Routing/routerlink.html#定义路由之间的链接":{}},"body":{}}],["x5b9a;&#x5236;&#x6240;&#x6709;&#x8fd9;&#x4e9b;&#x5c5e;&#x6027;&#x7684;&#x6700;&#x7ec8;&#x7ed3;&#x679c;&#x662f;&#x5728",{"_index":5244,"title":{},"body":{"Testing/karma-config.html#完成配置":{}}}],["x5b9e;&#x4f8b;&#x3002",{"_index":678,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x5b9e;&#x4f8b;&#x5171;&#x4eab;&#x76f8;&#x540c;&#x7684;&#x503c;&#x3002",{"_index":712,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x5b9e;&#x4f8b;&#x7684;&#x5f15;&#x7528;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#x6a21;&#x677f;&#x4e2d;&#x7684;&#x8f93;&#x5165;&#xff0c;&#x800c;&#x65e0;&#x9700;&#x5f15;&#x7528;&#x8868;&#x5355;&#x672c;&#x8eab;&#x3002",{"_index":2062,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x5b9e;&#x4f8b;&#x88ab;&#x6dfb;&#x52a0;&#x5230;&#x6839;&#x6a21;&#x5757;&#x3002",{"_index":3545,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x5b9e;&#x4f8b;&#x90fd;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4f7f;&#x7528;&#x5176",{"_index":2066,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x5b9e;&#x4f8b;&#xff0c;&#x4e00;&#x4e2a;&#x5b58;&#x5728;&#x4e8",{"_index":3831,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x5b9e;&#x4f8b;&#xff0c;&#x5e76;&#x8fd4;&#x56de;null&#x5982;&#x679c;&#x4e00;&#x5207;&#x90fd;&#x5f88;&#x597d;&#x3002",{"_index":2109,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x5b9e;&#x73b0",{"_index":3086,"title":{"Routing/route_guards.html#实现-CanDeactivate":{}},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["x5b9e;&#x73b0;&#x52a8;&#x4f5c;&#x5ef6;&#x8fdf;&#x8bc4;&#x4f30;&#x7684;&#x4e2d;&#x95f4;&#x4ef6",{"_index":5835,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["x5b9e;&#x73b0;&#x6709;&#x72b6;&#x6001;&#x7ba1;&#x9053",{"_index":4158,"title":{"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}},"body":{}}],["x5b9e;&#x73b0;&#x6a21;&#x5757;&#x5316;&#x5e94;&#x7528",{"_index":4763,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x5b9e;&#x73b0;&#x76f8;&#x540c;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x4f46;&#x6211;&#x4eec;&#x4e0d;&#x5728;&#x8fd9;&#x91cc;&#x8ba8;&#x8bba;&#x3002",{"_index":1448,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5b9e;&#x73b0;&#x7ec6;&#x8282",{"_index":1410,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5b9e;&#x73b0;&#x9519;&#x8bef;&#x91cd;&#x8bd5",{"_index":2323,"title":{},"body":{"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{}}}],["x5b9e;&#x73b0;&#xff0c;&#x4f8b;&#x5982;&#x5141;&#x8bb8;&#x4e00;&#x4e2a",{"_index":583,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5b9e;&#x73b0;&#xff1a",{"_index":4721,"title":{},"body":{"Routing/routeparams.html#声明路由参数":{}}}],["x5b9e;&#x73b0;canactiv",{"_index":4679,"title":{"Routing/route_guards.html#实现CanActivate":{}},"body":{}}],["x5b9e;&#x9645;&#x4e0a;&#x662f",{"_index":3182,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x5bb9;&#x5668",{"_index":6073,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5bb9;&#x5668;&#x7ec4;&#x4ef6",{"_index":6077,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5bf9",{"_index":2061,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x6216;&#x4e24;&#x4e2a;&#x6d4b;&#x8bd5;&#xff0c;&#x8fd9;&#x53ef;&#x80fd;&#x770b;&#x8d77;&#x6765;&#x50cf;&#x5927;&#x70ae;&#x6253;&#x868a;&#x5b50;&#xff0c;&#x4f46;&#x968f;&#x7740;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x53d8;&#x5f97;&#x8d8a;&#x6765;&#x8d8a;&#x5927;&#xff0c;&#x6d4b;&#x8bd5;&#x5355;&#x5143;&#x6570;&#x91cf;&#x589e;&#x52a0;&#xff0c;&#x91cd;&#x8981;&#x7684;&#x662f;&#x4ee5;&#x6709;&#x6548;&#x7684;&#x65b9;&#x5f0f;&#x7ec4;&#x7ec7;&#xff0c;&#x6267;&#x884c;&#x548c;&#x62a5;&#x544a;&#x6d4b;&#x8bd5;&#x3002",{"_index":5473,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x6307;&#x4ee4;&#xff0c;&#x8fd9;&#x4e2a;&#x6982;&#x5ff5;&#x662f;&#x76f8;&#x5f53;&#x7b80;&#x5355;&#x7684;&#x3002",{"_index":3292,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["x5bf9;&#x4e8e;&#x4e00;&#x4e9b;&#x989d;&#x5916;&#x7684;&#x6d4b;&#x8bd5;&#x529f;&#x80fd;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":5483,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x5bf9;&#x4e8e;&#x4e0a;&#x9762;&#x793a;&#x4f8b;&#x4e2d;&#x7684",{"_index":3298,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["x5bf9;&#x4e8e;&#x5177;&#x6709;&#x5927;&#x91cf;&#x5f02;&#x6b65;&#x6d3b;&#x52a8;&#x4ee5;&#x53ca;&#x5728;&#x591a;&#x4e2a;&#x7ec4;&#x4ef6;&#x548c;&#x6a21;&#x5757;&#x4e4b;&#x95f4;&#x6709;&#x5f88;&#x591a;&#x5171;&#x4eab;&#x72b6;&#x6001;&#x7684;&#x5927;&#x578b;angular&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x7ba1;&#x7406;&#x72b6;&#x6001;&#x53ef;&#x80fd;&#x76f8;&#x5f53;&#x5177;&#x6709;&#x6311;&#x6218;&#x6027;&#x3002",{"_index":6126,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x5bf9;&#x4e8e;&#x5185;&#x7f6e;&#x9a8c;&#x8bc1;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x8868;&#x5355;&#x5143;&#x7d20;&#x4e0a;&#x8c03;&#x7528",{"_index":2159,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["x5bf9;&#x4e8e;&#x521d;&#x5b66;&#x8005;&#xff0c;&#x9700;&#x8981;&#x5f88;&#x591a;&#x601d;&#x8003;&#x624d;&#x80fd;&#x5165;&#x95e8;angular",{"_index":2869,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5bf9;&#x4e8e;&#x524d;&#x7aef;&#x9879;&#x76ee;&#x800c;&#x8a00;&#xff0c;&#x4e00;&#x822c;&#x51e0;&#x5343;&#x4e2a;&#x6570;&#x636e;&#x66f4;&#x65b0;&#x57fa;&#x672c;&#x4e0a;&#x4e0d;&#x4f1a;&#x6d89;&#x53ca;&#x5230;&#x6027;&#x80fd;&#x95ee;&#x9898;&#xff0c;&#x800c;&#x4e14;&#x79fb;&#x52a8;&#x7aef;&#x6765;&#x8bf4;&#xff0c;&#x90a3;&#x4e48;&#x5c0f;&#x7684;&#x5c4f;&#x5e55;&#xff0c;&#x6570;&#x636e;&#x91cf;&#x4f1a;&#x66f4;&#x5c11;&#x3002",{"_index":3021,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x5bf9;&#x4e8e;&#x57fa;&#x672c;&#x7684;&#x5b9e;&#x73b0;&#xff0c;&#x6211;&#x4eec;&#x53ea;&#x9700;&#x8981;&#x6dfb;&#x52a0;&#x4e00;&#x4e9b;&#x5c5e;&#x6027;&#xff0c;&#x5e76;&#x786e;&#x4fdd;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x77e5;&#x9053;&#x5982;&#x4f55;&#x5904;&#x7406;&#x6570;&#x636e;&#x3002",{"_index":2178,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["x5bf9;&#x4e8e;&#x65e0;&#x6d4f;&#x89c8;&#x5668;&#x7684;dom&#x5b9e;&#x4f8b;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;phantomjs&#xff08;&#x5982;&#x5de5;&#x5177;&#x94fe;&#x90e8;&#x5206;&#x4e2d;&#x6240;&#x8ff0;&#xff09;&#x3002",{"_index":5236,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x5bf9;&#x4e8e;&#x786e;&#x5b9a;&#x8def;&#x7531;&#x662f;&#x5fc5;&#x8981;&#x7684;&#xff0c;&#x800c;&#x67e5;&#x8be2;&#x53c2;&#x6570;&#x662f;&#x53ef;&#x9009;&#x7684;&#x3002",{"_index":4607,"title":{},"body":{"Routing/query_params.html#传递可选参数":{}}}],["x5bf9;&#x4e8e;aot&#xff0c;&#x5b83;&#x4ee3;&#x8868;&#x6700;&#x8fd1;&#x5728;angular",{"_index":3131,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x5bf9;&#x4e8e;promise&#xff0c;&#x5728",{"_index":6529,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x5bf9;&#x5e94;&#x4e8",{"_index":4535,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5bf9;&#x5f53;&#x524d",{"_index":6378,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x5bf9;&#x6027;&#x80fd;&#x7684;&#x8ffd;&#x6c42;&#x5e76;&#x4e0d;&#x4ee5;&#x9884;&#x6e32;&#x67d3;&#x7ed3;&#x675f;&#x3002",{"_index":3066,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x5bf9;&#x8bdd;&#x670d;&#x52a1;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":4700,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["x5bf9;&#x8c61",{"_index":1161,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/classes.html#类":{}}}],["x5bf9;&#x8c61;&#x3002",{"_index":147,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5bf9;&#x8c61;&#x3002;angular",{"_index":398,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x5bf9;&#x8c61;&#x4e2d;&#x3002",{"_index":5613,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x5bf9;&#x8c61;&#x521b;&#x5efa;&#x7684;&#x987a;&#x5e8f;&#x4ece;&#x5b83;&#x7684;&#x57fa;&#x7c7b;&#x5f00;&#x59cb;&#xff0c;&#x7136;&#x540e;&#x5411;&#x4e0b;&#x79fb;&#x52a8;&#x5230;&#x4efb;&#x4f55;&#x5b50;&#x7c7b;&#x3002",{"_index":1382,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x5bf9;&#x8c61;&#x521d;&#x59cb;&#x5316",{"_index":1378,"title":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}},"body":{}}],["x5bf9;&#x8c61;&#x5b57;&#x9762;&#x91cf",{"_index":1838,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x5bf9;&#x8c61;&#x6539;&#x53d8;&#x4e86;&#xff08;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b9e;&#x4f8b;&#xff09;&#xff0c;&#x5b83;&#x5c06;&#x7ee7;&#x7eed;&#x68c0;&#x67e5;&#x6a21;&#x677f;&#xff0c;&#x4ee5;&#x4fbf",{"_index":151,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5bf9;&#x8c61;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x578b;&#x4e0e;&#x89c6;&#x56fe;&#x4e0d;&#x540c;&#x6b65;&#x3002",{"_index":142,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5bf9;&#x8c61;&#x662f;&#x4f7f;&#x7528",{"_index":1185,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x5bf9;&#x8c61;&#x7684;&#x5b9e;&#x4f8b;&#x4f7f;&#x7528;&#x3002",{"_index":1373,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x5bf9;&#x8c61;&#x7684;&#x5c5e;&#x6027;&#x3002",{"_index":135,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5bf9;&#x8c61;&#x7684;&#x65b9;&#x6cd5",{"_index":1376,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{},"Http/interceptor.html#Http-拦截器":{}}}],["x5bf9;&#x8c61;&#x7684;const&#x5f15;&#x7528",{"_index":1241,"title":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}},"body":{}}],["x5bf9;&#x8c61;&#x7684;name&#x5c5e;&#x6027;&#xff0c;&#x4f46;&#x662f;&#x6211;&#x4eec;&#x65e0;&#x6cd5;&#x91cd;&#x7f6",{"_index":1239,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{}}}],["x5bf9;&#x8c61;&#x88ab;&#x521b;&#x5efa;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8c03;&#x7528",{"_index":5552,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x5bf9;&#x8c61;&#x975e;&#x5e38;&#x7b80;&#x5355;&#xff0c;&#x53ea;&#x5b9a;&#x4e49;&#x5bfc;&#x822a;&#x5230",{"_index":3720,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x914d;&#x7f6e;&#x6211;&#x4eec;&#x7684;&#x54cd;&#x5e94;&#x7684;&#x5c5e;&#x6027;&#x3002;&#x8fd9;&#x9075;&#x5faa;&#x5e38;&#x89c4;angular",{"_index":5306,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x6211;&#x4eec;&#x6a21;&#x62df;&#x4e86;&#x4e00;&#x4e9b;&#x4efb;&#x610f;&#x6570;&#x636e;&#x3002;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684",{"_index":5305,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x5bf9;redux&#x8fdb;&#x884c;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x662f;&#x4e00;&#x4e2a;&#x975e;&#x5e38;&#x7b80;&#x5355;&#x7684;&#x8fc7;&#x7a0b;&#xff0c;&#x539f;&#x56e0;&#x6709;&#x4e24;&#x70b9;&#xff1a",{"_index":5361,"title":{},"body":{"Testing/redux.html#测试-Redux":{}}}],["x5bfc;&#x5165;&#x4e3a;&#x663e;&#x5f0f;&#x4f9d;&#x8d56;&#x9879;&#x3002",{"_index":3579,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5bfc;&#x5165;&#x6211;&#x4eec;&#x4e3a;&#x540c;&#x4e00;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x521b;&#x5efa;&#x7684;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x6a21;&#x5757;&#x3002",{"_index":3598,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5c01;&#x88c5;&#x5728;&#x6240;&#x6709;&#x7ec4;&#x4ef6;&#x4e2d;&#x590d;&#x5236;&#x5176;&#x6837;&#x5f0f;&#x3002",{"_index":5682,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x5c01;&#x88c5;&#x7684;&#x7ec4;&#x4ef6;&#x5c06;&#x4f7f;&#x7528",{"_index":5681,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x5c06",{"_index":2355,"title":{},"body":{"Http/progress.html#HTTP-进度事件":{},"Routing/config.html#RouterModule":{}}}],["x5c06;&#x4e00;&#x76f4;&#x7b49;&#x5230;&#x5b83;&#x5b8c;&#x6210;&#x3002",{"_index":4955,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x6570;&#x7ec4;&#xff0c;&#x5176;&#x4e2d;&#x6240;&#x6709;&#x5143;&#x7d20;&#x90fd;&#x901a;&#x8fc7;&#x7531;&#x63d0;&#x4f9b;&#x7684;&#x51fd;&#x6570;&#x5b9e;&#x73b0;&#x7684;&#x6d4b;&#x8bd5;&#x3002",{"_index":3948,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x6570;&#x7ec4;&#xff0c;&#x5176;&#x7ed3;&#x679c;&#x662f;&#x5728;&#x8be5;&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x4e0a;&#x8c03;&#x7528;&#x4e00;&#x4e2a;&#x63d0;&#x4f9b;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":3943,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x5c06;&#x542f;&#x52a8;karma&#x3002;&#x4e0b;&#x9762;&#x662f;&#x6211;&#x4eec;&#x7684;karma&#x6d4b;&#x8bd5;&#x7684;&#x8f93;&#x51fa;&#x3002;&#x5982;&#x60a8;&#x6240;&#x89c1;&#xff0c;&#x6211;&#x4eec;&#x6709;&#x4e00;&#x4e2a;&#x6d4b;&#x8bd5;&#x5df2;&#x901a;&#x8fc7;&#xff0c;&#x5728;chrom",{"_index":4982,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x5c06;&#x5728",{"_index":4676,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x5c06;&#x5728;&#x6a21;&#x677f;&#x4e2d;&#x66f4;&#x65b0;&#x5b83;&#x3002",{"_index":6178,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x5c06;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x52a0;&#x8f7d;&#xff0c;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x770b;&#x5230;&#x5bfc;&#x822a;&#x7cfb;&#x7edf;&#x548c;&#x6587;&#x672c;&#x201c;eag",{"_index":3732,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5c06;&#x5728;&#x79bb;&#x5f00;&#x8be5;&#x8def;&#x7531;&#x65f6;&#x88ab;&#x68c0;&#x67e5;&#x3002",{"_index":4678,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x5c06;&#x5b8c;&#x6210;&#x7684;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x5bfc;&#x5165;&#x5230;&#x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d",{"_index":2524,"title":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{}},"body":{}}],["x5c06;&#x5c1d;&#x8bd5;&#x4ec5;&#x5c06;&#x80cc;&#x666f;&#x989c;&#x8272;&#x66f4;&#x6539;&#x4e3a;&#x9ec4;&#x8272;&#x3002",{"_index":3418,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x5c06;&#x5c1d;&#x8bd5;&#x5c06;&#x5143;&#x7d20;&#x7684;&#x80cc;&#x666f;&#x989c;&#x8272;&#x8bbe;&#x7f6e;&#x4e3a;&#x84dd;&#x8272;&#xff0c;&#x540c;&#x65f6;&#x5c06;&#x6587;&#x672c;&#x7684;&#x989c;&#x8272;&#x66f4;&#x6539;&#x4e3a;&#x7070;&#x8272;&#xff0c;&#x800c",{"_index":3417,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x5c06;&#x5f15;&#x7528",{"_index":1427,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5c06;&#x5f15;&#x7528;&#x70b9;&#x5de6;&#x8fb9;&#x7684;&#x5bf9;&#x8c61;&#x3002",{"_index":1187,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x5c06;&#x60a8;&#x7684;&#x6307;&#x4ee4;&#x5c5e;&#x6027;&#x653e;&#x5728;&#x54ea;&#x4e2a;&#x6a21;&#x677f;&#x6807;&#x8bb0;&#x88ab;&#x8ba4;&#x4e3a;&#x662f;host&#x5143;&#x7d20;&#x3002;&#x5982;&#x679c;&#x6211;&#x4eec;&#x50cf;&#x4e0a;&#x9762;&#x8fd9;&#x6837;&#x5b9e;&#x73b0",{"_index":3293,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["x5c06;&#x6536;&#x5230;&#x65b0;&#x7684;&#x503c;&#x5e76;&#x4e14",{"_index":6177,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x5c06;&#x6570;&#x636e;&#x4f20;&#x9012;&#x5230;&#x7ec4;&#x4ef6;&#x4e2d;&#xff0c;&#x5e76;&#x5c06;&#x64cd;&#x4f5c;&#x56de;&#x8c03;&#x4f5c;&#x4e3a",{"_index":6091,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5c06;&#x662f;&#x672a;&#x5b9a;&#x4e49;&#x7684;&#x3002",{"_index":1435,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x5c06;&#x662f;&#x7236",{"_index":6754,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x5c06;&#x7528;&#x4e8e;&#x8f6c;&#x6362;&#x8f93;&#x5165;&#x7684;&#x88c5;&#x8f7d;&#x7a0b;&#x5e8f;&#x3002",{"_index":4315,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x5c06;&#x7ec4;&#x4ef6;&#xff0c;&#x7ba1;&#x9053;&#x548c;&#x670d;&#x52a1;&#x6dfb;&#x52a0;&#x5230;&#x6a21;&#x5757",{"_index":3763,"title":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}},"body":{}}],["x5c06;&#x89e3;&#x6790;&#xff0c;&#x4e0b;&#x8f7d;&#x5e76;&#x5b89;&#x88c5;&#x60a8;&#x7684;&#x540e;&#x7aef;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x4f9d;&#x8d56;&#x9879;&#x3002",{"_index":6208,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x5c06;&#x8def;&#x7531;&#x5668;&#x91cd;&#x5b9a;&#x5411;&#x5230;&#x53e6;&#x4e00;&#x6761;&#x8def;&#x7531",{"_index":4618,"title":{"Routing/redirects.html#将路由器重定向到另一条路由":{}},"body":{}}],["x5c06;&#x8def;&#x7531;&#x94fe;&#x63a5;&#x5230;&#x53c2;&#x6570",{"_index":4717,"title":{},"body":{"Routing/routeparams.html#使用路由参数":{}}}],["x5c06;@ngrx&#x6dfb;&#x52a0;&#x5230;&#x4f60;&#x7684;&#x9879;&#x76e",{"_index":5735,"title":{"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{}},"body":{}}],["x5c06;karma&#x4e0e;&#x6d4b;&#x8bd5;&#x6846;&#x67b6;&#xff08;&#x5982;jasmine&#xff09;&#x6216;&#x6784;&#x5efa;&#x7cfb;&#x7edf;&#xff08;&#x5982;webpack&#xff09;&#x96c6;&#x6210;&#x7684;&#x63d2;&#x4ef6;&#x3002",{"_index":5185,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x5c31;&#x50cf;&#x6211;&#x4eec;&#x5bf9;&#x4e8e;&#x6839;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7ec4;&#x4ef6;&#x6709;&#x4e00;&#x4e2a",{"_index":4532,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5c3d;&#x7ba1",{"_index":1666,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x5c3d;&#x7ba1;&#x662f;&#x4e00;&#x4e2a;&#x5b8c;&#x6574;&#x7684;&#x91cd;&#x5199;&#xff0c;angular",{"_index":3055,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x5c3d;&#x7ba1;&#x8fd9;&#x79cd;&#x8bed;&#x6cd5;&#x6bd4;&#x539f;&#x59cb;&#x8bed;&#x6cd5;&#x66f4;&#x590d;&#x6742;&#xff0c;&#x4f46;&#x5b83;&#x5c06;&#x4fdd;&#x8bc1;&#x6211;&#x4eec;&#x53ea;&#x6709;&#x4e00;&#x4e2a",{"_index":3544,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x5c40;&#x90e8;&#x53d8;&#x91cf",{"_index":954,"title":{"Directives/ng_for_directive.html#局部变量":{}},"body":{}}],["x5c40;&#x9650",{"_index":3211,"title":{"Advanced-angular/aot_limitations.html#AoT-局限":{}},"body":{}}],["x5c55;&#x5e73;&#x4e86;&#x6211;&#x4eec;&#x7684",{"_index":3960,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x5c55;&#x5f00;&#x8fd0;&#x7b97;&#x7b26;&#x548c",{"_index":1293,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x5c5e;&#x6027",{"_index":5239,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x5c5e;&#x6027;&#x3002",{"_index":612,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{},"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html#一个模块的基本使用":{},"Modules/shared-modules-di.html#共享模块和依赖注入":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x5c5e;&#x6027;&#x3002;&#x6709;&#x51e0;&#x79cd;&#x4e0d;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x4f7f;&#x7528;&#x6307;&#x4ee4;&#x3002",{"_index":792,"title":{},"body":{"Directives/ng_class_directive.html#NgClass-指令":{}}}],["x5c5e;&#x6027;&#x3002;&#x8fd9;&#x91cc;&#x6709;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#xff1a",{"_index":1038,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x5c5e;&#x6027;&#x3002;&#xff08;&#x5728;&#x5b50",{"_index":6291,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x5c5e;&#x6027;&#x4e00;&#x6837;&#x3002",{"_index":795,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["x5c5e;&#x6027;&#x4e2d;&#x5b9a;&#x4e49;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":4348,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x5c5e;&#x6027;&#x4e2d;&#x5b9a;&#x4e49;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x79f0;&#x4e3a",{"_index":3799,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x5c5e;&#x6027;&#x4e2d;&#x5b9a;&#x4e49;&#x670d;&#x52a1;&#x7684;&#x6b64;&#x65b9;&#x6cd5",{"_index":3784,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x5c5e;&#x6027;&#x4e2d;&#x5b9a;&#x4e49;&#x7c7b;&#x540d;&#x79f0;&#xff0c;&#x5982;&#x4e0a;&#x6240;&#x793a;&#x3002",{"_index":3719,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5c5e;&#x6027;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x5b9a;&#x4e49;&#x7ec4;&#x6210;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x6240;&#x6709;&#x7ec4;&#x4ef6;&#x6216;&#x7ba1;&#x9053;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x518d;&#x6b21;&#x5b9a;&#x4e49",{"_index":3586,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5c5e;&#x6027;&#x503c;&#x3002;&#x4ed6;&#x4f1a;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x8ba1;&#x7b97;&#x5c5e;&#x6027;&#x7684;&#x503c;&#xff0c;&#x7136;&#x540e;&#x63d2;&#x5165;&#x52a8;&#x753b;&#x3002",{"_index":5701,"title":{},"body":{"animation/index.html#动画":{}}}],["x5c5e;&#x6027;&#x540d;&#x79f0;&#x5c06;&#x7528;&#x4e8",{"_index":2111,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x5c5e;&#x6027;&#x548c;angular",{"_index":1058,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x5c5e;&#x6027;&#x5904;&#x7406;&#x3002",{"_index":4246,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5c5e;&#x6027;&#x6307;&#x5b9a;&#x3002",{"_index":4261,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5c5e;&#x6027;&#x6307;&#x5b9a;&#x4e86;&#x6211;&#x4eec;&#x5e0c;&#x671b;karma&#x542f;&#x52a8;&#x548c;&#x6355;&#x83b7;&#x8f93;&#x51fa;&#x7684;&#x6d4f;&#x89c8;&#x5668;&#x3002",{"_index":5234,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x5c5e;&#x6027;&#x6307;&#x5b9a;&#x7684;&#x5355;&#x72ec;&#x6587;&#x4ef6;&#x4e2d;&#x3002;&#x670d;&#x52a1;&#x5668;&#x8bbf;&#x95ee;&#x6587;&#x4ef6;&#x7684;&#x65b9;&#x5f0f;&#x53ef;&#x80fd;&#x4e0d;&#x4f1a;&#x76f4;&#x63a5;&#x8ddf;&#x968f;&#x6587;&#x4ef6;&#x7cfb;&#x7edf;&#x6811;&#x3002;&#x5bf9;&#x6211;&#x4eec;&#x6765;&#x8bf4;&#xff0c;&#x6211;&#x4eec;&#x8981;&#x4f7f;&#x7528;dist&#x4e0b;&#x4fdd;&#x5b58;&#x7684;&#x6587;&#x4ef6;&#x4f5c;&#x4e3a;&#x6211;&#x4eec;&#x670d;&#x52a1;&#x5668;&#x7684;&#x6839;&#x6587;&#x4ef6;&#x5939;&#x3002;&#x4e3a;&#x4e86;&#x8ba9;webpack&#x77e5;&#x9053;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;&#x6211;&#x4eec;&#x5c06",{"_index":4263,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5c5e;&#x6027;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x79cd;&#x5c06;&#x9644;&#x52a0;&#x6570;&#x636e;&#x4f20;&#x9012;&#x5230;redux&#x7684;&#x5176;&#x4ed6;&#x90e8;&#x5206;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x662f;&#x5b8c;&#x5168;&#x53ef;&#x9009;&#x7684;&#x3002",{"_index":5722,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x5c5e;&#x6027;&#x65f6;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x77ed;&#x6a2a;&#x7ebf;&#x5f0f;&#xff08;kebab",{"_index":1054,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x5c5e;&#x6027;&#x662f;&#x4e00;&#x4e2a",{"_index":4735,"title":{},"body":{"Routing/routeparams.html#读取路由参数":{}}}],["x5c5e;&#x6027;&#x662f;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x6a21;&#x5757;&#x7684;&#x6839;&#x7ec4;&#x4ef6;&#x7684;&#x5730;&#x65b9;&#x3002",{"_index":3569,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5c5e;&#x6027;&#x662f;&#x7528;&#x4e8e;&#x6807;&#x8bc6;&#x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x64cd;&#x4f5c;&#x7684;&#x552f;&#x4e00;&#x5b57;&#x7b26;&#x4e32;&#x3002",{"_index":5719,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x5c5e;&#x6027;&#x662f;javascript",{"_index":2228,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["x5c5e;&#x6027;&#x662f;true&#xff0c;&#x8fd9;&#x4e9b;classes&#x5c06;&#x4f1a;&#x751f;&#x6548;&#xff0c;&#x4f46;&#x7531;&#x4e8",{"_index":816,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{}}}],["x5c5e;&#x6027;&#x6765;&#x7ec4;&#x5408;&#x6700;&#x7ec8;&#x7684;&#x7c7b;&#x3002",{"_index":802,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["x5c5e;&#x6027;&#x6765;&#x8bbf;&#x95ee;&#x90a3;&#x4e9b;&#x57fa;&#x7840;dom&#x5143;&#x7d20;&#x3002",{"_index":5082,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5c5e;&#x6027;&#x6d88;&#x606f;&#x4fee;&#x6539;&#x4e3a;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x7684;&#x503c;&#x3002",{"_index":5556,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x5c5e;&#x6027;&#x7684;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x7cfb;&#x7edf;&#x8fdb;&#x884c;&#x914d;&#x7f6e;&#x3002",{"_index":3782,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x5c5e;&#x6027;&#x7684;&#x503c;&#xff0c;&#x8be5;&#x503c;&#x5c31;&#x4f1a;&#x5728",{"_index":3811,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x5c5e;&#x6027;&#x7684;&#x5143;&#x7d20;&#x65f6;&#xff0c;&#x5b83;&#x5c06;&#x9996;&#x5148;&#x5e94;&#x7528",{"_index":3436,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x5c5e;&#x6027;&#x7684;&#x7ba1;&#x9053;&#x5143;&#x6570;&#x636e;&#x3002",{"_index":4102,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x5c5e;&#x6027;&#x88c5;&#x9970;&#x5668",{"_index":1718,"title":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}},"body":{}}],["x5c5e;&#x6027;&#x88c5;&#x9970;&#x5668;&#x4f7f;&#x7528;&#x7c7b;&#x7684;&#x5c5e;&#x6027;&#x3002",{"_index":1719,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x5c5e;&#x6027;&#x8bbe;&#x7f6e;&#x4e3a",{"_index":4161,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#实现有状态管道":{},"Project-setup/installation_and_usage.html#输出配置":{}}}],["x5c5e;&#x6027;&#x8bbf;&#x95ee;&#x4e86;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x3002;&#x7136;&#x540e;&#x6211;&#x4eec;&#x8c03;&#x7528",{"_index":5076,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5c5e;&#x6027;&#x9700;&#x8981;&#x4e00;&#x4e2a;&#x4f5c;&#x4e3a;&#x6a21;&#x5757;&#x7684;&#x4e00;&#x90e8;&#x5206;&#x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x6307;&#x4ee4;&#x548c;&#x7ba1;&#x9053;&#x7684;&#x6570;&#x7ec4;&#x3002",{"_index":3568,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5c5e;&#x6027;&#x9700;&#x8981;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x6570;&#x7ec4;&#x3002",{"_index":3566,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x5c5e;&#x6027;&#xff08;&#x4f8b;&#x5982",{"_index":2067,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x5c5e;&#x6027;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x5b83;&#x7684;&#x503c;&#x662f;&#x5426;&#x662f;&#x6211;&#x4eec;&#x671f;&#x671b;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x91cc;&#x6211;&#x4eec;&#x53ea;&#x68c0;&#x67e5;url&#xff0c;&#x4f46;&#x5728;&#x5176;&#x4ed6;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x662f;&#x5426;&#x5df2;&#x8bbe;&#x7f6e;&#x67d0;&#x4e9b;&#x5934;&#xff0c;&#x6216;&#x8005;&#x662f;&#x5426;&#x5df2;&#x53d1;&#x9001;&#x67d0;&#x4e9b;post&#x6570;&#x636e;&#x3002",{"_index":5303,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x5d4c;&#x5165;&#x5728;&#x6a21;&#x677f;&#x6807;&#x8bb0;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#x4e0d;&#x4f1a;&#x5728;&#x7f51;&#x9875;&#x52a0;&#x8f7d;&#x65f6;&#x5448;&#x73b0;&#xff0c;&#x800c;&#x662f;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x901a;&#x8fc7;&#x4ee3;&#x7801;&#x52a0;&#x8f7d;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":1073,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x5d4c;&#x5165;&#x8868;&#x8fbe;&#x5f0f",{"_index":1529,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x5d4c;&#x5957;&#x4f5c;&#x7528;&#x57df",{"_index":3084,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["x5d4c;&#x5957;&#x8868;&#x5355;&#x6570;&#x636e",{"_index":2008,"title":{"Form/nested-form-data.html#嵌套表单数据":{}},"body":{}}],["x5de5;&#x5177",{"_index":2621,"title":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}},"body":{}}],["x5df2;&#x7ecf;&#x4f7f;&#x7528;angular",{"_index":1585,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x5df2;&#x7ecf;&#x5728;&#x6570;&#x7ec4;&#x4e2d;&#x4f7f;&#x7528;angular",{"_index":567,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5e26;&#x6807;&#x7b7e;&#x7684;&#x6a21;&#x677f;&#x5b57;&#x7b26;&#x4e32",{"_index":1530,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x5e2e;&#x52a9;&#x6211;&#x4eec;&#x6355;&#x83b7;&#x7528;&#x6237;&#x4f20;&#x5165;&#x7684;&#x7c7b;&#x578b;&#xff08;&#x6bd4;&#x5982;&#xff1a",{"_index":1602,"title":{},"body":{"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["x5e38;&#x91cf;&#x548c;&#x5757;&#x4f5c;&#x7528;&#x57df;&#x53d8;&#x91cf",{"_index":1292,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x5e76;&#x5206;&#x6790;&#x8fd9;&#x4e9b;&#x52a8;&#x4f5c;&#x7684;&#x7ed3;&#x679c;&#x3002",{"_index":5553,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x5e76;&#x5c06;&#x5176;&#x4fdd;&#x5b58;&#x4e3a;&#x5f00;&#x53d1;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#xff1a",{"_index":3191,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x5e76;&#x5c06;&#x5176;&#x7ed1;&#x5b9a;&#x5230;&#x8be5;&#x5c5e;&#x6027;&#x3002",{"_index":6170,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x5e76;&#x6269;&#x5c55;&#x5176;&#x81ea;&#x5df1;&#x7684;&#x533a;&#x57df;&#x4ee5;&#x663e;&#x793a;&#x66f4;&#x6709;&#x610f;&#x4e49;&#x7684;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#x3002",{"_index":6713,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x5e76;&#x66f4;&#x65b0",{"_index":134,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5e76;&#x67e5;&#x8be2;dom&#x7684;&#x9884;&#x671f;&#x7ed3;&#x679c;&#x3002",{"_index":4897,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x5e76;&#x884c;&#x53d1;&#x9001;&#x591a;&#x4e2a;&#x8bf7;&#x6c42;&#xff0c;&#x7136;&#x540e;&#x5408;&#x5e76;&#x8fd4;&#x56de;&#x503c",{"_index":2322,"title":{},"body":{"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{}}}],["x5e76;&#x8ba2;&#x9605;&#x516c;&#x5171;observables&#x3002",{"_index":6690,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x5e78;&#x8fd0;&#x7684;&#x662f;&#xff0c;&#x4f9d;&#x8d56;&#x4e8e;xhr&#x6a21;&#x5757;&#x7684;&#x670d;&#x52a1;&#x7684;&#x6d4b;&#x8bd5;&#x65b9;&#x5f0f;&#x4e0e;&#x4f7f;&#x7528;http&#x6a21;&#x5757;&#x7684;&#x670d;&#x52a1;&#x5b8c;&#x5168;&#x76f8;&#x540c;&#x3002",{"_index":5100,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x5e78;&#x8fd0;&#x7684;&#x662f;&#xff0c;&#x6d4b;&#x8bd5;reducers&#x5f88;&#x50cf;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684;&#x540c;&#x6b65",{"_index":5347,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x5e78;&#x8fd0;&#x7684;&#x662f;&#xff0c;&#x8fd9;&#x662f;angular",{"_index":2015,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x5e93",{"_index":2840,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5e93;&#x4e4b;&#x7c7b;&#x7684;spi",{"_index":5484,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x5e93;&#x7531;facebook&#x652f;&#x6301;&#xff0c;&#x4f46;&#x5176;&#x4ed6;&#x9700;&#x8981;&#x7684;&#x90e8;&#x5206;&#x57fa;&#x672c;&#x7531;&#x7b2c;&#x4e09;&#x65b9;&#x5efa;&#x7acb;&#x3002",{"_index":2915,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5e93;&#xff1a;&#x6211;&#x5c06;&#x4f7f;&#x7528;react&#x5e93;&#xff0c;&#x73b0;&#x5728;&#x6211;&#x5fc5;&#x987b;&#x51b3;&#x5b9a;&#x6240;&#x6709;&#x5176;&#x4ed6;&#x5c06;&#x8981;&#x7528;&#x5230;&#x7684;&#x652f;&#x6301;&#x5e93;&#xff1a;&#x8def;&#x7531;&#xff0c;model",{"_index":2846,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5e94;&#x65e0;&#x526f;&#x4f5c;&#x7528;&#x3002;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x4ed6;&#x4eec;&#x4e0d;&#x5e94;&#x8be5;&#x4fee;&#x6539;&#x81ea;&#x5df1;&#x8303;&#x56f4;&#x4e4b;&#x5916;&#x7684;&#x4e1c;&#x897f;&#x3002;&#x4ed6;&#x4eec;&#x5e94;&#x8be5;&#x7b80;&#x5355;&#x5730;&#x8ba1;&#x7b97;&#x4e0b;&#x4e00;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x72b6;&#x6001;&#x4f5c;&#x4e3a;reducer&#x53c2;&#x6570;&#x7684;&#x7eaf;&#x51fd;&#x6570;&#x3002",{"_index":5998,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x5e94;&#x7528",{"_index":3438,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4f20;&#x7edf;&#x4e0a;&#x62e5;&#x6709;&#x591a;&#x4e2a;&#x5b58;&#x50a8;&#x7684;&#x5730;&#x65b9;&#xff0c;redux&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x5168;&#x5c40;&#x53ea;&#x8bfb;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x72b6;&#x6001;&#x3002",{"_index":6012,"title":{},"body":{"state-management/redux.html#什么是-Redux":{}}}],["x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5728;&#x7279;&#x5b9a;&#x8def;&#x7531;&#x4e0a;&#x65f6;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x663e;&#x793a;&#x7684;url",{"_index":4581,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x5e94;&#x8be5;&#x662f;&#x7eaf;&#x51fd;&#x6570;&#xff0c;&#x610f;&#x5473;&#x7740;&#x5b83;&#x4eec;&#x4e0d;&#x4f1a;&#x4ea7;&#x751f;&#x4efb;&#x4f55;&#x526f;&#x4f5c;&#x7528;&#x3002",{"_index":5970,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x548c;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x6811",{"_index":3630,"title":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}},"body":{}}],["x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757",{"_index":3680,"title":{"Modules/lazy-loading-module.html#延迟加载模块":{}},"body":{}}],["x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x5728;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#xff08;di&#xff09;&#x6811;&#x4e0a;&#x521b;&#x5efa;&#x81ea;&#x5df1;&#x7684;&#x5206;&#x652f;&#x3002",{"_index":3631,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x6709;&#x52a9;&#x4e8e;&#x51cf;&#x5c11;&#x542f;&#x52a8;&#x65f6;&#x95f4;&#x3002",{"_index":3682,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x7684;&#x6a21;&#x5757;&#x53ea;&#x4f1a;&#x5728;&#x7528;&#x6237;&#x5bfc;&#x822a;&#x5230;&#x5176;&#x8def;&#x7531;&#x65f6;&#x52a0;&#x8f7d;&#x3002",{"_index":3684,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5f00;&#x53d1;&#x4eba;&#x5458;&#x5c06;&#x9075;&#x5faa;&#x7c7b;&#x4f3c;&#x7684;&#x6700;&#x4f73;&#x5b9e;&#x8df5;&#x3002",{"_index":2907,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5f00;&#x59cb;&#x3002",{"_index":3862,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5f00;&#x59cb;&#x4f7f;&#x7528",{"_index":2048,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x5f00;&#x59cb;&#x5c06;&#x5176;&#x7528;&#x4f5c;&#x54cd;&#x5e94;&#x3002",{"_index":5310,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x5f00;&#x59cb;&#x5e7f;&#x64ad;&#x503c;&#x7ed9;&#x5176;&#x8ba2;&#x9605;&#x8005;&#x3002",{"_index":3884,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x5f00;&#x653e;&#x2014;react&#x5141;&#x8bb8;&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x66f4;&#x591a;&#x7684;&#x7075;&#x6d3b;&#x6027;&#x548c;&#x81ea;&#x7531;&#x5ea6",{"_index":2837,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5f02;&#x6b65",{"_index":4949,"title":{"Testing/complex-actions.html#异步-Action":{},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}},"body":{}}],["x5f02;&#x6b65;&#x6267;&#x884c;&#x6d4b;&#x8bd5",{"_index":4839,"title":{"Testing/async-execution.html#异步执行测试":{}},"body":{}}],["x5f02;&#x6b65;&#x65b9;&#x6cd5;&#x8865;&#x4e01",{"_index":6338,"title":{"zone/patching_async_methods.html#异步方法补丁":{}},"body":{}}],["x5f02;&#x6b65;&#x8def;&#x7531;&#x54e8;&#x5175",{"_index":4693,"title":{"Routing/route_guards.html#异步路由哨兵":{}},"body":{}}],["x5f15;&#x5165;javascript&#x4e4b;&#x524d;&#xff0c;&#x539f;&#x578b;&#x7ee7;&#x627f;&#x662f;&#x5982;&#x4f55;&#x5b9e;&#x73b0;&#x7684;&#x3002",{"_index":1386,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x5f15;&#x5165;webpack&#x53ca;&#x5176;&#x63d2;&#x4ef6;&#x7684;&#x6700;&#x7b80;&#x5355;&#x7684;&#x65b9;&#x6cd5;&#x662f;&#x901a;&#x8fc7;npm&#x5e76;&#x5c06;&#x5176;&#x4fdd;&#x5b58;&#x5230;&#x60a8;&#x7684",{"_index":4196,"title":{},"body":{"Project-setup/installation_and_usage.html#安装":{}}}],["x5f15;&#x5bfc;&#x5e94;&#x7528;&#x7a0b;&#x5e8f",{"_index":3601,"title":{"Modules/introduction.html#引导应用程序":{}},"body":{}}],["x5f15;&#x5bfc;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":1956,"title":{},"body":{"Form/getting-started.html#入门":{}}}],["x5f15;&#x7528;&#x89e3;&#x6790;&#x4e3a;&#x6a21;&#x5757;&#x3002",{"_index":4333,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x5f15;&#x7528;&#xff0c;&#x4e0b;&#x9762;&#x6211;&#x4eec;&#x5207;&#x6362;&#x5230;&#x4f7f;&#x7528",{"_index":1243,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["x5f53",{"_index":3546,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{},"Routing/route_guards.html#实现CanActivate":{}}}],["x5f53;&#x4e24;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x6307;&#x4ee4;&#x5b9a;&#x4f4d;&#x540c;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x65f6;&#xff0c;&#x5b83;&#x4eec;&#x5c06;&#x6309;&#x7167;&#x5b83;&#x4eec;&#x5b9a;&#x4e49;&#x7684;&#x987a;&#x5e8f;&#x5e94;&#x7528",{"_index":3441,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x5f53;&#x4e3b;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6307;&#x5b9a;&#x8fd9;&#x4e9b;&#x8bbe;&#x7f6e;&#x65f6;&#xff0c;angular&#x5c06;&#x4f7f;&#x7528",{"_index":495,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x5f53;&#x4ee3;&#x7801;&#x5df2;&#x7ecf;&#x8fdb;&#x5165;&#x5e76;&#x6b63;&#x5728;angular&#x533a;&#x57df;&#x5185;&#x6267;&#x884c;&#x65f6;&#x901a;&#x77e5;&#x3002",{"_index":6682,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x5f53;&#x4f60;&#x5f00;&#x59cb;&#x7f16;&#x5199;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x65f6;&#xff0c;&#x4f60;&#x53ef;&#x80fd;&#x4f1a;&#x53d1;&#x73b0;&#x5f88;&#x591a;&#x4ee3;&#x7801;&#x5f88;&#x96be;&#x6d4b;&#x8bd5;&#x3002",{"_index":5366,"title":{},"body":{"Testing/refactor.html#重构难以测试的代码":{}}}],["x5f53;&#x4f7f;&#x7528",{"_index":1379,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x5f53;&#x4f7f;&#x7528;redux&#x6784;&#x5efa;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x65f6;&#xff0c;&#x9996;&#x5148;&#x8981;&#x8003;&#x8651;&#x7684;&#x662f;&#x201c;&#x6211;&#x8981;&#x5b58;&#x50a8;&#x4ec0;&#x4e48;&#x72b6;&#x6001;&#x201d;&#xff1f",{"_index":5804,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x5f53;&#x505a;&#x8fd4;&#x56de;&#x503c;&#x7c7b;&#x578b;&#x3002;&#x73b0;&#x5728;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x77e5;&#x9053;&#x53c2;&#x6570;&#x7c7b;&#x578b;&#x4e0e;&#x8fd4;&#x56de;&#x503c;&#x7c7b;&#x578b;&#x662f;&#x76f8;&#x540c;&#x7684;&#x4e86;&#x3002",{"_index":1605,"title":{},"body":{"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["x5f53;&#x524d;&#x9879;&#x76ee;&#x7684;&#x4f4d;&#x7f6e;&#x5728;&#x4ece;0&#x5f00;&#x59cb;&#x7684;&#x8fed;&#x4ee3;&#x4e2d",{"_index":956,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5f53;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x5206;&#x6790;&#x4e0e",{"_index":148,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5f53;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x5206;&#x6790;&#x7ed1;&#x5b9a;&#x5230;appcomponent&#x6a21;&#x677f;&#x7684;&#x5c5e;&#x6027;&#x65f6;&#xff0c;&#x5b83;&#x5c06;&#x770b;&#x5230;&#x4e0e;&#x4e4b;&#x524d;&#x76f8;&#x540c;&#x7684;&#x666f;&#x8c61;&#xff1a",{"_index":136,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5f53;&#x542f;&#x52a8;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x65f6;&#xff0c;&#x5b83;&#x5c06;&#x81ea;&#x52a8;&#x5bfc;&#x822a;&#x5230",{"_index":4621,"title":{},"body":{"Routing/redirects.html#将路由器重定向到另一条路由":{}}}],["x5f53;&#x5728;&#x8fd9;&#x4e9b;&#x9886;&#x57df;&#x4e2d;&#x6bd4;&#x8f83;react&#x548c;angular",{"_index":2896,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5f53;&#x5728;angular",{"_index":2017,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{},"Testing/services.html#测试服务":{}}}],["x5f53;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x5177;&#x6709;&#x7a7a;&#x8def;&#x5f84;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x8def;&#x5f84;&#x8bbe;&#x7f6e;pathmatch&#x4e3a;&#x2019;full&#x2019;&#x65f6;&#xff0c;&#x5426;&#x5219;&#x5b83;&#x5c06;&#x5339;&#x914d;&#x6240;&#x6709;&#x8def;&#x5f84;&#x3002",{"_index":4587,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x5f53;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x542f;&#x52a8;&#x65f6;&#xff0c;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#x5bfc;&#x822a;&#x5230;&#x7a7a;&#x8def;&#x7531;&#x3002;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x914d;&#x7f6e;&#x8def;&#x7531;&#x91cd;&#x5b9a;&#x5411;&#x5230;&#x547d;&#x540d;&#x8def;&#x7531;&#xff1a",{"_index":4619,"title":{},"body":{"Routing/redirects.html#将路由器重定向到另一条路由":{}}}],["x5f53;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5728;&#x7279;&#x5b9a;&#x8def;&#x7531;&#x4e0a;&#x65f6;&#x8981;&#x5448;&#x73b0;&#x7684;&#x7ec4;&#x4ef6",{"_index":4582,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x5f53;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x65f6;&#xff0c;&#x5b83;&#x4f1a;&#x9047;&#x5230;&#x4e00;&#x4e2a;&#x51b2;&#x7a81;&#x95ee;&#x9898;&#xff0c;&#x5bfc;&#x81f4;&#x4e24;&#x4e2a;&#x6a21;&#x5757;&#x83b7;&#x5f97;&#x76f8;&#x540c;&#x7684;&#x914d;&#x7f6e;&#x503c;&#xff0c;&#x5728;&#x672c;&#x4f8b;&#x4e2d;&#x4e3a",{"_index":493,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x5f53;&#x6211;&#x4eec;&#x51b3;&#x5b9a;&#x4f7f;&#x7528;angular",{"_index":2821,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5f53;&#x6211;&#x4eec;&#x5728;react&#x4e2d;&#x6784;&#x5efa;&#x4e00;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x771f;&#x7684;&#x559c;&#x6b22;&#x8fd9;&#x4e2a;&#x5e93;&#x3002;&#x6211;&#x4eec;&#x5bf9;&#x6240;&#x6709;&#x7684;&#x53ef;&#x80fd;&#x6027;&#x611f;&#x5230;&#x5174;&#x594b;&#xff0c;&#x524d;&#x671f;&#x5b66;&#x4e60;&#x8fdc;&#x4f4e;&#x4e8e;angular&#x3002;&#x5f53;&#x6211;&#x4eec;&#x5f00;&#x59cb;&#x6784;&#x5efa;&#x6211;&#x4eec;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;react",{"_index":2857,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5f53;&#x6211;&#x4eec;&#x60f3;&#x6d4b;&#x8bd5;&#x5f02;&#x6b65;&#x6216;&#x6761;&#x4ef6;actions&#x521b;&#x5efa;&#x8005;&#x65f6;&#xff0c;&#x4e8b;&#x60c5;&#x53d8;&#x5f97;&#x6709;&#x70b9;&#x68d8;&#x624b;&#x3002;&#x6211;&#x4eec;&#x7684;&#x76ee;&#x6807;&#x4ecd;&#x7136;&#x662f;&#x76f8;&#x540c;&#x7684;&#xff1a;&#x786e;&#x4fdd",{"_index":4936,"title":{},"body":{"Testing/complex-actions.html#测试复杂的-Actions":{}}}],["x5f53;&#x6211;&#x4eec;&#x628a;&#x6240;&#x6709;&#x4e1c;&#x897f;&#x653e;&#x5728;&#x4e00;&#x8d77;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x5b8c;&#x6574;&#x7684",{"_index":4419,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["x5f53;&#x6211;&#x4eec;&#x67e5;&#x770b;&#x793a;&#x4f8b;&#x65f6;&#xff0c;&#x5f53;&#x6211;&#x4eec;&#x70b9;&#x51fb",{"_index":1019,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x5f53;&#x6211;&#x4eec;&#x7684;&#x6839;&#x6a21;&#x5757;&#x5f00;&#x59cb;&#x589e;&#x957f;&#x65f6;&#xff0c;&#x4e00;&#x4e9b;&#x5143;&#x7d20;&#xff08;&#x7ec4;&#x4ef6;&#xff0c;&#x6307;&#x4ee4;&#x7b49;&#xff09;&#x5f00;&#x59cb;&#x660e;&#x663e;&#x5730;&#x4ee5;&#x67d0;&#x79cd;&#x65b9;&#x5f0f;&#x76f8;&#x5173;&#xff0c;&#x51e0;&#x4e4e;&#x6210;&#x4e86;&#x53ef;&#x4ee5;&#x201c;&#x63d2;&#x5165;&#x201d;&#x7684;&#x5e93;&#x3002",{"_index":3463,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5f53;&#x6211;&#x4eec;&#x7b2c;&#x4e00;&#x6b21;&#x52a0;&#x8f7d;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x65f6;&#xff0c",{"_index":3731,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x5f53;&#x6211;&#x4eec;&#x8fdb;&#x884c;http&#x8bf7;&#x6c42;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x5f02;&#x6b65;&#x65b9;&#x5f0f;&#xff0c;&#x4ee5;&#x514d;&#x963b;&#x6b62;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x5176;&#x4f59;&#x90e8;&#x5206;&#x6267;&#x884c;&#x5176;&#x64cd;&#x4f5c;&#x3002;&#x6211;&#x4eec;&#x4e4b;&#x524d;&#x4e86;&#x89e3;&#x4e86;&#x4e00;&#x4e9b;&#x7ec4;&#x4ef6;&#x7684;&#x5f02;&#x6b65;&#x6d4b;&#x8bd5;&#xff0c;&#x5e78;&#x8fd0;&#x7684;&#x662f;&#xff0c;&#x5f88;&#x591a;&#x8fd9;&#x65b9;&#x9762;&#x7684;&#x77e5;&#x8bc6;&#x4e5f;&#x5e26;&#x5230;&#x4e86;&#x6d4b;&#x8bd5;&#x5f02;&#x6b65;&#x670d;&#x52a1;&#x4e2d;&#x3002",{"_index":5007,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x5f53;&#x6267;&#x884c;zone",{"_index":6781,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x5f53;&#x67d0;&#x4e9b;&#x8def;&#x7531;&#x53ea;&#x80fd;&#x5728;&#x5176;&#x4ed6;&#x8def;&#x7531;&#x4e2d;&#x8bbf;&#x95ee;&#x548c;&#x67e5;&#x770b;&#x65f6;&#xff0c;&#x53ef;&#x80fd;&#x9002;&#x5408;&#x5c06;&#x5176;&#x521b;&#x5efa;&#x4e3a;&#x5b50;&#x8def;&#x7531;&#x3002",{"_index":4515,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5f53;&#x6a21;&#x5757;&#x88ab;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x65f6;&#xff0c;angular&#x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x5b50;&#x6ce8;&#x5165;&#x5668;&#xff08;&#x5b83;&#x662f;&#x6839;&#x6a21;&#x5757;&#x7684;&#x6839;&#x6ce8;&#x5165;&#x5668;&#x7684;&#x4e00;&#x4e2a;&#x5b50;&#x8fdb;&#x7a0b;&#xff09;&#xff0c;&#x5e76;&#x5c06;&#x5728;&#x90a3;&#x91cc;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x670d;&#x52a1;&#x5b9e;&#x4f8b;&#x3002",{"_index":3521,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x5f53;&#x6a21;&#x677f;&#x4e2d;&#x6709;&#x591a;&#x4e2a;&#x5d4c;&#x5165;&#x5f0f;&#x7ec4;&#x4ef6;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":5610,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x5f53;&#x6ca1;&#x6709;&#x66f4;&#x591a;&#x7684;&#x5fae;&#x4efb;&#x52a1;&#x88ab;&#x6392;&#x961f;&#x6267;&#x884c;&#x65f6;&#x901a;&#x77e5;&#x3002",{"_index":6683,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x5f53;&#x6d4b;&#x8bd5;&#x8fd9;&#x4e9b;&#x7ec4;&#x4ef6;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x6ce8;&#x5165;&#x4f9d;&#x8d56;&#x3002",{"_index":5035,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x5f53;&#x6d4b;&#x8bd5;&#x8fdb;&#x884c;http&#x8c03;&#x7528;&#x7684;&#x670d;&#x52a1;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x5e0c;&#x671b;&#x7528;&#x771f;&#x5b9e;&#x8bf7;&#x6c42;&#x8bbf;&#x95ee;&#x670d;&#x52a1;&#x5668;&#x3002;&#x8fd9;&#x662f;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x5c06;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x7684;&#x6d4b;&#x8bd5;&#x4e0e;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x5916;&#x90e8;&#x6545;&#x969c;&#x70b9;&#x9694;&#x79bb;&#x5f00;&#x3002;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x53ef;&#x80fd;&#x4f1a;&#x5de5;&#x4f5c;&#xff0c;&#x4f46;&#x5982;&#x679c;api&#x670d;&#x52a1;&#x5668;&#x5931;&#x8d25;&#x6216;&#x7ed9;&#x51fa;&#x6211;&#x4eec;&#x4e0d;&#x671f;&#x671b;&#x7684;&#x503c;&#xff0c;&#x5b83;&#x53ef;&#x80fd;&#x7ed9;&#x4eba;&#x7684;&#x5370;&#x8c61;&#x662f;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x662f;&#x5931;&#x8d25;&#x7684;&#x3002;&#x6b64;&#x5916;&#xff0c;&#x968f;&#x7740;&#x9879;&#x76ee;&#x7684;&#x589e;&#x957f;&#x548c;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x7684;&#x6570;&#x91cf;&#x7684;&#x589e;&#x52a0;&#xff0c;&#x8fd0;&#x884c;&#x5927;&#x91cf;&#x7684;&#x6d4b;&#x8bd5;&#xff0c;http&#x8bf7;&#x6c42;&#x5c06;&#x9700;&#x8981;&#x5f88;&#x957f;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x7ed9;api&#x670d;&#x52a1;&#x5668;&#x5e26;&#x6765;&#x538b;&#x529b;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x5f53;&#x6d4b;&#x8bd5;&#x670d;&#x52a1;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;&#x5047;&#x8bf7;&#x6c42;&#x6a21;&#x62df;&#x5047;&#x6570;&#x636e;&#x3002",{"_index":5412,"title":{},"body":{"Testing/strategies.html#服务测试策略":{}}}],["x5f53;&#x6d89;&#x53ca;&#x5230;&#x7ec4;&#x4ef6;&#xff0c;&#x7ba1;&#x9053;&#x548c;&#x6307;&#x4ee4;&#x65f6;&#xff0c;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x90fd;&#x5e94;&#x8be5;&#x5bfc;&#x5165;&#x81ea;&#x5df1;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#xff0c;&#x800c;&#x5ffd;&#x7565;&#x5728;&#x6839;&#x6a21;&#x5757;&#x6216;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x529f;&#x80fd;&#x6a21;&#x5757;&#x4e2d;&#x5bfc;&#x5165;&#x76f8;&#x540c;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x3002",{"_index":3493,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5f53;&#x7136;&#xff0c;&#x4e3a;&#x4e86;&#x80fd;&#x591f;&#x4f7f;&#x7528;&#x8fd9;&#x4e2a;&#x65b0;&#x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x7ba1;&#x9053;&#x548c;&#x670d;&#x52a1;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x66f4;&#x65b0;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x5757;&#xff0c;&#x5426;&#x5219;angular&#x4e0d;&#x80fd;&#x591f;&#x7f16;&#x8bd1;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":3776,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x5f53;&#x7528;&#x6237;&#x5355;&#x51fb;&#x201c;&#x6280;&#x672f;&#x89c4;&#x683c;&#x201d;&#x9009;&#x9879;&#x5361;&#x65f6;&#xff0c;&#x8be5;&#x90e8;&#x5206;&#x5c06;&#x663e;&#x793a;&#x89c4;&#x683c;&#x3002",{"_index":4517,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5f53;&#x7528;&#x6237;&#x5355;&#x51fb;&#x6309;&#x94ae;&#x65f6;&#xff0c;&#x8c03;&#x7528;&#x65b9;&#x6cd5",{"_index":133,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x5f53;&#x7528;&#x6237;&#x70b9;&#x51fb",{"_index":4519,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x5f53;&#x8c03;&#x5ea6;&#x5f02;&#x6b65;&#x5de5;&#x4f5c;&#x65f6;&#xff0c;&#x56de;&#x8c03;&#x51fd;&#x6570;&#x5c06;&#x5728;&#x4e0e;&#x8c03;&#x7528;&#x5f02;&#x6b65;api&#x65f6;&#x5b58;&#x5728;&#x7684;&#x76f8;&#x540c",{"_index":6519,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x5f53;&#x8f93;&#x5165;&#x7684;&#x72b6;&#x6001;&#x6539;&#x53d8;&#x65f6;&#xff0c;angular&#x5c06;&#x5728;&#x6bcf;&#x4e2a;&#x8f93;&#x5165;&#x4e0a;&#x7684;&#x5bf9;&#x4e4b;&#x95f4;&#x5207;&#x6362;&#x3002",{"_index":2252,"title":{},"body":{"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["x5f53;&#x8f93;&#x5165;&#x7ed1;&#x5b9a;&#x503c;&#x66f4;&#x6539;&#x65f6;&#x8c03;&#x7528",{"_index":5649,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x5f53;&#x9009;&#x62e9;&#x8f6f;&#x4ef6;&#x65f6;&#xff0c;&#x4ed6;&#x4eec;&#x5173;&#x5fc3;&#x901a;&#x8fc7;&#x4ee5;&#x4e0b;&#x65b9;&#x5f0f;&#x964d;&#x4f4e;&#x98ce;&#x9669;&#xff1a",{"_index":2885,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x5f53;angular",{"_index":602,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x5f53;angular&#x89e3;&#x6790;&#x8fd9;&#x4e9b;&#x5b9e;&#x4f53;&#x4e4b;&#x4e00;&#x65f6;&#xff0c;&#x5b83;&#x53ef;&#x80fd;&#x6b63;&#x5728;&#x89e3;&#x51b3;&#x9519;&#x8bef;&#x7684;&#x5b9e;&#x4f53;&#x3002",{"_index":471,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x5f53;zone",{"_index":6786,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x5f62;&#x72b6",{"_index":1832,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{}}}],["x5f88;&#x50cf;&#xff0c;&#x4f46;&#x662f;&#x6709;&#x51e0;&#x4e2a;&#x5f88;&#x91cd;&#x8981;&#x7684;&#x533a;&#x522b;&#xff1a",{"_index":3482,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x5f88;&#x7b80;&#x5355",{"_index":3035,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x5f88;&#x96be;&#x7406;&#x89e3;&#xff0c;&#x9996;&#x5148;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x8bd5;&#x7740;&#x770b;&#x770b;&#x5728;&#x6211;&#x4eec;&#x7684;&#x4f8b;&#x5b50;&#x4e2d",{"_index":3513,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x5fc5;&#x987b;&#x4f20;&#x9012;&#x5230;&#x6784;&#x9020;&#x51fd;&#x6570;&#x4e2d;&#x3002",{"_index":6756,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x5fc5;&#x987b;&#x964d;&#x4f4e;&#x6280;&#x672f;&#x98ce;&#x9669;&#xff0c;&#x4ee5;&#x5141;&#x8bb8;&#x4f01;&#x4e1a;&#x5229;&#x7528;&#x5f00;&#x6e90;&#x7684;&#x529b;&#x91cf;&#xff0c;&#x5e76;&#x4ece;&#x5f00;&#x6e90;&#x793e;&#x533a;&#x63d0;&#x4f9b;&#x7684;&#x60ca;&#x4eba;&#x7684;&#x5de5;&#x4f5c;&#x4e2d;&#x83b7;&#x76ca;&#x3002",{"_index":2893,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x600e;&#x4e48;&#x529e;&#xff1f",{"_index":3470,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x600e;&#x4e48;&#x6837;&#xff1f",{"_index":424,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x6027;&#x80fd",{"_index":3019,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x6027;&#x80fd;&#x548c;&#x79fb;&#x52a8;&#x7aef",{"_index":3060,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x6570;&#x636e",{"_index":3020,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x603b;&#x4e4b;&#xff0c",{"_index":3440,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x603b;&#x4e4b;&#xff0c;&#x5373;&#x4f7f;&#x6709;&#x591a;&#x4e2a;&#x7279;&#x5f81;&#x6a21;&#x5757;&#xff0c;&#x6bcf;&#x4e2a;&#x7279;&#x5f81;&#x6a21;&#x5757;&#x90fd;&#x9700;&#x8981;&#x5bfc;&#x5165",{"_index":3494,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x603b;&#x7ed3",{"_index":4418,"title":{"Project-setup/summary.html#总结":{}},"body":{}}],["x60a8;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":5177,"title":{},"body":{"Testing/karma-config.html#Karma-配置":{}}}],["x60a8;&#x5728;&#x540d;&#x4e3a",{"_index":6205,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x60a8;&#x5c06;&#x5728;&#x672c;&#x8bfe;&#x7a0b;&#x4e2d;&#x4f7f;&#x7528;&#x7684;&#x5f88;&#x591a;&#x5de5;&#x5177;&#x90fd;&#x4f7f;&#x7528;node.j",{"_index":6225,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["x60a8;&#x6309;&#x4e0b;play&#x952e;&#xff0c;&#x7535;&#x5f71;&#x4ece;&#x5934;&#x5f00;&#x59cb;&#x64ad;&#x653e;&#x3002",{"_index":3866,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5c06;&#x5141;&#x8bb8;&#x7528;&#x6237;&#x5c06;&#x6570;&#x5b57;&#x9012;&#x589e;&#x548c;&#x9012;&#x51cf;1&#xff0c;&#x5e76;&#x5c06;&#x8be5;&#x503c;&#x91cd;&#x7f6e;&#x4e3a;&#x96f6;&#x3002",{"_index":5820,"title":{},"body":{"state-management/example_application.html#示例应用":{}}}],["x60a8;&#x8fd8;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2632,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x60f3;&#x8c61;&#x4e00;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x7684",{"_index":3522,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6211;&#x4eec;&#x4e00;&#x76f4;&#x5728;&#x4f7f;&#x7528;jquery&#x751a;&#x81f3;&#x662f;backbone&#x6765;&#x5f00;&#x53d1;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002;&#x6211;&#x4eec;&#x7684;&#x56e2;&#x961f;&#x559c;&#x6b22;angular",{"_index":2871,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x4e0d;&#x4ec5;&#x5b9a;&#x4e49;&#x4e86;&#x6a21;&#x5757;&#x7684;&#x8def;&#x5f84;&#xff0c;&#x8fd8;&#x5b9a;&#x4e49;&#x4e86;&#x7c7b;&#x7684;&#x540d;&#x79f0;&#x3002",{"_index":3711,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6211;&#x4eec;&#x4e0d;&#x4f1a;&#x8bb2;&#x89e3;&#x5404;&#x79cd;&#x6a21;&#x5757;&#x7cfb;&#x7edf;&#xff0c;&#x4f46;&#x503c;&#x5f97;&#x4e86;&#x89e3;&#x7684;&#x662f;&#xff0c;&#x6709;&#x5404;&#x79cd;&#x6a21;&#x5757;&#x52a0;&#x8f7d;&#x5668;&#x53ef;&#x7528;&#x3002",{"_index":1329,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["x6211;&#x4eec;&#x4e0d;&#x5bfc;&#x5165",{"_index":3483,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6211;&#x4eec;&#x4e0d;&#x76f4;&#x63a5;&#x5bfc;&#x5165",{"_index":3541,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6211;&#x4eec;&#x4e3a;&#x672c;&#x8bfe;&#x7a0b;&#x4f7f;&#x7528;google&#x7684;chrome&#x6d4f;&#x89c8;&#x5668;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x5177;&#x6709;&#x5c16;&#x7aef;&#x7684;javascript&#x5f15;&#x64ce;&#x548c;&#x51fa;&#x8272;&#x7684;&#x8c03;&#x8bd5;&#x5de5;&#x5177;&#x3002",{"_index":6193,"title":{},"body":{"tooling/chrome.html#Web浏览器":{}}}],["x6211;&#x4eec;&#x4e5f;&#x76f8;&#x4fe1;angular&#x548c;react&#x90fd;&#x662f;&#x4f1f;&#x5927;&#x7684;&#x9009;&#x62e9;&#xff0c;&#x5e76;&#x5141;&#x8bb8;&#x4e00;&#x4e9b;&#x60ca;&#x4eba;&#x7684;&#x4ea7;&#x54c1;&#xff08;react&#xff1a",{"_index":2824,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x4ee5;&#x4e0e;angular",{"_index":3246,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x6211;&#x4eec;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x7b26;&#x53f7;&#xff0c;&#x4ee5;&#x907f;&#x514d;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x3002",{"_index":3710,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528",{"_index":2157,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{},"Testing/simple-test.html#简单的测试":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":3495,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;&#x5c5e;&#x6027",{"_index":3709,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;&#x6211;&#x4eec;&#x7684;mock&#x7c7b",{"_index":5066,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;&#x76f8;&#x540c;&#x7684",{"_index":3237,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;&#x76f8;&#x540c;&#x7684;&#x7b56;&#x7565;&#x6765;&#x6d4b;&#x8bd5;&#x8fd9;&#x4e9b;&#x670d;&#x52a1",{"_index":5098,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;&#x7ba1;&#x9053;&#xff08",{"_index":2598,"title":{},"body":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;readonly&#x6765;&#x786e;&#x4fdd;&#x7f16;&#x8bd1;&#x65f6;&#x4e0d;&#x53ef;&#x53d8;&#x6027;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x63d0;&#x4f9b;&#x4e86;&#x6700;&#x7b80;&#x5355;&#x7684;&#x4e0d;&#x53ef;&#x53d8;&#x5b9e;&#x73b0;&#xff0c;&#x800c;&#x4e0d;&#x589e;&#x52a0;&#x66f4;&#x591a;&#x7684;&#x4f9d;&#x8d56;&#x6027;&#x6765;&#x6df7;&#x6dc6;&#x793a;&#x4f8b;&#x3002",{"_index":5814,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x6211;&#x4eec;&#x4f7f;&#x7528;systemjs&#x6587;&#x672c;&#x63d2;&#x4ef6;&#x6765;&#x5bfc;&#x5165;&#x539f;&#x59cb;xlf&#x6587;&#x4ef6;&#x3002",{"_index":2582,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x6211;&#x4eec;&#x4f9d;&#x9760;&#x8fd9;&#x4e9b;&#x811a;&#x672c;&#x6765;&#x7ba1;&#x7406;&#x5927;&#x591a;&#x6570;&#x9879;&#x76ee;&#x4efb;&#x52a1;&#x4ee5;&#x53ca;&#x9002;&#x914d;webpack&#x3002",{"_index":4345,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x6211;&#x4eec;&#x4fdd;&#x6301",{"_index":3503,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6211;&#x4eec;&#x5141;&#x8bb8;&#x5c06;&#x591a;&#x4e2a;&#x6307;&#x4ee4;&#x7528;&#x5728;&#x540c;&#x4e00;&#x6a21;&#x5757;&#x4e2d;&#x7684;&#x76f8;&#x540c;&#x5143;&#x7d20;&#x4e0a;&#x3002;angular&#x5c06",{"_index":3430,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x6211;&#x4eec;&#x51b3;&#x5b9a;&#x4f7f;&#x7528;webpack&#xff0c;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x5f3a;&#x5927;&#x7684;&#x5de5;&#x5177;&#xff0c;&#x5c1d;&#x8bd5;&#x5904;&#x7406;&#x6211;&#x4eec;&#x7684;&#x590d;&#x6742;&#x96c6;&#x6210;&#x3002",{"_index":4378,"title":{},"body":{"Project-setup/project-setup.html#项目设置":{}}}],["x6211;&#x4eec;&#x521b;&#x5efa;&#x4e00;&#x4e2a;respond&#x5bf9;&#x8c61;&#x7684;&#x65b0;&#x5b9e;&#x4f8b;&#xff0c;&#x5e76;&#x544a;&#x8bc9;&#x6211;&#x4eec;&#x540e;&#x7aef;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":5309,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x6211;&#x4eec;&#x521b;&#x5efa;&#x4e86;&#x4e24;&#x4e2a;&#x6d4b;&#x8bd5;&#xff1a;&#x4e00;&#x4e2a;&#x7528;&#x4e8",{"_index":5545,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x6211;&#x4eec;&#x5236;&#x5b9a;&#x4e00;&#x4e2a;&#x9884;&#x671f;&#x7684;&#x7ed3;&#x679c;&#xff0c;&#x7136;&#x540e;&#x6d4b;&#x8bd5;&#x770b;&#x770b;&#x6211;&#x4eec;&#x671f;&#x671b;&#x7684;&#x7ed3;&#x679c;&#x662f;&#x5426;&#x662f;&#x3002",{"_index":5554,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x6211;&#x4eec;&#x53ea;&#x662f;&#x786e;&#x4fdd;&#x6211;&#x4eec;&#x7684;action&#x521b;&#x5efa;&#x8005;&#x6b63;&#x786e;&#x5730;&#x5206;&#x6d3e;actions&#x3002",{"_index":5390,"title":{},"body":{"Testing/simple-actions.html#测试简单的-Action":{}}}],["x6211;&#x4eec;&#x53ea;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x6765;&#x4f4f;&#x5b83;&#x4eec;&#xff1a",{"_index":6111,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4ece;&#x53e6;&#x4e00;&#x4e2a;npm&#x811a;&#x672c;&#x5185;&#x90e8;&#x8fd0;&#x884c;npm&#x811a;&#x672c;&#x3002",{"_index":4354,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x4e00;&#x4e2a;should&#xff0c;expect&#x6216;assert&#x63a5;&#x53e3;&#x3002;chai&#x8fd8;&#x5229;&#x7528;&#x201c;&#x529f;&#x80fd;&#x94fe;&#x201d;&#x5f62;&#x6210;&#x7c7b;&#x4f3c;&#x82f1;&#x8bed;&#x7684;&#x53e5;&#x5b50;&#xff0c;&#x7528;&#x4e8e;&#x4ee5;&#x66f4;&#x52a0;&#x7528;&#x6237;&#x53cb;&#x597d;&#x7684;&#x65b9;&#x5f0f;&#x63cf;&#x8ff0;&#x6d4b;&#x8bd5;&#x3002;chai&#x4e0d;&#x662f;&#x6d4b;&#x8bd5;&#x6240;&#x9700;&#x7684;&#x5e93;&#xff0c;&#x8fd9;&#x91cc;&#x6211;&#x4eec;&#x4e0d;&#x4f1a;&#x66f4;&#x6df1;&#x5165;&#x5730;&#x63a2;&#x8ba8;&#x5b83;&#xff0c;&#x4f46;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x6709;&#x7528;&#x7684;&#x5de5;&#x5177;&#xff0c;&#x7528;&#x4e8e;&#x521b;&#x5efa;&#x66f4;&#x6e05;&#x6670;&#xff0c;&#x66f4;&#x597d;&#x7684;&#x6d4b;&#x8bd5;&#x3002",{"_index":5489,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5f02;&#x6b65;&#x670d;&#x52a1;&#x51fd;&#x6570;&#x7684;&#x5e38;&#x89c4;&#x6280;&#x672f;&#x6765;&#x6d4b;&#x8bd5;&#xff1a",{"_index":4952,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x8be5;&#x7ec4;&#x4ef6;&#x6765;&#x786e;&#x5b9a;&#x7528;&#x6237;&#x662f;&#x5426;&#x53ef;&#x4ee5;&#x505c;&#x7528;&#x3002",{"_index":4692,"title":{},"body":{"Routing/route_guards.html#实现-CanDeactivate":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x8def;&#x7531;&#x54e8;&#x5175;&#x6765;&#x68c0;&#x67e5;&#x8fd9;&#x4e9b;&#x6761;&#x4ef6;&#x5e76;&#x63a7;&#x5236;&#x5bf9;&#x8def;&#x7531;&#x7684;&#x8bbf;&#x95ee;&#x3002",{"_index":4651,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;chrome&#xff0c;firefox&#xff0c;safari&#xff0c;ie&#x6216;opera&#xff08;&#x9700;&#x8981;&#x4e3a;&#x6bcf;&#x4e2a;&#x6d4f;&#x89c8;&#x5668;&#x5b89;&#x88c5;&#x989d;&#x5916;&#x7684;karma&#x542f;&#x52a8;&#x5668;&#xff09;&#x3002",{"_index":5235,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;webpack&#x548c",{"_index":2583,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4fee;&#x6539",{"_index":3639,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5728;&#x4e0d;&#x66f4;&#x6539;url&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#x6784;&#x5efa;&#x5b8c;&#x6574;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":4758,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5c06;&#x591a;&#x4e2a;&#x7ba1;&#x9053;&#x8fde;&#x63a5;&#x5728;&#x4e00;&#x8d77;&#xff0c;&#x4ee5;&#x4fbf;&#x5728;&#x4e00;&#x4e2a;&#x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#x4f7f;&#x7528;&#x591a;&#x4e2a;&#x7ba1;&#x9053;&#x3002",{"_index":4128,"title":{},"body":{"Pipes/using_pipes.html#链接管道":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5c06;&#x6837;&#x5f0f;&#x5c5e;&#x6027;&#x4ece;&#x6a21;&#x677f;&#x4e2d;&#x79fb;&#x9664;&#x5230;&#x7ec4;&#x4ef6;&#x4e2d;&#x4f5c;&#x4e3a;&#x5c5e;&#x6027;&#x5bf9;&#x8c61;&#xff0c;&#x7136;&#x540e;&#x4f7f;&#x7528;&#x5c5e;&#x6027;&#x7ed1;&#x5b9a;&#x5c06;&#x5176;&#x5206;&#x914d;&#x7ed9",{"_index":1060,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5f97;&#x5230;&#x4e00;&#x4e9b;&#x6709;&#x7528;&#x7684;&#x6d1e;&#x5bdf;&#xff0c;&#x6709;&#x591a;&#x5c11;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6b63;&#x5728;&#x6d4b;&#x8bd5;&#x548c;&#x5728;&#x54ea;&#x91cc;&#x6d4b;&#x8bd5;&#x3002",{"_index":5482,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x5c06;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x7ed1;&#x5b9a;&#x5230;&#x5c5e;&#x6027;&#x3002;&#x8fd9;&#x5c31;&#x50cf;&#x6dfb;&#x52a0;&#x4e00;&#x4e2a;html",{"_index":794,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个字符串":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x76f8;&#x5f53;&#x5bb9;&#x6613;&#x5730;&#x6d4b;&#x8bd5;&#x7b80;&#x5355;angular",{"_index":5530,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x5728;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x6a21;&#x677f;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x5728",{"_index":3426,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x521d;&#x59cb;&#x72b6;&#x6001;&#x548c;&#x4e00;&#x4e2a;&#x52a8;&#x4f5c;&#x3002;&#x4e3a;&#x4e86;&#x5904;&#x7406;&#x6bcf;&#x4e2a;&#x52a8;&#x4f5c;&#xff0c;&#x6211;&#x4eec;&#x8bbe;&#x7f6e;&#x4e86;&#x4e00;&#x4e2a;switch&#x8bed;&#x53e5;&#x3002;&#x800c;&#x4e0d;&#x662f;&#x6bcf;&#x4e2a;reducer&#x9700;&#x8981;&#x663e;&#x5f0f;&#x8ba2;&#x9605;&#x5206;&#x53d1;&#x5668;&#xff0c;&#x6bcf;&#x4e2a;&#x52a8;&#x4f5c;&#x90fd;&#x4f1a;&#x4f20;&#x9012;&#x5230;&#x6bcf;&#x4e2a;reducer&#xff0c;&#x5b83;&#x5904;&#x7406;&#x5b83;&#x611f;&#x5174;&#x8da3;&#x7684;&#x52a8;&#x4f5c;&#xff0c;&#x7136;&#x540e;&#x8fd4;&#x56de;&#x65b0;&#x72b6;&#x6001;&#x5230;&#x4e0b;&#x4e00;&#x4e2a;reducer&#x3002",{"_index":5997,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bbe;&#x7f6e;&#x6211;&#x4eec;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x6765;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;promise&#xff0c;&#x5b83;&#x5c06;&#x6839;&#x636e;&#x6d4b;&#x8bd5;&#x7684;&#x7ed3;&#x679c;&#x6765;&#x8fd4;&#x56de;&#x6210;&#x529f;&#x6216;&#x5931;&#x8d25;&#x3002",{"_index":4842,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x53cd;&#x6620;&#x5e94;&#x7528;&#x7a0b;&#x5e8f",{"_index":5796,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["x6211;&#x4eec;&#x53ef;&#x80fd;&#x60f3;&#x8981;&#x4e00;&#x4e9b;&#x914d;&#x7f6e;webpack&#x7684;&#x65b9;&#x5f0f;&#x6765;&#x8003;&#x8651;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x5668;&#x8def;&#x7531;&#x8bbe;&#x7f6e;&#x3002",{"_index":4244,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x6211;&#x4eec;&#x5c06;&#x4ee5;&#x5b8c;&#x5168;&#x76f8;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x5728",{"_index":3824,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;&#x6765;&#x81ea;ng2",{"_index":6150,"title":{},"body":{"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}}}],["x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;&#x8fd9;&#x4e9b;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x4f5c;&#x4e3a;&#x6211;&#x4eec;&#x4f20;&#x9012;&#x7ed9;webpack&#x7684;&#x6a21;&#x5757;&#x540d;&#x79f0;&#x3002",{"_index":4213,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x6211;&#x4eec;&#x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x5ef6;&#x8fdf;&#x7ec4;&#x4ef6;&#x6216;&#x5143;&#x7d20;&#x5b9e;&#x4f8b;&#x5316;&#x7684",{"_index":3233,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x6211;&#x4eec;&#x5c06;&#x5728",{"_index":5349,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x6211;&#x4eec;&#x5c06;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x63cf;&#x8ff0;&#x5982;&#x4f55;&#x4f7f;&#x7528;&#x8fd9;&#x79cd;&#x65b9;&#x6cd5;&#x3002",{"_index":6017,"title":{},"body":{"state-management/redux.html#What-is-Ngrx":{}}}],["x6211;&#x4eec;&#x5c06;&#x63d0;&#x4f9b;&#x672c;&#x8bfe;&#x7a0b;&#x6240;&#x9700;&#x7684;&#x6240;&#x6709;&#x547d;&#x4ee4;&#x884c;&#x793a;&#x4f8b;&#x3002",{"_index":6251,"title":{},"body":{"tooling/the_command_line.html#命令行":{}}}],["x6211;&#x4eec;&#x5c06;&#x6574;&#x4e2a;&#x6d4b;&#x8bd5;&#x5305;&#x88c5;&#x5728",{"_index":4892,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x6211;&#x4eec;&#x5c06;&#x6df1;&#x5165;&#x63a2;&#x8ba8;&#x8fd9;&#x4e24;&#x4e2a;&#x6846;&#x67b6;&#x4e2d;&#x7684;&#x8c03;&#x8bd5;&#x548c;&#x5f00;&#x53d1;&#x5de5;&#x5177;&#xff0c;&#x4ee5;&#x4fbf;&#x66f4;&#x65b0;&#x3002",{"_index":2923,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x5c06;&#x8fd9;&#x6837;&#x505a;&#x3002;&#x7b2c;&#x4e00;&#x6b65;&#x662f;&#x521b;&#x5efa;&#x4e24;&#x4e2a;&#x6587;&#x4ef6;&#x5939;&#x4ee5;&#x533a;&#x5206;&#x5c5e;&#x4e8e;&#x6839;&#x6a21;&#x5757;&#x7684;&#x5143;&#x7d20;&#x548c;&#x5c5e;&#x4e8e;&#x8981;&#x7d20;&#x6a21;&#x5757;&#x7684;&#x5143;&#x7d20;&#x3002",{"_index":3471,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6211;&#x4eec;&#x5c1d;&#x8bd5;&#x7684;&#x53e6;&#x4e00;&#x79cd;&#x65b9;&#x6cd5;&#x662f;&#x5c06;&#x7531;action&#xff08;&#x6216;&#x4e00;&#x7cfb;&#x5217;action&#xff09;&#x89e6;&#x53d1;&#x7684;&#x5b58;&#x50a8;&#x4e2d;&#x7684;&#x6574;&#x4f53;&#x72b6;&#x6001;&#x53d8;&#x5316;&#x89c6;&#x4e3a;&#x5355;&#x4e2a;&#x5355;&#x5143",{"_index":4772,"title":{},"body":{"Testing/after-thoughts.html#Afterthoughts":{}}}],["x6211;&#x4eec;&#x5df2;&#x7ecf;&#x770b;&#x5230;&#x4e86;&#x5982;&#x4f55;&#x8fdb;&#x5165;&#x548c;&#x9000;&#x51fa",{"_index":6513,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x6211;&#x4eec;&#x5df2;&#x7ecf;&#x77e5;&#x9053;&#x4ec0;&#x4e48;&#x662f;tdd&#xff08;&#x9605;&#x8bfb;&#x4ecb;&#x7ecd;&#xff01;&#xff09;&#xff0c;&#x90a3;&#x4e48;&#x4ec0;&#x4e48;&#x662f;bdd&#xff1f",{"_index":5513,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["x6211;&#x4eec;&#x5df2;&#x7ecf;&#x9047;&#x5230;&#x4e86;&#x8fd9;&#x4e24;&#x79cd",{"_index":3872,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x6211;&#x4eec;&#x5e0c;&#x671b;&#x4f60;&#x559c;&#x6b22;&#x8fd9;&#x672c;&#x4e66;&#x3002",{"_index":6894,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x6211;&#x4eec;&#x5e0c;&#x671b;&#x5b83;&#x62a5;&#x544a;&#x6211;&#x4eec;&#x7684;&#x4ee3;&#x7801;&#x6709;&#x591a;&#x5c11;&#x88ab;&#x6d4b;&#x8bd5;&#x3002",{"_index":5228,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6211;&#x4eec;&#x5e0c;&#x671b;&#x80fd;&#x591f;&#x5904;&#x7406;&#x5176;&#x4ed6;&#x6587;&#x4ef6;&#xff0c;&#x800c;&#x4e0d;&#x4ec5;&#x4ec5;&#x662f;typescript&#x6587;&#x4ef6;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x9700;&#x8981;&#x6307;&#x5b9a;&#x4e00;&#x4e2a;&#x52a0;&#x8f7d;&#x5668;&#x5217;&#x8868;&#x3002",{"_index":4303,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x6211;&#x4eec;&#x5e38;&#x8bf4;&#x7684;&#x201c;javascript&#x201d;&#x8bed;&#x8a00;&#x7684;&#x6b63;&#x5f0f;&#x540d;&#x53eb;&#x201c;ecmascript&#x201d;&#x3002",{"_index":1105,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}}}],["x6211;&#x4eec;&#x5e94;&#x8be5;&#x53ea;&#x5bfc;&#x51fa;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x5176;&#x4ed6;&#x6a21;&#x5757;&#x9700;&#x8981;&#x6267;&#x884c;&#x7684;&#x5de5;&#x4f5c;&#x3002",{"_index":3499,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6211;&#x4eec;&#x5e94;&#x8be5;&#x5728;&#x4e3a;&#x7279;&#x5f81;&#x6a21;&#x5757;&#x521b;&#x5efa;&#x8def;&#x7531;&#x5bf9;&#x8c61;&#x65f6;&#x59cb;&#x7ec8;&#x8fd9;&#x6837;&#x505a;&#xff0c;&#x65e0;&#x8bba;&#x6a21;&#x5757;&#x5e94;&#x8be5;&#x662f",{"_index":3724,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6211;&#x4eec;&#x5f00;&#x53d1;&#x8fd9;&#x672c;&#x4e66;&#x88ab;&#x7528;&#x4f5c",{"_index":6879,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x6211;&#x4eec;&#x5f00;&#x59cb;&#x6574;&#x7406;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x539f;&#x578b;&#xff0c;&#x76f4;&#x5230;&#x6211;&#x4eec;&#x5f00;&#x59cb;&#x5c1d;&#x8bd5;&#x4f20;&#x9012;&#x6570;&#x636e;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x6211;&#x4eec;&#x6ce8;&#x610f;&#x5230;&#xff0c;&#x8fd9;&#x4e2a;&#x8def;&#x7531;&#x5668;&#x662f;&#x4e0d;&#x5b9e;&#x7528;&#x548c;&#x5e9f;&#x5f03;&#x7684;&#x3002;&#x4f60;&#x5fc5;&#x987b;&#x6539;&#x53d8;st",{"_index":2861,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x5fc5;&#x987b;&#x901a;&#x8fc7;&#x5c06",{"_index":4160,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["x6211;&#x4eec;&#x60f3;&#x5728;&#x6574;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x5355;&#x4f8b;&#xff0c;&#x5ffd;&#x7565;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x5757;&#x662f;&#x5728;&#x5f15;&#x5bfc;&#x6216;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x65f6;&#x52a0;&#x8f7d;&#x3002",{"_index":3531,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6211;&#x4eec;&#x60f3;&#x8981;&#x6709;&#x4e00;&#x79cd;&#x65b9;&#x6cd5;&#x6765;&#x8fde;&#x63a5;&#x7531;webpack&#x751f;&#x6210;&#x7684;&#x4ee3;&#x7801;&#x548c;&#x6211;&#x4eec;&#x7f16;&#x5199;&#x7684;&#x4ee3;&#x7801;&#x3002",{"_index":4242,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x6211;&#x4eec;&#x63a8;&#x8350;&#x7b2c;&#x4e8c;&#x79cd;&#x65b9;&#x5f0f;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x6700;&#x9002;&#x5408;angular",{"_index":3170,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x6211;&#x4eec;&#x662f;&#x5426;&#x6b63;&#x786e;&#x5730;&#x83b7;&#x53d6;&#xff0c;&#x5b58;&#x50a8;&#x548c;&#x4f20;&#x64ad;&#x6570;&#x636e;&#x3002",{"_index":5373,"title":{},"body":{"Testing/services.html#测试服务":{}}}],["x6211;&#x4eec;&#x6709;&#x6548;&#x5730;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x4e86;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x3002",{"_index":3736,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6211;&#x4eec;&#x6b22;&#x8fce;&#x60a8;&#x5728;&#x8ba8;&#x8bba;&#x533a;&#x7684;&#x53cd;&#x9988;&#x3002",{"_index":6895,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x6211;&#x4eec;&#x6ce8;&#x610f;&#x5230;&#x7684;&#x7b2c;&#x4e00;&#x4ef6;&#x4e8b;&#x662f;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x5757;&#x662f;&#x5c06",{"_index":3578,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x6211;&#x4eec;&#x73b0;&#x5728;&#x53ef;&#x4ee5;&#x5c06;&#x6b64;&#x529f;&#x80fd;&#x6a21;&#x5757;&#x5bfc;&#x5165;&#x5230;&#x6211;&#x4eec;&#x7684;&#x7b80;&#x5316;&#x6839;&#x6a21;&#x5757;&#x4e2d;&#x3002",{"_index":3506,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6211;&#x4eec;&#x73b0;&#x5728;&#x6709;&#x4e00;&#x4e2a;&#x5f88;&#x597d;&#x7684;&#x53ef;&#x91cd;&#x7528;&#x7684;&#x6f14;&#x793a;&#x7ec4;&#x4ef6;&#xff0c;&#x5b83;&#x4e0d;&#x77e5;&#x9053;redux&#x6216;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x72b6;&#x6001;&#x3002",{"_index":6092,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x6211;&#x4eec;&#x7528",{"_index":2866,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x7684",{"_index":2855,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Project-setup/loaders.html#Loaders":{}}}],["x6211;&#x4eec;&#x7684;&#x4e24;&#x4e2a",{"_index":6113,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x6211;&#x4eec;&#x7684;&#x4f2a;&#x7ed3;&#x6784;&#x4f2a;&#x6307;&#x4ee4;&#x4e0d;&#x5e26;&#x65b9;&#x62ec;&#x53f7;&#xff0c;&#x800c;&#x662f;&#x5e26;&#x6709;&#x661f;&#x53f7;&#x3002",{"_index":1077,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x6211;&#x4eec;&#x7684;&#x516c;&#x53f8;&#x7531;&#x6211;&#x7684;&#x8054;&#x5408;&#x521b;&#x59cb;&#x4eba;&#x548c;&#x9996;&#x5e2d;&#x6280;&#x672f;&#x5b98;&#xff0c;&#x745e;&#x6069;&#xb7;&#x574e;&#x8d1d;&#x5c14;&#x9886;&#x5bfc;&#xff0c;&#x4e00;&#x4f4d;&#x62e5;&#x6709;18&#x5e74;&#x7684;&#x7ecf;&#x9a8c;&#x7684;&#x8f6f;&#x4ef6;&#x67b6;&#x6784;&#x5e08;&#xff0c;&#x8fc7;&#x53bb;10&#x5e74;&#x5728;&#x5927;&#x578b;&#x4f01;&#x4e1a;&#x3002",{"_index":2820,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x7684;&#x5b50",{"_index":4525,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x6211;&#x4eec;&#x7684;&#x5b9e;&#x9645;&#x6d4b;&#x8bd5;&#x662f;&#x57fa;&#x672c;&#x7684;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528",{"_index":5403,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x6211;&#x4eec;&#x7684;&#x5ba2;&#x6237;&#x4e3b;&#x8981;&#x662f;&#x5e0c;&#x671b;&#x4ece;&#x5f00;&#x6e90;&#x83b7;&#x76ca;&#x7684;&#x5927;&#x578b;&#x4f01;&#x4e1a;&#x3002",{"_index":2884,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x7684;&#x5bfc;&#x822a;&#x7cfb;&#x7edf;&#x53ea;&#x6709;&#x4e24;&#x6761;&#x8def;&#xff1a",{"_index":3694,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6211;&#x4eec;&#x7684;&#x5e73;&#x53f0;&#xff0c;&#x6d4f;&#x89c8;&#x5668;&#xff0c;&#x5fc5;&#x987b;&#x7ee7;&#x7eed;&#x63d0;&#x4f9b;&#x6240;&#x6709;&#x73b0;&#x6709;&#x4ee3;&#x7801;&#x7684;&#x5411;&#x540e;&#x517c;&#x5bb9;&#x6027;&#xff0c;&#x5e76;&#x4e14;&#x8fd9;&#x9700;&#x8981;&#x6162;&#x6162;&#x79fb;&#x52a8;&#x6dfb;&#x52a0;&#x5230;html",{"_index":4446,"title":{},"body":{"Project-setup/webpack.html#Webpack":{}}}],["x6211;&#x4eec;&#x7684;&#x62a5;&#x4ef7;&#x6d4b;&#x8bd5;&#x5305;&#x5728",{"_index":5087,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6211;&#x4eec;&#x7684;&#x6574;&#x4e2a;&#x6d4b;&#x8bd5;&#x5de5;&#x4f5c;&#x6d41;&#x7a0b;&#x662f;&#x901a;&#x8fc7;karma&#x5b8c;&#x6210;&#x7684;&#x3002",{"_index":4972,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x6211;&#x4eec;&#x7684;&#x6839;&#x6a21;&#x5757;&#x6709;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#xff0c;&#x4e00;&#x4e2a;&#x7ba1;&#x9053;&#x548c;&#x4e00;&#x4e2a;&#x670d;&#x52a1;&#xff0c;&#x5176;&#x552f;&#x4e00;&#x7684;&#x76ee;&#x7684;&#x662f;&#x5904;&#x7406;&#x4fe1;&#x7528;&#x5361;&#x3002",{"_index":3465,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6211;&#x4eec;&#x7684;&#x6a21;&#x5757;&#x901a;&#x5e38;&#x7531;&#x591a;&#x4e2a;&#x7ec4;&#x4ef6;&#xff0c;&#x670d;&#x52a1;&#xff0c;&#x6307;&#x4ee4;&#x548c;&#x7ba1;&#x9053;&#x7ec4;&#x6210;&#x3002",{"_index":3765,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x5de5;&#x5177;&#x94fe;&#x5c06;&#x5305;&#x62ec;&#x4ee5;&#x4e0b;&#x5de5;&#x5177;&#xff1a",{"_index":5469,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x7b56;&#x7565;&#x662f;&#x68c0;&#x67e5;&#x670d;&#x52a1;&#x662f;&#x5426;&#x5df2;&#x8bf7;&#x6c42;&#x6b63;&#x786e;&#x7684;&#x7f51;&#x5740;&#xff0c;&#x4e00;&#x65e6;&#x6211;&#x4eec;&#x56de;&#x590d;&#x4e86;&#x6a21;&#x62df;&#x6570;&#x636e;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x8981;&#x9a8c;&#x8bc1;&#x5b83;&#x662f;&#x5426;&#x8fd4;&#x56de;&#x76f8;&#x540c;&#x7684;&#x6570;&#x636e;&#x3002",{"_index":5014,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x6211;&#x4eec;&#x7684;&#x80cc;&#x666f",{"_index":2819,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x77e5;&#x9053;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;react&#x6765;&#x5feb;&#x901f;&#x521b;&#x5efa;&#x4e00;&#x4e2a;mvp&#xff0c;&#x8fd9;&#x662f;&#x975e;&#x5e38;&#x91cd;&#x8981;&#x7684;&#xff0c;&#x56e0;&#x4e3a;&#x8fd9;&#x4e2a;&#x9879;&#x76ee;&#x7684;&#x6392;&#x671f;&#x5f88;&#x77ed;&#x3002;&#x6211;&#x4eec;&#x7684;&#x7b2c;&#x4e00;&#x6b65;&#x662f;&#x83b7;&#x5f97;&#x9879;&#x76ee;&#x8bbe;&#x7f6e;&#xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x627e;&#x5230;&#x6b63;&#x786e;&#x7684;&#x914d;&#x5957;&#x5de5;&#x5177;&#x8fdb;&#x884c;&#x96c6;&#x6210;&#x3002;&#x8fd9;&#x662f;&#x6211;&#x4eec;&#x72af;&#x4e86;&#x91cd;&#x5927;&#x9519;&#x8bef;&#x7684;&#x5730;&#x65b9;&#x3002;&#x6211;&#x4eec;&#x9009;&#x62e9;&#x4f7f;&#x7528",{"_index":2859,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x77e5;&#x9053;&#x6709;&#x5f88;&#x591a;&#x5173;&#x4e8e;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;&#x7684;&#x610f;&#x89c1;&#xff0c;&#x6240;&#x4ee5;&#x8bf7;&#x968f;&#x65f6;&#x8ba9;&#x6211;&#x4eec;&#x77e5;&#x9053;&#x4f60;&#x9009;&#x62e9;&#x4e86;&#x4ec0;&#x4e48;&#xff0c;&#x539f;&#x56e0;&#x4e3a;&#x4f55;&#x3002",{"_index":2922,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x4eec;&#x7ed9;identity&#x6dfb;&#x52a0;&#x4e86;&#x7c7b;&#x578b;&#x53d8;&#x91cf",{"_index":1601,"title":{},"body":{"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["x6211;&#x4eec;&#x81ea;&#x5df1;&#x6a21;&#x62df;&#x8fd9;&#x4e9b;&#x6570;&#x636e;&#xff0c;&#x4ece;&#x800c;&#x8ba9;&#x6211;&#x4eec;&#x63a7;&#x5236;&#x6211;&#x4eec;&#x671f;&#x671b;&#x51fa;&#x73b0;&#x7684;&#x4ef7;&#x503c;&#x3002",{"_index":5062,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6211;&#x4eec;&#x8ba2;&#x9605;&#x8fd9;&#x4e9b;&#x6ce8;&#x5165;&#x4e86",{"_index":6688,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x6211;&#x4eec;&#x8fd8;&#x4ee5;&#x7c7b;&#x4f3c;&#x7684;&#x65b9;&#x5f0f;&#x6dfb;&#x52a0;&#x4e00;&#x4e2a;&#x8f93;&#x5165;&#x5c5e;&#x6027;&#xff0c;&#x4f46;&#x8fd9;&#x6b21;&#x4f7f;&#x7528;&#x4e00;&#x4e2a",{"_index":3243,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x6211;&#x4eec;&#x8fd8;&#x52a0;&#x8f7d;&#x6e90;&#x81ea;&#x6e90;&#x6620;&#x5c04;&#x5904;&#x7406;&#x5668;&#x7684;&#x6362;&#x4ee3;&#x7684;&#x4efb;&#x4f55",{"_index":5205,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x6d4f;&#x89c8;&#x5230",{"_index":5237,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6211;&#x4eec;&#x8fd8;&#x60f3;&#x914d;&#x7f6e;&#x5982;&#x4f55;&#x8f93;&#x51fa;&#x8fd9;&#x4e9b;bundle&#x3002",{"_index":4236,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x6211;&#x4eec;&#x9700;&#x8981;&#x4e00;&#x79cd;&#x65b9;&#x6cd5;&#x6765;&#x5f15;&#x5165;&#x4e00;&#x4e2a;javascript&#x6a21;&#x5757;&#xff0c;&#x4ee5;&#x4fbf;&#x4ece;&#x5176;&#x4ed6;javascript&#x4ee3;&#x7801;&#x5f00;&#x59cb;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":1327,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["x6211;&#x4f1a;&#x4ece;&#x793e;&#x533a;&#xff0c;&#x751f;&#x6001;&#xff0c;&#x6e90;&#x7801;&#xff0c;&#x6027;&#x80fd;&#x7b49;&#x5404;&#x4e2a;&#x65b9;&#x9762;&#x7efc;&#x5408;&#x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x3002",{"_index":2650,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x6211;&#x60f3;&#x73b0;&#x5728;&#x4f60;&#x53ef;&#x4ee5;&#x653e;&#x5fc3;&#x7684;&#x5f00;&#x59cb;&#x5b66;&#x4e60",{"_index":3030,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x6211;&#x6240;&#x9047;&#x5230;&#x7684;&#x552f;&#x4e00;&#x7f3a;&#x70b9;&#x662f;&#x6846;&#x67b6;&#x7684;&#x4e00;&#x5207;&#x8fd8;&#x6ca1;&#x6709;&#x5b8c;&#x5168;&#x88ab;&#x8bb0;&#x5f55;&#x4e0b;&#x6765;&#x3002",{"_index":2875,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6211;&#x9996;&#x5148;&#x60f3;&#x8981;&#x6bd4;&#x8f83;&#x7684;&#x4e0d;&#x662f;&#x6027;&#x80fd;&#xff0c;&#x6e90;&#x7801;&#xff0c;&#x6211;&#x60f3;&#x7528;&#x4e00;&#x4e2a;&#x5927;&#x5bb6;&#x7ecf;&#x5e38;&#x5ffd;&#x7565;&#x6389;&#x7684;&#x6307;&#x6807;&#x6765;&#x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x2014;&#x2014;&#x6559;&#x7a0b;&#x6570;&#x91cf;&#x3002",{"_index":2656,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x6216",{"_index":1517,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Modules/introduction.html#一个模块的基本使用":{},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{},"Project-setup/installation_and_usage.html#输出配置":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{},"Testing/karma-config.html#概述":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{},"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x6216;&#x5728;typescript/es6",{"_index":4211,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x6216;&#x6570;&#x7ec4;&#x7684;&#x5c55;&#x5f00;&#x8fd0;&#x7b97;&#x7b26;&#x3002",{"_index":6002,"title":{},"body":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}}}],["x6216;&#x8005",{"_index":4850,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{},"Testing/karma-config.html#概述":{}}}],["x6216;&#x8005;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":4742,"title":{},"body":{"Routing/routerlink.html#Navigating-Programmatically":{}}}],["x6216;&#x8005;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4e3a;thencallback&#x4f7f;&#x7528;&#x4e0d;&#x540c;&#x7684",{"_index":6533,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x6216;&#x8005;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":4611,"title":{},"body":{"Routing/query_params.html#传递查询参数":{}}}],["x6216;&#x8005;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5728;&#x6d4b;&#x8bd5;&#x7ec4;&#x4ef6;&#x4e00;&#x8282;&#x4e2d;&#x8ba8;&#x8bba;&#x7684",{"_index":4956,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x6216;&#x8005;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5c06",{"_index":4543,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x6216;promise&#x89e3;&#x6790",{"_index":6535,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x6240;&#x4ee5;&#x4e2a;&#x4eba;&#x8ba4;&#x4e3a;&#xff0c;&#x6027;&#x80fd;&#x5e76;&#x4e0d;&#x4f1a;&#x6210;&#x4e3a;&#x4e3b;&#x8981;&#x7684;&#x9009;&#x62e9;&#x4f9d;&#x636e;&#xff0c;&#x51b5;&#x4e14;&#x6027;&#x80fd;&#x6570;&#x636e;&#x5927;&#x5bb6;&#x90fd;&#x6bd4;&#x8f83;&#x63a5;&#x8fd1;&#x3002",{"_index":3022,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x6240;&#x4ee5;&#x5f53;ngc&#x7531",{"_index":3187,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x6a21;&#x62df;&#x51fa;ngredux&#xff08;&#x548c;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x4f9d;&#x8d56;&#x9879;&#xff09;&#xff0c;&#x5c31;&#x50cf;&#x6d4b;&#x8bd5;&#x5176;&#x4ed6;angular",{"_index":4960,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x6240;&#x4ee5;&#x73b0;&#x5728;&#xff0c;&#x4efb;&#x4f55;&#x65f6;&#x95f4",{"_index":6175,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x6240;&#x4ee5;&#xff0c;&#x5373;&#x4f7f;&#x4f7f;&#x7528;&#x6a21;&#x5757;&#xff0c;&#x6ca1;&#x6709;&#x529e;&#x6cd5;&#x6709;&#x4e00;&#x4e2a;&#x201c;&#x79c1;&#x4eba;&#x201d;&#x670d;&#x52a1;&#xff0c;&#x9664;&#x975e;&#x2026;&#x6a21;&#x5757;&#x6b63;&#x5728;&#x61d2;&#x52a0;&#x8f7d;&#x3002",{"_index":3520,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6240;&#x6709;&#x5177;&#x6709",{"_index":5680,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x6240;&#x6709;&#x8fd9;&#x4e9b;&#x914d;&#x7f6e;&#x9009;&#x9879;&#x90fd;&#x7531;config&#x7684",{"_index":4245,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x624b;&#x52a8;&#x6355;&#x83b7;&#x6d4f;&#x89c8;&#x5668;&#x7684;&#x8f93;&#x51fa;&#xff0c;&#x5176;&#x4e2d;port&#x662f;port&#x5c5e;&#x6027;&#x4e2d;&#x6307;&#x5b9a;&#x7684;&#x6570;&#x5b57;&#xff08;&#x5982;&#x679c;&#x672a;&#x6307;&#x5b9a;&#xff0c;&#x5219;&#x9ed8;&#x8ba4;&#x503c;&#x4e3a;9876&#xff09;&#x3002",{"_index":5238,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6267;&#x884c;&#x3002",{"_index":6384,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x6267;&#x884c;&#x6784;&#x5efa;&#x4efb;&#x52a1;&#x3002",{"_index":4361,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x6267;&#x884c;&#x6d4b;&#x8bd5;&#x811a;&#x672c",{"_index":4971,"title":{"Testing/execute.html#执行测试脚本":{}},"body":{}}],["x6269;&#x5c55;&#x6765;&#x6dfb;&#x52a0;&#x9644;&#x52a0;&#x529f;&#x80fd;&#xff0c;&#x90a3;&#x4e48;&#x8fd8;&#x53ef;&#x4ee5;&#x8fd0;&#x884c;&#x4ee5;&#x4e0b;&#x547d;&#x4ee4;&#xff1a",{"_index":5739,"title":{},"body":{"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{}}}],["x6269;&#x5c55;&#x8bed;&#x53e5",{"_index":1485,"title":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{}}}],["x6269;&#x5c55;&#x8bed;&#x53e5;&#x548c;&#x5269;&#x4f59;&#x53c2;&#x6570",{"_index":1479,"title":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{}},"body":{}}],["x627e;&#x5230;&#x3002",{"_index":1267,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x6280;&#x672f;&#x3002",{"_index":4957,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x6280;&#x672f;&#x4e00;&#x81f4;&#x6027",{"_index":2886,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6280;&#x672f;&#x4e0a;&#xff0c;javascript&#x5df2;&#x7ecf;&#x5728;&#x6bcf;&#x4e2a;&#x51fd;&#x6570;&#x4e0a;&#x8bbe;&#x7f6e;&#x4e86;&#x4e00;&#x4e2a",{"_index":1498,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["x62a5;&#x544a;&#x5c06;&#x663e;&#x793a;&#x5728",{"_index":5221,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x62e6;&#x622a",{"_index":6298,"title":{"zone/interception.html#拦截":{}},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x62e6;&#x622a;&#x5668",{"_index":2306,"title":{"Http/interceptor.html#Http-拦截器":{}},"body":{}}],["x62e6;&#x622a;&#x8c03;&#x7528;&#xff08;super&#x6216;&#x7236;&#x7ea7;&#xff09;&#x7684;&#x6807;&#x51c6;&#x65b9;&#x5f0f;&#x4e0d;&#x8d77;&#x4f5c;&#x7528;&#x7684;&#x539f;&#x56e0;&#x662f;&#x7236",{"_index":6767,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x6307;&#x4ee4",{"_index":729,"title":{"Directives/directives.html#指令":{},"Directives/ng_class_directive.html#NgClass-指令":{},"Directives/ng_style_directive.html#NgStyle-指令":{},"Advanced-angular/directives.html#Angular-指令":{}},"body":{}}],["x6307;&#x4ee4;&#x3002",{"_index":1085,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x6307;&#x4ee4;&#x4e0e;&#x6a21;&#x677f",{"_index":741,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x6307;&#x4ee4;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x6570;&#x7ec4;&#xff0c;&#x8be5;&#x6570;&#x7ec4;&#x6307;&#x5b9a;&#x8def;&#x5f84;&#x548c;&#x8def;&#x7531;&#x53c2;&#x6570;&#x3002;&#x6216;&#x8005;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;js&#x8df3;&#x8f6c;&#xff1a",{"_index":4729,"title":{},"body":{"Routing/routeparams.html#链接到带参数的路由":{}}}],["x6307;&#x4ee4;&#x4fee;&#x6539;dom&#x4ee5;&#x66f4;&#x6539;dom&#x5143;&#x7d20;&#x7684;&#x5916;&#x89c2;&#xff0c;&#x884c;&#x4e3a;&#x6216;&#x5e03;&#x5c40;&#x3002",{"_index":730,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x6307;&#x4ee4;&#x548c",{"_index":4609,"title":{},"body":{"Routing/query_params.html#传递查询参数":{}}}],["x6307;&#x4ee4;&#x590d;&#x5236",{"_index":3405,"title":{"Modules/directive-duplications.html#指令复制":{}},"body":{}}],["x6307;&#x4ee4;&#x662f;angular",{"_index":731,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x6307;&#x4ee4;&#x66f4;&#x6539;&#x7ed1;&#x5b9a;&#x5230;&#x5176;&#x9644;&#x52a0;&#x7684;&#x7ec4;&#x4ef6;&#x6216;&#x5143;&#x7d20;&#x7684",{"_index":791,"title":{},"body":{"Directives/ng_class_directive.html#NgClass-指令":{}}}],["x6307;&#x4ee4;&#x6765;&#x5b9e;&#x73b0;&#x4e00;&#x4e2a;&#x66f4;&#x5e72;&#x51c0;&#x7684;&#x5b9e;&#x73b0;&#xff0c;&#x8fd9;&#x6837;angular&#x5c31;&#x4f1a;&#x5c06;&#x8868;&#x5355;&#x5b57;&#x6bb5;&#x8f6c;&#x6362;&#x4e3a;&#x5d4c;&#x5957;&#x6570;&#x636e;&#x3002",{"_index":2019,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x6307;&#x4ee4;&#x6dfb;&#x52a0;&#x94fe;&#x8def;&#x5230;&#x8def;&#x7531;&#x3002",{"_index":4739,"title":{},"body":{"Routing/routerlink.html#RouterLink":{}}}],["x6307;&#x4ee4;&#x90fd;&#x662f;&#x5408;&#x5e76;&#x7684;&#x3002",{"_index":1059,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x6307;&#x4ee4;&#xff0c;&#x4f46;&#x662f;&#x54ea;&#x4e9b;&#x98ce;&#x683c;&#x6700;&#x7ec8;&#x4f1a;&#x88ab;&#x5e94;&#x7528;&#xff1f",{"_index":3428,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x6307;&#x4ee4;&#xff0c;&#x56e0;&#x6b64;&#x6307;&#x4ee4;&#x540d;&#x79f0;&#x5fc5;&#x987b;&#x7528;&#x65b9;&#x62ec;&#x53f7;&#x62ec;&#x8d77;&#x6765;&#x3002",{"_index":1051,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x6307;&#x4ee4;&#xff0c;&#x5e76;&#x5f62;&#x6210;&#x5728;&#x5c01;&#x9762;&#x4e0b;&#x64cd;&#x4f5c;&#x7684;&#x76f8;&#x5173;&#x6307;&#x4ee4;&#xff0c;&#x5982;&#x8f93;&#x5165;&#x7b49;&#x3002",{"_index":2177,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["x6307;&#x4ee4;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5728;&#x65b9;&#x62ec;&#x53f7;&#x4e2d;&#x5305;&#x88c5;&#x6307;&#x4ee4;&#x540d;&#x79f0;&#x3002;&#x5f53;&#x4f60;&#x60f3;&#x6709;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x653e;&#x5728;&#x9002;&#x7528;&#x7684;&#x7c7b;&#x540d;&#x5217;&#x8868;&#x65f6;&#xff0c;&#x4f20;&#x5165;&#x6570;&#x7ec4;&#x662f;&#x5f88;&#x6709;&#x7528;&#x7684;&#x3002",{"_index":808,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个数组":{}}}],["x6307;&#x5411;&#x7684;&#x662f;&#x5b9e;&#x4f8b;&#x53d8;&#x91cf",{"_index":1158,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x6307;&#x7684;&#x662f",{"_index":1412,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x6307;&#x7684;&#x662f;&#x540c;&#x4e00;&#x4e2a;&#x5b9e;&#x4f8b;&#x3002",{"_index":1421,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x6307;&#x7684;&#x662f;&#x8c03;&#x7528;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x56e0;&#x6b64;&#x53ef;&#x4ee5;&#x6539;&#x53d8;&#x4e3a;&#x9664;&#x5bf9;&#x8c61;&#x4e4b;&#x5916;&#x7684;&#x5176;&#x4ed6;&#x4e1c;&#x897f;&#x3002",{"_index":1184,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x6309;&#x7167;&#x60ef;&#x4f8b;&#xff0c;&#x6839;&#x6a21;&#x5757;&#x5e94;&#x59cb;&#x7ec8;&#x547d;&#x540d;&#x4e3a",{"_index":3600,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x6309;&#x94ae;&#x662f;&#x8981;&#x53d1;&#x51fa;&#x8bf7;&#x6c42;&#x5e76;&#x8fd4;&#x56de;&#x65b0;&#x7684;&#x5267;&#x96c6;&#x5217;&#x8868;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x4e0d;&#x60f3;&#x9500;&#x6bc1;&#x5e76;&#x91cd;&#x65b0;&#x521b;&#x5efa;&#x5217;&#x8868;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x9879;&#x76ee;&#x3002",{"_index":974,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x6309;&#x987a;&#x5e8f",{"_index":3431,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x6309;&#x9884;&#x671f;&#x5de5;&#x4f5c;&#x3002",{"_index":5558,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x6355;&#x83b7;&#x6240;&#x6709;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x72b6;&#x6001;&#x901a;&#x5e38;&#x662f;&#x4e00;&#x4e2a;&#x597d;&#x4e3b;&#x610f;&#xff0c;&#x4ee5;&#x4fbf;&#x5728;&#x4efb;&#x4f55;&#x5730;&#x65b9;&#x90fd;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#xff0c;&#x800c;&#x4e14;&#x90fd;&#x5728;&#x540c;&#x4e00;&#x4f4d;&#x7f6e;&#x65b9;&#x4fbf;&#x68c0;&#x67e5;&#x3002",{"_index":5805,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x6355;&#x83b7;&#x7528;&#x6237;&#x7684;&#x8f93;&#x5165;&#x662f;&#x4efb;&#x4f55;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x57fa;&#x77f3;&#x3002",{"_index":1938,"title":{},"body":{"Form/form.html#Forms":{}}}],["x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x89c2;&#x4f17;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x4eba;&#x8d70;&#x51fa;&#x6765;&#xff0c;&#x6f14;&#x51fa;&#x90fd;&#x4f1a;&#x505c;&#x6b62;&#x3002",{"_index":3890,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x6211;&#x4eec;&#x6700;&#x7ec8;&#x5f97;&#x5230;&#x4e86;&#x4e24;&#x4e2a",{"_index":3830,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x63a5;&#x4e0b;&#x6765;&#x6211;&#x4eec;&#x4f7f;&#x7528",{"_index":5069,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x63a5;&#x4e0b;&#x6765;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5b9a;&#x4e49;&#x5230;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x8f85;&#x52a9;&#x8def;&#x7531;&#x7684;&#x94fe;&#x63a5;&#xff0c;&#x4ee5;&#x5bfc;&#x822a;&#x548c;&#x5448;&#x73b0;&#x5185;&#x5bb9;&#x3002",{"_index":4481,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x63a5;&#x4e0b;&#x6765;&#xff0c;&#x6211;&#x4eec;&#x8ba2;&#x9605;&#x6765;&#x81ea;&#x6211;&#x4eec;&#x540e;&#x7aef;&#x7684;&#x4efb;&#x4f55;&#x4f20;&#x5165;&#x8fde;&#x63a5;&#x3002;&#x8fd9;&#x4f7f;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61",{"_index":5298,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x63a5;&#x4e0b;&#x6765;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x4fee;&#x6539;&#x4e3b;&#x5e94;&#x7528;&#x7684;&#x5bb9;&#x5668;&#xff0c;&#x5c06;&#x8fd9;&#x4e9b;&#x8f93;&#x5165;&#x548c;&#x8f93;&#x51fa;&#x8fde;&#x63a5;&#x5230;&#x6a21;&#x677f;&#x3002",{"_index":6098,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x63a5;&#x53d7;&#x4e00;&#x4e2a",{"_index":3963,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#xff0c;&#x5176;&#x5c5e;&#x6027;&#x548c;&#x503c;&#x5b9a;&#x4e49;&#x8be5;&#x5143;&#x7d20;&#x7684;&#x6837;&#x5f0f;&#x3002",{"_index":1052,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x63a5;&#x53e3",{"_index":1623,"title":{"ES6&TypeScript/typescript/interfaces.html#接口":{}},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{}}}],["x63a5;&#x53e3;&#x662f;&#x4e00;&#x4e2a;&#x62bd;&#x8c61;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x4e0d;&#x50cf;&#x7c7b;&#x4e00;&#x6837;&#x5305;&#x542b;&#x4efb;&#x4f55;&#x4ee3;&#x7801;&#x3002",{"_index":1628,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x63a5;&#x53e3;&#x662f;&#x4e00;&#x79cd;&#x7528;&#x4e8e;&#x76f8;&#x5bf9;&#x4e8e;&#x53c2;&#x6570;&#x53ca;&#x5176;&#x7c7b;&#x578b;&#x5b9a;&#x4e49;&#x51fd;&#x6570;&#x4e0a;&#x7684;&#x5951;&#x7ea6;&#x7684;&#x65b9;&#x5f0f;&#x3002",{"_index":1626,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x63a5;&#x53e3;&#x7684",{"_index":4105,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x63a5;&#x53e3;&#x7684;&#x7b80;&#x5355;json&#x5bf9;&#x8c61;&#xff1a",{"_index":5718,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x63a5;&#x53e3;&#x90fd;&#x5229;&#x7528;&#x94fe;&#x63a5;&#x6765;&#x6784;&#x9020;&#x7c7b;&#x4f3c;&#x82f1;&#x8bed;&#x7684;&#x53e5;&#x5b50;&#x6765;&#x63cf;&#x8ff0;&#x6d4b;&#x8bd5;&#x3002",{"_index":5516,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["x63a7;&#x5236;&#x662f;&#x5426;&#x5141;&#x8bb8;&#x6fc0;&#x6d3b;&#x5b50;&#x8def;&#x7531",{"_index":4658,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x63a7;&#x5236;karma&#x5982;&#x4f55;&#x6267;&#x884c;&#xff0c;&#x5982;&#x679c;&#x8bbe;&#x7f6e;&#x4e3a",{"_index":5240,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x63cf;&#x8ff0",{"_index":6780,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x63d0;&#x4f9b;&#x3002",{"_index":482,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x63d0;&#x4f9b;&#x4e86",{"_index":3185,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":6699,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e9b;&#x5904;&#x7406",{"_index":1135,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x79cd;&#x79f0;&#x4e3a;&#x533a;&#x57df;&#x7684;&#x673a;&#x5236;&#xff0c;&#x7528;&#x4e8e;&#x5c01;&#x88c5;&#x548c;&#x62e6;&#x622a;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x7684;&#x5f02;&#x6b65;&#x6d3b;&#x52a8;&#xff08;&#x4f8b;&#x5982;settimeout&#xff0c;promise&#xff09;&#x3002",{"_index":6669,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e94;&#x79cd;&#x8def;&#x7531;&#x62e6;&#x622a;&#x54e8;&#x5175;&#xff1a",{"_index":4656,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x51e0;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x8986;&#x76d6;&#x6d4b;&#x8bd5;&#x6a21;&#x5757;&#x4e2d;&#x4f7f;&#x7528;&#x7684;&#x4f9d;&#x8d56;&#x9879;&#x3002",{"_index":5334,"title":{},"body":{"Testing/overriding.html#覆盖测试的依赖关系":{}}}],["x63d0;&#x4f9b;&#x5bf9;&#x5e95;&#x5c42;&#x539f;&#x751f;&#x5143;&#x7d20;&#xff08;dom&#x5143;&#x7d20;&#xff09;&#x7684;&#x8bbf;&#x95ee;&#x3002",{"_index":5665,"title":{},"body":{"advanced-components/elementref.html#ElementRef":{}}}],["x63d0;&#x4f9b;&#x7684;javascript",{"_index":5477,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x63d0;&#x4f9b;&#x7ed9;&#x8c03;&#x7528;&#x65f6;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":1192,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x63d2;&#x4ef6",{"_index":2742,"title":{"plus.html#插件":{},"Project-setup/plugins.html#插件":{}},"body":{"Testing/karma-config.html#概述":{}}}],["x63d2;&#x4ef6;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x5728;&#x6346;&#x7ed1;&#x8fc7;&#x7a0b;&#x4e2d;&#x6ce8;&#x5165;&#x81ea;&#x5b9a;&#x4e49;&#x6784;&#x5efa;&#x6b65;&#x9aa4;&#x3002",{"_index":4369,"title":{},"body":{"Project-setup/plugins.html#插件":{}}}],["x641c;&#x7d22;&#x529f;&#x80fd;&#x5c06;&#x4f7f;&#x7528;&#x63d0;&#x4f9b;&#x7684;&#x672f;&#x8bed;&#x8fdb;&#x884c;get&#x8bf7;&#x6c42;&#xff0c;searchxml&#x65b9;&#x6cd5;&#x5c06;&#x6267;&#x884c;&#x76f8;&#x540c;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x4f46;&#x8bf7;&#x6c42;&#x54cd;&#x5e94;&#x4e3a;xml&#x800c;&#x4e0d;&#x662f;json&#x3002",{"_index":5012,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x64cd;&#x4f5c;&#x7b26;&#x907f;&#x514d;&#x91cd;&#x590d;&#x8bf7;&#x6c42",{"_index":2321,"title":{},"body":{"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{}}}],["x652f;&#x6301",{"_index":2911,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x652f;&#x6301;&#x3002",{"_index":1316,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["x652f;&#x6301;&#x5404;&#x79cd;&#x5404;&#x6837;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x4ee5;&#x5141;&#x8bb8;&#x60a8;&#x4ee5;&#x975e;&#x5e38;&#x5927;&#x7684;&#x7075;&#x6d3b;&#x6027;&#x9009;&#x62e9;&#x90e8;&#x5206;redux&#x5b58;&#x50a8;&#x3002;&#x6709;&#x5173;&#x66f4;&#x591a;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#xff0c;&#x8bf7;&#x53c2;&#x9605",{"_index":6179,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x6539;&#x53d8;&#xff09;&#x3002",{"_index":6779,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x6559;&#x7a0b;&#x6570;&#x91cf",{"_index":3013,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x6570;&#x636e;&#x662f;&#x6d4b;&#x8bd5;&#x670d;&#x52a1;&#x7684;&#x4e3b;&#x8981;&#x91cd;&#x70b9",{"_index":5372,"title":{},"body":{"Testing/services.html#测试服务":{}}}],["x6570;&#x636e;&#x8bf4;&#x8bdd;&#x26a1;&#xfe0f",{"_index":3004,"title":{"why_angular_2.html#数据说话⚡️":{}},"body":{}}],["x6570;&#x636e;&#x9884;&#x52a0;&#x8f7d;&#x62e6;&#x622a",{"_index":4660,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x6570;&#x7ec4",{"_index":1481,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{}}}],["x6570;&#x7ec4;&#x3002",{"_index":406,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x6570;&#x7ec4;&#x3002;&#x5982;&#x679c;&#x5b50;&#x7ec4;&#x4ef6;&#x4f7f;&#x7528;&#x7236;&#x7ec4;&#x4ef6;&#x7684",{"_index":692,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6570;&#x7ec4;&#x4e2d;&#x3002",{"_index":3517,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x6570;&#x7ec4;&#x4e2d;&#x4f9d;&#x8d56;&#x8fdb;&#x884c;&#x88c5;&#x9970;&#xff0c;&#x5219;&#x5b50;&#x7ec4;&#x4ef6;&#x5c06;&#x5f71;&#x54cd;&#x7236;&#x7ec4;&#x4ef6;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x3002;&#x8fd9;&#x53ef;&#x80fd;&#x5e26;&#x6765;&#x5404;&#x79cd;&#x610f;&#x60f3;&#x4e0d;&#x5230;&#x7684;&#x540e;&#x679c;&#x3002",{"_index":693,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6570;&#x7ec4;&#x4e2d;&#x5217;&#x51fa;&#x5b83;&#x3002;&#x56e0;&#x4e3a;&#x5728",{"_index":3585,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x6570;&#x7ec4;&#x4e2d;&#xff0c;&#x800c;&#x662f;&#x5728",{"_index":3516,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6570;&#x7ec4;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x914d;&#x7f6e;&#x7684;&#x8def;&#x7531;&#x5668;&#x6a21;&#x5757;&#x3002",{"_index":4593,"title":{},"body":{"Routing/config.html#RouterModule":{}}}],["x6570;&#x7ec4;&#x5b9a;&#x4e49;&#x7684;&#x793a;&#x4f8b;&#xff1a",{"_index":4592,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x6570;&#x7ec4;&#x5efa;&#x7acb;&#x3002;&#x6709;&#x4e00;&#x4e2a",{"_index":671,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6570;&#x7ec4;&#x64cd;&#x4f5c",{"_index":3933,"title":{"Observables/observables_array_operations.html#Observables-数组操作":{}},"body":{}}],["x6570;&#x7ec4;&#x7684;&#x7ec4;&#x4ef6;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":687,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6570;&#x7ec4;&#x7684;&#x7ec4;&#x4ef6;&#x67e5;&#x770b;&#x5176;&#x6ce8;&#x518c;&#x5668;&#x7684;&#x7236;&#x7ec4;&#x4ef6;&#x3002;&#x5982;&#x679c;&#x7236;&#x7ea7;&#x6ca1;&#x6709;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x5b83;&#x5c06;&#x67e5;&#x627e;&#xff0c;&#x76f4;&#x5230;&#x5b83;&#x5230;&#x8fbe;&#x6839;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":689,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6570;&#x7ec4;&#xff0c;&#x5e76;&#x5c06;&#x4f7f;&#x7528;&#x6839;&#x6ce8;&#x5165;&#x5668;&#x7684;&#x6240;&#x6709;&#x4f9d;&#x8d56;&#x9879;&#x3002",{"_index":675,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6587;&#x4ef6",{"_index":3574,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x6587;&#x4ef6;&#x3002",{"_index":4288,"title":{},"body":{"Project-setup/loaders.html#Loaders":{},"Testing/karma-config.html#概述":{}}}],["x6587;&#x4ef6;&#x4e2d;&#x5b8c;&#x6210;&#xff0c;&#x5e76;&#x5bfc;&#x5165;&#x5230;&#x6bcf;&#x4e2a;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e2d;&#x4ee5;&#x4fbf;&#x91cd;&#x65b0;&#x4f7f;&#x7528;&#x3002",{"_index":5439,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x6587;&#x4ef6;&#x4e2d;&#x5b9a;&#x4e49;&#x81ea;&#x5b9a;&#x4e49;&#x811a;&#x672c;&#x3002;&#x7136;&#x540e;&#xff0c;&#x8fd9;&#x4e9b;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;npm",{"_index":4343,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x6587;&#x4ef6;&#x4e2d;&#xff1a",{"_index":4212,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x6587;&#x4ef6;&#x5217;&#x8868;&#x8fd8;&#x53ef;&#x4ee5;&#x91c7;&#x7528;glob&#x6a21;&#x5f0f;&#x7684;&#x5f62;&#x5f0f;&#xff0c;&#x56e0;&#x4e3a;&#x4e3a;&#x6bcf;&#x4e2a;&#x521b;&#x5efa;&#x7684;&#x65b0;&#x6d4b;&#x8bd5;&#x811a;&#x672c;&#x624b;&#x52a8;&#x6dfb;&#x52a0;&#x65b0;&#x6587;&#x4ef6;&#x53d8;&#x5f97;&#x76f8;&#x5f53;&#x7e41;&#x7410;&#x3002",{"_index":5188,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6587;&#x4ef6;&#x540d;&#x7ea6;&#x5b9a",{"_index":4986,"title":{"Testing/filename-conventions.html#文件名约定":{}},"body":{}}],["x6587;&#x4ef6;&#x5939;&#x3002",{"_index":4239,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x6587;&#x4ef6;&#x5939;&#x4e2d;&#x3002",{"_index":5222,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6587;&#x4ef6;&#x5939;&#x4e2d;&#x8f93;&#x51fa;&#x4e00;&#x4e2a",{"_index":2635,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x6587;&#x4ef6;&#x6269;&#x5c55;&#x540d;&#x3002",{"_index":5192,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6587;&#x4ef6;&#x6269;&#x5c55;&#x540d;&#x5c06;&#x5176;&#x6807;&#x8bb0;&#x4e3a;&#x6d4b;&#x8bd5;&#x811a;&#x672c;&#xff08;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;jasmine&#x7ea6;&#x5b9a;&#xff09;&#x3002",{"_index":4989,"title":{},"body":{"Testing/filename-conventions.html#文件名约定":{}}}],["x6587;&#x4ef6;&#x66f4;&#x6e05;&#x6670;&#xff0c;&#x66f4;&#x6613;&#x8bfb;&#x3002",{"_index":5195,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x6587;&#x4ef6;&#x6765;&#x6307;&#x5b9a;&#x4f60;&#x7684;&#x9879;&#x76ee;&#x6d4b;&#x8bd5;&#x9700;&#x6c42;&#xff0c;&#x8bb0;&#x4f4f;&#x4f60;&#x8fd8;&#x9700;&#x8981;&#x6dfb;&#x52a0;&#x8282;&#x70b9;&#x7c7b;&#x578b;&#x5230;&#x4f60;&#x7684;&#x4f9d;&#x8d56;&#x9879;&#x3002",{"_index":5497,"title":{},"body":{"Testing/typings.html#Typings":{}}}],["x6587;&#x4ef6;&#x7684",{"_index":4347,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x6587;&#x4ef6;&#x770b;&#x8d77;&#x6765;&#x50cf;&#x8fd9;&#x6837;&#xff1a",{"_index":4420,"title":{},"body":{"Project-setup/summary.html#总结":{}}}],["x6587;&#x4ef6;&#x8def;&#x5f84;&#x4e0d;&#x80fd;&#x4e0e;&#x8981;&#x5904;&#x7406;&#x7684;&#x6b64;&#x6761;&#x4ef6;&#x5339;&#x914d;&#x3002",{"_index":4317,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x6587;&#x4ef6;&#x8def;&#x5f84;&#x5fc5;&#x987b;&#x4e0e;&#x8981;&#x5904;&#x7406;&#x7684;&#x6b64;&#x6761;&#x4ef6;&#x5339;&#x914d;&#x3002",{"_index":4319,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x6587;&#x4ef6;&#x8def;&#x5f84;&#x5fc5;&#x987b;&#x5339;&#x914d;&#x6b64;&#x6761;&#x4ef6;&#x624d;&#x80fd;&#x5904;&#x7406;&#x3002",{"_index":4313,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x6587;&#x4ef6;&#x9075;&#x5faa;&#x6211;&#x4eec;&#x4e4b;&#x524d;&#x5b9a;&#x4e49;&#x6a21;&#x5757;&#x7684;&#x7ed3;&#x6784;&#xff0c;&#x4f46;&#x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x4e86;&#x6211;&#x4eec;&#x5c06;&#x8981;&#x4f7f;&#x7528;&#x7684;&#x6a21;&#x5757;&#x548c;&#x7ec4;&#x4ef6;&#x3002",{"_index":3577,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x6587;&#x6863;&#x3002",{"_index":6180,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x65b0;&#x7248;&#x672c;&#x7684;javascript&#xff0c;&#x201c;ecmascript",{"_index":1106,"title":{},"body":{"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{}}}],["x65b0;&#x7279;&#x6027",{"_index":3075,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x65b0;&#x7684;&#x201c;&#x80d6;&#x7bad;&#x5934;&#x201d;&#x7b26;&#x53f7;&#x8fd8;&#x53ef;&#x4ee5;&#x7528;&#x66f4;&#x7b80;&#x5355;&#x7684;&#x65b9;&#x5f0f;&#x6765;&#x5b9a;&#x4e49;&#x533f;&#x540d;&#x51fd;&#x6570;&#x3002",{"_index":1138,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x65b0;&#x7684;&#x201c;angular",{"_index":6877,"title":{},"body":{"README.html#Rangle’s-Angular-2-Training-Book":{}}}],["x65b9;&#x5f0f;&#x201d;&#x5199;&#x4e1c;&#x897f",{"_index":2833,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x65b9;&#x6cd5;&#x3002",{"_index":1418,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{},"Pipes/custom_pipes.html#自定义管道":{}}}],["x65b9;&#x6cd5;&#x4e2d;&#x3002",{"_index":2058,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x65b9;&#x6cd5;&#x5728;javascript&#x4e2d;&#x4f7f;&#x7528;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x904d;&#x5386;&#x6bcf;&#x4e2a;&#x6570;&#x7ec4;&#x7684;&#x9879;&#x76ee;&#x5e76;&#x7d2f;&#x52a0;&#x4e00;&#x4e2a;&#x503c;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c",{"_index":6121,"title":{},"body":{"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{}}}],["x65b9;&#x6cd5;&#x6765;&#x6ce8;&#x518c;&#x6a21;&#x5757;&#x548c;&#x670d;&#x52a1;&#x3002",{"_index":3803,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x65b9;&#x6cd5;&#x6765;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x5c06;&#x786e;&#x4fdd",{"_index":5079,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x65b9;&#x6cd5;&#x7684;&#x524d;&#x540e;&#x8fdb;&#x884c;&#x62e6;&#x622a;&#xff0c;&#x8fd9;&#x6837;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x6d4b;&#x91cf;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x548c;&#x5728;&#x63a7;&#x5236;&#x53f0;&#x8bb0;&#x5f55",{"_index":6751,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x65b9;&#x6cd5;&#x7ecf;&#x5e38;&#x5728;javascript&#x4e2d;&#x4f7f;&#x7528;reduc",{"_index":5967,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["x65b9;&#x6cd5;&#x8c03;&#x7528;&#x7684;&#x80fd;&#x529b;&#x3002",{"_index":6305,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x65b9;&#x6cd5;&#x8c03;&#x7528;&#xff1a",{"_index":1424,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x7684;&#x5bf9;&#x8c61;&#xff0c;&#x5176;&#x4e2d;&#x5305;&#x62ec",{"_index":3543,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x4e0d;&#x60f3;&#x5728;di&#x6811;&#x7684;&#x4e0d;&#x540c;&#x7ea7;&#x522b;&#x6ce8;&#x518c;&#x8be5;&#x670d;&#x52a1;&#xff0c;&#x56e0;&#x6b64",{"_index":3807,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5982",{"_index":1415,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x5141;&#x8bb8;&#x60a8;&#x6307;&#x5b9a;&#x8981;&#x7528;&#x4e8e;&#x7ed1;&#x5b9a;&#x51fd;&#x6570;&#x5185;&#x7684",{"_index":1445,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x5df2;&#x7531;&#x793e;&#x533a;&#x6210;&#x5458;todd",{"_index":3045,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x65e0",{"_index":2658,"title":{},"body":{"compare.html#与其他框架比较":{},"why_angular_2.html#数据说话⚡️":{}}}],["x65e0;&#x7c7b;&#x578b",{"_index":1843,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x65e0;&#x8bba;&#x4f7f;&#x7528;&#x54ea;&#x79cd;&#x65b9;&#x6cd5;&#xff0c;&#x60a8;&#x90fd;&#x9700;&#x8981;&#x63d0;&#x4f9b;angular&#x7f16;&#x8bd1;&#x5668",{"_index":2527,"title":{},"body":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{}}}],["x65e0;&#x8bba;&#x54ea;&#x79cd;&#x65b9;&#x5f0f;&#xff0c;&#x6211;&#x4eec;&#x4ecd;&#x7136;&#x4ece;redux&#x7684;&#x57fa;&#x672c;&#x539f;&#x7406;&#x548c;&#x5355;&#x5411;&#x6570;&#x636e;&#x6d41;&#x4e2d;&#x83b7;&#x76ca;&#x3002",{"_index":6186,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x65e0;&#x969c;&#x788d",{"_index":5560,"title":{"a11y/a11y.html#Angular-2-中的-Web-无障碍":{}},"body":{}}],["x65e0;&#x969c;&#x788d;&#x6700;&#x521d;&#x65e8;&#x5728;&#x7528;&#x6237;&#x53ef;&#x4ee5;&#x7ecf;&#x5e38;&#x5149;&#x987e;&#xff0c;&#x7528;&#x4e8e;&#x7535;&#x8bdd;&#x7684;&#x8bed;&#x97f3;&#x63a7;&#x5236;&#x6a21;&#x5f0f;&#x662f;&#x4e00;&#x4e2a;&#x8fd9;&#x6837;&#x7684;&#x4f8b;&#x5b50;&#x3002",{"_index":6909,"title":{},"body":{"a11y/why-a11y.html#与用户体验和SEO叠加":{}}}],["x65e0;&#x969c;&#x788d;&#x6cd5",{"_index":6911,"title":{"a11y/why-a11y.html#无障碍法":{}},"body":{}}],["x65e0;&#x969c;&#x788d;web&#x5e94;&#x7528;&#x7684;&#x5173;&#x952",{"_index":5566,"title":{"a11y/key-concerns.html#无障碍Web应用的关键":{}},"body":{}}],["x65e9;&#x671f;&#x7f16;&#x8bd1;&#x8fd8;&#x610f;&#x5473;&#x7740;&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x53ef;&#x4ee5;&#x5728;&#x5b9e;&#x9645;&#x8fd0;&#x884c;&#x4ee3;&#x7801;&#x4e4b;&#x524d;&#x548c;&#x5230;&#x8fbe;&#x5ba2;&#x6237;&#x7aef;&#x4e4b;&#x524d;&#x627e;&#x5230;&#x6a21;&#x677f;&#x9519;&#x8bef;&#x3002;&#x8fd9;&#x63d0;&#x4f9b;&#x4e86;&#x66f4;&#x5f3a;&#x5927;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5177;&#x6709;&#x66f4;&#x9ad8;&#x7684;&#x5b89;&#x5168;&#x6027;&#xff0c;&#x56e0;&#x4e3a;&#x66f4;&#x5c11;&#x7684;&#x5ba2;&#x6237;&#x7aef;html&#x548c;javascript&#x88ab",{"_index":3140,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x65f6;&#x88ab;&#x8c03;&#x7528;&#x3002",{"_index":1592,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x65f6;&#xff0c;&#x5b83;&#x5c06;&#x5f15;&#x7528;&#x5bf9;&#x8c61",{"_index":1189,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x65f6;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x63a7;&#x5236;&#x53f0;&#x8f93;&#x51fa;&#xff0c;&#x6307;&#x793a;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#x88ab;&#x521b;&#x5efa",{"_index":1020,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x662f",{"_index":3887,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x662f;&#x201c;node",{"_index":6201,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5185;&#x7f6e;&#x7684;&#x6a21;&#x5757;&#xff0c;&#x7528;&#x4e8e;&#x5bfc;&#x51fa;&#x57fa;&#x672c;&#x6307;&#x4ee4;&#xff0c;&#x7ba1;&#x9053;&#x548c;&#x670d;&#x52a1;&#x3002;&#x4e0e;&#x4ee5;&#x524d;&#x7248;&#x672c;&#x7684;angular",{"_index":3580,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5206;&#x6563;&#x7684;&#x5206;&#x5e03;&#x5f0f;&#x7248;&#x672c;&#x63a7;&#x5236;&#x7cfb;&#x7edf;&#xff0c;&#x5b83;&#x5141;&#x8bb8;&#x7a0b;&#x5e8f;&#x5458;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x4ee3;&#x7801;&#x5e93;&#x4e0a;&#x534f;&#x4f5c;&#xff0c;&#x800c;&#x65e0;&#x9700;&#x8e29;&#x5728;&#x5bf9;&#x65b9;&#x7684;&#x811a;&#x8dbe;&#x3002",{"_index":6243,"title":{},"body":{"tooling/source_control.html#源码控制：Git":{}}}],["x662f;&#x4e00;&#x4e2a;&#x53ef;&#x9009;&#x53c2;&#x6570;&#x3002",{"_index":1853,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x662f;&#x4e00;&#x4e2a;&#x57fa;&#x4e8e;webpack&#x7684;angular",{"_index":5377,"title":{},"body":{"Testing/setup.html#测试设置":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x6216;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x51fd;&#x6570;&#x600e;&#x4e48;&#x529e;&#xff1f",{"_index":421,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x662f;&#x4e00;&#x4e2a;&#x6709;&#x7528;&#x7684;&#x8d44;&#x6e90;&#xff0c;&#x6709;&#x52a9;&#x4e8e;&#x4f60;&#x4e86;&#x89e3",{"_index":3972,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x662f;&#x4e00;&#x4e2a;&#x6d4b;&#x8bd5;&#x81ea;&#x52a8;&#x5316;&#x5de5;&#x5177;&#xff0c;&#x7528;&#x4e8e;&#x63a7;&#x5236;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x7684;&#x6267;&#x884c;&#x4ee5;&#x53ca;&#x6267;&#x884c;&#x5b83;&#x4eec;&#x7684;&#x6d4f;&#x89c8;&#x5668;&#x3002",{"_index":5471,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x662f;&#x4e00;&#x4e2a;&#x6f14;&#x793a;&#x7ec4;&#x4ef6;&#x3002",{"_index":6080,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x662f;&#x4e00;&#x4e2a;&#x76f8;&#x5f53;&#x7b80;&#x5355;&#x7684;&#x8fc7;&#x7a0b;&#x3002;&#x6211;&#x4eec;&#x60f3;&#x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":5053,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x662f;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x7c7b;&#xff0c;&#x5b83;&#x4fdd;&#x5b58;&#x5bf9;&#x8ba1;&#x6570;&#x5668;&#x5c5e;&#x6027;&#x7684;&#x5f15;&#x7528;&#x3002",{"_index":3638,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x662f;&#x4e00;&#x4e2a;&#x88c5;&#x9970;&#x5668;&#x51fd;&#x6570;&#xff0c;&#x5b83;&#x5c06;&#x7ec4;&#x4ef6;&#x7c7b;&#x7684;&#x540d;&#x79f0;&#x4f5c;&#x4e3a;&#x5176;&#x8f93;&#x5165;&#xff0c;&#x5e76;&#x5728;&#x8981;&#x7ed1;&#x5b9a;&#x7684;&#x5305;&#x542b;&#x7ec4;&#x4ef6;&#x7684;&#x6a21;&#x677f;&#x4e2d;&#x627e;&#x5230;&#x5176;&#x9009;&#x62e9;&#x5668;&#x3002",{"_index":5600,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x662f;&#x4e00;&#x4e2a;typescript&#x5de5;&#x4ef6;&#xff0c;&#x5b83;&#x4e0d;&#x662f;ecmascript&#x7684;&#x4e00;&#x90e8;&#x5206;&#x3002",{"_index":1625,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x662f;&#x4e00;&#x79cd;&#x7eaf;&#x7cb9;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x9002;&#x5408;&#x6d4b;&#x8bd5;&#x3002",{"_index":5362,"title":{},"body":{"Testing/redux.html#测试-Redux":{}}}],["x662f;&#x5305;&#x542b;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x5185;&#x5bb9;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x3002",{"_index":2573,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x662f;&#x53ef;&#x7ec4;&#x5408;&#x7684",{"_index":6802,"title":{},"body":{"zone/zone_primer.html#Why":{}}}],["x662f;&#x5728;&#x6d4b;&#x8bd5;&#x5faa;&#x73af;&#x4e2d;&#x4f7f;&#x7528;&#x7684",{"_index":5223,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x662f;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x751f;&#x6210;&#x7684;&#xff0c;&#x5e76;&#x4e14;&#x6807;&#x51c6;&#x65b9;&#x6cd5;&#xff08;&#x5982;&#x5b50;&#x7c7b;&#x5316;&#x548c;&#x7334;&#x5b50;&#x8865;&#x4e01;&#xff09;&#x53ea;&#x6709;&#x5728;&#x8bbe;&#x8ba1;&#x65f6;&#x5df2;&#x77e5;&#x7236",{"_index":6748,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x662f;&#x5728;angular&#x754c;&#x6700;&#x6d41;&#x884c;&#x7684;&#x6d4b;&#x8bd5;&#x6846;&#x67b6;&#x3002;&#x8fd9;&#x662f;&#x6211;&#x4eec;&#x5c06;&#x7f16;&#x5199;&#x6211;&#x4eec;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x7684;&#x6838;&#x5fc3;&#x6846;&#x67b6;&#x3002",{"_index":5470,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x662f;&#x5b9e;&#x73b0;@ngrx&#x63d0;&#x4f9b;&#x7684",{"_index":5717,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x662f;&#x6211;&#x4eec;&#x63d0;&#x4f9b;&#x670d;&#x52a1;&#x7684;&#x5730;&#x65b9;&#xff09",{"_index":409,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x662f;&#x6211;&#x4eec;&#x653e;&#x7f6e;&#x7ec4;&#x4ef6;&#xff0c;&#x7ba1;&#x9053;&#x548c;&#x6307;&#x4ee4;&#x7684;&#x5730;&#x65b9;&#xff1b",{"_index":408,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x662f;&#x6211;&#x4eec;&#x8981;&#x4f7f;&#x7528;&#x7684;&#x6d4b;&#x8bd5;&#x6846;&#x67b6;&#x7684;&#x5217;&#x8868;&#x3002;&#x8fd9;&#x4e9b;&#x6846;&#x67b6;&#x5fc5;&#x987b;&#x901a;&#x8fc7;npm&#x4f5c;&#x4e3a;&#x4f9d;&#x8d56;&#x9879;&#x5b89;&#x88c5;&#x5728;&#x6211;&#x4eec;&#x7684;&#x9879;&#x76ee;&#x4e2d;&#xff0c;&#x6216;/&#x548c;&#x4f5c;&#x4e3a;karma&#x63d2;&#x4ef6;&#x3002",{"_index":5184,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x662f;&#x6587;&#x4ef6;&#x7684;&#x683c;&#x5f0f;&#x3002",{"_index":2574,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x662f;&#x65ad;&#x8a00;&#x5e93;&#xff0c;&#x53ef;&#x4ee5;&#x4e0e;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x6d4b;&#x8bd5;&#x6846;&#x67b6;&#x642d;&#x914d;&#x3002;&#x5b83;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e9b;&#x8bed;&#x6cd5;&#x7cd6;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x7528;&#x4e0d;&#x540c;&#x7684;&#x8bed;&#x8a00;&#x7f16;&#x5199;&#x6211;&#x4eec;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5",{"_index":5488,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x662f;&#x6d4b;&#x8bd5;&#x7cfb;&#x7edf;&#x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x6574;&#x4f53;&#xff0c;&#x4ee5;&#x53ca;&#x5982;&#x4f55;&#x5728;&#x751f;&#x4ea7;&#x4e2d;&#x8fd0;&#x884c;&#x7684;&#x6d4b;&#x8bd5;&#x3002",{"_index":5454,"title":{},"body":{"Testing/testing.html#TDD测试":{}}}],["x662f;&#x72ec;&#x7279;&#x7684;&#x548c;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#x503c;&#xff0c;&#x5141;&#x8bb8;&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x907f;&#x514d;&#x6ce8;&#x5165;&#x4ee4;&#x724c;id&#x51b2;&#x7a81;&#x3002",{"_index":501,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["x662f;&#x76ee;&#x6807;&#x8bed;&#x8a00;&#x7684;&#x533a;&#x57df;&#x8bbe;&#x7f6e;&#x3002",{"_index":2575,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x662f;&#x79c1;&#x6709;&#x7684;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x53ea;&#x5728",{"_index":3504,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x662f;&#x8981;&#x52a0;&#x8f7d;&#x5230;&#x6d4f;&#x89c8;&#x5668;/&#x6d4b;&#x8bd5;&#x73af;&#x5883;&#x4e2d;&#x7684;&#x6587;&#x4ef6;&#x7684;&#x5217;&#x8868;&#x3002",{"_index":5186,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x662f;&#x8de8;&#x8d8a;&#x5f02;&#x6b65;&#x4efb;&#x52a1;&#x6301;&#x7eed;&#x7684;&#x6267;&#x884c;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x5e76;&#x4e14;&#x5141;&#x8bb8",{"_index":6792,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["x662f;angular",{"_index":589,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x662f;false&#xff0c;&#x5b83;&#x4e0d;&#x4f1a;&#x751f;&#x6548;&#x3002",{"_index":817,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{}}}],["x662f;ng2",{"_index":6166,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x663e;&#x793a;&#x7279;&#x5b9a;&#x4ea7;&#x54c1;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#x7684;&#x7ec4;&#x4ef6;&#x7684;&#x8def;&#x7531;&#x9700;&#x8981;&#x8be5;&#x4ea7;&#x54c1;id&#x7684;&#x8def;&#x7531;&#x53c2;&#x6570;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x4ee5;&#x4e0b",{"_index":4720,"title":{},"body":{"Routing/routeparams.html#声明路由参数":{}}}],["x66f4;&#x591a;&#x5185;&#x5bb9;&#x8bf7;&#x53c2;&#x8003;&#x5b98;&#x65b9;&#x6587;&#x6863;&#xff1a",{"_index":5699,"title":{},"body":{"animation/index.html#动画":{}}}],["x66f4;&#x591a;&#x7ec6;&#x8282;&#x53ef;&#x4ee5;&#x5728",{"_index":3200,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x66f4;&#x591a;&#x7ec6;&#x8282;&#x53ef;&#x4ee5;&#x9605;&#x8bfb",{"_index":3029,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x66f4;&#x591a;redux&#x548c;ngrx&#x8d44;&#x6e90",{"_index":5832,"title":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{}},"body":{}}],["x66f4;&#x597d;&#x7684;&#x662f;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x57fa;&#x4e8e;&#x6211;&#x4eec;&#x611f;&#x5174;&#x8da3;&#x7684;&#x8bed;&#x8a00;&#x8fdb;&#x884c;http&#x8c03;&#x7528;&#xff0c;&#x5e76;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x52a0;&#x8f7d;&#x540e;&#x5f02;&#x6b65;&#x5f15;&#x5bfc;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":2585,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x66f4;&#x5c11;&#x6807;&#x51c6;&#x5316;/&#x66f4;&#x591a;&#x57f9;&#x8bad",{"_index":2904,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x66f4;&#x6539;&#x7ec4;&#x4ef6;&#x6216;&#x5143;&#x7d20;&#x7684;&#x884c;&#x4e3a;&#x4f46;&#x4e0d;&#x5f71;&#x54cd;&#x6a21;&#x677f;&#x7684;&#x6307;&#x4ee4",{"_index":743,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x66f4;&#x6539;&#x8c03;&#x7528;&#x4e0a;&#x4e0b;&#x6587",{"_index":1190,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x66f4;&#x65b0;&#x5176;&#x89c6;&#x56fe;&#x3002",{"_index":152,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x66f4;&#x65b0;&#x548c;&#x9891;&#x7e41;&#x7684;&#x66f4;&#x6539",{"_index":2839,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x66f4;&#x7cdf;&#x7684;&#x662f;&#xff0c;&#x5728;&#x53ef;&#x80fd;&#x5728;&#x8868;&#x5355;&#x8f93;&#x5165;&#x4e2d;&#x9047;&#x5230;&#x547d;&#x540d;&#x51b2;&#x7a81;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x60a8;&#x53ef;&#x80fd;&#x4f1a;&#x53d1;&#x73b0;&#x81ea;&#x5df1;&#x4e3a;&#x4e86;&#x8bed;&#x4e49;&#x800c;&#x4f7f;&#x7528;&#x957f;&#x800c;&#x7b28;&#x62d9;&#x7684;&#x540d;&#x79f0;&#x3002",{"_index":2013,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x66f4;&#x81ea;&#x7531;&#x7684;&#x9009;&#x62e9",{"_index":2838,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x66f4;&#x8fdb;&#x4e00;&#x6b65",{"_index":4434,"title":{"Project-setup/summary.html#更进一步":{}},"body":{}}],["x66ff;&#x4ee3;http",{"_index":4818,"title":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}},"body":{}}],["x66ff;&#x6362;&#x4e86;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#x7684;&#x811a;&#x672c;&#x52a0;&#x8f7d;&#x5668;&#xff0c;&#x5982",{"_index":3197,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x6700;&#x4f73;&#x5b9e;&#x8df5",{"_index":3082,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["x6700;&#x540e;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#x4ecb;&#x7ecd;&#x4e86;&#x4e00;&#x4e2a;&#x5047;&#x8bbe;&#x7684",{"_index":397,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x6700;&#x540e;&#xff0c;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x53ef;&#x4ee5;&#x7ed1;&#x5b9a;&#x5230;&#x6307;&#x4ee4;&#x3002;&#x5982;&#x679c;&#x8be5;&#x5c5e;&#x6027;&#x4e3a;true&#xff0c;angular",{"_index":810,"title":{},"body":{"Directives/ng_class_directive.html#绑定一个对象":{}}}],["x6700;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x548c;&#x8ba2;&#x9605;&#x7ed3;&#x679c;&#x6765;&#x6d4b;&#x8bd5",{"_index":5316,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x6700;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x7684",{"_index":3727,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6700;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x89c6;&#x56fe;&#x6a21;&#x7248;&#x548c;&#x6570;&#x636e;&#x6a21;&#x578b;&#x662f;&#x540c;&#x6b65;&#x7684;&#x3002",{"_index":153,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x6700;&#x5927;&#x7684;&#x533a;&#x522b;&#x662f;&#x5b83;&#x4eec;&#x662f;&#x5982;&#x4f55;&#x7ec4;&#x7ec7;&#x7684;&#x3002",{"_index":2842,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6700;&#x597d;&#x7684;&#x7b56;&#x7565;&#x901a;&#x5e38;&#x662f;&#x91cd;&#x6784;&#x4ee3;&#x7801;&#xff0c;&#x4f7f;&#x5176;&#x6613;&#x4e8e;&#x6d4b;&#x8bd5;&#x3002",{"_index":5367,"title":{},"body":{"Testing/refactor.html#重构难以测试的代码":{}}}],["x6700;&#x5c0f;&#x5316;&#x4f9d;&#x8d56;&#x4e8e;&#x9664;google&#x548c;&#x4ed6;&#x4eec;&#x7684;&#x5f00;&#x53d1;&#x56e2;&#x961f;&#x4e4b;&#x5916;&#x7684;&#x5176;&#x4ed6;&#x4eba;&#x3002",{"_index":2917,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6700;&#x5c0f;&#x672a;&#x77e5",{"_index":2889,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6700;&#x7ec8;&#xff0c;&#x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x5b9e;&#x9645;&#x53d1;&#x751f;&#x7684;&#x4e8b;&#x60c5;&#x53d8;&#x5f97;&#x975e;&#x5e38;&#x56f0;&#x96be;&#xff0c;&#x5e76;&#x5bfc;&#x81f4;&#x5927;&#x91cf;&#x7684;bug&#x3002",{"_index":6135,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x6700;&#x91cd;&#x8981;&#x7684;&#x662f;&#x51fd;&#x6570;&#x6bd4;&#x5982",{"_index":3953,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x6700;&#x91cd;&#x8981;&#x7684;&#x662f;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":5435,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x6709",{"_index":682,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6709;&#x4e00;&#x4e2a;&#x81ea;&#x5b9a;&#x4e49;&#x9a8c;&#x8bc1;&#x5668;&#x6765;&#x68c0;&#x67e5;&#x611f;&#x53f9;&#x53f7;&#x53ef;&#x80fd;&#x662f;&#x6709;&#x5e2e;&#x52a9;&#x7684;&#xff0c;&#x4f46;&#x5982;&#x679c;&#x4f60;&#x9700;&#x8981;&#x68c0;&#x67e5;&#x4e00;&#x4e9b;&#x5176;&#x4ed6;&#x5f62;&#x5f0f;&#x7684;&#x6807;&#x70b9;&#x7b26;&#x53f7;&#x600e;&#x4e48;&#x529e;&#xff1f",{"_index":2115,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x6709;&#x4e24;&#x79cd;&#x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x505a;&#x5230;&#x8fd9;&#x4e00;&#x70b9;&#xff1a;&#x60a8;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;jit&#xff08;&#x53ca;&#x65f6;&#xff09;&#x7f16;&#x8bd1;&#x5668;&#x6216;aot&#xff08;ahead",{"_index":2525,"title":{},"body":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{}}}],["x6709;&#x4e24;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x6a21;&#x5757;&#xff0c;&#x6839;&#x6a21;&#x5757;&#x548c;&#x529f;&#x80fd;&#x6a21;&#x5757;&#x3002",{"_index":3588,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x6709;&#x4e86;&#x8fd9;&#x4e2a;&#x65b0;&#x7684;&#x8bed;&#x6cd5;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x6839;&#x6a21;&#x5757;&#x7565;&#x6709;&#x4e0d;&#x540c;&#x3002",{"_index":3539,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6709;&#x4e86;&#x8fd9;&#x4e2a;&#x914d;&#x7f6e;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x5c06;&#x968f;&#x5904;&#x53ef;&#x7528;&#xff0c;&#x5373;&#x4f7f;&#x5728",{"_index":3518,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6709;&#x5173;&#x5982;&#x4f55;&#x4f7f;&#x7528;git&#x7684;&#x66f4;&#x591a;&#x4fe1;&#x606f;&#xff0c;&#x8f6c;&#x5230",{"_index":6245,"title":{},"body":{"tooling/source_control.html#源码控制：Git":{}}}],["x6709;&#x5173;&#x6a21;&#x677f;&#x6807;&#x8bb0;&#x7684;&#x66f4;&#x591a;&#x4fe1;&#x606f;&#xff0c;&#x8bf7;&#x8bbf;&#x95e",{"_index":1074,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x6709;&#x5173;redux&#x548c;@ngrx&#x7684;&#x66f4;&#x591a;&#x4fe1;&#x606f;&#xff0c;&#x8bf7;&#x53c2;&#x9605;&#x8fdb;&#x4e00;&#x6b65;&#x9605;&#x8bfb;&#x90e8;&#x5206;&#x3002",{"_index":6018,"title":{},"body":{"state-management/redux.html#What-is-Ngrx":{}}}],["x6709;&#x51e0;&#x4e2a;&#x6ca1;&#x6709;&#x6ce8;&#x5c04;&#x5668;&#x7684;&#x5b59;&#x5b50;&#x7ec4;&#x4ef6;&#x3002;&#x6bcf;&#x4e2a",{"_index":681,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6709;&#x5e8f;&#x96c6;&#x5408;&#x7684;&#x9879",{"_index":3434,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x6709;&#x5f88;&#x591a;&#x7531;google&#x652f;&#x6301;&#x7684;&#x6837;&#x677f;&#x6587;&#x4ef6;&#x548c;&#x53ef;&#x91cd;&#x590d;&#x4f7f;&#x7528;&#x7684;&#x7ec4;&#x4ef6",{"_index":2835,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6709;&#x5f88;&#x591a;&#x95ee;&#x9898;&#xff0c;&#x5176;&#x4e2d;&#x4e4b;&#x4e00;&#x5c31;&#x662f;&#x5b83;&#x5728;&#x6280;&#x672f;&#x4e0a;&#x4e0d;&#x662f;&#x6570;&#x7ec4;&#x3002",{"_index":1500,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["x6709;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x6d4b;&#x8bd5;&#x4f9d;&#x8d56;&#x4e8e;&#x5728;&#x7279;&#x5b9a;&#x65f6;&#x95f4;&#x53d1;&#x751f;&#x7684;&#x5f02;&#x6b65;&#x64cd;&#x4f5c;&#x7684;&#x7ec4;&#x4ef6;&#x3002",{"_index":4873,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x6709;&#x65f6;&#x51fd;&#x6570;&#x548c;&#x7c7b;&#x751a;&#x81f3;&#x6bd4;&#x9700;&#x8981;&#x7684;&#x66f4;&#x591a;&#x3002",{"_index":607,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x6709;&#x65f6;javascript&#x51fd;&#x6570;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x591a;&#x4e2a;&#x7c7b;&#x578b;&#x4ee5;&#x53ca;&#x4e0d;&#x540c;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5b83;&#x4eec;&#x53ef;&#x4ee5;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x8c03;&#x7528;&#x7b7e;&#x540d;&#x3002;&#x63a5;&#x53e3;&#x53ef;&#x4ee5;&#x7528;&#x6765;&#x6307;&#x5b9a;&#x3002",{"_index":1634,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x6709;&#x66f4;&#x591a;&#x7684",{"_index":5229,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x670d;&#x52a1;&#x4e2d;&#x901a;&#x8fc7;&#x521b;&#x5efa;&#x4e00;&#x4e2a;fork&#x5e76;&#x4f7f;&#x7528;&#x81ea;&#x5df1;&#x7684;&#x884c;&#x4e3a;&#x6269;&#x5c55;&#x5b83;&#x3002",{"_index":6673,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x670d;&#x52a1;&#x4e3a;&#x6211;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e9b;observable&#x548c;&#x65b9;&#x6cd5;&#x6765;&#x786e;&#x5b9a;angular&#x7684;&#x533a;&#x57df;&#x7684;&#x72b6;&#x6001;&#xff0c;&#x5e76;&#x5728;angular&#x7684;&#x533a;&#x57df;&#x5185;&#x5916;&#x4ee5;&#x4e0d;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x6267;&#x884c;&#x4ee3;&#x7801;&#x3002",{"_index":6674,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x670d;&#x52a1;&#x53ef;&#x4ee5;&#x5de5;&#x4f5c;&#x4e86;&#x3002",{"_index":3642,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x670d;&#x52a1;&#x548c",{"_index":5294,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x670d;&#x52a1;&#x548c;&#x61d2;&#x52a0;&#x8f7d",{"_index":3510,"title":{"Modules/feature-modules.html#服务和懒加载":{}},"body":{}}],["x670d;&#x52a1;&#x5668;&#x8def;&#x7531;&#x53ef;&#x4ee5;&#x4ee5;&#x8bb8;&#x591a;&#x4e0d;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x914d;&#x7f6e;&#x3002",{"_index":4243,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x670d;&#x52a1;&#x5728;&#x5b9e;&#x4f8b;&#x5316;&#x65f6;&#x751f;&#x6210;&#x5176;&#x5b9e;&#x4f8b;&#x552f;&#x4e00;&#x7684;&#x503c;&#x3002",{"_index":703,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x670d;&#x52a1;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a",{"_index":4732,"title":{},"body":{"Routing/routeparams.html#读取路由参数":{}}}],["x670d;&#x52a1;&#x6d4b;&#x8bd5;&#x7b56;&#x7565",{"_index":5411,"title":{"Testing/strategies.html#服务测试策略":{}},"body":{}}],["x670d;&#x52a1;&#x7684;&#x5f02;&#x6b65;&#x884c;&#x4e3a;&#x4ee5;&#x8fdb;&#x884c;&#x6d4b;&#x8bd5;&#x3002",{"_index":5297,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x670d;&#x52a1;&#x7684;&#x641c;&#x7d22;&#x65b9;&#x6cd5;&#x3002;&#x4e00;&#x65e6;&#x6211;&#x4eec;&#x7684;&#x641c;&#x7d22;&#x8fc7;&#x7a0b;&#x5b8c;&#x6210;&#xff0c;&#x6211;&#x4eec;&#x68c0;&#x67e5;&#x7ed3;&#x679c;&#x5bf9;&#x8c61;&#xff0c;&#x770b;&#x770b;&#x5b83;&#x662f;&#x5426;&#x5305;&#x542b;&#x76f8;&#x540c;&#x7684;&#x6570;&#x636e;&#xff0c;&#x6211;&#x4eec;mock&#x5230;&#x6211;&#x4eec;&#x7684;&#x540e;&#x7aef;&#x3002;&#x5982;&#x679c;&#x662f;&#xff0c;&#x90a3;&#x4e48;&#x606d;&#x559c;&#x4f60;&#xff0c;&#x4f60;&#x7684;&#x6d4b;&#x8bd5;&#x5df2;&#x7ecf;&#x901a;&#x8fc7;&#x3002",{"_index":5317,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x670d;&#x52a1;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;observable&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8ba2;&#x9605;&#x8bfb;&#x53d6;&#x67e5;&#x8be2;&#x53c2;&#x6570;&#xff1a",{"_index":4616,"title":{},"body":{"Routing/query_params.html#读取查询参数":{}}}],["x670d;&#x52a1;&#x8fde;&#x63a5;&#x5230;&#x6211;&#x4eec;&#x7684;&#x6a21;&#x62df;&#x540e;&#x7aef;&#x65f6;&#x83b7;&#x5f97;&#x7684;&#x8bf7;&#x6c42;&#x5bf9;&#x8c61;&#x6765;&#x5b8c;&#x6210;&#x3002;&#x5206;&#x6790",{"_index":5302,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x670d;&#x52a1;&#x9002;&#x5f53;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5305",{"_index":2545,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x670d;&#x52a1;&#x901a;&#x8fc7;js&#x8df3;&#x8f6c;&#xff1a",{"_index":4612,"title":{},"body":{"Routing/query_params.html#传递查询参数":{}}}],["x670d;&#x52a1;&#x975e;&#x5e38;&#x65b9;&#x4fbf;&#xff0c;&#x5c06;dispatch&#xff0c;&#x521b;&#x5efa;&#x548c;&#x526f;&#x4f5c;&#x7528;&#x903b;&#x8f91;&#x4e0e;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684",{"_index":5881,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}}}],["x670d;&#x52a1;&#xff0c;&#x7531;&#x4e8e;&#x5b83;&#x4eec;&#x6267;&#x884c;&#x5f02;&#x6b65;&#x4efb;&#x52a1;&#x7684;&#x6027;&#x8d28;&#x3002",{"_index":5006,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x670d;&#x52a1;&#xff0c;&#x7c7b;&#x4f3c;&#x7ec4;&#x4ef6;&#xff0c;&#x662f;&#x5177;&#x6709;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x9a8c;&#x8bc1;&#x7684;&#x65b9;&#x6cd5;&#x548c;&#x5c5e;&#x6027;&#x7684;&#x7c7b;&#x3002",{"_index":5371,"title":{},"body":{"Testing/services.html#测试服务":{}}}],["x671f;&#x671b",{"_index":1440,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x672c;&#x4e66;&#x5c06;&#x6db5;&#x76d6;&#x6700;&#x91cd;&#x8981;&#x7684;angular",{"_index":6883,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x672c;&#x5730;&#x5316;&#x6587;&#x4ef6;&#x7684;&#x683c;&#x5f0f",{"_index":2552,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x672c;&#x6587;&#x7684;&#x76ee;&#x7684;&#x662f;&#x8ba9;&#x60a8;&#x4e86;&#x89e3;&#x6211;&#x4eec;&#x7684;&#x601d;&#x60f3;&#x8fc7;&#x7a0b;&#xff0c;&#x5e76;&#x4e86;&#x89e3;&#x6211;&#x4eec;&#x91c7;&#x7528;angular&#x7684;&#x65c5;&#x7a0b;&#x4e2d;&#x7684;&#x4e00;&#x4e9b;&#x53d1;&#x73b0;&#x3002",{"_index":2828,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6761;&#x4ef6",{"_index":4938,"title":{"Testing/complex-actions.html#条件-Action":{}},"body":{}}],["x6765",{"_index":604,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x6765;&#x4f20;&#x9012;&#x67e5;&#x8be2;&#x53c2;&#x6570;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":4610,"title":{},"body":{"Routing/query_params.html#传递查询参数":{}}}],["x6765;&#x4f7f;&#x7528;&#x540c;&#x6b65;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x6765;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6",{"_index":4894,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x6765;&#x4f7f;&#x7528;&#x8fd9;&#x4e2a;&#x670d;&#x52a1;&#xff0c;&#x4f7f;&#x7528;&#x4e00;&#x4e2a;&#x6309;&#x94ae;&#x6765;&#x589e;&#x52a0;&#x8ba1;&#x6570;&#x5668;&#x5c5e;&#x6027;&#x3002",{"_index":3640,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x6765;&#x4fee;&#x6539;&#x7ec4;&#x4ef6;&#x6216;&#x5143;&#x7d20;&#x7684",{"_index":1037,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x6765;&#x521b;&#x5efa;&#x8def;&#x7531;&#x5bf9;&#x8c61;&#x3002",{"_index":3723,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6765;&#x5305;&#x88c5;&#x5b83;&#x5e76;&#x5b8c;&#x6210;&#x4f9d;&#x8d56;&#x5e76;&#x5728;&#x5f02;&#x6b65;&#x8fc7;&#x7a0b;&#x4e2d;&#x6267;&#x884c;&#x6d4b;&#x8bd5;&#x3002",{"_index":4848,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["x6765;&#x542f;&#x52a8;&#x6211;&#x4eec;&#x5728",{"_index":5077,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6765;&#x542f;&#x52a8;karma&#x6765;&#x8bbe;&#x7f6e;&#x6d4b;&#x8bd5;&#x73af;&#x5883;&#xff0c;&#x8fd0;&#x884c;&#x6bcf;&#x4e2a;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x5e76;&#x6267;&#x884c;&#x6211;&#x4eec;&#x5728",{"_index":4974,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x6765;&#x58f0;&#x660e;&#x4e00;&#x4e2a;&#x7ba1;&#x9053;&#x662f;&#x6709;&#x72b6;&#x6001;&#x7684;&#x3002",{"_index":4162,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["x6765;&#x5b9e;&#x73b0;&#x76f8;&#x540c;&#x7684;&#x6548;&#x679c;&#x3002",{"_index":2584,"title":{},"body":{"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{}}}],["x6765;&#x5bf9;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x7684;&#x5e38;&#x89c1;&#x65b9;&#x6cd5;&#x548c;&#x5143;&#x7d20;&#x8fdb;&#x884c;&#x62e6;&#x622a;&#xff0c;&#x4f8b;&#x5982",{"_index":6677,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x6765;&#x63a7;&#x5236;&#x3002",{"_index":403,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x6765;&#x63d0;&#x4f9b;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x6240;&#x9700;&#x7684;&#x4efb;&#x4f55;&#x4f9d;&#x8d56;&#x9879;&#x3002",{"_index":5059,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6765;&#x65ad;&#x8a00;&#x6211;&#x4eec;&#x4ece;&#x6d4b;&#x8bd5;&#x4e2d;&#x5f97;&#x5230;&#x4ec0;&#x4e48;&#x6837;&#x7684;&#x7ed3;&#x679c;&#x3002",{"_index":5400,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x6765;&#x65ad;&#x8a00;&#x6211;&#x4eec;&#x4ece;&#x8be5;&#x573a;&#x666f;&#x9884;&#x671f;&#x7684;&#x7ed3;&#x679c;&#x6761;&#x4ef6;&#x3002",{"_index":5405,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x6765;&#x76d1;&#x89c6;&#x5bf9;dom&#x53d1;&#x751f;&#x7684;&#x4efb;&#x4f55;&#x66f4;&#x6539;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":5081,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6765;&#x786e;&#x5b9a;&#x662f;&#x5426;&#x9700;&#x8981;&#x663e;&#x793a;&#x9519;&#x8bef;&#xff0c;&#x800c;&#x5b57;&#x6bb5;&#x662f;&#x5fc5;&#x9700;&#x7684;&#xff0c;&#x6ca1;&#x6709;&#x7406;&#x7531;&#x544a;&#x8bc9;&#x7528;&#x6237;&#x5982;&#x679c;&#x5b57;&#x6bb5;&#x5c1a;&#x672a;&#x88ab;&#x8bbf;&#x95ee;&#xff0c;&#x8be5;&#x503c;&#x662f;&#x9519;&#x8bef;&#x7684;&#x3002",{"_index":2158,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["x6765;&#x81ea;&#x4e3b;html&#x7684;&#x672c;&#x5730;&#x6837;&#x5f0f;&#x4e0d;&#x4f1a;&#x4f20;&#x64ad;&#x5230;&#x7ec4;&#x4ef6;&#x3002",{"_index":5676,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x6765;&#x81ea;&#x670d;&#x52a1;&#x5668;&#x7684;&#x6570;&#x636e;&#x4ee5;&#x53ca;&#x662f;&#x5426;&#x6302;&#x8d77;&#x6216;&#x5bfc;&#x81f4;&#x9519;&#x8bef",{"_index":6128,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x6765;&#x81ea;&#x7ec4;&#x4ef6;&#x7684;&#x6837;&#x5f0f;&#x4f20;&#x64ad;&#x56de;&#x4e3b;html&#xff0c;&#x56e0;&#x6b64;&#x5bf9;&#x9875;&#x9762;&#x4e0a;&#x7684;&#x6240;&#x6709;&#x7ec4;&#x4ef6;&#x90fd;&#x53ef;&#x89c1;&#x3002",{"_index":5677,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x6765;&#x83b7;&#x53d6;&#x6570;&#x636e;&#x3002",{"_index":5061,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6765;&#x83b7;&#x53d6;&#x968f;&#x673a;&#x62a5;&#x4ef7;&#xff0c;&#x7136;&#x540e;&#x5b83;&#x5c06;&#x663e;&#x793a;&#x3002",{"_index":5041,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6765;&#x89e3;&#x51b3;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x7684",{"_index":4851,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["x6784;&#x5efa;&#x4e86;&#x591a;&#x4e2a;&#x5e94;&#x7528;&#x3002",{"_index":2867,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6784;&#x5efa;&#x7684;&#x3002;&#x4f46;&#x8fd9;&#x4e2a;ie&#x548c;safari&#x90fd;&#x4e0d;&#x652f;&#x6301;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x8981;&#x5411;&#x5f15;&#x5165;&#x517c;&#x5bb9;&#x6a21;&#x5757;&#x3002",{"_index":5695,"title":{},"body":{"animation/index.html#动画":{}}}],["x679a;&#x4e3e;&#x7c7b",{"_index":1841,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x67e5;&#x770b;&#x4ee5;&#x5168;&#x5c4f;&#x6a21;&#x5f0f;&#x8fd0;&#x884c;&#x7684;&#x793a;&#x4f8b;&#xff0c;&#x4ee5;&#x67e5;&#x770b;url&#x53d8;&#x5316;&#x3002",{"_index":4547,"title":{},"body":{"Routing/child_routes.html#定义子路由":{},"Routing/child_routes.html#访问父路由的参数":{},"Routing/child_routes.html#链接":{},"Routing/routeparams.html#读取路由参数":{}}}],["x67e5;&#x770b;&#x5b98;&#x65b9;&#x6587;&#x6863",{"_index":4704,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["x67e5;&#x770b;&#x793a;&#x4f8b",{"_index":3608,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["x67e5;&#x8be2;&#x53c2;&#x6570;&#x5141;&#x8bb8;&#x60a8;&#x5c06;&#x53ef;&#x9009;&#x53c2;&#x6570;&#x4f20;&#x9012;&#x5230;&#x8def;&#x7531;&#xff0c;&#x4f8b;&#x5982;&#x5206;&#x9875;&#x4fe1;&#x606f;&#x3002",{"_index":4603,"title":{},"body":{"Routing/query_params.html#传递可选参数":{}}}],["x67e5;&#x8be2;&#x53c2;&#x6570;&#x548c;&#x8def;&#x7531;&#x53c2;&#x6570;&#x4e4b;&#x95f4;&#x7684;&#x5173;&#x952e;&#x533a;&#x522b;&#x5728;&#x4e8",{"_index":4605,"title":{},"body":{"Routing/query_params.html#传递可选参数":{}}}],["x67e5;&#x8be2;zonea&#x8fd4;&#x56de;&#x9884;&#x671f;&#x503c",{"_index":6280,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x67e5;&#x8be2;zoneb&#x7684;&apos;b&apos;&#x8fd4;&#x56de;zonea&#x7684;&apos;b&apos;&#xff0c;&#x56e0;&#x4e3a;zoneb&#x6ca1;&#x6709;&apos;b&apos;&#x7684;&#x503c;&#x3002",{"_index":6282,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x67e5;&#x8be2;zoneb&#x8fd4;&#x56de;zoneb&#x5b9a;&#x4e49;&apos;a&apos;&#x4e3a;2&#x7684;&#x9884;&#x671f;&#x503c;&#x3002",{"_index":6281,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x6807;&#x51c6;&#x5316",{"_index":2908,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6807;&#x5fd7;&#x7f16;&#x8bd1;&#x3002",{"_index":1722,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x6807;&#x7b7e",{"_index":1960,"title":{"Routing/config.html#Base-标签":{}},"body":{"Form/getting-started.html#入门":{}}}],["x6807;&#x7b7e;&#x3002",{"_index":1083,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x6807;&#x7b7e;&#x4e2d;&#x63d2;&#x5165;&#x5e26;&#x6709;&#x6346;&#x7ed1;css&#x7684;&#x6837;&#x5f0f;&#x6807;&#x7b7e;&#x3002",{"_index":4334,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x6807;&#x7b7e;&#x7684;&#x5bf9;&#x8c61;&#x3002",{"_index":3242,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x6807;&#x8bb0;&#x3002",{"_index":3300,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["x6807;&#x8bb0;&#x3002;&#x5728;&#x5b9e;&#x9645;&#x5e94;&#x7528;&#x4e2d;&#xff0c;&#x5fc5;&#x987b;&#x5982;&#x4e0a;&#x8bbe;&#x7f6e;&#x3002",{"_index":4575,"title":{},"body":{"Routing/config.html#Base-标签":{}}}],["x6807;&#x8bb0;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x7684;&#x5f15;&#x7528;&#x4e3a;const&#x4e0d;&#x4f1a;&#x8ba9;&#x5bf9;&#x8c61;&#x91cc;&#x7684;&#x5c5e;&#x6027;&#x4e5f;&#x4e3a;const&#x3002",{"_index":1245,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["x6807;&#x8bb0;&#x4e2d;&#x8bbe;&#x7f6e;&#xff1a",{"_index":4573,"title":{},"body":{"Routing/config.html#Base-标签":{}}}],["x6807;&#x8bb0;&#x5185;&#x7684;&#x6587;&#x672c;&#x88ab;&#x8ba4;&#x4e3a;&#x662f;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x3002",{"_index":1519,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x6807;&#x8bb0;&#x5c06;&#x88ab;&#x89c6;&#x4e3a;host&#x5143;&#x7d20;&#x3002",{"_index":3295,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["x6807;&#x8bb0;&#x5fc5;&#x987b;&#x5728;index.html&#x7684",{"_index":4572,"title":{},"body":{"Routing/config.html#Base-标签":{}}}],["x6807;&#x8bb0;&#x6307;&#x5b9a;&#x8f93;&#x51fa;&#x6587;&#x4ef6;&#x5939;&#x3002;&#x6b64;&#x6587;&#x4ef6;&#x5939;&#x5fc5;&#x987b;&#x5b58;&#x5728;&#x624d;&#x80fd;&#x6b63;&#x5e38;&#x5de5;&#x4f5c;&#x3002",{"_index":2633,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x6807;&#x8bb0;&#x8fdb;&#x884c;&#x66f4;&#x6539;&#x4ee5;&#x6807;&#x8bb0;&#x8981;&#x7ffb;&#x8bd1;&#x7684;&#x6587;&#x672c;&#x7684;&#x66f4;&#x6539;&#x793a;&#x4f8b;&#xff0c;&#x5e76;&#x63d0;&#x4f9b;&#x8bf4;&#x660e;&#x548c;&#x4e0a;&#x4e0b;&#x6587;&#x542b;&#x4e49;&#xff1a",{"_index":2596,"title":{},"body":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["x6807;&#x8bc6;&#x7684;&#x914d;&#x7f6e;&#x8bbe;&#x7f6e;&#xff0c;&#x7531;di&#x7cfb;&#x7edf;&#x63d0;&#x4f9b;&#x3002",{"_index":478,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x6807;&#x8bc6;&#x7b26;&#x3002",{"_index":600,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x6839;&#x636e;&#x5177;&#x4f53;&#x9879;&#x76ee;&#xff0c;&#x56e2;&#x961f;&#x4ee5;&#x53ca;&#x4ed6;&#x4eec;&#x7684;&#x7ecf;&#x9a8c;/&#x559c;&#x597d;&#xff0c;&#x5236;&#x5b9a;&#x66f4;&#x52a0;&#x5207;&#x5408;&#x5b9e;&#x9645;&#x7684;&#x51b3;&#x7b56;&#x3002",{"_index":2827,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6839;&#x6a21;&#x5757",{"_index":3469,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6839;&#x6ce8;&#x5165;&#x5668;&#x4e0b;&#x9762;&#x662f;&#x6839",{"_index":673,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6846;&#x67b6",{"_index":2841,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{},"Testing/karma-config.html#概述":{}}}],["x6846;&#x67b6;&#xff1a;&#x6211;&#x5c06;&#x4f7f;&#x7528;angular",{"_index":2848,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6982;&#x8ff0",{"_index":5179,"title":{"Testing/karma-config.html#概述":{},"zone/zone_primer.html#概述":{}},"body":{}}],["x6a21;&#x5757",{"_index":1314,"title":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{},"Modules/modules.html#模块":{}},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["x6a21;&#x5757;&#x3002",{"_index":4967,"title":{},"body":{"Testing/components.html#测试组件":{},"Testing/test-components.html#测试组件":{},"zone/zone.html#Debugging":{}}}],["x6a21;&#x5757;&#x5185;&#x7684;&#x6240;&#x6709;&#x4ee3;&#x7801;&#x548c;&#x6570;&#x636e;&#x90fd;&#x6709;&#x6587;&#x4ef6;&#x4f5c;&#x7528;&#x57df;&#xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x5b83;&#x4eec;&#x4e0d;&#x80fd;&#x88ab;&#x6a21;&#x5757;&#x5916;&#x90e8;&#x7684;&#x4ee3;&#x7801;&#x8bbf;&#x95ee;&#x3002",{"_index":1319,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["x6a21;&#x5757;&#x52a0;&#x8f7d;&#xff0c;&#x6253;&#x5305;&#x548c;&#x6784;&#x5efa;&#x4efb;&#x52a1;&#xff1a;webpack",{"_index":6232,"title":{"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}},"body":{}}],["x6a21;&#x5757;&#x548c;&#x6a21;&#x5757;&#x52a0;&#x8f7d;&#x5668",{"_index":1296,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x6a21;&#x5757;&#x63d0;&#x4f9b;&#x4e86;&#x5927;&#x591a;&#x6570;redux&#x5b9e;&#x73b0;&#x3002;&#x5176;&#x4ed6;&#x6a21;&#x5757;&#x53ef;&#x7528;&#x4e8e;&#x66f4;&#x597d;&#x7684;&#x96c6;&#x6210;&#x548c;&#x5f00;&#x53d1;&#x3002",{"_index":5840,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["x6a21;&#x5757;&#x7684;&#x57fa;&#x672c;&#x4f7f;&#x7528",{"_index":3559,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x6a21;&#x5757;&#x7cfb;&#x7edf",{"_index":1323,"title":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["x6a21;&#x5757;&#x9884;&#x52a0;&#x8f7d;&#x62e6;&#x622a",{"_index":4661,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x6a21;&#x5f0f;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x64cd;&#x4f5c;&#x53ea;&#x662f;angular&#x670d;&#x52a1;&#x4e0a;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":4959,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x6a21;&#x62df;1&#x79d2;&#x7684;&#x5ef6;&#x8fdf;&#x3002",{"_index":5319,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x6a21;&#x677f;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x4ee5;&#x5192;&#x53f7;&#x5206;&#x9694;&#x7684;&#x53c2;&#x6570;&#x6309;&#x76f8;&#x540c;&#x7684;&#x987a;&#x5e8f;&#x6620;&#x5c04;&#x5230;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;&#x53c2;&#x6570;&#x3002",{"_index":4107,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x6a21;&#x677f;&#x5b57;&#x7b26;&#x4e32",{"_index":1291,"title":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x6a21;&#x677f;&#x7ed1;&#x5b9a;&#x7684;&#x5c5e;&#x6027;&#x65f6;&#xff0c;&#x5b83;&#x4f1a;&#x53d1;&#x73b0;&#xff1a",{"_index":149,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x6a21;&#x677f;&#x9a71;&#x52a8",{"_index":1943,"title":{},"body":{"Form/form.html#Forms":{}}}],["x6a21;&#x7248;&#x9a71;&#x52a8;&#x8868;&#x5355",{"_index":2173,"title":{"Form/template-driven_forms.html#模版驱动表单":{}},"body":{}}],["x6b63;&#x5982;&#x4f60;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x5b83;&#x53d6;&#x51b3;&#x4e8e;http&#x6a21;&#x5757;&#x5411;wikipedia.org&#x53d1;&#x51fa;&#x8bf7;&#x6c42;&#x3002",{"_index":5013,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x6b63;&#x5982;&#x4f60;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x6709;&#x4e09;&#x79cd;&#x60c5;&#x51b5;&#x8981;&#x6d4b;&#x8bd5;&#xff1a;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#xff0c;&#x589e;&#x91cf;&#x548c;&#x51cf;&#x91cf;&#x3002;&#x6211;&#x4eec;&#x60f3;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684",{"_index":5351,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x6b63;&#x5982;&#x4f60;&#x5c06;&#x5728;&#x6d4b;&#x8bd5;&#x7ec4;&#x4ef6;&#x4e2d;&#x770b;&#x5230;&#x7684;&#xff0c;&#x771f;&#x5b9e;&#x7684;&#x7ec4;&#x4ef6;&#x6d4b;&#x8bd5;&#x901a;&#x5e38;&#x4f9d;&#x8d56;&#x4e8e;angular2&#x6d4b;&#x8bd5;&#x5b9e;&#x7528;&#x7a0b;&#x5e8f",{"_index":5433,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x6b64;&#x503c;&#x5c06;&#x7528;&#x4e8e;&#x5728;&#x6a21;&#x677f;&#x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#x8c03;&#x7528;&#x6b64;&#x7ba1;&#x9053;&#x3002",{"_index":4103,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x6b64;&#x5916;&#xff0c;&#x5b83;&#x5c06;&#x4e3a;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x7ec4;&#x4ef6;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6",{"_index":5049,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6b64;&#x5916;&#xff0c;aot&#x7f16;&#x8bd1;&#x5668;&#x8fd8;&#x5185;&#x8054;html&#x6a21;&#x677f;&#x548c;css&#x6587;&#x4ef6;&#xff0c;&#x5e76;&#x5e2e;&#x52a9;&#x51cf;&#x5c11;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x53d1;&#x9001;&#x7684;&#x5f02;&#x6b65;&#x8bf7;&#x6c42;&#x6570;&#x91cf;&#x3002;&#xff08;&#x6ce8;&#x610f;&#xff1a;&#x8fd9;&#x5bfc;&#x81f4;&#x4e86;&#x4e00;&#x4e2a;&#x914d;&#x7f6e;&#x9519;&#x8bef;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5728;&#x540e;&#x9762;&#x7684;&#x90e8;&#x5206;&#x63d0;&#x5230;&#xff09",{"_index":3144,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x6b64;&#x6570;&#x7ec4;&#x4e2d;&#x6307;&#x5b9a;&#x7684;&#x4efb;&#x52a1;&#x88ab;&#x94fe;&#x63a5;&#x3002",{"_index":4305,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x6b64;&#x65b9;&#x6cd5;&#x4ecd;&#x7136;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x68c0;&#x67e5;&#x670d;&#x52a1;&#x662f;&#x5426;&#x5df2;&#x8bf7;&#x6c42;&#x6b63;&#x786e;&#x7684;url&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x9884;&#x671f;&#x7684;&#x6570;&#x636e;&#x3002",{"_index":4823,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["x6b64;&#x65b9;&#x6cd5;&#x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x51b7",{"_index":3879,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x6b64;&#x65b9;&#x6cd5;&#x63a5;&#x53d7;&#x7ba1;&#x9053;&#x7684;&#x503c;&#x548c;&#x4efb;&#x4f55;&#x7c7b;&#x578b;&#x7684;&#x53ef;&#x53d8;&#x6570;&#x91cf;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x53d8;&#x6362;&#x7684;&#xff08;&#x201c;&#x7ba1;&#x9053;&#x201d;&#xff09;&#x503c;&#x3002",{"_index":4106,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x6b64;&#x65f6;&#xff0c;&#x6a21;&#x677f;&#x6b63;&#x5728;&#x5c1d;&#x8bd5;&#x8c03;&#x7528;&#x6211;&#x4eec;&#x7684;&#x4e24;&#x4e2a;actioncreatorservices&#xff0c",{"_index":6109,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x6b64;&#x6a21;&#x5757;&#x5e94;&#x8db3;&#x591f;&#x7075;&#x6d3b;&#xff0c;&#x4ee5;&#x4fbf;&#x5176;&#x53ef;&#x7531;&#x4e0d;&#x540c;&#x6a21;&#x5757;&#x5728;&#x4e0d;&#x540c;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x4f7f;&#x7528;&#x3002",{"_index":479,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x6b64;&#x7ec4;&#x4ef6;&#x4e0d;&#x4f1a;&#x4e0e;&#x6839;&#x6ce8;&#x5165;&#x5668;&#x7684",{"_index":711,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6b64;&#x7ec4;&#x4ef6;&#x4f9d;&#x8d56;&#x4e8",{"_index":5040,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6b64;&#x7ec4;&#x4ef6;&#x4f9d;&#x9760",{"_index":3769,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x6b64;&#x8def;&#x7531;&#x5668;&#x6a21;&#x5757;&#x5fc5;&#x987b;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6a21;&#x5757;&#x7684;&#x5bfc;&#x5165;&#x5217;&#x8868;&#x4e2d;&#x6307;&#x5b9a;&#x3002",{"_index":4594,"title":{},"body":{"Routing/config.html#RouterModule":{}}}],["x6b64;&#x9875;&#x9762;&#x8fd8;&#x6709;&#x8868;&#x5355;&#xff0c;&#x6211;&#x4eec;&#x5e0c;&#x671b;&#x786e;&#x4fdd;&#x7528;&#x6237;&#x5728;&#x79bb;&#x5f00;&#x5e10;&#x6237;&#x9875;&#x9762;&#x4e4b;&#x524d;&#x63d0;&#x4ea4;&#x4e86;&#x672a;&#x4fdd;&#x5b58;&#x7684;&#x66f4;&#x6539;&#x3002",{"_index":4666,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x6bcf;&#x4e2a;&#x4efb;&#x52a1;&#x90fd;&#x6709;&#x4e00;&#x4e9b;&#x914d;&#x7f6e;&#x9009;&#x9879;&#xff1a",{"_index":4312,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x6bcf;&#x4e2a;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x90fd;&#x653e;&#x5728;&#x81ea;&#x5df1;&#x5355;&#x72ec;&#x7684;&#x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":4987,"title":{},"body":{"Testing/filename-conventions.html#文件名约定":{}}}],["x6bcf;&#x4e2a;&#x670d;&#x52a1;&#x4ece;&#x6839;&#x6a21;&#x5757;&#x83b7;&#x53d6;&#x6b63;&#x786e;&#x7684;&#x914d;&#x7f6e;&#x5bf9;&#x8c61;&#xff0c;angular&#x73b0;&#x5728;&#x80fd;&#x591f;&#x533a;&#x5206;&#x4f7f;&#x7528;&#x76f8;&#x540c;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x4e24;&#x4e2a;&#x4ee4;&#x724c;&#x3002",{"_index":505,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["x6bcf;&#x4e2a;&#x7ec4;&#x4ef6;&#x5177;&#x6709;&#x4e00;&#x4e2a;&#x4e3b;&#x8def;&#x7531;&#x548c;&#x96f6;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x8f85;&#x52a9;&#x51fa;&#x53e3;&#x3002",{"_index":4467,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x6bcf;&#x4e2a;&#x81ea;&#x5b9a;&#x4e49;&#x7ba1;&#x9053;&#x5b9e;&#x73b0;&#x5fc5;&#x987b;&#xff1a",{"_index":4099,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x6bcf;&#x4e2a;&#x8def;&#x7531;&#x53ef;&#x4ee5;&#x5177;&#x6709;&#x5728;&#x8def;&#x7531;&#x4e2d;&#x5b9a;&#x4e49;&#x7684;&#x7ec4;&#x4ef6;&#x6216;&#x91cd;&#x5b9a;&#x5411;&#x5c5e;&#x6027;&#xff08;&#x5728;&#x672c;&#x7ae0;&#x540e;&#x9762;&#x8ba8;&#x8bba;&#xff09",{"_index":4584,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x6bcf;&#x4e2a;&#x8def;&#x7531;&#x53ef;&#x4ee5;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x5c5e;&#x6027",{"_index":4579,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x6bcf;&#x4e2a;&#x8f85;&#x52a9;&#x8def;&#x7531;&#x662f;&#x72ec;&#x7acb;&#x7684;&#x8def;&#x7531;&#xff0c;&#x53ef;&#x4ee5;&#x62e5;&#x6709;&#xff1a",{"_index":4482,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x6bcf;&#x4e2a;angular&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x9700;&#x8981;&#x4e00;&#x4e2a;&#x7f16;&#x8bd1;&#x8fc7;&#x7a0b;&#x624d;&#x80fd;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x8fd0;&#x884c;&#xff1a;angular&#x63d0;&#x4f9b;&#x7684;&#x4e30;&#x5bcc;&#x7684;&#x7ec4;&#x4ef6;&#x548c;&#x6a21;&#x677f;&#x4e0d;&#x80fd;&#x88ab;&#x6d4f;&#x89c8;&#x5668;&#x76f4;&#x63a5;&#x7406;&#x89e3;&#x3002",{"_index":3126,"title":{},"body":{"Advanced-angular/aot.html#Angular-2-的-AoT":{}}}],["x6bcf;&#x6b21;&#x6211;&#x4eec;&#x5355;&#x51fb;&#x6309;&#x94ae;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x770b;&#x5230;&#x7ec4;&#x4ef6;&#x4e2d;&#x7684;&#x9879;&#x76ee;&#x88ab;&#x9500;&#x6bc1;&#x548c;&#x91cd;&#x65b0;&#x521b;&#x5efa;&#x3002",{"_index":1024,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x6bcf;&#x6b21;&#x8fd0;&#x884c;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x540e",{"_index":5652,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x6bcf;&#x79cd;&#x98ce;&#x683c;&#x90fd;&#x6709;&#x81ea;&#x5df1;&#x72ec;&#x7279;&#x7684;&#x8bed;&#x6cd5",{"_index":5518,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["x6bd5;&#x7adf;&#xff0c;angular",{"_index":5532,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x6ca1;&#x6709",{"_index":688,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6ca1;&#x6709;&#x4ec0;&#x4e48;&#x7279;&#x522b;&#x7684;&#x3002",{"_index":3714,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6ca1;&#x6709;&#x4efb;&#x4f55;&#x6ce8;&#x5165;&#x7684;&#x4f9d;&#x8d56;&#x3002",{"_index":5033,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6ca1;&#x6709;&#x5173;&#x7cfb",{"_index":2022,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x6ca1;&#x6709;&#x53c2;&#x6570;&#xff0c;&#x56e0;&#x6b64;ng2",{"_index":6171,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x6ca1;&#x6709;&#x6539;&#x53d8;&#xff0c;&#x5e76;&#x4e14;&#x5c06;&#x8df3;&#x8fc7;&#x5bf9;&#x8be5;&#x7ec4;&#x4ef6;&#x7684;&#x68c0;&#x67e5;&#x3002",{"_index":140,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x6ca1;&#x6709;&#x663e;&#x5f0f;&#x8986;&#x76d6;&#x4ee3;&#x7801;&#x6240;&#x4f9d;&#x8d56;&#x7684;&#x503c;&#x3002;&#xff09",{"_index":6294,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x6ca1;&#x6709;&#x6700;&#x597d;&#xff0c;&#x53ea;&#x6709;&#x6700;&#x5408;&#x9002",{"_index":2652,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x6ca1;&#x6709;&#x7528;&#x6237;&#x8f93;&#x5165;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x53ea;&#x662f;&#x4e00;&#x4e2a;&#x9875;&#x9762;&#x3002",{"_index":1937,"title":{},"body":{"Form/form.html#Forms":{}}}],["x6ca1;&#x6709;&#x88ab;&#x4e0b;&#x8f7d;&#xff0c;&#x53ea;&#x6709;&#x5f53;&#x6211;&#x4eec;&#x70b9;&#x51fb;&#x94fe;&#x63a5;&#x201c;lazy&#x201d;&#x6240;&#x9700;&#x7684;&#x4ee3;&#x7801;&#x5c06;&#x88ab;&#x4e0b;&#x8f7d;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x770b;&#x5230;&#x6d88;&#x606f;&#x201c;lazi",{"_index":3735,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6ca1;&#x6709;&#x8bbe;&#x7f6",{"_index":1839,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x6cc4;&#x6f0f;&#x5230;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x3002;&#xff09",{"_index":6550,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x6cdb;&#x578b",{"_index":1599,"title":{"ES6&TypeScript/typescript/generics.html#泛型":{}},"body":{}}],["x6cdb;&#x578b;&#xff08;generics&#xff09;&#x662f;&#x6307;&#x5728;&#x5b9a;&#x4e49;&#x51fd;&#x6570;&#x3001;&#x63a5;&#x53e3;&#x6216;&#x7c7b;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4e0d;&#x9884;&#x5148;&#x6307;&#x5b9a;&#x5177;&#x4f53;&#x7684;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x5728;&#x4f7f;&#x7528;&#x7684;&#x65f6;&#x5019;&#x518d;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x7684;&#x4e00;&#x79cd;&#x7279;&#x6027;&#x3002",{"_index":1600,"title":{},"body":{"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["x6ce8;&#x5165",{"_index":5067,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x6ce8;&#x5165;&#x4e00;&#x4e2a;&#x4e0d;&#x540c;&#x7684;&#x5b9e;&#x4f53;&#x3002",{"_index":470,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x6ce8;&#x5165;&#x4f9d;&#x8d56;&#x5173;&#x7cfb",{"_index":5413,"title":{"Testing/strategies.html#注入依赖关系":{}},"body":{}}],["x6ce8;&#x5165;&#x4f9d;&#x8d56;&#x548c;dom&#x4fee;&#x6539",{"_index":5031,"title":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}},"body":{}}],["x6ce8;&#x5165;&#x5230;http&#x4e2d;&#xff0c;&#x56e0;&#x6b64;&#x5bf9;&#x670d;&#x52a1;&#x7684;&#x4efb;&#x4f55;&#x8c03;&#x7528;&#xff08;&#x4f8b;&#x5982",{"_index":5289,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x6ce8;&#x5165;&#x5668;&#x6811;&#x4e0d;&#x4f1a;&#x4e3a;&#x6bcf;&#x4e2a;&#x7ec4;&#x4ef6;&#x521b;&#x5efa;&#x65b0;&#x7684;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x4f46;&#x4f1a;&#x4e3a;&#x6bcf;&#x4e2a;&#x5728;&#x5176;&#x88c5;&#x9970;&#x5668;&#x4e2d;&#x5177;&#x6709",{"_index":686,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6ce8;&#x5165;&#x5668;&#x88ab;&#x7ec4;&#x7ec7;&#x5728;&#x4e0e;angular",{"_index":667,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6ce8;&#x5165;&#x6811",{"_index":660,"title":{"Di/the_injector_tree.html#注入树":{}},"body":{}}],["x6ce8;&#x518c;&#x5230;&#x6839;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":672,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x6ce8;&#x5c04;&#x5668;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x591a;&#x4e2a;&#x7c7b;&#x3002",{"_index":588,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x6ce8;&#x610f",{"_index":1503,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x6ce8;&#x610f;&#x6bcf;&#x4e2a;&#x6a21;&#x5757;&#x6587;&#x4ef6;&#x5939;&#x4e0b;&#x7684;&#x6a21;&#x5757;&#x6587;&#x4ef6",{"_index":3475,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x6ce8;&#x610f;&#xff0c",{"_index":4728,"title":{},"body":{"Routing/routeparams.html#链接到带参数的路由":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5373;&#x4f7f;&#x6ca1;&#x6709;&#x65b9;&#x62ec;&#x53f7;&#xff0c;&#x7ed1;&#x5b9a;&#x4ecd;&#x7136;&#x662f;&#x8868;&#x8fbe;&#x5f0f;&#x7ed1;&#x5b9a;&#x3002",{"_index":1078,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5728;&#x8c03;&#x7528",{"_index":5624,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x65b9;&#x6cd5;&#x8c03;&#x7528",{"_index":3722,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x53ea;&#x662f;&#x6d4b;&#x8bd5;redux&#x72b6;&#x6001;&#x7684;&#x4e00;&#x90e8;&#x5206;&#xff0c;&#x51cf;&#x901f;&#x5668;&#x8d1f;&#x8d23",{"_index":5359,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x5bf9;&#x5b57;&#x6bb5;&#x548c;&#x8868;&#x5355;&#x672c;&#x8eab;&#x6dfb;&#x52a0;&#x4e86;&#x76f8;&#x5f53;&#x7a33;&#x5065;&#x7684;&#x9a8c;&#x8bc1;&#xff0c;&#x53ea;&#x4f7f;&#x7528;&#x5185;&#x7f6e;&#x9a8c;&#x8bc1;&#x5668;&#x548c;&#x4e00;&#x4e9b;&#x6a21;&#x677f;&#x903b;&#x8f91;&#x3002",{"_index":2156,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x5df2;&#x5c06;&#x7ec4;&#x4ef6",{"_index":3777,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6ca1;&#x6709;&#x5185;&#x5bb9;&#x5728;&#x6e32;&#x67d3;&#x3002",{"_index":3249,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x6ce8;&#x610f;&#xff1a",{"_index":4722,"title":{},"body":{"Routing/routeparams.html#声明路由参数":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x6ce8;&#x610f;&#xff1a;&#x5bf9;&#x4e8e;&#x4e0d;&#x719f;&#x6089;&#x6a21;&#x677f;&#x6807;&#x8bb0;&#x7684;&#x7528;&#x6237;&#xff0c;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x5177;&#x6709;&#x51e0;&#x4e2a;&#x7279;&#x6b8a;&#x5c5e;&#x6027;&#x7684;html&#x5143;&#x7d20;&#x3002",{"_index":1072,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x6ce8;&#x610f;stackshare&#x53d6;&#x7684;&#x662f;stacks&#x6570;&#x91cf;&#xff0c;&#x4f46;&#x662f;&#x7531;&#x4e8e;&#x5176;&#x5e76;&#x4e0d;&#x533a;&#x5206;angular&#x7248;&#x672c;&#xff0c;&#x6240;&#x4ee5;&#x7528;&#x76f8;&#x5f53;&#x4e00;&#x90e8;&#x5206;&#x5c5e;&#x4e8e;1.x&#x7248;&#x672c;&#x3002",{"_index":3018,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x6ce8;&#xff1a;&#x672c;&#x6587;&#x4e00;&#x4e9b;&#x6570;&#x636e;&#x6536;&#x96c6;&#x65f6;&#x95f4;&#x4e3a;16",{"_index":2655,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x6d3e;&#x751f",{"_index":1365,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x6d41;&#x3002",{"_index":3966,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x6d41;&#x5141;&#x8bb8;&#x4ee5;&#x67d0;&#x79cd;&#x5f62;&#x5f0f;&#x8fdb;&#x884c;&#x901a;&#x4fe1;&#x3002",{"_index":6297,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x6d41;&#x884c;&#x7684;&#x9009;&#x62e9;&#x6709;&#xff1a",{"_index":1330,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["x6d41;&#x901a;&#x8fc7;&#x5f02;&#x6b65;&#x64cd;&#x4f5c;&#xff0c;&#x6240;&#x4ee5;&#x76f8;&#x5e94;&#x7684;&#x5c5e;&#x6027;&#x4e0",{"_index":6296,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x6d4b;&#x8bd5",{"_index":5052,"title":{"Testing/reducers.html#测试-Reducers":{},"Testing/redux.html#测试-Redux":{}},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6d4b;&#x8bd5;&#x3002",{"_index":2112,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x6d4b;&#x8bd5;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":5075,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6d4b;&#x8bd5;&#x590d;&#x6742;&#x7684",{"_index":4935,"title":{"Testing/complex-actions.html#测试复杂的-Actions":{}},"body":{}}],["x6d4b;&#x8bd5;&#x5de5;&#x5177;&#x94f",{"_index":5468,"title":{"Testing/toolchain.html#测试工具链":{}},"body":{}}],["x6d4b;&#x8bd5;&#x5f02;&#x6b65;&#x64cd;&#x4f5c",{"_index":4872,"title":{"Testing/async.html#测试异步操作":{}},"body":{}}],["x6d4b;&#x8bd5;&#x670d;&#x52a1",{"_index":5369,"title":{"Testing/services.html#测试服务":{}},"body":{}}],["x6d4b;&#x8bd5;&#x7b80;&#x5355;&#x7684",{"_index":5384,"title":{"Testing/simple-actions.html#测试简单的-Action":{}},"body":{}}],["x6d4b;&#x8bd5;&#x7ec4;&#x4ef6",{"_index":4964,"title":{"Testing/components.html#测试组件":{},"Testing/test-components.html#测试组件":{}},"body":{}}],["x6d4b;&#x8bd5;&#x8bbe;&#x7f6",{"_index":5376,"title":{"Testing/setup.html#测试设置":{}},"body":{}}],["x6d4b;&#x8bd5;&#x8fd9;&#x79cd;&#x670d;&#x52a1;&#x7684;&#x57fa;&#x672c;&#x7b56;&#x7565;&#x662f;&#x9a8c;&#x8bc1;&#x8bf7;&#x6c42;&#x7684;&#x5185;&#x5bb9;&#xff08;&#x6b63;&#x786e;&#x7684;url&#xff09;&#xff0c;&#x5e76;&#x786e;&#x4fdd;&#x6211;&#x4eec;&#x6a21;&#x62df;&#x5230;&#x670d;&#x52a1;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x901a;&#x8fc7;&#x6b63;&#x786e;&#x7684;&#x65b9;&#x6cd5;&#x6b63;&#x786e;&#x8fd4;&#x56de;&#x3002",{"_index":5008,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x6d4b;&#x8bd5;&#x9a71;&#x52a8;&#x5f00;&#x53d1;&#x662f;&#x4e00;&#x4e2a;&#x5de5;&#x7a0b;&#x8fc7;&#x7a0b;&#xff0c;&#x5f00;&#x53d1;&#x4eba;&#x5458;&#x7f16;&#x5199;&#x4e00;&#x4e2a;&#x521d;&#x59cb;&#x81ea;&#x52a8;&#x6d4b;&#x8bd5;&#x7528;&#x4f8b;&#xff0c;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x7279;&#x6027;&#xff0c;&#x7136;&#x540e;&#x5199;&#x5165;&#x6700;&#x5c11;&#x91cf;&#x7684;&#x4ee3;&#x7801;&#x4ee5;&#x901a;&#x8fc7;&#x6d4b;&#x8bd5;&#xff0c;&#x6700;&#x7ec8;&#x5c06;&#x4ee3;&#x7801;&#x91cd;&#x6784;&#x4e3a;&#x53ef;&#x63a5;&#x53d7;&#x7684;&#x6807;&#x51c6;&#x3002",{"_index":5450,"title":{},"body":{"Testing/testing.html#TDD测试":{}}}],["x6d4b;&#x8bd5;&#xff0c;subs&#x6d4b;&#x8bd5;&#x548c;mock",{"_index":5485,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x6d4b;&#x8bd5;angular",{"_index":4965,"title":{},"body":{"Testing/components.html#测试组件":{},"Testing/test-components.html#测试组件":{}}}],["x6d4b;&#x8bd5;http&#x8bf7;&#x6c42",{"_index":5005,"title":{"Testing/http.html#测试HTTP请求":{}},"body":{}}],["x6d4b;&#x8bd5;jsonp&#x548c;xhr&#x540e;&#x7aef",{"_index":5096,"title":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}},"body":{}}],["x6d88;&#x606f;&#x7684;&#x5185;&#x5bb9;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":5535,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x6d89;&#x53ca;&#x6a21;&#x677f;&#x548c;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x89c4;&#x5219;&#x7684;&#x5927;&#x591a;&#x6570;&#x95ee;&#x9898;&#x5c06;&#x901a;&#x8fc7;&#x7ec4;&#x4ef6;&#x5b8c;&#x6210;&#xff0c;&#x6d89;&#x53ca;&#x4fee;&#x6539;&#x901a;&#x7528;&#x884c;&#x4e3a;&#x7684;&#x95ee;&#x9898;&#x901a;&#x8fc7;&#x6307;&#x4ee4;&#x5b8c;&#x6210;&#x3002",{"_index":738,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x6dfb;&#x52a0;&#x4e00;&#x4e2a",{"_index":3634,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x6dfb;&#x52a0;&#x5230",{"_index":3637,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{}}}],["x6dfb;&#x52a0;&#x5230;&#x6839;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4e0d;&#x540c;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":3534,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x6dfb;&#x52a0;&#x8bfb;&#x53d6;&#x53c2;&#x6570;&#x7684;&#x670d;&#x52a1;&#x3002",{"_index":4718,"title":{},"body":{"Routing/routeparams.html#使用路由参数":{}}}],["x6dfb;&#x52a0;&#x8def;&#x7531;&#x53c2;&#x6570;id",{"_index":4716,"title":{},"body":{"Routing/routeparams.html#使用路由参数":{}}}],["x6e05;&#x6670;&#x7684;&#x6700;&#x4f73;&#x5b9e;&#x8df5",{"_index":2888,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x6e32;&#x67d3;&#x7684;dom&#x662f;&#x5426;&#x5305;&#x542b;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":5084,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x6e90;&#x7801;&#x63a7;&#x5236;&#xff08;&#x6709;&#x65f6;&#x79f0;&#x4e3a;&#x7248;&#x672c;&#x63a7;&#x5236;&#xff09;&#x5c06;&#x53d8;&#x66f4;&#x7ba1;&#x7406;&#x5e26;&#x5165;&#x5f00;&#x53d1;&#x8fc7;&#x7a0b;&#x4e2d;&#x4e0d;&#x540c;&#x70b9;&#x7684;&#x4fdd;&#x5b58;&#x6587;&#x4ef6;&#x3002;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;&#x7684;&#x7248;&#x672c;&#x63a7;&#x5236;&#x7cfb;&#x7edf;&#xff08;vcs&#xff09;&#x662f;git&#x3002",{"_index":6242,"title":{},"body":{"tooling/source_control.html#源码控制：Git":{}}}],["x6e90;&#x7801;&#x63a7;&#x5236;&#xff1a;git",{"_index":6241,"title":{"tooling/source_control.html#源码控制：Git":{}},"body":{}}],["x6f14;&#x793a",{"_index":6075,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x6f14;&#x793a;&#x7ec4;&#x4ef6",{"_index":6078,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x6fc0;&#x6d3b;&#x62e6;&#x622a",{"_index":4657,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x7136;&#x540e;&#x53ef;&#x4ee5;&#x5c06;&#x914d;&#x7f6e;&#x7684",{"_index":5288,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x7136;&#x540e;&#x5728;&#x6211;&#x4eec;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e2d;&#x5bfc;&#x5165;&#x548c;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":5442,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["x7136;&#x540e;&#x5c06;&#x6240;&#x5f97;&#x5230;&#x7684;&#x627f;&#x8bfa;&#x4f20;&#x9012;&#x5230;&#x5728;&#x5176;&#x81ea;&#x5df1;&#x7684",{"_index":6537,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x7136;&#x540e;&#x6211;&#x4eec;&#x4e3a;&#x5b83;&#x7684;get&#x65b9;&#x6cd5;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x76d1;&#x6d4b;&#x5668;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x7c7b;&#x4f3c;&#x4e8e;&#x771f;&#x6b63;&#x7684;http&#x670d;&#x52a1;&#x7684;observ",{"_index":4822,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["x7136;&#x540e;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8fd0;&#x884c",{"_index":4896,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x7136;&#x540e;&#xff0c;&#x5728;webpack&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#xff08;&#x901a;&#x5e38;&#x547d;&#x540d;&#x4e3a",{"_index":3192,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x7136;&#x540e;&#xff0c;&#x5f53;&#x6570;&#x636e;&#x5728;&#x5f02;&#x6b65;&#x8c03;&#x7528;&#x4e2d;&#x4f20;&#x64ad;&#x65f6;&#xff0c;&#x6570;&#x636e;&#x4e0",{"_index":6275,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x7136;&#x540e;&#xff0c;angular&#x5047;&#x5b9a",{"_index":139,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x7136;&#x800c;&#x5728;&#x5927;&#x591a;&#x6570;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5b83;&#x4eec;&#x4f5c;&#x4e3a;&#x4e0a;&#x9650;&#x548c;&#x4e0b;&#x9650;&#xff0c;&#x9632;&#x6b62;&#x6dfb;&#x52a0;&#x6216;&#x5220;&#x9664;&#x989d;&#x5916;&#x4fe1;&#x606f;&#x3002",{"_index":2231,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["x7136;&#x800c;&#xff0c;&#x56e0;&#x4e3a;&#x7236;&#x8fdb;&#x7a0b;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x4e4b;&#x524d;&#x662f;&#x672a;&#x77e5;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5c06;&#x66f4;&#x6539",{"_index":6774,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x7136;&#x800c;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x7528;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5bf9;&#x8c61;&#x6e90;&#x4ee3;&#x66ff;&#x5217;&#x8868;&#xff0c;&#x4e5f;&#x8bb8;&#x662f;&#x4e00;&#x4e2a;api&#x8bf7;&#x6c42;&#x7684;&#x7ed3;&#x679c;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x544a;&#x8bc9;angular",{"_index":971,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x7136;&#x800c;&#xff0c;&#x5b83;&#x53ef;&#x80fd;&#x6709;&#x52a9;&#x4e8e;&#x4fdd;&#x6301;&#x7ed3;&#x6784;&#x901a;&#x7528;&#x3002",{"_index":5609,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x7136;&#x800c;&#xff0c;&#x6dfb;&#x52a0;&#x8def;&#x7531;&#x5141;&#x8bb8;&#x7528;&#x6237;&#x76f4;&#x63a5;&#x8fdb;&#x5165;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x67d0;&#x90e8;&#x5206;&#x3002",{"_index":4759,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x7136;&#x800c;&#xff0c;&#x88c5;&#x9970;&#x5668;&#x53ea;&#x662f;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x4e14;&#x901a;&#x8fc7;&#x51e0;&#x4e2a;&#x4f8b;&#x5b50;&#x66f4;&#x5bb9;&#x6613;&#x7406;&#x89e3;&#x3002",{"_index":1582,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x7136;&#x800c;&#xff0c;aot&#x4e0d;&#x662f;&#x5b8c;&#x7f8e;&#x7684;&#x3002",{"_index":3212,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["x7136;&#x800c;&#xff0c;web&#x6d4f;&#x89c8;&#x5668;&#x6ca1;&#x6709;&#x6a21;&#x5757;&#x6216;&#x5bfc;&#x5165;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x4ed6;&#x4eec;&#x53ea;&#x77e5;&#x9053;&#x5982;&#x4f55;&#x52a0;&#x8f7d;javascript&#x4ee3;&#x7801;&#x3002",{"_index":1326,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["x719f;&#x6089",{"_index":3054,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x7279;&#x5b9a;api&#x7684;&#x6587;&#x6863",{"_index":5520,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["x72b6;&#x6001;&#x53d8;&#x5316;&#x7b26;&#x5408;&#x9884;&#x671f;&#x3002",{"_index":5353,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x72b6;&#x6001;&#x7ba1;&#x7406",{"_index":6125,"title":{"state-management/state-management.html#状态管理":{}},"body":{}}],["x72ec;&#x7acb;&#x7684;&#x6559;&#x7a0b;&#x7f51;&#x7ad9",{"_index":2659,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x73af;&#x5883;&#x53d8;&#x91cf;&#x8bbe;&#x7f6e;&#x4e3a",{"_index":4363,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x73af;&#x5883;&#x7684;&#x6240;&#x4ee5;&#x5b83;&#x96be;&#x4ee5;&#x4e0e;&#x65e0",{"_index":6586,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x73af;&#x5883;&#x914d;&#x7f6",{"_index":5232,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x73b0;&#x5728",{"_index":4675,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x73b0;&#x5728;&#x53ef;&#x4ee5;&#x8f7b;&#x677e;&#x8fde;&#x63a5;&#xff1a",{"_index":1487,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{}}}],["x73b0;&#x5728;&#x5e94;&#x8be5;&#x719f;&#x6089;&#x6a21;&#x677f;&#x8bed;&#x6cd5;&#xff0c;&#x4f7f;&#x7528;&#x5f02;&#x6b65;&#x7ba1;&#x9053;&#x663e;&#x793a;&#x4e00;&#x4e2a",{"_index":6160,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x73b0;&#x5728;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x68c0;&#x67e5;&#x7531;&#x6211;&#x4eec;&#x7684",{"_index":5083,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x73b0;&#x5728;&#x6211;&#x4eec;&#x5c06;&#x521b;&#x5efa;&#x4e24;&#x4e2a;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#xff0c;&#x4e00;&#x4e2a;&#x6d4b;&#x8bd5",{"_index":5540,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x73b0;&#x5728;&#x6211;&#x4eec;&#x5c06;&#x5f15;&#x5165",{"_index":3820,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x73b0;&#x5728;&#x6211;&#x4eec;&#x5df2;&#x7ecf;&#x6807;&#x8bb0;&#x4e86;&#x6211;&#x4eec;&#x7684;&#x6587;&#x672c;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x4e0b;&#x8f7d;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":2622,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x73b0;&#x5728;&#x6211;&#x4eec;&#x5df2;&#x7ecf;&#x8bc1;&#x660e;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x5728;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x6811;&#x4e0a;&#x521b;&#x5efa;&#x81ea;&#x5df1;&#x7684;&#x5206;&#x652f;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5b66;&#x4e60;&#x5982;&#x4f55;&#x5904;&#x7406;&#x901a;&#x8fc7;&#x5728",{"_index":3816,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x73b0;&#x5728;&#x6211;&#x4eec;&#x6570;&#x7ec4;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x5bf9;&#x8c61;&#x90fd;&#x6709;&#x201c;dr.&#x201d",{"_index":3946,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x73b0;&#x5728;&#x6211;&#x4eec;&#x719f;&#x6089;&#x4e86;&#x7ec4;&#x4ef6;&#x57fa;&#x7840;&#x77e5;&#x8bc6;&#xff0c;&#x53ef;&#x4ee5;&#x505a;&#x4e00;&#x4e9b;&#x66f4;&#x6709;&#x8da3;&#x7684;&#x4e8b;&#x60c5;&#x3002",{"_index":5639,"title":{},"body":{"advanced-components/advanced-components.html#Advanced-Components":{}}}],["x73b0;&#x5728;&#x6709;&#x8bb8;&#x591a;&#x524d;&#x7aef;javascript&#x6846;&#x67b6;&#x53ef;&#x4f9b;&#x9009;&#x62e9;&#xff0c;&#x6bcf;&#x4e2a;&#x90fd;&#x6709;&#x81ea;&#x5df1;&#x7684;&#x6743;&#x8861;&#x3002",{"_index":2998,"title":{},"body":{"why_angular_2.html#Why-Angular-2":{}}}],["x73b0;&#x5728;&#x8fd0;&#x884c",{"_index":4981,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x73b0;&#x5728;&#xff0c;&#x4ece;typescript&#x4ee3;&#x7801;&#x751f;&#x6210;javascript&#x5df2;&#x7ecf;&#x88ab;&#x53bb;&#x795e;&#x79d8;&#x5316;&#x4e86;&#xff0c;&#x5b83;&#x7684;&#x4e00;&#x4e9b;&#x529f;&#x80fd;&#x53ef;&#x4ee5;&#x88ab;&#x63cf;&#x8ff0;&#x548c;&#x5b9e;&#x9a8c;&#x3002",{"_index":1830,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{}}}],["x73b0;&#x5728;&#xff0c;&#x4f7f;&#x7528",{"_index":5304,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x73b0;&#x5728;&#xff0c;&#x5f53;&#x6211;&#x4eec;&#x7684;subscribe&#x56de;&#x8c03;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#xff0c;&#x5b83;&#x63a5;&#x6536;&#x7684;&#x6570;&#x636e;&#x5c06;&#x662f;&#x4e00;&#x4e2a;json&#x5bf9;&#x8c61;&#x7684;&#x5217;&#x8868;&#xff0c;&#x5176;id&#x5c5e;&#x6027;&#x5927;&#x4e8e;&#x6216;&#x7b49;&#x4e8e;6&#xff0c;&#x5176;&#x540d;&#x79f0;&#x5c5e;&#x6027;&#x5df2;&#x6dfb;&#x52a0;&#x5230;&#x201c;dr",{"_index":3950,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x73b0;&#x5728;&#xff0c;&#x6211;&#x4eec;&#x6ca1;&#x6709;&#x9a8c;&#x8bc1;&#x3002",{"_index":2071,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x73b0;&#x5728;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x4e13;&#x6ce8;&#x4e8e;&#x5b9a;&#x4e49;&#x5bfc;&#x822a;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff08",{"_index":3690,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x73b0;&#x5728;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x6539;&#x53d8;&#x4f7f;&#x7528;&#x7bad;&#x5934;&#x51fd;&#x6570;&#x7684;&#x65b9;&#x5f0f;&#xff1a",{"_index":1156,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7406;&#x8bba;&#x4e0a;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8fd9;&#x4e2a;&#x7ec4;&#x4ef6;&#x653e;&#x5230;&#x4f60;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x4efb;&#x4f55;&#x533a;&#x57df;&#xff0c;&#x53ea;&#x662f;&#x8ba9;&#x5b83;&#x5de5;&#x4f5c;&#x3002",{"_index":6068,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x751f;&#x547d;&#x5468;&#x671f;&#x94a9;&#x5b50;&#x4e4b;&#x524d;&#xff0c;view",{"_index":5625,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x751f;&#x6210;&#x4ee3;&#x7801;&#x8986;&#x76d6;&#x7387;&#x62a5;&#x544a;&#xff0c;&#x5b83;&#x544a;&#x8bc9;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x6d4b;&#x8bd5;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x603b;&#x4f53;&#x767e;&#x5206;&#x6bd4;&#x3002",{"_index":5480,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x751f;&#x6210;&#x6253;&#x5305;&#x6587;&#x4ef6;&#x3002",{"_index":4366,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x7528;&#x4e8e;&#x4f20;&#x9012;&#x53c2;&#x6570;&#x4ee5;&#x521d;&#x59cb;&#x5316;&#x65b0;&#x521b;&#x5efa;&#x7684;&#x5bf9;&#x8c61;&#x3002",{"_index":1381,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x7528;&#x4e8e;&#x6267;&#x884c;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x4efb;&#x52a1;&#xff08;&#x5982;&#x6587;&#x4ef6;i/o&#xff0c;http&#x7b49;&#xff09;&#x7684;&#x6a21;&#x5757;&#x3002",{"_index":6223,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["x7528;&#x4e8e;&#x6267;&#x884c;&#x7c7b;&#x4f3c;&#x4e8",{"_index":5842,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["x7528;&#x4e8e;&#x65b0;&#x6dfb;&#x52a0;&#x5230;&#x5217;&#x8868;&#x4e2d;&#x7684;&#x9879;&#x76ee;&#x3002",{"_index":1021,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x7528;&#x4e8e;&#x6ce8;&#x5165;&#x4e00;&#x4e2a;&#x5b9e;&#x4f53;&#xff0c;&#x53ef;&#x80fd;&#x5b8c;&#x5168;&#x4e0d;&#x76f8;&#x5173;&#x7684;&#x4e1c;&#x897f;&#x4e5f;&#x4f7f;&#x7528",{"_index":469,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x7528;&#x4e8e;&#x6d4b;&#x8bd5;&#x7cfb;&#x7edf;&#x7684;&#x5404;&#x4e2a;&#x7ec4;&#x4ef6;&#x3002",{"_index":5452,"title":{},"body":{"Testing/testing.html#TDD测试":{}}}],["x7528;&#x4e8e;&#x8fed;&#x4ee3;&#x5177;&#x6709;&#x552f;&#x4e00;id&#x5b57;&#x6bb5;&#x7684;&#x5bf9;&#x8c61;&#x5217;&#x8868;&#x3002",{"_index":967,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x7528;&#x4e8e;&#x914d;&#x7f6e;&#x6211;&#x4eec;&#x7684;&#x4ee3;&#x7801;&#x8986;&#x76d6;&#x7387;&#x5de5;&#x5177;&#xff08;&#x6211;&#x4eec;&#x7684;&#x5de5;&#x5177;&#x94fe;&#x4f7f;&#x7528;&#x4f0a;&#x65af;&#x5766;&#x5e03;&#x5c14;&#xff09;&#x7684;&#x7ed3;&#x679c;&#x8f93;&#x51fa;&#x3002",{"_index":5219,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x7528;&#x4e8e;angular",{"_index":5844,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["x7528;&#x5168;&#x5c4f;&#x6a21;&#x5f0f;&#x8fd0;&#x884c;&#x793a;&#x4f8b;&#xff0c;&#x4ee5;&#x67e5;&#x770b;url&#x7684;&#x53d8;&#x5316;&#x3002",{"_index":4752,"title":{},"body":{"Routing/routeroutlet.html#动态添加路由组件":{}}}],["x7528;&#x6237;&#x53ef;&#x80fd;&#x5c06;&#x8fd9;&#x79cd;&#x6a21;&#x5f0f;&#x8bc6;&#x522b;&#x4e3a;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x4e16;&#x754c;&#x4e2d;&#x7684;redux",{"_index":5891,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x7528;&#x6237;&#x7684;&#x89c6;&#x89c9;&#x63d0;&#x793a",{"_index":2245,"title":{"Form/visual_cues_for_users.html#用户的视觉提示":{}},"body":{}}],["x7528;&#x6237;&#x8f93;&#x5165",{"_index":5808,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x7528;&#x6237;&#x8f93;&#x5165;&#xff0c;&#x5982;&#x8868;&#x5355;&#x63d0;&#x4ea4;&#xff0c;&#x8fc7;&#x6ee4;&#x5668;&#x548c;&#x641c;&#x7d22;&#x67e5;&#x8be2",{"_index":6130,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x7531;&#x4e0e;&#x521b;&#x5efa;emailmodule&#x7684;&#x56e2;&#x961f;&#x4e0d;&#x540c;&#x7684;&#x56e2;&#x961f;&#x521b;&#x5efa;&#xff0c;&#x5e76;&#x4e14;&#x8fd8;&#x9700;&#x8981;&#x4e00;&#x4e2a;&#x914d;&#x7f6e;&#x5bf9;&#x8c61;&#x3002",{"_index":484,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x7531;&#x4e8e",{"_index":3962,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{},"Routing/child_routes.html#定义子路由":{}}}],["x7531;&#x4e8e;&#x6211;&#x4eec;&#x5728;typescript&#x4e2d;&#x7f16;&#x5199;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#xff0c;&#x56e0;&#x6b64;.ts&#x6587;&#x4ef6;&#x5fc5;&#x987b;&#x8f6c;&#x6362;&#x4e3a;&#x7eaf;javascript&#x4ee5;&#x4fbf;&#x5728;&#x57fa;&#x4e8e;&#x6d4f;&#x89c8;&#x5668;&#x7684;&#x73af;&#x5883;&#x4e2d;&#x8fd0;&#x884c;&#x3002",{"_index":5201,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x7531;&#x4e8e;&#x6211;&#x4eec;&#x7684;&#x9879;&#x76ee;&#x548c;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x662f;&#x7528;typescript&#x7f16;&#x5199;&#x7684;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x7c7b;&#x5e93;&#x5b9a;&#x4e49;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4f7f;&#x7528;&#xff08;chai&#x548c;jasmine&#xff09;&#x7f16;&#x5199;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x3002",{"_index":5492,"title":{},"body":{"Testing/typings.html#Typings":{}}}],["x7531;&#x4e8e;&#x6211;&#x4eec;&#x9879;&#x76ee;&#x5927;&#x90e8;&#x5206;&#x7531;webpack&#x6253;&#x5305;&#xff0c;&#x91cd;&#x8981;&#x7684;&#x662f;&#x8981;&#x7ecf;&#x8fc7;&#x914d;&#x7f6e;&#xff0c;&#x4ee5;&#x4fbf;&#x66f4;&#x597d;&#x5730;&#x4e86;&#x89e3;&#x751f;&#x6210;&#x7684;&#x5ba2;&#x6237;&#x7aef;&#x3002",{"_index":4379,"title":{},"body":{"Project-setup/project-setup.html#项目设置":{}}}],["x7531;&#x4e8e;&#x6280;&#x672f;&#x7684;&#x5f00;&#x653e;&#x6027;&#x5f00;&#x53d1;&#x8005;&#x5c06;&#x4ee5;&#x81ea;&#x5df1;&#x7684;&#x65b9;&#x5f0f;&#x6784;&#x5efa;&#x3002",{"_index":2905,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x7531;&#x4e8e;&#x670d;&#x52a1;&#x4ee5;&#x5f02;&#x6b65;&#x65b9;&#x5f0f;&#x64cd;&#x4f5c;&#xff0c;&#x56e0;&#x6b64;&#x5f02;&#x6b65;&#x5730;&#x6267;&#x884c;&#x670d;&#x52a1;&#x7684;&#x6574;&#x4e2a;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x53ef;&#x80fd;&#x662f;&#x6709;&#x7528;&#x7684;&#x3002",{"_index":4840,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["x7531;&#x4e8e;&#x7bc7;&#x5e45;&#xff0c;angular1.x&#x7684;&#x76f8;&#x5173;&#x7ec6;&#x8282;&#x6211;&#x5728;&#x6b64;&#x4e0d;&#x8868;&#x3002",{"_index":2654,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x7531;&#x4e8e;&#x8fd9;&#x5728;&#x5f00;&#x53d1;&#x8005;&#x793e;&#x533a;&#x4e2d;&#x662f;&#x4e00;&#x4e2a;&#x975e;&#x5e38;&#x6709;&#x4e89;&#x8bae;&#x7684;&#x8bdd;&#x9898;&#xff0c;&#x6240;&#x4ee5;&#x968f;&#x7740;&#x6211;&#x4eec;&#x66f4;&#x6df1;&#x5165;&#x7684;&#x7406;&#x89e3;&#x5e76;&#x7ed3;&#x5408;&#x6536;&#x5230;&#x7684;&#x53cd;&#x9988;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4e0d;&#x65ad;&#x66f4;&#x65b0;&#x8fd9;&#x7bc7;&#x535a;&#x5ba2;&#x3002;&#x6211;&#x4e5f;&#x60f3;&#x63a8;&#x51fa;&#x4e00;&#x4e9b;&#x9650;&#x5b9a;&#x8bcd;&#xff0c;&#x6240;&#x4ee5;&#x5927;&#x5bb6;&#x90fd;&#x660e;&#x767d;&#x6211;&#x4eec;&#x6765;&#x81ea;&#x54ea;&#x91cc;&#x3002",{"_index":2818,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x7531;&#x4e8e;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;angular&#x7279;&#x5b9a;&#x7684;&#x4f8b;&#x7a0b;&#xff0c;&#x6ca1;&#x6709;&#x7528;&#x4e8e;&#x5b8c;&#x6210;&#x8fd9;&#x4e2a;&#x7684;&#x7eaf;jasmine&#x51fd;&#x6570;&#x3002",{"_index":5036,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x7531;&#x4e8e;angular&#x5141;&#x8bb8;&#x4f7f;&#x7528;&#x4ee4;&#x724c;&#x4f5c;&#x4e3a;&#x5176;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x7cfb;&#x7edf;&#x7684;&#x6807;&#x8bc6;&#x7b26;&#xff0c;&#x6f5c;&#x5728;&#x95ee;&#x9898;&#x4e4b;&#x4e00;&#x662f;&#x4f7f;&#x7528;&#x76f8;&#x540c;&#x7684;&#x4ee4;&#x724c;&#x6765;&#x8868;&#x793a;&#x4e0d;&#x540c;&#x7684;&#x5b9e;&#x4f53;&#x3002",{"_index":466,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x7531;&#x6b64;&#x4ea7;&#x751f;&#x7684",{"_index":5731,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["x7531;reducer&#x66f4;&#x65b0;&#xff0c",{"_index":6176,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x7535;&#x5b50;&#x90ae;&#x4ef6;&#x670d;&#x52a1;api&#x9700;&#x8981;&#x4e00;&#x4e9b;&#x7531;&#x5b57;&#x7b26;&#x4e32",{"_index":477,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x767e;&#x5ea6;&#x7edf;&#x8ba1",{"_index":2746,"title":{},"body":{"plus.html#插件":{}}}],["x7684",{"_index":481,"title":{"Advanced-angular/aot.html#Angular-2-的-AoT":{},"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{},"Di/injection_beyond_classes.html#类以外的注入":{},"Di/the_injector_tree.html#注入树":{},"Http/interceptor.html#Http-拦截器":{},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{},"Routing/child_routes.html#定义子路由":{}}}],["x7684;&#x201c;&#x98df;&#x8c31;&#x201d;&#xff0c;&#x8fd9;&#x4e9b;&#x60c5;&#x51b5;&#x51e0;&#x4e4e;&#x5b8c;&#x5168;&#x76f8;&#x540c;&#xff1a",{"_index":609,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x7684;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50",{"_index":5227,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x7684;&#x4e00;&#x4e2a;&#x66ff;&#x4ee3;&#x65b9;&#x6cd5;&#x662f;&#x521b;&#x5efa;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x7684;&#x8f7b;&#x6a21;&#x62df;&#x3002",{"_index":4820,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["x7684;&#x4e00;&#x4e2a;&#x95ee;&#x9898;&#x662f",{"_index":3173,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x7684;&#x4e00;&#x6b21;&#x6027;&#x8ba2;&#x9605;&#x3002;&#x5728;&#x90a3;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x5728;dispatch",{"_index":5895,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x7684;&#x4e00;&#x90e8;&#x5206;&#xff0c;&#x94a9;&#x5b50;&#x63a5;&#x6536;&#x4e00;&#x4e2a;&#x7236;zonedelagate&#xff08;&#x53ea;&#x5904;&#x7406;&#x94a9;&#x5b50;&#xff09;&#x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x7236",{"_index":6777,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x7684;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x8fd9;&#x5f88;&#x5c11;&#x662f;&#x4f60;&#x60f3;&#x8981;&#x7684;&#x3002",{"_index":1433,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x7684;&#x4e58;&#x79ef;&#x88ab;&#x5206;&#x914d;&#x7ed9;&#x4f20;&#x9012;&#x7ed9",{"_index":611,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x7684;&#x4e66;&#xff0c;&#x9002;&#x5408;&#x4e8e;&#x4ee5;angular",{"_index":6891,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x7684;&#x4f18;&#x70b9",{"_index":3032,"title":{"why_angular_2.html#Angular-2-的优点":{}},"body":{}}],["x7684;&#x4f7f;&#x7528;&#x3002",{"_index":6165,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x7684;&#x4f8b;&#x5b50;&#x662f;&#x4e00;&#x4e2a;&#x70ed;&#x7684",{"_index":3875,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x7684;&#x4f8b;&#x5b50;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":5496,"title":{},"body":{"Testing/typings.html#Typings":{}}}],["x7684;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#xff0c;&#x4f7f;&#x7528;&#x54cd;&#x5e94;&#x5f0f;&#x7f16;&#x7a0b;&#x53ef;&#x89c2;&#x5bdf;&#x6a21;&#x5f0f;&#x6784;&#x5efa;&#x7684;&#x5185;&#x7f6e;&#x5373;&#x7528;&#x578b;http&#x6a21;&#x5757;&#xff0c;&#x4e00;&#x4e2a;&#x7cbe;&#x5fc3;&#x8bbe;&#x8ba1;&#x7684;angular",{"_index":2872,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x7684;&#x503c;&#x3002",{"_index":1446,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x7684;&#x5165;&#x53e3;&#x70b9;&#x662f;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4ee3;&#x7801;&#x6b63;&#x5e38;&#x5de5;&#x4f5c;&#x6240;&#x9700;&#x7684;&#x6a21;&#x5757;&#x5217;&#x8868;&#x3002",{"_index":4232,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x7684;&#x51fd;&#x6570;&#x3002;&#x901a;&#x8fc7",{"_index":5966,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["x7684;&#x51fd;&#x6570;&#x7528;&#x4e8e;&#x5bfc;&#x5165;&#xff08;&#x52a0;&#x8f7d;&#xff09;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6a21;&#x5757;&#x3002",{"_index":1334,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["x7684;&#x51fd;&#x6570;&#xff0c;&#x5b83;&#x5c06;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x5305;&#x88f9;&#x5728;&#x4e00;&#x4e2a;&#x533a;&#x57df;&#x4e2d;&#xff0c;&#x5e76;&#x8ba9;&#x6211;&#x4eec;&#x8bbf;&#x95e",{"_index":4875,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x7684;&#x5217;&#x8868;&#x3002",{"_index":5224,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x7684;&#x521b;&#x5efa;&#x8005;&#x89c2;&#x5bdf;&#x548c;&#x63a7;&#x5236",{"_index":6793,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["x7684;&#x521b;&#x5efa;&#xff0c;@ngrx&#x662f;&#x4e00;&#x5957;&#x5b9e;&#x73b0;&#x4e0e;redux&#x751f;&#x6001;&#x7cfb;&#x7edf;&#x76f8;&#x540c;&#x7684;&#x7ba1;&#x7406;&#x72b6;&#x6001;&#x4ee5;&#x53ca;&#x4e00;&#x4e9b;&#x4e2d;&#x95f4;&#x4ef6;&#x548c;&#x5de5;&#x5177;&#x7684;&#x6a21;&#x5757;&#x3002",{"_index":6015,"title":{},"body":{"state-management/redux.html#What-is-Ngrx":{}}}],["x7684;&#x526f;&#x4f5c;&#x7528;&#x7684;&#x6a21;&#x578b",{"_index":5843,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{}}}],["x7684;&#x529f;&#x80fd;&#x3002;&#x5728;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x4e2d;&#x7684;&#x53c2;&#x6570;&#x6709;&#x65f6;&#x88ab;&#x68c0;&#x67e5;&#x7279;&#x5b9a;&#x7c7b;&#x578b;&#x7684",{"_index":1846,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x7684;&#x539f;&#x56e0;&#x662f;&#x8def;&#x7531;&#x5668;&#x5728;&#x5bfc;&#x822a;&#x5230;&#x540c;&#x4e00;&#x4e2a;&#x7ec4;&#x4ef6;&#x65f6;&#x53ef;&#x80fd;&#x65e0;&#x6cd5;&#x91cd;&#x65b0;&#x521b;&#x5efa;&#x7ec4;&#x4ef6;&#x3002;&#x5728;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x53c2;&#x6570;&#x53ef;&#x80fd;&#x4f1a;&#x6539;&#x53d8;&#xff0c;&#x800c;&#x4e0d;&#x4f1a;&#x91cd;&#x65b0;&#x521b;&#x5efa;&#x7ec4;&#x4ef6;&#x3002",{"_index":4736,"title":{},"body":{"Routing/routeparams.html#读取路由参数":{}}}],["x7684;&#x53d8;&#x6362;&#xff0c;&#x518d;&#x6b21;&#x5c06;&#x80cc;&#x666f;&#x989c;&#x8272;&#x66f4;&#x6539;&#x4e3a;&#x9ec4;&#x8272;&#x3002",{"_index":3439,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x7684;&#x53d8;&#x6362;&#xff0c;&#x5c06;&#x6587;&#x672c;&#x8bbe;&#x7f6e;&#x4e3a;&#x7070;&#x8272;&#xff0c;&#x5c06;&#x80cc;&#x666f;&#x8bbe;&#x7f6e;&#x4e3a;&#x84dd;&#x8272;&#xff0c;&#x7136;&#x540",{"_index":3437,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x7684;&#x53ef;&#x7ec4;&#x5408;&#x6027",{"_index":6308,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x7684;&#x540c;&#x4e00;&#x4e2a;&#x5b9e;&#x4f8b;&#x3002",{"_index":3813,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x7684;&#x547d;&#x540d;&#x7ea6;&#x5b9a;&#x3002",{"_index":6174,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x7684;&#x58f0;&#x660e;&#x4e0d;&#x4f1a;&#x6539;&#x53d8;&#x3002",{"_index":3808,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x7684;&#x5b50;&#x7c7b;&#x6784;&#x9020;&#x51fd;&#x6570;&#x4e2d;&#x4f7f;&#x7528;&#x7684",{"_index":1367,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x7684;&#x5b50;&#x7ec4;&#x4ef6;&#x6216;&#x5b50;&#x7ec4;&#x4ef6;&#x7684;&#x5217;&#x8868;&#x5206;&#x522b;&#x4f7f;&#x7528;&#x5b83;&#x4eec;&#x7684;&#x9009;&#x62e9;&#x5668;&#x4ece;&#x6a21;&#x677f;&#x4e2d;&#x9009;&#x62e9;&#x3002",{"_index":5620,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x7684;&#x5b50;&#x8def;&#x7531;&#x3002",{"_index":4523,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x7684;&#x5b50;&#x8def;&#x7531;&#x7684;&#x7ec4;&#x4ef6;&#x5c06;&#x88ab;&#x653e;&#x7f6e;&#x5728",{"_index":4536,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x7684;&#x5b50;&#x8def;&#x7531;&#x9700;&#x8981;&#x4ea7;&#x54c1;&#x7684;id&#x4ee5;&#x83b7;&#x53d6;&#x89c4;&#x8303;&#x6216;&#x6982;&#x8ff0;&#x4fe1;&#x606f;&#x3002;&#x5b50;&#x8def;&#x7531;&#x7ec4;&#x4ef6;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#x7236;&#x8def;&#x7531;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":4550,"title":{},"body":{"Routing/child_routes.html#访问父路由的参数":{}}}],["x7684;&#x5b9a;&#x4e49;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x5728",{"_index":3798,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x7684;&#x5b9e;&#x4f8b;&#x3002",{"_index":3881,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x7684;&#x5b9e;&#x4f8b;&#x5206;&#x914d;&#x7ed9;&#x5177;&#x6709",{"_index":1671,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x7684;&#x5b9e;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":5047,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x7684;&#x5b9e;&#x9645;&#x8c03;&#x7528;&#x3002;&#x6211;&#x4eec;&#x521b;&#x9020;&#x4e86;&#x4e00;&#x4e2a;&#x5728;&#x5ef6;&#x8fdf;&#x540e;&#x89e3;&#x6790;&#x7684",{"_index":5898,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x7684;&#x5bf9;&#x8c61;&#x6765;&#x7ec4;&#x5408;&#x8fd9;&#x4e9b;reducer&#xff0c;&#x5176;&#x4e2d;&#x6bcf;&#x4e2a;&#x5c5e;&#x6027;&#x5c06;&#x6307;&#x5411;&#x5176;&#x4e2d;&#x4e00;&#x4e2a;&#x8f83;&#x5c0f;&#x7684;reducer&#x3002",{"_index":5797,"title":{},"body":{"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{}}}],["x7684;&#x5bfc;&#x5165;&#x4e2d;&#xff1a",{"_index":5754,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["x7684;&#x5c42;&#x6b21;&#x7ed3;&#x6784;&#xff0c",{"_index":6772,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x7684;&#x5de5;&#x4f5c;&#x539f;&#x7406;&#x3002",{"_index":3973,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x7684;&#x5de5;&#x4f5c;&#x65b9;&#x5f0f;&#x4e0",{"_index":4689,"title":{},"body":{"Routing/route_guards.html#实现-CanDeactivate":{}}}],["x7684;&#x5de5;&#x4f5c;&#x65b9;&#x5f0f;&#x4e0e;&#x76f8;&#x5e94;&#x7684",{"_index":5627,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["x7684;&#x5f02;&#x6b65;&#x884c;&#x4e3a;&#x3002",{"_index":4895,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x7684;&#x5f15;&#x7528;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x5df2;&#x6807;&#x8bb0;&#x4e3a",{"_index":1240,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{}}}],["x7684;&#x5fc5;&#x8981;&#x6027;&#xff1a",{"_index":1963,"title":{},"body":{"Form/getting-started.html#入门":{}}}],["x7684;&#x60c5;&#x51b5;&#x4e0b;&#x59d4;&#x6d3e;&#x94a9;&#x5b50;&#x3002",{"_index":6785,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x7684;&#x6240;&#x6709;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x90fd;&#x662f;&#x5fc5;&#x8981;&#x7684;&#x3002;&#x8bf7;&#x6ce8;&#x610f;&#xff0c;&#x5728;&#x6bcf;&#x6b21;&#x6d4b;&#x8bd5;&#x8fd0;&#x884c;&#x4e4b;&#x524d;&#xff0c;&#x8be5;&#x5e73;&#x53f0;&#x5c06;&#x88ab;&#x9500;&#x6bc1;&#x5e76;&#x91cd;&#x7f6e;&#x3002",{"_index":5058,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x7684;&#x6307;&#x4ee4;&#x3002",{"_index":3582,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x7684;&#x63a5;&#x53e3;&#xff0c;&#x6240;&#x4ee5;&#x548c;css&#x6548;&#x679c;&#x57fa;&#x672c;&#x4e00;&#x81f4;&#x3002",{"_index":5698,"title":{},"body":{"animation/index.html#动画":{}}}],["x7684;&#x63a5;&#x53e3;&#xff0c;&#x8fd9;&#x53d6;&#x51b3;&#x4e8e;&#x9879;&#x76ee;&#x4e2d;&#x4f7f;&#x7528;&#x7684;&#x547d;&#x540d;&#x7ea6;&#x5b9a;&#x3002",{"_index":5813,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x7684;&#x641c;&#x7d22;&#x65b9;&#x6cd5;&#x662f;&#x5426;&#x5411;&#x6b63;&#x786e;&#x7684;url&#x53d1;&#x51fa;get&#x8bf7;&#x6c42;&#x3002;&#x8fd9;&#x662f;&#x901a;&#x8fc7;&#x67e5;&#x770b;&#x5f53;&#x6211;&#x4eec;&#x7684",{"_index":5301,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x7684;&#x6587;&#x4ef6;&#x4e2d;&#x6307;&#x5b9a;&#x6a21;&#x5757;&#x4f9d;&#x8d56;&#x5173;&#x7cfb",{"_index":6206,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x7684;&#x6587;&#x6863;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x5b83;&#x662f;&#x91cd;&#x65b0;&#x5bfc;&#x51fa",{"_index":3486,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x7684;&#x65b0;&#x5b9e;&#x4f8b;&#x4e3a;&#x8be5;&#x6a21;&#x5757;&#x521b;&#x5efa;&#x5b50;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":3528,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x7684;&#x65b0;&#x5c5e;&#x6027;&#x3002",{"_index":3496,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x7684;&#x65b0;&#x6a21;&#x5757;&#xff0c;&#x5e76;&#x5728;&#x90a3;&#x91cc;&#x5b9a;&#x4e49",{"_index":3819,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x7684;&#x65b0;&#x8bed;&#x6cd5",{"_index":1136,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":6700,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["x7684;&#x670d;&#x52a1;&#x3002;&#x5f53",{"_index":3653,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x7684;&#x6784;&#x9020;&#x51fd;&#x6570;&#x3002",{"_index":1369,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x7684;&#x6839;&#x7ec4;&#x4ef6;&#x4e00;&#x8d77;&#x6dfb;&#x52a0;&#x5230;&#x58f0;&#x660e;&#x5c5e;&#x6027;&#x4e2d;&#x3002",{"_index":3780,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x7684;&#x6982;&#x5ff5;&#x3002",{"_index":565,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x7684;&#x6a21;&#x677f;&#x4e2d;&#x4f7f;&#x7528;&#x3002",{"_index":3502,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x7684;&#x72b6;&#x6001;&#x9644;&#x52a0;&#x5230;&#x7ec4;&#x4ef6;&#x3002;&#x60a8;&#x53ef;&#x4ee5;&#x5c06;&#x5176;&#x9644;&#x52a0;&#x5230;&#x7ec4;&#x4ef6;&#x7c7b;&#x7684;&#x5c5e;&#x6027;&#xff0c;ng2",{"_index":6168,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x7684;&#x7334;&#x5b50;&#x8865;&#x4e01;&#x5982;&#x4f55;&#x4fee;&#x6539;&#x88ab;&#x8ddf;&#x8e2a;&#x7684",{"_index":6374,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x7684;&#x7334;&#x5b50;&#x8865;&#x4e01;&#x65b9;&#x6cd5;&#x53ea;&#x4fee;&#x8865;&#x4e00;&#x6b21;&#x3002",{"_index":6342,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["x7684;&#x7b80;&#x5355;&#x793a;&#x4f8b;&#xff1a",{"_index":5971,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["x7684;&#x7ec4;&#x4ef6;&#xff0c",{"_index":3713,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x670d;&#x52a1;&#x7b49;&#x3002",{"_index":6689,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x7684;&#x7ed3;&#x679c;&#x3002",{"_index":3961,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x7684;&#x884c;&#x4e3a;&#x4e0e;&#x8c03;&#x7528;&#x7236;&#x94a9;&#x5b50;&#x7684;&#x884c;&#x4e3a;&#x5206;&#x5f00;&#x3002",{"_index":6775,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x7684;&#x8bfe;&#x7a0b;&#x6750;&#x6599;&#xff0c;&#x4f46;&#x662f;&#x5f88;&#x591a;&#x4eba;&#x53d1;&#x73b0;&#x5b83;&#x5bf9;&#x81ea;&#x5df1;&#x5b66;&#x4e60;angular",{"_index":6881,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x7684;&#x8c03;&#x7528;&#x5c01;&#x88c5;&#x6211;&#x4eec;&#x7684;&#x6574;&#x4e2a;&#x6d4b;&#x8bd5;&#xff0c;&#x8fd9;&#x5c06;&#x7528;&#x4e8e;&#x63a7;&#x5236",{"_index":5296,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x7684;&#x8c03;&#x7528;&#x5c06;&#x6309;&#x9884;&#x671f;&#x5de5;&#x4f5c;&#x3002",{"_index":6773,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x7684;&#x8def;&#x5f84;&#xff0c;&#x6211;&#x4eec;&#x4f1a;&#x61d2;&#x52a0;&#x8f7d;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#xff0c;&#x65b9;&#x4fbf;&#x5730;&#x79f0;&#x4e3a",{"_index":3706,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x7684;&#x8def;&#x7531;&#x3002",{"_index":4622,"title":{},"body":{"Routing/redirects.html#将路由器重定向到另一条路由":{}}}],["x7684;&#x8def;&#x7531;&#x7684;&#x94fe;&#x63a5;&#x3002",{"_index":4741,"title":{},"body":{"Routing/routerlink.html#RouterLink":{}}}],["x7684;&#x8def;&#x7531;&#xff1a",{"_index":4727,"title":{},"body":{"Routing/routeparams.html#链接到带参数的路由":{}}}],["x7684;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x5b9a;&#x4e49;&#x3002",{"_index":5494,"title":{},"body":{"Testing/typings.html#Typings":{}}}],["x7684;&#x9759;&#x6001;&#x65b9;&#x6cd5;&#xff0c;&#x5176;&#x4e2d;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x6a21;&#x5757;&#x548c;&#x8981;&#x5bfc;&#x51fa;&#x7684;&#x670d;&#x52a1;&#x3002",{"_index":3538,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x7684;&#x9759;&#x6001;&#x65b9;&#x6cd5;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x5c06;&#x4e0e;&#x6a21;&#x5757;&#x672c;&#x8eab;&#x4e00;&#x8d77;&#x5bfc;&#x51fa;&#x670d;&#x52a1;&#x3002",{"_index":3800,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x7684;angular",{"_index":2623,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{},"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["x7684;di&#x6811;&#x6839;&#x76ee;&#x5f55;&#x4e2d;&#xff0c;&#x53e6;&#x4e00;&#x4e2a;&#x5b58;&#x5728;&#x4e8",{"_index":3832,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x7684;walk&#x65b9;&#x6cd5;&#x3002",{"_index":1262,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x76ee;&#x524d;&#xff0c;&#x6211;&#x4eec;&#x6ca1;&#x6709;&#x201c;aot",{"_index":3214,"title":{},"body":{"Advanced-angular/aot_limitations.html#AoT-局限":{}}}],["x76f4;&#x5230;&#x8fd9;&#x4e00;&#x70b9;&#xff0c",{"_index":3734,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x76f4;&#x63a5;&#x4f7f;&#x7528",{"_index":3169,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x76f8;&#x4fe1;&#x968f;&#x7740;&#x90e8;&#x5206;angular1.x&#x9879;&#x76ee;&#x8fc1;&#x79fb;&#x5230;2.x&#xff0c;&#x5e94;&#x8be5;&#x6570;&#x91cf;&#x4f1a;&#x66f4;&#x591a;&#x3002",{"_index":3017,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x76f8;&#x53cd;&#xff0c;&#x54cd;&#x5e94;&#x5f0f;&#x8868;&#x5355;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x901a;&#x8fc7;&#x4ee3;&#x7801;&#x5b9a;&#x4e49;&#x6211;&#x4eec;&#x7684;&#x5f62;&#x5f0f;&#xff0c;&#x5e76;&#x7ed9;&#x6211;&#x4eec;&#x5bf9;&#x6570;&#x636e;&#x9a8c;&#x8bc1;&#x66f4;&#x591a;&#x7684;&#x7075;&#x6d3b;&#x6027;&#x548c;&#x63a7;&#x5236;&#x3002",{"_index":2029,"title":{},"body":{"Form/reactive-forms.html#响应式-模型驱动的表单":{}}}],["x76f8;&#x53cd;&#xff0c;&#x5f53;&#x5728",{"_index":3805,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x76f8;&#x540c;&#xff0c;&#x4f46;&#x662f;&#xff0c;&#x4e3b;&#x8981;&#x533a;&#x522b;&#x662f",{"_index":5628,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["x770b;&#x770b;&#x5b8c;&#x6574;&#x7684;&#x5b98;&#x65b9;api&#x6587;&#x6863",{"_index":5250,"title":{},"body":{"Testing/karma-config.html#其他资源":{}}}],["x770b;&#x770b;&#x8fd9;&#x4e2a;&#x4f8b;&#x5b50;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x5df2;&#x7ecf;&#x6709;&#x4e00;&#x4e2a",{"_index":6087,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x770b;&#x8d77;&#x6765;&#x50cf;&#x8fd9;&#x6837;&#xff1a",{"_index":4526,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x770b;&#x8d77;&#x6765;&#x50cf;&#xff1a",{"_index":5197,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x77e5;&#x9053",{"_index":1852,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x786e;&#x4fdd;root&#x548c;&#x63a7;&#x4ef6;&#x5728;&#x4f7f;&#x7528;&#x4e4b;&#x524d;&#x5b58;&#x5728;&#x3002",{"_index":2069,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x786e;&#x5b9a;&#x662f;&#x5339;&#x914d;&#x5b8c;&#x6574;&#x7684;&#x7f51;&#x5740;&#x8fd8;&#x662f;&#x4ec5;&#x5339;&#x914d;&#x5f00;&#x5934;&#x3002",{"_index":4586,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x786e;&#x5b9a;&#x7528;&#x6237;&#x9700;&#x8981;&#x54ea;&#x79cd;&#x8bed;&#x8a00",{"_index":2544,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x793a;&#x4f8b;&#x5e94;&#x7528",{"_index":5818,"title":{"state-management/example_application.html#示例应用":{}},"body":{}}],["x793a;&#x4f8b;&#xff1a",{"_index":5723,"title":{},"body":{"state-management/actions.html#Actions":{},"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x793a;&#x4f8b;&#xff1a;&#x8c03;&#x7528",{"_index":6543,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x793e;&#x533a",{"_index":3016,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x793e;&#x533a;&#x652f;&#x6301",{"_index":2887,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x79c1;&#x6709;&#x7684",{"_index":3498,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x7b26;&#x53f7;&#x8c03;&#x7528;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x540e;&#x9762;&#x7d27;&#x8ddf;&#x4e00;&#x4e2a;&#x7c7b;&#xff0c;&#x53c2;&#x6570;&#xff0c;&#x65b9;&#x6cd5;&#x6216;&#x5c5e;&#x6027;&#x3002",{"_index":1578,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x7b2c;&#x4e00;&#x6b21",{"_index":5650,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x7b2c;&#x4e00;&#x7ae0;&#x4ecb;&#x7ecd;&#x5982;&#x4f55;&#x521b;&#x5efa",{"_index":6581,"title":{},"body":{"zone/zone-propagation.html#Zone-传播":{}}}],["x7b2c;&#x4e09;&#x4e2a;&#x5b50;&#x7ec4;&#x4ef6;&#x662f",{"_index":679,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x7b2c;&#x4e09;&#x65b9;&#x5e93;&#x7684",{"_index":4204,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x7b49;&#x5bf9;&#x8c61;&#x3002;&#x5f53",{"_index":1145,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7b49;&#x5bf9;&#x8c61;&#xff09;&#xff1b",{"_index":1167,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7b49;&#x65b9;&#x6cd5;&#x7684;&#x8bbf;&#x95ee;&#x3002;&#x53e6;&#x4e00;&#x4e2a;&#x91cd;&#x8981;&#x7684;&#x533a;&#x522b;&#x662f;&#x5269;&#x4f59;&#x53c2;&#x6570;&#x53ea;&#x5305;&#x62ec;&#x5728;&#x51fd;&#x6570;&#x4e2d;&#x6ca1;&#x6709;&#x7279;&#x522b;&#x547d;&#x540d;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x5982;&#xff1a",{"_index":1502,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["x7b49;&#xff09",{"_index":2747,"title":{},"body":{"plus.html#插件":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a;&#x6587;&#x672c;&#x5c06;&#x662f;&#x7070;&#x8272;&#x7684;&#xff0c;&#x80cc;&#x666f;&#x662f;&#x9ec4;&#x8272;&#x7684;&#x3002",{"_index":3429,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x7b80;&#x5355;&#x5806;&#x6808;&#x8ddf;&#x8e2a",{"_index":6717,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x7b80;&#x5355;&#x7684",{"_index":5994,"title":{"state-management/reducers_as_state_management.html#简单的-Reducer":{}},"body":{}}],["x7b80;&#x5355;&#x7684;&#x6d4b;&#x8bd5",{"_index":5393,"title":{"Testing/simple-test.html#简单的测试":{}},"body":{}}],["x7b80;&#x5355;&#xff0c;&#x771f;&#x7684;&#x3002",{"_index":2119,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x7ba1;&#x7406",{"_index":5988,"title":{"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}},"body":{}}],["x7ba1;&#x7406;&#x548c;&#x6784;&#x5efa;&#x5de5;&#x5177;&#x3002",{"_index":2847,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x7ba1;&#x9053;&#x9690;&#x85cf;&#x6389;&#x9664;&#x6700;&#x540e;4&#x4f4d;&#x4e4b;&#x5916;&#x7684;&#x6570;&#x5b57;&#x3002",{"_index":3771,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x7bad;&#x5934;&#x51fd;&#x6570",{"_index":1134,"title":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x7bad;&#x5934;&#x51fd;&#x6570;&#x4e0d;&#x4f1a;&#x4ea7;&#x751f;&#x81ea;&#x5df1;&#x4f5c;&#x7528;&#x57df;&#x4e0b;&#x7684",{"_index":1144,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7bad;&#x5934;&#x51fd;&#x6570;&#x5c31;&#x662f;&#x4e2a;&#x7b80;&#x5199;&#x5f62;&#x5f0f;&#x7684;&#x51fd;&#x6570;&#x8868;&#x8fbe;&#x5f0f;&#xff1b",{"_index":1165,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7bad;&#x5934;&#x51fd;&#x6570;&#x603b;&#x662f;&#x533f;&#x540d;&#x7684;&#x3002",{"_index":1168,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7bad;&#x5934;&#x51fd;&#x6570;&#x6ca1;&#x6709",{"_index":1160,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x7bad;&#x5934;&#x51fd;&#x6570;&#xff0c;&#x5c06;&#x5728;&#x4e0b;&#x9762;&#x4ecb;&#x7ecd;&#x3002",{"_index":1453,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x7c7b",{"_index":1177,"title":{"ES6&TypeScript/es6/classes.html#类":{}},"body":{}}],["x7c7b;&#x3002",{"_index":414,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{},"ES6&TypeScript/es6/delegation.html#委托":{},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{},"Testing/verify.html#验证方法和属性":{}}}],["x7c7b;&#x4e0e;&#x7ee7;&#x627f",{"_index":1290,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x7c7b;&#x4ee5;&#x5916;&#x7684;&#x6ce8;&#x5165",{"_index":561,"title":{"Di/injection_beyond_classes.html#类以外的注入":{}},"body":{}}],["x7c7b;&#x4f3c;&#x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x662f;&#x4f7f;&#x7528",{"_index":1242,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{}}}],["x7c7b;&#x4f3c;&#x4e8e;&#x8bfb;&#x53d6",{"_index":4615,"title":{},"body":{"Routing/query_params.html#读取查询参数":{}}}],["x7c7b;&#x4f3c;&#x5730;&#xff0c;&#x5982;&#x679c;&#x8ba2;&#x9605;&#x8005;&#x7684;&#x6570;&#x91cf;&#x5230;0&#xff0c;&#x5b83;&#x5c06;&#x505c;&#x6b62",{"_index":3889,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x7c7b;&#x4f3c;&#x793a;&#x4f8b;&#x4f7f;&#x7528;promises&#x3002;&#xff08;promises&#x6709;&#x70b9;&#x4e0d;&#x540c;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x4eec;&#x5728;&#x56de;&#x8c03;&#x4e2d;&#x5904;&#x7406;&#x81ea;&#x5df1;&#x7684;&#x5f02;&#x5e38;&#xff09",{"_index":6522,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x7c7b;&#x4f3c;&#xff0c;&#x4f46;&#x6709;&#x4e00;&#x4e9b;&#x91cd;&#x8981;&#x7684;&#x533a;&#x522b;&#x3002",{"_index":4690,"title":{},"body":{"Routing/route_guards.html#实现-CanDeactivate":{}}}],["x7c7b;&#x5206;&#x79bb;&#x3002",{"_index":5882,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}}}],["x7c7b;&#x548c",{"_index":1259,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x7c7b;&#x578b",{"_index":1831,"title":{"ES6&TypeScript/typescript/typescript_features.html#类型":{}},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{}}}],["x7c7b;&#x578b;&#x5173;&#x952e;&#x5b57",{"_index":1777,"title":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}},"body":{}}],["x7c7b;&#x578b;&#x5b9a;&#x4e49;&#x5141;&#x8bb8;&#x60a8;&#x5c06;&#x51fd;&#x6570;&#x7b7e;&#x540d;&#x9644;&#x52a0;&#x5230;&#x5b83;&#x81ea;&#x5df1;&#x7684;&#x7c7b;&#x578b;&#x3002",{"_index":1800,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x7c7b;&#x578b;&#x662f;&#x5b9a;&#x4e49;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x8def;&#x7531;&#x7684;&#x8def;&#x7531;&#x6570;&#x7ec4;&#x3002",{"_index":4577,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x8fd4;&#x56d",{"_index":4695,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b9e;&#x4f8b;&#x3002;&#x8fd9;&#x662f;&#x56e0;&#x4e3a;typescript&#x53ea;&#x771f;&#x7684;&#x5173;&#x5fc3;&#x5bf9;&#x8c61;&#x5177;&#x6709;&#x76f8;&#x540c;&#x7684;&#x5f62;&#x72b6;&#x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x4e24;&#x4e2a;&#x5bf9;&#x8c61;&#x5177;&#x6709;&#x76f8;&#x540c;&#x7684;&#x5c5e;&#x6027;&#xff0c;&#x5177;&#x6709;&#x76f8;&#x540c;&#x7684;&#x7c7b;&#x578b;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x4e24;&#x4e2a;&#x5bf9;&#x8c61;&#x88ab;&#x8ba4;&#x4e3a;&#x662f;&#x76f8;&#x540c;&#x7c7b;&#x578b;&#x3002",{"_index":1672,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x7c7b;&#x5b9a;&#x4e49;&#x4e86",{"_index":1370,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x7c7b;&#x5b9a;&#x4e49;&#x4e86;&#x4e0d;&#x80fd;&#x7528;&#x4e8",{"_index":1375,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x7c7b;&#x5f88;&#x7b80;&#x5355",{"_index":5042,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x7c7b;&#x662f;es6&#x4e2d;&#x7684;&#x4e00;&#x4e2a;&#x65b0;&#x7279;&#x6027;&#xff0c;&#x7528;&#x4e8e;&#x63cf;&#x8ff0;&#x5bf9;&#x8c61;&#x7684;&#x84dd;&#x56fe;&#xff0c;&#x4f7f;ecmascript&#x7684;&#x539f;&#x578b;&#x7ee7;&#x627f;&#x6a21;&#x578b;&#x51fd;&#x6570;&#x66f4;&#x50cf;&#x4e00;&#x4e2a;&#x4f20;&#x7edf;&#x7684;&#x57fa;&#x4e8e;&#x7c7b;&#x7684;&#x8bed;&#x8a00;&#x3002",{"_index":1178,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x7c7b;&#x6709;&#x4e00;&#x4e2a;&#x5bf9",{"_index":1260,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x7c7b;&#x7528;&#x4e8e;&#x6b64;&#x573a;&#x666f;&#x3002",{"_index":5107,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x7c7b;&#x7684;&#x4e00;&#x4e2a;&#x5b9e;&#x4f8b;&#x3002",{"_index":1413,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x7c7b;&#x7684;&#x5f15;&#x7528;&#xff0c;&#x5b83;&#x5c06;&#x5bf9;&#x81ea;&#x5df1;&#x7684;walk&#x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x59d4;&#x6d3e;&#x7ed9",{"_index":1261,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{}}}],["x7c7b;&#x7684;&#x65b0;&#x5b9e;&#x4f8b;&#xff0c;&#x5e76;&#x5c06;&#x5176;&#x5206;&#x914d;&#x7ed9",{"_index":146,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x7c7b;&#x7ee7;&#x627f;&#x7684;&#x65b9;&#x6cd5",{"_index":1371,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x7c7b;&#x88ab;&#x5206;&#x914d;&#x5230;&#x7c7b;&#x4f3c;&#x547d;&#x540d;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x65e0;&#x8bba;&#x662f;&#x5728;&#x6b64;&#x8fd8;&#x662f;&#x5728",{"_index":2056,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x7c7b;&#x88c5;&#x9970;&#x5668",{"_index":1552,"title":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}},"body":{}}],["x7c7b;&#x88c5;&#x9970;&#x5668;&#x4f5c;&#x4e3a;&#x5c5e;&#x6027;&#x6307;&#x4ee4;&#xff0c;&#x5e76;&#x4ee5;&#x76f8;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x9009;&#x62e9;&#x5668;&#x3002",{"_index":3238,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x7c7b;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x88ab;&#x914d;&#x7f6e;&#x4e3a;&#x63d0;&#x4f9b;&#x5bf9;&#x6211;&#x4eec;&#x7684;&#x8bf7;&#x6c42;&#x7684;&#x6a21;&#x62df;&#x54cd;&#x5e94;&#xff0c;&#x800c;&#x4e0d;&#x5b9e;&#x9645;&#x505a;&#x51fa;&#x7f51;&#x7edc;&#x8bf7;&#x6c42;&#x3002",{"_index":5287,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x7c7b;&#xff1b;&#x5728;&#x4f7f;&#x7528;xhr&#x7684;&#x670d;&#x52a1;&#x4e2d;&#xff0c;&#x4f7f;&#x7528",{"_index":5103,"title":{},"body":{"Testing/json-xhr.html#测试JSONP和XHR后端":{}}}],["x7cbe;&#x7b80;&#xff08;&#x5305;&#x62ec;&#x6df7;&#x6dc6;&#xff09;&#x3002",{"_index":3026,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x7cfb;&#x7edf;&#x3002",{"_index":1934,"title":{},"body":{"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{}}}],["x7ec4;&#x4ef6;&#x3002",{"_index":6076,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x7ec4;&#x4ef6;&#x3002;&#x8fd8;&#x6709",{"_index":683,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x7ec4;&#x4ef6;&#x4e00;&#x4e2a;&#x3002;&#x6bcf;&#x4e2a;&#x7ec4;&#x4ef6;&#x90fd;&#x6709;&#x81ea;&#x5df1;&#x7684",{"_index":677,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x7ec4;&#x4ef6;&#x4e2d;&#x6709;&#x4e00;&#x4e2a;&#x8def;&#x7531;&#x51fa;&#x53e3;&#x3002",{"_index":4534,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x7ec4;&#x4ef6;&#x4e2d;&#x7684;&#x552f;&#x4e00;&#x64cd;&#x4f5c;&#x3002;&#x6211;&#x4eec;&#x901a;&#x8fc7;&#x4f7f;&#x7528;&#x5b83;&#x7684",{"_index":5078,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x7ec4;&#x4ef6;&#x4e2d;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;id&#x663e;&#x793a;&#x4ea7;&#x54c1;&#x5217;&#x8868;&#x3002;&#x6bcf;&#x4e2a;&#x4ea7;&#x54c1;&#x90fd;&#x6709;&#x4e00;&#x4e2a;&#x94fe;&#x63a5;&#x5230",{"_index":4726,"title":{},"body":{"Routing/routeparams.html#链接到带参数的路由":{}}}],["x7ec4;&#x4ef6;&#x5177;&#x6709;&#x7531;angular&#x672c;&#x8eab;&#x7ba1;&#x7406;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#x3002",{"_index":5646,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x7ec4;&#x4ef6;&#x5185;&#x5bb9;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x540",{"_index":5653,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x7ec4;&#x4ef6;&#x548c",{"_index":6074,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x7ec4;&#x4ef6;&#x5fc5;&#x987b;&#x8bfb;&#x53d6;&#x53c2;&#x6570;&#xff0c;&#x7136;&#x540e;&#x6839;&#x636e;&#x53c2;&#x6570;&#x4e2d;&#x7ed9;&#x51fa;&#x7684;id&#x52a0;&#x8f7d;&#x4ea7;&#x54c1;&#x3002",{"_index":4731,"title":{},"body":{"Routing/routeparams.html#读取路由参数":{}}}],["x7ec4;&#x4ef6;&#x662f;&#x4e00;&#x4e2a;&#x667a;&#x80fd;&#x7ec4;&#x4ef6;&#x3002",{"_index":6066,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x7ec4;&#x4ef6;&#x751f;&#x547d;&#x5468;&#x671f",{"_index":5645,"title":{"advanced-components/component_lifecycle.html#组件生命周期":{}},"body":{}}],["x7ec4;&#x4ef6;&#x751f;&#x547d;&#x5468;&#x671f;&#x94a9;&#x5b50;&#x4e4b;&#x524d;&#x4e0d;&#x4f1a;&#x8bbe;&#x7f6",{"_index":5633,"title":{},"body":{"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{}}}],["x7ec4;&#x4ef6;&#x7684;&#x4f8b;&#x5b50;&#xff0c;&#x5e76;&#x4f7f;&#x7528",{"_index":4878,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x7ec4;&#x4ef6;&#x7684;&#x5b9e;&#x4f8b;&#x5217;&#x8868;&#xff0c;&#x5b58;&#x50a8;&#x5728;&#x4e0e;&#x6570;&#x7ec4;&#x7c7b;&#x4f3c;&#x7684;querylist",{"_index":5612,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x7ec4;&#x4ef6;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x3002",{"_index":5679,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x7ec4;&#x4ef6;&#x7684;&#x89c6;&#x56fe;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x540",{"_index":5655,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x7ec4;&#x4ef6;&#xff0c;&#x5176;&#x4e2d",{"_index":684,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x7ec4;&#x4ef6;&#xff0c;&#x6211;&#x4eec;&#x5411;&#x5b83;&#x6dfb;&#x52a0;&#x4e00;&#x4e9b",{"_index":1013,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x7ecf;&#x9a8c",{"_index":2856,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x7ecf;&#x9a8c;&#xff1a",{"_index":2865,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x7ed1;&#x5b9a",{"_index":2197,"title":{"Form/template-model-binding.html#使用-Model-绑定":{}},"body":{}}],["x7ed1;&#x5b9a;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32",{"_index":793,"title":{"Directives/ng_class_directive.html#绑定一个字符串":{}},"body":{}}],["x7ed1;&#x5b9a;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61",{"_index":809,"title":{"Directives/ng_class_directive.html#绑定一个对象":{}},"body":{}}],["x7ed1;&#x5b9a;&#x4e00;&#x4e2a;&#x6570;&#x7ec4",{"_index":803,"title":{"Directives/ng_class_directive.html#绑定一个数组":{}},"body":{}}],["x7ed1;&#x5b9a;&#x5230;&#x5176;&#x9009;&#x62e9;&#x5668",{"_index":5603,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x7ed3;&#x5c3e;&#x7684;&#x6587;&#x4ef6;&#xff09;&#x4e0a;&#x663e;&#x5f0f;&#x8c03;&#x7528;webpack&#x5904;&#x7406;&#x5668;&#x3002",{"_index":5204,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x7ed3;&#x6784;&#x5316;&#x6307;&#x4ee4;&#x5728;&#x6a21;&#x677f;&#x4e2d;&#x6709;&#x81ea;&#x5df1;&#x7684;&#x7279;&#x6b8a;&#x8bed;&#x6cd5;&#xff0c;&#x5b83;&#x4eec;&#x4f5c;&#x4e3a;&#x8bed;&#x6cd5;&#x7cd6;&#x3002",{"_index":1076,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x7ed3;&#x6784;&#x6307;&#x4ee4",{"_index":1068,"title":{"Directives/structural_directives.html#结构指令":{}},"body":{}}],["x7ed3;&#x6784;&#x6307;&#x4ee4;&#x3002",{"_index":3234,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x7ed3;&#x6784;&#x6307;&#x4ee4;&#x662f;&#x5904;&#x7406;&#x7ec4;&#x4ef6;&#x6216;&#x5143;&#x7d20;&#x901a;&#x8fc7;&#x4f7f;&#x7528;&#x6a21;&#x677f;&#x6807;&#x7b7e;&#x5448;&#x73b0;&#x7684;&#x65b9;&#x5f0f;&#x3002",{"_index":1069,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x7ed3;&#x8bba",{"_index":2918,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x7ed9;&#x51fa;&#x7684;&#x6a21;&#x677f;&#x4f5c;&#x4e3a;&#x5d4c;&#x5165;&#x89c6;&#x56fe;&#x9644;&#x52a0;&#x5230;&#x89c6;&#x56fe;&#x5bb9;&#x5668;&#x3002",{"_index":3253,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x7ed9;&#x5b9a;javascript&#x7684;&#x5e95;&#x5c42;&#x8bed;&#x4e49;&#xff0c;&#x7c7b;&#x578b;&#x901a;&#x5e38;&#x7531;&#x201c;&#x5f62;&#x72b6;&#x201d;&#x63a8;&#x7406;&#x3002",{"_index":1661,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x7ee7;&#x627f",{"_index":1358,"title":{"ES6&TypeScript/es6/inheritance.html#继承":{}},"body":{}}],["x7ee7;&#x627f;&#x4ece;&#x4e0a;&#x5230;&#x4e0b;&#x4ece;&#x57fa;&#x7c7b;&#x5230;&#x5b83;&#x7684;&#x5b50;&#x7c7b;&#x3002",{"_index":1377,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["x7ee7;&#x627f;&#x7236",{"_index":6290,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x7f13;&#x5b58;&#x884c;&#x4e3a",{"_index":2313,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["x7f16;&#x7a0b",{"_index":3011,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x7f29;&#x5199;&#x5728;&#x6bcf;&#x4e2a;&#x7528;&#x6237;&#x7684;&#x540d;&#x5b57;&#x524d;&#x9762;&#x3002",{"_index":3945,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x7f8e;&#x56e2;&#x70b9;&#x8bc4;&#x6280;&#x672f;&#x56e2;&#x961f;&#x53d1;&#x8868;&#x5728;&#x6398;&#x91d1;&#x4e0a;&#x7684;&#x4e00;&#x7bc7;&#x6587;&#x7ae0;&#x3002",{"_index":2926,"title":{},"body":{"vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2":{}}}],["x7ffb;&#x8bd1;&#x5b8c;&#x6210;&#x540e;&#xff0c;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x5c06;&#x8fd4;&#x56de;&#x7ed9;&#x60a8;&#x3002",{"_index":2631,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x7ffb;&#x8bd1;&#x6587;&#x4ef6",{"_index":2528,"title":{},"body":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{}}}],["x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x683c;&#x5f0f",{"_index":2529,"title":{},"body":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{}}}],["x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x7684;&#x8def;&#x5f84",{"_index":2550,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#xff0c;&#x5177;&#x4f53;&#x53d6;&#x51b3;&#x4e8e;&#x60a8;&#x7684;&#x504f;&#x597d;&#x3002",{"_index":2625,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x7ffb;&#x8bd1;&#x8005;&#x5fc5;&#x987b;&#x4ecb;&#x5165;&#x56e2;&#x961f;&#xff0c;&#x56e0;&#x4e3a;&#x4ed6;&#x4eec;&#x5c06;&#x7ffb;&#x8bd1;&#x5185;&#x5bb9;&#xff0c;&#x5e76;&#x9700;&#x8981;&#x6307;&#x5bfc;&#x6240;&#x4f7f;&#x7528;&#x7684;&#x8bcd;&#x7684;&#x610f;&#x56fe;&#x548c;&#x610f;&#x4e49;&#x3002",{"_index":2604,"title":{},"body":{"i18n/process-and-roles.html#过程-amp-角色":{}}}],["x8003;&#x8651;&#x4e0b;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#xff1a",{"_index":694,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x8003;&#x8651;&#x4e0b;&#x9762;&#x7684;&#x6811;&#xff0c;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x5305;&#x542b;&#x4e24;&#x4e2a;&#x6253;&#x5f00;&#x7684;&#x804a;&#x5929;&#x7a97;&#x53e3;&#x548c;&#x767b;&#x5f55;/&#x6ce8;&#x9500;&#x5c0f;&#x90e8;&#x4ef6;&#x7684;&#x804a;&#x5929;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x6a21;&#x578b;&#x3002",{"_index":669,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x8003;&#x8651;&#x4e0b;&#x9762;&#x7684;&#x7b80;&#x5355;&#x52a8;&#x4f5c;&#xff0c;&#x53d6;&#x81ea;&#x672c;&#x4e66;&#x7684;redux&#x7ae0;&#x8282;&#xff1a",{"_index":5385,"title":{},"body":{"Testing/simple-actions.html#测试简单的-Action":{}}}],["x8003;&#x8651;&#x4ee5;&#x4e0b;&#x6761;&#x4ef6;action&#xff08;&#x5373;&#xff0c;&#x6839;&#x636e;&#x5f53;&#x524d;&#x72b6;&#x6001;&#x89e6;&#x53d1;&#x7684;&#x64cd;&#x4f5c;&#xff09;&#xff1a",{"_index":4939,"title":{},"body":{"Testing/complex-actions.html#条件-Action":{}}}],["x8003;&#x8651;&#x524d;&#x9762;&#x7684;&#x4f8b;&#x5b50",{"_index":2117,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x8003;&#x8651;&#x524d;&#x9762;&#x793a;&#x4f8b;&#x7684;&#x6269;&#x5c55;&#xff1a",{"_index":1663,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x8003;&#x8651;&#x8ba4;&#x8bc1;&#x670d;&#x52a1;&#x7684;&#x4f8b;&#x5b50;&#xff0c;&#x4f60;&#x9700;&#x8981;&#x5177;&#x6709;&#x76f8;&#x540c;&#x7684;&#x4fe1;&#x606f;&#x7684;&#x76f8;&#x540c;&#x5b9e;&#x4f8b;&#x5728;&#x4efb;&#x4f55;&#x5730;&#x65b9;&#x90fd;&#x53ef;&#x4ee5;&#x5ffd;&#x7565;&#xff0c;&#x5982;&#x679c;&#x6211;&#x4eec;&#x5728;&#x4e00;&#x4e2a;&#x6025;&#x5207;&#x6216;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x4e2d;&#x4f7f;&#x7528;&#x670d;&#x52a1;&#x3002",{"_index":3835,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x8003;&#x8651;&#x8fd9;&#x4e2a;&#x4f8b;&#x5b50;&#xff0c;&#x5176;&#x4e2d;&#x4e3b;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x662f;&#x4e24;&#x4e2a;&#x6a21;&#x5757;&#x7684;&#x6d88;&#x8d39;&#x8005;&#xff1a;&#x4e00;&#x4e2a;&#x63d0;&#x4f9b;&#x7535;&#x5b50;&#x90ae;&#x4ef6;&#x670d;&#x52a1;&#xff0c;&#x53e6;&#x4e00;&#x4e2a;&#x63d0;&#x4f9b;&#x65e5;&#x5fd7;&#x670d;&#x52a1;&#x3002",{"_index":474,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x8003;&#x8651;&#x8fdb;&#x884c;&#x8ba4;&#x8bc1;&#x7684;&#x670d;&#x52a1;&#x7684;&#x793a;&#x4f8b;&#x3002",{"_index":3530,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x800c;&#x4e0d;&#x6539;&#x53d8;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x5185;&#x5bb9;&#x4e4b;&#x540e;&#xff0c;&#x907f;&#x514d;&#x4e86;&#x51b2;&#x7a81;&#x3002",{"_index":504,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["x800c;&#x4e0d;&#x662f",{"_index":2814,"title":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x6570;&#x7ec4;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5c06;&#x6211;&#x4eec;&#x7684;json&#x5bf9;&#x8c61;&#x6570;&#x7ec4;&#x4ec",{"_index":3964,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x800c;&#x662f;&#x4f7f;&#x7528;&#x8bbf;&#x95ee;&#x5668;&#x3002",{"_index":1725,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x804a;&#x804a;&#x6280;&#x672f;&#x9009;&#x578b",{"_index":2925,"title":{"vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2":{}},"body":{}}],["x8054;&#x5408;&#x7c7b;&#x578b",{"_index":1782,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x8054;&#x5408;&#x7c7b;&#x578b;&#x5141;&#x8bb8;&#x7c7b;&#x578b;&#x6ce8;&#x91ca;&#x6307;&#x5b9a;&#x5c5e;&#x6027;&#x5e94;&#x8be5;&#x662f;&#x4e00;&#x7ec4;&#x7c7b;&#x578b;&#x4e4b;&#x4e00;&#xff08;&#x4e24;&#x8005;&#x4efb;&#x4e00;&#xff09;&#x3002",{"_index":1783,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x8054;&#x5408;&#x7c7b;&#x578b;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x6587;&#x5b57;&#x7c7b;&#x578b;&#x662f;&#x4e00;&#x4e2a;&#x975e;&#x5e38;&#x6709;&#x7528;&#x7684;&#x6a21;&#x5f0f;&#xff0c;&#x521b;&#x5efa;&#x57fa;&#x672c;&#x4e0a;&#x662f;&#x5e26;&#x6709;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x7684;&#x679a;&#x4e3e;&#x3002",{"_index":1790,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x80fd;&#x63d0;&#x4f9b;&#x4ec0;&#x4e48;&#x4ef7;&#x503c;&#x3002",{"_index":6301,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x811a;&#x672c;&#x96c6;&#x6210",{"_index":4341,"title":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}},"body":{}}],["x81ea;&#x5b9a;&#x4e49;&#x4e3b;&#x9898;&#xff0c;&#x51ed;&#x636e;&#x548c;&#x672c;&#x5730;&#x5316",{"_index":6131,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x7ba1;&#x9053",{"_index":4080,"title":{"Pipes/custom_pipes.html#自定义管道":{}},"body":{}}],["x81ea;&#x5b9a;&#x4e49;&#x9a8c;&#x8bc1;&#x54cd;&#x5e94;&#x5f0f;&#x8868;&#x5355",{"_index":2103,"title":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}},"body":{}}],["x81ea;&#x5df1;&#x7684;&#x5b50;&#x8def;&#x7531",{"_index":4483,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x81ea;&#x5df1;&#x7684;&#x6d4f;&#x89c8;&#x5668;&#x5386;&#x53f2;&#x8bb0;&#x5f55;&#x6808",{"_index":4486,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x81ea;&#x5df1;&#x7684;&#x8def;&#x7531;&#x53c2;&#x6570",{"_index":4485,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x81ea;&#x5df1;&#x7684;&#x8f85;&#x52a9;&#x8def;&#x7531",{"_index":4484,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x83b7;&#x53d6;&#x4fe1;&#x7528;&#x5361;&#x53f7;&#xff0c;&#x5e76;&#x901a;&#x8fc7",{"_index":3770,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x867d;&#x7136;&#x65b9;&#x6cd5;&#x548c;&#x5173;&#x952e;&#x6982;&#x5ff5;&#x5728;&#x5f88;&#x5927;&#x7a0b;&#x5ea6;&#x4e0a;&#x4e0e;&#x5176;&#x4ed6;&#x6846;&#x67b6;&#x76f8;&#x540c;&#xff0c;&#x4f46;&#x91cd;&#x8981;&#x7684;&#x662f;&#x68c0;&#x67e5;angular",{"_index":3094,"title":{},"body":{"Accessibility/accessibility.html#Angular-2中的Web辅助功能":{},"a11y/a11y.html#Angular-2-中的-Web-无障碍":{}}}],["x867d;&#x7136;&#x8868;&#x5355;&#x662f;&#x5e73;&#x9762;&#x548c;&#x4e00;&#x7ef4;&#x7684;&#xff0c;&#x4f46;&#x4ece;&#x5b83;&#x4eec;&#x6784;&#x5efa;&#x7684;&#x6570;&#x636e;&#x4e0d;&#x662f;&#x3002;&#x5c06;&#x60a8;&#x5df2;&#x7ecf;&#x63d0;&#x4f9b;&#x7684;&#x6570;&#x636e;&#x8f6c;&#x6362;&#x4e3a;&#x6240;&#x9700;&#x7684;&#x5f62;&#x72b6;&#xff0c",{"_index":2011,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x867d;&#x7136;&#x8f6f;&#x4ef6;&#x5305;&#x547d;&#x540d;&#x4e3a",{"_index":4296,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x867d;&#x7136;&#x8fd9;&#x4e2a;&#x6d4b;&#x8bd5;&#x53ef;&#x80fd;&#x662f;&#x5fae;&#x4e0d;&#x8db3;&#x9053;&#x7684;&#xff0c;&#x4f46;&#x5b83;&#x8bf4;&#x660e;&#x4e86;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x7684;&#x57fa;&#x672c;&#x5143;&#x7d20;&#x3002",{"_index":5398,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x867d;&#x7136;angular",{"_index":2201,"title":{},"body":{"Form/template-model-binding.html#使用-Model-绑定":{}}}],["x867d;&#x7136;jasmine&#x7684;&#x8bb8;&#x591a;&#x529f;&#x80fd;&#x53ef;&#x4ee5;&#x5728;angular&#x7684;&#x6d4b;&#x8bd5;&#x6a21;&#x5757;&#x4e2d;&#x4f7f;&#x7528;&#xff0c;&#x4f46;&#x662f;angular&#x5728;&#x6d4b;&#x8bd5;&#x7ec4;&#x4ef6;&#x65f6;&#x8fd8",{"_index":5416,"title":{},"body":{"Testing/test-components.html#测试组件":{}}}],["x867d;&#x7136;jasmine&#x7684;&#x8bb8;&#x591a;&#x529f;&#x80fd;&#x5728;angular&#x7684;&#x6d4b;&#x8bd5;&#x6a21;&#x5757;&#x4e2d;&#x4f7f;&#x7528;&#xff0c;&#x4f46;&#x662f;angular&#x5728;&#x6d4b;&#x8bd5;&#x7ec4;&#x4ef6;&#x65f6;&#x8fd8;&#x9700;&#x8981;&#x4e00;&#x4e9b;&#x975e;&#x5e38;&#x5177;&#x4f53;&#x7684;&#x5305;&#x88c5;&#x5668;&#x548c;routine&#x3002",{"_index":4968,"title":{},"body":{"Testing/components.html#测试组件":{}}}],["x867d;&#x7136;node.js&#x6700;&#x521d;&#x662f;&#x7528;&#x4e8e;&#x5728;javascript&#x4e2d;&#x7f16;&#x5199;&#x670d;&#x52a1;&#x5668;&#x4ee3;&#x7801;&#xff0c;&#x4f46;&#x4eca;&#x5929;&#x5b83;&#x88ab;javascript&#x5de5;&#x5177;&#x5e7f;&#x6cdb;&#x4f7f;&#x7528;&#xff0c;&#x8fd9;&#x4f7f;&#x5f97;&#x5b83;&#x4e5f;&#x4e0e;&#x524d;&#x7aef;&#x7a0b;&#x5e8f;&#x5458;&#x76f8;&#x5173;&#x3002",{"_index":6224,"title":{},"body":{"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{}}}],["x8868;&#x5355;&#x4f7f;&#x7528;&#x5185;&#x7f6e;&#x6307;&#x4ee4;&#x4ee5;&#x6700;&#x5c11;&#x7684;&#x4ee3;&#x7801;&#x521b;&#x5efa;&#x7b80;&#x5355;&#x7684;&#x8868;&#x5355;&#x7ec4;&#x4ef6;&#x3002",{"_index":1944,"title":{},"body":{"Form/form.html#Forms":{}}}],["x8868;&#x5355;&#x5904;&#x7406;&#x7a0b;&#x5e8f;&#x5fc5;&#x987b;&#x5c06;&#x8be5;&#x6570;&#x636e;&#x8f6c;&#x6362;&#x4e3a;api&#x671f;&#x671b;&#x7684;&#x8868;&#x5355;&#x3002",{"_index":2014,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x8868;&#x793a;&#x6b64;&#x8def;&#x7531;&#x7684;&#x5b50;&#x8def;&#x7531;&#x7684;&#x8def;&#x7531;&#x5b9a;&#x4e49;&#x6570;&#x7ec4;&#xff08;&#x672c;&#x7ae0;&#x540e;&#x9762;&#x5c06;&#x4ecb;&#x7ecd;&#xff09;&#x3002",{"_index":4588,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x88ab",{"_index":6287,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x88ab;&#x52a0;&#x8f7d;&#xff08;&#x5373;&#x4f7f;&#x662f;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#xff09;&#x65f6;&#xff0c;&#x8be5;&#x670d;&#x52a1;&#x7684;&#x65b0;&#x5b9e;&#x4f8b;&#x4e0d;&#x4f1a;&#x88ab;&#x6dfb;&#x52a0;&#x5230;&#x5b50;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":3547,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x88ab;&#x544a;&#x77e5;&#x5173;&#x4e8",{"_index":413,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x88ab;&#x5b9e;&#x4f8b;&#x5316;&#x65f6;&#x4f7f;&#x7528;&#x3002",{"_index":1558,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["x88ab;&#x5f15;&#x5bfc;&#x5230;&#x6839;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":701,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x88ab;&#x652f;&#x6301;&#x8005;/&#x521b;&#x9020;&#x8005;&#x9057;&#x5f03;&#x7684;&#x6f5c;&#x5728;&#x98ce;&#x9669",{"_index":2910,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x88ab;&#x7701;&#x7565",{"_index":1855,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x88c5;&#x9970",{"_index":1833,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{}}}],["x88c5;&#x9970;&#x5668",{"_index":1574,"title":{"ES6&TypeScript/typescript/decorators.html#装饰器":{},"glossary.html#装饰器":{}},"body":{}}],["x88c5;&#x9970;&#x5668;&#x3002",{"_index":3564,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x88c5;&#x9970;&#x5668;&#x4e2d;&#x5b9a;&#x4e49;&#x7684;&#x6837;&#x5f0f;&#x4ec5;&#x9650;&#x4e8e;&#x6b64;&#x7ec4;&#x4ef6;&#x3002",{"_index":5675,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x88c5;&#x9970;&#x5668;&#x51fd;&#x6570;&#x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x7c7b;&#x6216;&#x6784;&#x9020;&#x51fd;&#x6570;&#xff08;es5&#xff09;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x3002",{"_index":1556,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["x88c5;&#x9970;&#x5668;&#x51fd;&#x6570;&#x63d0;&#x4f9b;&#x5173;&#x4e8e;&#x7c7b;&#xff0c;&#x53c2;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x88c5;&#x9970;&#x5668;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x67d0;&#x5904;&#x7684;&#x4f4d;&#x7f6e;&#xff0c;&#x6216;&#x4ee5;&#x67d0;&#x79cd;&#x65b9;&#x5f0f;&#x64cd;&#x7eb5;&#x5176;&#x76ee;&#x6807;&#x3002",{"_index":1579,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x88c5;&#x9970;&#x5668;&#x51fd;&#x6570;&#x7136;&#x540e;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x7c7b;&#x6784;&#x9020;&#x51fd;&#x6570;&#xff0c;&#x6bcf;&#x5f53",{"_index":1557,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["x88c5;&#x9970;&#x5668;&#x5305;&#x542b;&#x5177;&#x6709",{"_index":4101,"title":{},"body":{"Pipes/custom_pipes.html#自定义管道":{}}}],["x88c5;&#x9970;&#x5668;&#x5728;typescript&#x4e2d;&#x662f;&#x76f8;&#x5f53;&#x65b0;&#x7684;&#xff0c;&#x5e76;&#x4e14;&#x5927;&#x591a;&#x6570;&#x4f7f;&#x7528;&#x6848;&#x4f8b;&#x5c55;&#x793a;&#x4e86;&#x73b0;&#x6709;&#x88c5;&#x9970;&#x5668;&#x7684;&#x4f7f;&#x7528;&#x3002",{"_index":1581,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x88c5;&#x9970;&#x5668;&#x63d0;&#x4f9b;&#x5bf9;&#x5305;&#x542b;&#x7ec4;&#x4ef6;&#x7684;&#x5b50;&#x7ec4;&#x4ef6;&#x7c7b;&#x7684;&#x8bbf;&#x95ee;&#x3002",{"_index":5599,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x88c5;&#x9970;&#x5668;&#x662f;&#x51fd;&#x6570;&#xff0c;&#x6709;&#x56db;&#x4e2a;&#x4e1c;&#x897f;&#xff08;&#x7c7b;&#xff0c;&#x53c2;&#x6570;&#xff0c;&#x65b9;&#x6cd5;&#x548c;&#x5c5e;&#x6027;&#xff09;&#x53ef;&#x4ee5;&#x88c5;&#x9970",{"_index":1583,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x88c5;&#x9970;&#x5668;&#x662f;&#x7528;&#x524d;&#x7f00",{"_index":1577,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x88c5;&#x9970;&#x5668;&#x7684",{"_index":3536,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{},"Modules/introduction.html#一个模块的基本使用":{},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["x88c5;&#x9970;&#x5668;&#x81f3;&#x5c11;&#x9700;&#x8981;&#x4e09;&#x4e2a;&#x5c5e;&#x6027;&#xff1a",{"_index":3565,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x88c5;&#x9970;&#x5668;&#x88ab;&#x63d0;&#x8bae;&#x7528;&#x4e8e;&#x672a;&#x6765;&#x7248;&#x672c;&#x7684;javascript&#xff0c;&#x4f46;&#x662f;angular",{"_index":1575,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x8981;&#x4e86;&#x89e3;&#x8fd9;&#x4f1a;&#x5982;&#x4f55;&#x5f71;&#x54cd",{"_index":1012,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x8981;&#x4f7f;&#x7528;&#x8def;&#x7531;&#xff0c;&#x8bf7;&#x521b;&#x5efa",{"_index":4589,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x8981;&#x4f7f;aot&#xff08;ahead",{"_index":2541,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x8981;&#x5728;&#x5f00;&#x53d1;&#x4e2d;&#x542f;&#x7528;&#x957f;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#xff0c;&#x60a8;&#x5e94;&#x8be5;&#x5728;&#x4ee3;&#x7801;&#x4e2d;&#x5305;&#x62ec",{"_index":6710,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x8981;&#x5728;&#x6a21;&#x5757;&#x5916;&#x90e8;&#x5171;&#x4eab;&#x4ee3;&#x7801;&#x6216;&#x6570;&#x636e;&#xff0c;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":1320,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{}}}],["x8981;&#x5728;angular",{"_index":3167,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x8981;&#x5b9a;&#x4e49;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;state&#xff0c;&#x8bf7;&#x4f7f;&#x7528;&#x540d;&#x4e3a",{"_index":5812,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x8981;&#x5bf9;&#x6211;&#x4eec;&#x7684;&#x670d;&#x52a1;&#x8fdb;&#x884c;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x60f3;&#x53d1;&#x51fa;&#x5b9e;&#x9645;&#x7684;http&#x8bf7;&#x6c42;&#x3002",{"_index":5284,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x8981;&#x5c06;&#x6346;&#x7ed1;&#x6587;&#x4ef6;&#x4fdd;&#x5b58;&#x5728;&#x4e0d;&#x540c;&#x7684;&#x6587;&#x4ef6;&#x5939;&#x4e2d;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;path&#x5c5e;&#x6027;&#x3002;&#x8fd9;&#x91cc;&#xff0c",{"_index":4257,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x8981;&#x5c06;&#x8ba1;&#x6570;&#x5668;&#x7ec4;&#x4ef6;&#x4ece;&#x667a;&#x80fd;&#x7ec4;&#x4ef6;&#x8f6c;&#x6362;&#x4e3a;&#x54d1;&#x7ec4;&#x4ef6;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x66f4;&#x6539;&#x5b83;&#x4ee5;&#x5c06;&#x6570;&#x636e;&#x548c;&#x56de;&#x8c03;&#x4f20;&#x9012;&#x5230;&#x5176;&#x4e2d;&#x3002",{"_index":6089,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x8981;&#x5f00;&#x59cb;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5728;&#x6211;&#x4eec;&#x8981;&#x7ffb;&#x8bd1;&#x7684;&#x6a21;&#x677f;&#x4e2d;&#x6307;&#x5b9a;&#x6587;&#x672c;&#x3002",{"_index":2593,"title":{},"body":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["x8981;&#x6253;&#x5305;&#x5176;&#x4ed6;&#x8d44;&#x6e90;&#xff0c;&#x5982;css&#xff0c;html&#xff0c;&#x56fe;&#x50cf;&#x6216;&#x5f15;&#x5165;&#x7684;&#x5176;&#x4ed6;&#x4e1c;&#x897f;&#xff0c;&#x5b83;&#x4f7f;&#x7528;&#x989d;&#x5916;&#x7684;&#x88c5;&#x8f7d;&#x5668;&#x3002",{"_index":6236,"title":{},"body":{"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{}}}],["x8981;&#x63a7;&#x5236;&#x7528;&#x6237;&#x662f;&#x5426;&#x53ef;&#x4ee5;&#x5bfc;&#x822a;&#x5230;&#x6216;&#x79bb;&#x5f00;&#x6307;&#x5b9a;&#x8def;&#x7531;&#xff0c;&#x8bf7;&#x4f7f;&#x7528;&#x8def;&#x7531;&#x54e8;&#x5175;&#x3002",{"_index":4649,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x8981;&#x77e5;&#x9053;&#x5f53;&#x70b9;&#x51fb;&#x5b83;&#x4eec;&#x65f6;&#x52a0;&#x8f7d;&#x54ea;&#x4e9b;&#x8def;&#x5f84;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x770b;&#x770b;&#x6211;&#x4eec;&#x4f20;&#x9012;&#x7ed9;&#x6839;&#x6a21;&#x5757;&#x7684;&#x8def;&#x7531;&#x5bf9;&#x8c61;&#x3002",{"_index":3695,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x8981;&#x8bb0;&#x4f4f;&#x7684;&#x662f;&#xff0c;&#x5982;&#x679c;&#x6211;&#x4eec;&#x9075;&#x5faa",{"_index":4958,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x8981;&#x8c03;&#x7528;&#x6784;&#x5efa;&#x811a;&#x672c;&#xff0c;&#x6211;&#x4eec;&#x8fd0;&#x884c;&#x547d;&#x4ee4",{"_index":4355,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x8981;&#x8ddf;&#x8e2a;&#x4efb;&#x52a1;&#xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x770b;&#x4e0b",{"_index":6373,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x8981;&#x901a;&#x77e5;angular&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x9075;&#x5b88;&#x524d;&#x9762;&#x63d0;&#x5230;&#x7684;&#x6761;&#x4ef6;&#x4ee5;&#x63d0;&#x9ad8;&#x6027;&#x80fd;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5728",{"_index":127,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x8981;&#x9884;&#x6784;&#x5efa;&#x72ec;&#x7acb;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x60a8;&#x5fc5;&#x987b;&#x786e;&#x4fdd;&#x62e5;&#x6709;&#x8bbe;&#x7f6e;aot&#x6240;&#x9700;&#x7684;&#x5de5;&#x5177;&#x3002;&#x6709;&#x5173;&#x5982;&#x4f55;&#x6267;&#x884c;&#x6b64;&#x64cd;&#x4f5c;&#x7684;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#xff0c;&#x8bf7;&#x53c2;&#x9605",{"_index":2546,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x8986;&#x76d6;&#x6d4b;&#x8bd5;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb",{"_index":5333,"title":{"Testing/overriding.html#覆盖测试的依赖关系":{}},"body":{}}],["x89c6;&#x56fe;&#x5c01;&#x88c5",{"_index":5669,"title":{"advanced-components/view_encapsulation.html#视图封装":{}},"body":{}}],["x89c6;&#x56fe;&#x5c01;&#x88c5;&#x51b3;&#x5b9a;&#x7ec4;&#x4ef6;&#x4e2d;&#x5b9a;&#x4e49;&#x7684;&#x6a21;&#x677f;&#x548c;&#x6837;&#x5f0f;&#x662f;&#x5426;&#x4f1a;&#x5f71;&#x54cd;&#x6574;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x53cd;&#x4e4b;&#x4ea6;&#x7136;&#x3002",{"_index":5670,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x89c6;&#x56fe;&#x72b6;&#x6001;&#xff0c;&#x5982;&#x83dc;&#x5355;&#x548c;&#x6309;&#x94ae;&#x5207;&#x6362",{"_index":5809,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x89e3;&#x51b3;&#x65b9;&#x6848;&#xff1f",{"_index":3795,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x89e3;&#x6784",{"_index":1295,"title":{},"body":{"ES6&TypeScript/es6/es6.html#ES6":{}}}],["x89e3;&#x6790;&#x4e86;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;dispatch&#x4e00;&#x4e2a;action&#x6765;&#x589e;&#x52a0;&#x8ba1;&#x6570;&#x5668;&#x3002",{"_index":5900,"title":{},"body":{"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{}}}],["x89e3;&#x91ca;&#x8fd9;&#x4e2a;&#x6d4b;&#x8bd5;&#x662f;&#x4ec0;&#x4e48;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528",{"_index":5399,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x89e6;&#x53d1;&#x5f02;&#x6b65;&#x66f4;&#x65b0;&#x3002",{"_index":4891,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x89e6;&#x53d1;&#x7684",{"_index":5352,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["x89e6;&#x53d1;redux&#x7cfb;&#x7edf;&#x4e2d;&#x7684;&#x66f4;&#x6539;&#x3002;&#x53ea;&#x6709;&#x4e24;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x52a8;&#x4f5c;&#xff1a;&#x540c;&#x6b65;&#xff08;&#x6d4b;&#x8bd5;&#x76f8;&#x5f53;&#x7b80;&#x5355;&#xff09;&#x548c;&#x5f02;&#x6b65;&#xff08;&#x6d89;&#x53ca;&#x7684;&#x4e1c;&#x897f;&#x7a0d;&#x591a;&#x4e00;&#x4e9b;&#xff09;&#x3002",{"_index":5363,"title":{},"body":{"Testing/redux.html#测试-Redux":{}}}],["x8b66;&#x544a;&#xff1a",{"_index":690,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x8ba1;&#x6570;&#x5668;&#x793a;&#x4f8b",{"_index":6154,"title":{"state-management/using_redux_with_components.html#计数器示例":{}},"body":{}}],["x8ba1;&#x6570;&#x5668;&#xff0c;&#x5e76;&#x5904;&#x7406;&#x4e00;&#x4e9b;&#x70b9;&#x51fb;&#x4e8b;&#x4ef6;&#x3002",{"_index":6161,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x8ba1;&#x7b97;&#x4e00;&#x4e2a;&#x8868;&#x8fbe;&#x5f0f;&#x5e76;&#x8fd4;&#x56de;&#x503c;&#x7684;&#x51fd;&#x6570;&#x53ef;&#x4ee5;&#x88ab;&#x5b9a;&#x4e49;&#x66f4;&#x7b80;&#x5355;&#xff1a",{"_index":1141,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x8ba2;&#x9605;&#x63a5;&#x6536;&#x65b0;&#x7684;&#x8fde;&#x63a5;&#x65f6;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x68c0;&#x67e5;&#x8bf7;&#x6c42;&#x7684;&#x662f;&#x4ec0;&#x4e48;&#x7c7b;&#x578b;&#x7684;url&#xff0c;&#x5e76;&#x4f7f;&#x7528;&#x4efb;&#x4f55;&#x4e00;&#x7ec4;&#x6a21;&#x62df;&#x6570;&#x636e;&#x8fdb;&#x884c;&#x54cd;&#x5e94;&#x3002",{"_index":5315,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["x8ba2;&#x9605;&#x8fd9;&#x4e9b;&#x53ef;&#x4ee5;&#x5e2e;&#x52a9;&#x60a8;&#x786e;&#x5b9a;&#x4ee3;&#x7801;&#x662f;&#x5426;&#x610f;&#x5916;&#x89e6;&#x53d1;&#x4e86;&#x4e0d;&#x5f71;&#x54cd;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x72b6;&#x6001;&#x7684;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x3002",{"_index":6695,"title":{},"body":{"zone/zone.html#在-Zone-内":{}}}],["x8ba4;&#x8bc1;/&#x6388;&#x6743",{"_index":2312,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["x8ba9",{"_index":1851,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x8ba9;&#x6211;&#x4eec;&#x4ece;&#x5efa;&#x7acb;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x7ec4;&#x4ef6;&#x5f00;&#x59cb;&#x3002;&#x8fd9;&#x4e2a;&#x7ec4;&#x4ef6;&#x5c06;&#x8d1f;&#x8d23;&#x8ddf;&#x8e2a;&#x5176;&#x88ab;&#x70b9;&#x51fb;&#x591a;&#x5c11;&#x6b21;&#x5e76;&#x663e;&#x793a;&#x8be5;&#x6570;&#x91cf;&#x3002",{"_index":6155,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x8ba9;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x4e0a;&#x8ff0",{"_index":6762,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x8ba9;&#x6211;&#x4eec;&#x5047;&#x8bbe;&#x4e00;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x9519;&#x8bef;&#x5730;&#x521b;&#x5efa;&#x4e86;&#x4e24;&#x4e2a;&#x9488;&#x5bf9;&#x540c;&#x4e00;&#x4e2a;&#x5c5e;&#x6027;&#x7684;&#x6307;&#x4ee4;&#xff1a",{"_index":3407,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x8ba9;&#x6211;&#x4eec;&#x5047;&#x8bbe;&#x4f7f;&#x7528;&#x76f8;&#x540c;&#x7684;&#x767b;&#x5f55;&#x8868;&#x5355;&#xff0c;&#x4f46;&#x73b0;&#x5728;&#x6211;&#x4eec;&#x8fd8;&#x8981;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x7684;&#x5bc6;&#x7801;&#x5728;&#x5176;&#x4e2d;&#x67d0;&#x5904;&#x6709;&#x611f;&#x53f9;&#x53f7;&#x3002",{"_index":2106,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x8ba9;&#x6211;&#x4eec;&#x518d;&#x56de;&#x987e;&#x4e00;&#x4e0b;&#x5b83;&#x80cc;&#x540e;&#x7684;&#x903b;&#x8f91;&#x3002",{"_index":132,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x8ba9;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":3818,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x8ba9;&#x6211;&#x4eec;&#x56de;&#x5230",{"_index":4877,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x8ba9;&#x6211;&#x4eec;&#x5728",{"_index":1152,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x8ba9;&#x6211;&#x4eec;&#x5c06;&#x8fd9;&#x79cd;&#x601d;&#x8def;&#x5e94;&#x7528;&#x5230",{"_index":2124,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x8ba9;&#x6211;&#x4eec;&#x5c1d;&#x8bd5;&#x5728",{"_index":3647,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x8ba9;&#x6211;&#x4eec;&#x5f00;&#x59cb;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x7528;&#x6765;&#x663e;&#x793a;&#x4fe1;&#x7528;&#x5361;&#x4fe1;&#x606f;&#x3002",{"_index":3767,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6269;&#x5c55;&#x6211;&#x4eec;&#x7684;&#x793a;&#x4f8b;&#xff0c;&#x5e76;&#x4f7f;&#x7528;&#x6211;&#x4eec;&#x7684;&#x6d41;&#x505a;&#x4e00;&#x4e9b;&#x4e8b;&#x60c5;&#xff1a",{"_index":3939,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x4e00;&#x4e0b;&#x5728;&#x8fd9;&#x4e2a;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x4e2d;&#x4f7f;&#x7528;&#x7684;&#x4e00;&#x4e9b;&#x5173;&#x952e;&#x5c5e;&#x6027;&#xff1a",{"_index":5182,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x4e00;&#x4e2a;&#x57fa;&#x672c;&#x7ec4;&#x4ef6;&#xff1a",{"_index":5039,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x4e00;&#x4e9b;&#x4ee3;&#x7801;&#xff1a",{"_index":5009,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x770b",{"_index":6164,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x770b;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x8ba1;&#x6570;&#x5668;reducer&#x3002",{"_index":5993,"title":{},"body":{"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x770b;&#x4e0a;&#x9762;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x662f;&#x5982;&#x4f55;&#x5b9e;&#x73b0;&#x7684;&#x3002",{"_index":5055,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x8ba9;&#x6211;&#x4eec;&#x6765;&#x770b;&#x770b;&#x6211;&#x4eec;&#x5728;&#x793a;&#x4f8b;&#x5e94;&#x7528;&#x4e2d;&#x5b9a;&#x4e49;&#x7684;&#x5165;&#x53e3;&#x70b9;&#xff1a",{"_index":4214,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x8ba9;&#x6211;&#x4eec;&#x770b;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#x6fc0;&#x6d3b;&#x54e8;&#x5175;&#x68c0;&#x67e5;&#x7528;&#x6237;&#x662f;&#x5426;&#x767b;&#x5f55;&#xff1a",{"_index":4680,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x8ba9;&#x6211;&#x4eec;&#x770b;&#x770b;&#x6211;&#x4eec;&#x5982;&#x4f55;&#x5728;&#x6a21;&#x5757;&#x7684;&#x552f;&#x4e00;&#x7ec4;&#x4ef6;&#x4e2d;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":3421,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x8ba9;&#x6211;&#x4eec;&#x770b;&#x770b;&#x6211;&#x4eec;&#x5982;&#x4f55;&#x8bbe;&#x7f6e;&#x6211;&#x4eec;&#x7684;&#x914d;&#x7f6e;&#x6765;&#x89e3;&#x51b3;&#x8fd9;&#x4e9b;&#x95ee;&#x9898;&#xff1a",{"_index":4247,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x8ba9;&#x6211;&#x4eec;&#x91cd;&#x65b0;&#x8fd0;&#x884c;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x4f46;&#x8fd9;&#x6b21;&#x6211;&#x4eec;&#x5c06;&#x70b9;&#x51fb;&#x201c;chang",{"_index":143,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x8ba9;&#x7f51;&#x7ad9;&#x65e0;&#x969c;&#x788d;&#x4f1a;&#x82b1;&#x8d39;&#x66f4;&#x591a;&#x7684;&#x65f6;&#x95f4;&#x5f00;&#x53d1;&#xff0c;&#x4f46;&#x662f;&#x6709;&#x5f88;&#x591a;&#x539f;&#x56e0;&#xff0c;&#x4f60;&#x5e94;&#x8be5;&#x8ba9;&#x4f60;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x65e0;&#x969c;&#x788d;&#x3002",{"_index":6902,"title":{},"body":{"a11y/why-a11y.html#为什么需要无障碍":{}}}],["x8bb0;&#x4f4f;&#x4e09;&#x5bf9;&#x72b6;&#x6001;&#xff1a",{"_index":2250,"title":{},"body":{"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["x8bb0;&#x4f4f;&#x524d;&#x9762;&#x63d0;&#x5230;&#x7684;&#xff1a;&#x8f93;&#x5165;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":2129,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x8bb0;&#x4f4f;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x91cd;&#x6784;&#x6211;&#x4eec;&#x7684",{"_index":6079,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x8bb8;&#x591a;&#x4eba;&#x5bf9;angular",{"_index":2999,"title":{},"body":{"why_angular_2.html#Why-Angular-2":{}}}],["x8bb8;&#x591a;&#x4eba;&#x6ca1;&#x6709;&#x610f;&#x8bc6;&#x5230;&#x8fd9;&#x4e00;&#x70b9;&#xff0c;javascript&#x4e2d;&#x5b9e;&#x9645;&#x4e0a;&#x6709;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x4f46;&#x4ed6;&#x4eec;&#x53ea;&#x662f;&#x201c;&#x9e2d;&#x5b50;&#x7c7b;&#x578b;&#x201d;&#xff0c;&#x8fd9;&#x5927;&#x6982;&#x610f;&#x5473;&#x7740;&#x7a0b;&#x5e8f;&#x5458;&#x4e0d;&#x5fc5;&#x53bb;&#x60f3;&#x5b83;&#x4eec;&#x3002;typescript&#x4e2d;&#x4e5f;&#x5b58;&#x5728;javascript&#x7684;&#x7c7b;&#x578b;&#xff1a",{"_index":1834,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x8bb8;&#x591a;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#x7684;&#x72b6;&#x6001",{"_index":6132,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x8bbe;&#x7f6e;&#x548c;&#x4f7f;&#x7528",{"_index":4197,"title":{"Project-setup/installation_and_usage.html#设置和使用":{}},"body":{"Project-setup/installation_and_usage.html#安装":{}}}],["x8bbe;&#x7f6e;&#x7684;&#x62a5;&#x4ef7;&#x3002;&#x6700;&#x540e;&#x4e00;&#x884c;&#x8bd5;&#x56fe;&#x65ad;&#x8a00;dom&#x7684;div&#x6807;&#x7b7e;&#x5305;&#x542b;&#x6a21;&#x62df;&#x62a5;&#x4ef7;&#x2019;test",{"_index":5085,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x8bbf;&#x95ee;&#x4ed6;&#x4eec;&#x7684;&#x7236;&#x4e0a;&#x4e0b;&#x6587;&#x3002",{"_index":2130,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x8bbf;&#x95ee;&#x5b50;&#x7ec4;&#x4ef6;&#x7c7b",{"_index":5598,"title":{"advanced-components/access_child_components.html#访问子组件类":{}},"body":{}}],["x8bbf;&#x95ee;&#x7236;&#x8def;&#x7531;&#x7684;&#x53c2;&#x6570",{"_index":4548,"title":{"Routing/child_routes.html#访问父路由的参数":{}},"body":{}}],["x8bc6;&#x522b;&#x6839;&#x6a21;&#x5757;&#x7684;&#x7b80;&#x5355;&#x65b9;&#x6cd5;&#x662f;&#x67e5;&#x770b;&#x5176",{"_index":3592,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x8bcd;&#x6c47;&#x8868",{"_index":2738,"title":{"glossary.html#词汇表":{}},"body":{}}],["x8bd1;&#x6ce8",{"_index":1164,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x8be5;&#x5de5;&#x5177;&#x663e;&#x793a;&#x4e0e;&#x5176;&#x5b58;&#x50a8;&#x4ea4;&#x4e92;&#x7684;&#x64cd;&#x4f5c;&#x7684;&#x7ebf;&#x6027;&#x65f6;&#x95f4;&#x7ebf;&#x3002;&#x5141;&#x8bb8;&#x91cd;&#x653e;&#x64cd;&#x4f5c;&#x548c;&#x9519;&#x8bef;&#x5904;&#x7406",{"_index":5834,"title":{},"body":{"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{}}}],["x8be5;&#x72b6;&#x6001;&#x901a;&#x8fc7;&#x201c;reducing&#x201d;&#x4e00;&#x4e2a;&#x96c6;&#x5408;&#x6216;&#x52a8;&#x4f5c;&#x6d41;&#x6765;&#x8ba1;&#x7b97;&#x5b9e;&#x73b0;&#x4ee5;&#x53ef;&#x63a7;&#x7684;&#x65b9;&#x5f0f;&#x66f4;&#x65b0;&#x3002",{"_index":6013,"title":{},"body":{"state-management/redux.html#什么是-Redux":{}}}],["x8be5;&#x811a;&#x672c;&#x9996;&#x5148;&#x52a0;&#x8f7d;systemjs&#x5e93;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x7136;&#x540e;&#x8c03;&#x7528",{"_index":1333,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{}}}],["x8be6;&#x7ec6;&#x7684;&#x201c;&#x957f;&#x201d;&#x5806;&#x6808;&#x8ddf;&#x8e2a",{"_index":6720,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x8bed;&#x53e5;&#x5c06;&#x5bfc;&#x81f4;&#x7c7b;&#x4f3c;&#x4e8",{"_index":3178,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x8bed;&#x53e5;&#x6709;&#x5173;&#x3002",{"_index":431,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x8bed;&#x6cd5",{"_index":3550,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x8bed;&#x6cd5;&#x4e0e;es6",{"_index":1801,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x8bed;&#x8a00;&#x73af;&#x5883;&#x7684;&#x540d;&#x79f0",{"_index":2551,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x8bf4;&#x6211;&#x4eec;&#x6709;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x4fdd;&#x6301;&#x663e;&#x793a;&#x4e00;&#x4e2a;&#x5b9a;&#x4e49;&#x7684;&#x6d88;&#x606f;&#x3002",{"_index":5534,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x8bf7;&#x53c2;&#x9605;&#x8be5",{"_index":5519,"title":{},"body":{"Testing/using-chai.html#使用Chai":{}}}],["x8bf7;&#x5c0f;&#x5fc3;&#x4f7f;&#x7528",{"_index":691,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x8bf7;&#x6ce8;&#x610f;&#x5728;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x5305;&#x542b",{"_index":5678,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["x8bf7;&#x6ce8;&#x610f;&#x94fe;&#x63a5;&#x51fd;&#x6570;&#x6837;&#x5f0f;&#xff0c;&#x4ee5;&#x53ca;typescript&#x9644;&#x5e26;&#x7684;&#x53ef;&#x9009;&#x9759;&#x6001;&#x7c7b;&#x578b;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x672c;&#x793a;&#x4f8b;&#x4e2d;&#x4f7f;&#x7528;&#x3002",{"_index":3952,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8bf7;&#x6ce8;&#x610f;&#xff0c",{"_index":2055,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{},"Form/validating_forms.html#验证模板驱动的表单":{},"state-management/using_redux_with_components.html#计数器示例":{}}}],["x8bf7;&#x6ce8;&#x610f;&#xff0c;&#x201c;transit",{"_index":3078,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["x8bf7;&#x6ce8;&#x610f;&#xff0c;&#x4e24;&#x8005;&#x90fd;&#x5b9a;&#x4f4d;&#x5230;&#x5177;&#x6709;&#x5c5e;&#x6027;&#x7a81;&#x51fa;&#x663e;&#x793a;&#x7684;&#x4efb;&#x4f55;html&#x5143;&#x7d20;&#x3002",{"_index":3419,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x8bf7;&#x6ce8;&#x610f;&#xff0c;&#x5728",{"_index":3783,"title":{},"body":{"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{}}}],["x8bf7;&#x6ce8;&#x610f;&#xff0c;&#x7ed1;&#x5b9a;&#x6307;&#x4ee4;&#x7684;&#x65b9;&#x5f0f;&#x4e0e;&#x7ec4;&#x4ef6;&#x5c5e;&#x6027;&#x7ed1;&#x5b9a;&#x5b8c;&#x5168;&#x76f8;&#x540c;&#x3002",{"_index":1049,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x8bf7;&#x770b;&#x4e0b;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#xff1a",{"_index":1139,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x8bf8;&#x5982;&#x201c;&#x5e94;&#x8be5;&#x5de5;&#x4f5c;&#x201d;&#x6216;&#x201c;&#x6d4b;&#x8bd5;&#x670d;&#x52a1;&#x201d;&#x4e4b;&#x7c7b;&#x7684;&#x6d88;&#x606f;&#x4e0d;&#x80fd;&#x771f;&#x6b63;&#x89e3;&#x91ca;&#x53d1;&#x751f;&#x4e86;&#x4ec0;&#x4e48;&#xff0c;&#x5e76;&#x4e14;&#x5728;&#x6574;&#x4e2a;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e0a;&#x8fd0;&#x884c;&#x591a;&#x4e2a;&#x6d4b;&#x8bd5;&#x65f6;&#x53ef;&#x80fd;&#x4f1a;&#x4ea7;&#x751f;&#x6df7;&#x6dc6;&#x3002",{"_index":5402,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x8bfb;&#x53d6;&#x67e5;&#x8be2;&#x53c2;&#x6570",{"_index":4614,"title":{"Routing/query_params.html#读取查询参数":{}},"body":{}}],["x8bfb;&#x53d6;&#x8def;&#x7531;&#x53c2;&#x6570",{"_index":4730,"title":{"Routing/routeparams.html#读取路由参数":{}},"body":{}}],["x8c03;&#x7528;&#x5728;&#x7c7b;&#x7684;&#x5b9e;&#x4f8b;&#x4e0a;&#x5b9a;&#x4e49;&#x7684",{"_index":1417,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8c03;&#x7528;&#x65f6;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x4ece;&#x5176;&#x4ed6;&#x63d2;&#x4ef6;&#x6536;&#x96c6;&#x5fc5;&#x8981;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x5982",{"_index":3188,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["x8c03;&#x7528;&#x6dfb;&#x52a0;&#x5230",{"_index":5753,"title":{},"body":{"state-management/configuring_your_application.html#配置你的应用":{}}}],["x8c03;&#x7528;&#x751f;&#x6548;&#x65f6",{"_index":6530,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x8c03;&#x7528;&#xff0c;&#x5e76;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#xff0c",{"_index":1554,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["x8c03;&#x7528;.then()&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5c06;&#x671f;&#x671b;&#x5e94;&#x7528;&#x7a0b;&#x5e8f",{"_index":6548,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x8c03;&#x8bd5;&#x4fe1;&#x606f",{"_index":6381,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x8c37;&#x6b4c;&#x8d8b;&#x52bf",{"_index":3009,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x8d1f;&#x8d23;&#xff1a",{"_index":6795,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["x8d44;&#x6e90",{"_index":4326,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x8ddf;&#x8e2a;&#x5f02;&#x6b65;&#x64cd;&#x4f5c",{"_index":6512,"title":{"zone/tracking_async_operations.html#跟踪异步操作":{}},"body":{}}],["x8def;&#x5f84;&#x65f6;&#x52a0;&#x8f7d;&#x7684;&#x9ed8;&#x8ba4;&#x7ec4;&#x4ef6;&#x3002",{"_index":3721,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x8def;&#x7531",{"_index":4753,"title":{"Routing/routing.html#路由":{}},"body":{}}],["x8def;&#x7531;&#x4e09;&#x94fe;&#x63a5;&#x5230;&#x6839;&#x7ec4;&#x4ef6;&#x7684;&#x5b50;&#x8282;&#x70b9;&#xff08;&#x5982;&#x679c;&#x5f53;&#x524d;&#x8def;&#x7531;&#x662f;&#x6839;&#x7ec4;&#x4ef6;&#xff0c;&#x5219;&#x4e0e;&#x8def;&#x7531;&#x4e00;&#x7b49;&#x6548;&#xff09;&#x3002",{"_index":4565,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["x8def;&#x7531;&#x4e4b;&#x95f4;&#x6765;&#x56de;&#x5bfc;&#x822a;&#xff0c",{"_index":3644,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x8def;&#x7531;&#x4e8c;&#x94fe;&#x63a5;&#x5230;&#x5f53;&#x524d;&#x8def;&#x7531;&#x7684;&#x5144;&#x5f1f;&#x3002",{"_index":4564,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["x8def;&#x7531;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x5728;url&#x4e2d;&#x8868;&#x8fbe;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x67d0;&#x79cd;&#x72b6;&#x6001;&#x3002;&#x4e0e;&#x670d;&#x52a1;&#x5668;&#x7aef;&#x524d;&#x7aef;&#x89e3;&#x51b3;&#x65b9;&#x6848;&#x4e0d;&#x540c;&#xff0c;&#x8fd9;&#x662f;&#x53ef;&#x9009;&#x7684",{"_index":4757,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x8def;&#x7531;&#x53c2;&#x6570",{"_index":4606,"title":{},"body":{"Routing/query_params.html#传递可选参数":{},"Routing/query_params.html#读取查询参数":{}}}],["x8def;&#x7531;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":4553,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["x8def;&#x7531;&#x53ef;&#x4ee5;&#x8ba9;&#x4f60;&#xff1a",{"_index":4761,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x8def;&#x7531;&#x54e8;&#x5175;&#x8fd8;&#x53ef;&#x4ee5;&#x63a7;&#x5236;&#x7528;&#x6237;&#x662f;&#x5426;&#x53ef;&#x4ee5;&#x79bb;&#x5f00;&#x67d0;&#x4e2a;&#x8def;&#x7531;&#x3002",{"_index":4652,"title":{},"body":{"Routing/route_guards.html#路由拦截":{}}}],["x8def;&#x7531;&#x5b9a;&#x4e49;&#x5bf9;&#x8c61",{"_index":4576,"title":{"Routing/config.html#路由定义对象":{}},"body":{}}],["x8def;&#x7531;&#x5c06;&#x7b49;&#x5f85;&#xff0c;&#x76f4;&#x5230;&#x5b83;&#x88ab;&#x89e3;&#x51b3;&#x5e76;&#x4e14;&#x4f7f;&#x7528;&#x8be5;&#x503c;&#x6765;&#x51b3;&#x5b9a;&#x662f;&#x5426;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#x3002",{"_index":4698,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["x8def;&#x7531;&#x62e6;&#x622a",{"_index":4648,"title":{"Routing/route_guards.html#路由拦截":{}},"body":{}}],["x8def;&#x7531;&#x6fc0;&#x6d3b;&#x65f6;&#x68c0;&#x67e5;&#xff0c",{"_index":4677,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x8def;&#x7531;&#x7684;&#x8def;&#x5f84;&#x4e2d;&#x7684",{"_index":4723,"title":{},"body":{"Routing/routeparams.html#声明路由参数":{}}}],["x8def;&#x7531;&#x914d;&#x7f6e;&#x6570;&#x7ec4",{"_index":4590,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x8def;&#x7531;&#xff0c;&#x53ea;&#x6709;&#x767b;&#x5f55;&#x7684;&#x7528;&#x6237;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#x3002",{"_index":4665,"title":{},"body":{"Routing/route_guards.html#在路由上注册路由哨兵":{}}}],["x8def;&#x7531;url&#x7b80;&#x5355;&#x5730;&#x6307;&#x5b9a;&#x4e3a;&#xff1a",{"_index":4544,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x8f6c;&#x6362;&#x4e3a",{"_index":3965,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8f6c;&#x6362;&#x4e3a;angular",{"_index":3562,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x8f6c;&#x6362;&#x5230",{"_index":3876,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x8f85;&#x52a9;&#x51fa;&#x53e3;&#x5fc5;&#x987b;&#x5728;&#x7ec4;&#x4ef6;&#x4e2d;&#x5177;&#x6709;&#x552f;&#x4e00;&#x7684;&#x540d;&#x79f0;&#x3002",{"_index":4468,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x8f93;&#x51fa;&#x7ed3;&#x679c",{"_index":6392,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["x8f93;&#x51fa;&#x914d;&#x7f6",{"_index":4234,"title":{"Project-setup/installation_and_usage.html#输出配置":{}},"body":{}}],["x8fc7;&#x6e21;&#x67b6;&#x6784",{"_index":3083,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["x8fc7;&#x7a0b;&amp;&#x89d2;&#x8272",{"_index":2602,"title":{"i18n/process-and-roles.html#过程-amp-角色":{}},"body":{}}],["x8fd0;&#x7b97;&#x7b26;&#x521b;&#x5efa;&#x5bf9;&#x8c61;&#x65f6;&#xff0c;&#x8c03;&#x7528;&#x7c7b;&#x6784;&#x9020;&#x51fd;&#x6570;&#xff0c;&#x5728;&#x5b8c;&#x5168;&#x521b;&#x5efa;&#x5bf9;&#x8c61;&#x4e4b;&#x524d;&#x5c06;&#x8c03;&#x7528;&#x5b83;&#x3002",{"_index":1380,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#对象初始化":{}}}],["x8fd0;&#x7b97;&#x7b26;&#x521b;&#x5efa;&#x7684;&#x7c7b;&#x7684;&#x5b9e;&#x4f8b;&#x3002;&#x5f53;&#x4f7f;&#x7528;&#x70b9;&#x53f7;&#x8bbf;&#x95ee;&#x5bf9;&#x8c61;&#x4e0a;&#x7684;&#x65b9;&#x6cd5;&#x65f6;&#xff0c",{"_index":1186,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x8fd0;&#x884c",{"_index":6207,"title":{},"body":{"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{}}}],["x8fd0;&#x884c;&#x3002",{"_index":1847,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x8fd0;&#x884c;&#x547d;&#x4ee4",{"_index":4973,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x8fd0;&#x884c;ng",{"_index":2637,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":3954,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x533f;&#x540d;&#x51fd;&#x6570;&#xff0c;&#x662f;&#x5b9e;&#x9645;&#x7684;&#x88c5;&#x9970;&#x5668;&#x3002",{"_index":1555,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;promise&#x3002",{"_index":6544,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;promise&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4ece;&#x6d4b;&#x8bd5;&#x4e2d;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;promise&#xff0c;&#x5e76;&#x4e14",{"_index":4954,"title":{},"body":{"Testing/complex-actions.html#异步-Action":{}}}],["x8fd4;&#x56de;false&#x65f6;&#xff0c;&#x7528;&#x6237;&#x65e0;&#x6cd5;&#x8bbf;&#x95ee;&#x8def;&#x7531;&#x3002",{"_index":4686,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x8fd4;&#x56de;true&#x65f6;&#xff0c;&#x7528;&#x6237;&#x53ef;&#x4ee5;&#x6fc0;&#x6d3b;&#x8def;&#x7531;&#x3002",{"_index":4685,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x8fd8;&#x53ef;&#x4ee5;&#x5c06;&#x7f16;&#x8bd1;&#x4f5c;&#x4e3a;&#x6211;&#x4eec;&#x5de5;&#x4f5c;&#x6d41;&#x7a0b;&#x7684;&#x6784;&#x5efa;&#x6b65;&#x9aa4;&#x6765;&#x6267;&#x884c;&#x3002",{"_index":3605,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["x8fd8;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x901a;&#x77e5;&#x7528;&#x6237;&#x4ed6;&#x4eec;&#x65e0;&#x6cd5;&#x8bbf;&#x95ee;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x8be5;&#x90e8;&#x5206;&#xff0c;&#x6216;&#x5c06;&#x5b83;&#x4eec;&#x91cd;&#x5b9a;&#x5411;&#x5230;&#x767b;&#x5f55;&#x9875;&#x9762;&#x3002",{"_index":4688,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x8fd8;&#x63d0;&#x4f9b;&#x4e86;&#x53ef;&#x4ee5;&#x88ab;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#x522b;&#x540d;&#x7684;&#x5176;&#x4ed6;&#x503c;&#xff1a",{"_index":955,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x8fd8;&#x662f",{"_index":3725,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x8fd8;&#x6709;&#x4e24;&#x4e2a;&#x5b50;&#x6ce8;&#x5165;&#x5668;&#xff0c;&#x6bcf;&#x4e2a",{"_index":676,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["x8fd8;&#x6709;&#x5176;&#x4ed6;html5&#x5c5e;&#x6027;&#xff0c;&#x53ef;&#x4ee5;&#x5b66;&#x4e60;&#x548c;&#x5e94;&#x7528;&#x4e8e;&#x5404;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x8f93;&#x5165",{"_index":2230,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["x8fd8;&#x6709;&#x66f4;&#x591a;&#x7684;&#x5c5e;&#x6027;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x6269;&#x5c55;&#x548c;&#x914d;&#x7f6e;karma&#x7684;&#x529f;&#x80fd",{"_index":5249,"title":{},"body":{"Testing/karma-config.html#其他资源":{}}}],["x8fd8;&#x7b80;&#x8981;&#x63d0;&#x53ca;&#x4e86",{"_index":564,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x8fd8;&#x8981;&#x6ce8;&#x610f;&#xff0c;&#x5728;&#x5bf9;&#x5143;&#x7d20;&#x8fdb;&#x884c;&#x6837;&#x5f0f;&#x8bbe;&#x8ba1;&#x65f6;&#xff0c;html&#x7684",{"_index":1057,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x8fd9;&#x4e0d;&#x4f1a;&#x751f;&#x6548",{"_index":1450,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8fd9;&#x4e0d;&#x662f;&#x5fc5;&#x8981;&#x7684;&#x9519;&#x8bef;&#xff0c;&#x4f60;&#x53ef;&#x80fd;&#x4f1a;&#x53d1;&#x73b0;&#xff0c;&#x4f60;&#x53ef;&#x80fd;&#x9700;&#x8981;&#x4e0d;&#x540c;&#x7684;&#x5b9e;&#x4f8b;&#x76f8;&#x540c;&#x7684;&#x670d;&#x52a1;&#xff0c;&#x4f46;&#x6211;&#x6253;&#x8d4c;&#x5927;&#x90e8;&#x5206;&#x65f6;&#x95f4;&#xff0c;&#x8fd9;&#x4e0d;&#x662f;&#x4f60;&#x60f3;&#x8981;&#x7684;&#x3002",{"_index":3834,"title":{},"body":{"Modules/shared-modules-di.html#共享模块和依赖注入":{}}}],["x8fd9;&#x4e0d;&#x662f;&#xff0c;&#x81f3;&#x5c11;&#x8fd8;&#x6ca1;&#x6709;&#x3002",{"_index":426,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x8fd9;&#x4e0d;&#x662f;angular&#x6216;typescript&#x7684;&#x4e00;&#x4e2a;&#x620f;&#x6cd5;&#xff0c;&#x5b83;&#x662f;&#x7b80;&#x5355;&#x7684;javascript&#x95ed;&#x5305;&#x3002",{"_index":2120,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x6307;&#x4ee4;&#x662f;&#x76f8;&#x4f3c;&#x7684;&#xff0c;&#x4ed6;&#x4eec;&#x8bd5;&#x56fe;&#x5bf9;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x8fdb;&#x884c;&#x98ce;&#x683c;&#x5316;&#x3002",{"_index":3416,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x8fd9;&#x4e24;&#x8005;&#x90fd;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x597d;&#x7684;&#x5339;&#x914d;&#xff0c;&#x56e0;&#x4e3a;&#x4e00;&#x4e2a;promise&#x53ef;&#x4ee5;&#x5728;&#x4e00;&#x4e2a;&#x7b2c;&#x4e09;&#x65b9;&#x5e93;&#x4e2d;&#x521b;&#x5efa;&#x548c;&#x89e3;&#x6790;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x6709;&#x81ea;&#x5df1;&#x7684",{"_index":6536,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x8fd9;&#x4e2a;&#x4f8b;&#x5b50;&#x662f;&#x53e6;&#x4e00;&#x4e2a",{"_index":578,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x8fd9;&#x4e2a;&#x4f8b;&#x5b50;&#x662f;&#x5728",{"_index":3408,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x8fd9;&#x4e2a;&#x5b9e;&#x73b0;&#x4ea4;&#x6362;&#x7684;&#x6700;&#x597d;&#x7684;&#x90e8;&#x5206;&#x662f;&#x6ce8;&#x5165;&#x7cfb;&#x7edf;&#x77e5;&#x9053;&#x5982;&#x4f55;&#x6784;&#x5efa",{"_index":586,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x8fd9;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x60f3;&#x6cd5;&#x8bc1;&#x660e;&#x662f;&#x975e;&#x5e38;&#x5f3a;&#x5927;&#x7684;&#x3002",{"_index":5989,"title":{},"body":{"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}}}],["x8fd9;&#x4e2a;&#x7bad;&#x5934;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x7684",{"_index":1157,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x8fd9;&#x4e2a;&#x7c7b;&#x901a;&#x8fc7;&#x5b9e;&#x73b0",{"_index":4682,"title":{},"body":{"Routing/route_guards.html#实现CanActivate":{}}}],["x8fd9;&#x4e2a;&#x7ecf;&#x5386;&#x8ba9;&#x6211;&#x4eec;&#x5bf9;&#x4f7f;&#x7528;react&#x6784;&#x5efa;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x611f;&#x5230;&#x5931;&#x671b;&#x3002",{"_index":2863,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x8fd9;&#x4e2a;&#x88c5;&#x9970;&#x5668;&#x9664;&#x4e86;&#x5c06;&#x5176;&#x7ed9;&#x5b9a;&#x7684;&#x53c2;&#x6570;&#x548c;&#x5176;&#x76ee;&#x6807;&#x7684;&#x7c7b;&#x540d;&#x6ce8;&#x9500;&#x5230;&#x63a7;&#x5236;&#x53f0;&#x4e4b;&#x5916;&#x4ec0;&#x4e48;&#x90fd;&#x4e0d;&#x505a;&#x3002",{"_index":1559,"title":{},"body":{"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{}}}],["x8fd9;&#x4e2a;&#x8bbe;&#x7f6e;&#x544a;&#x8bc9;angular&#x7684;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#x7cfb;&#x7edf;&#x6bcf;&#x4e2a;&#x5468;&#x671f;&#x68c0;&#x67e5;&#x8fd9;&#x4e2a;&#x7ba1;&#x9053;&#x7684;&#x8f93;&#x51fa;&#xff0c;&#x65e0;&#x8bba;&#x5b83;&#x7684;&#x8f93;&#x5165;&#x662f;&#x5426;&#x6539;&#x53d8;&#x3002",{"_index":4163,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["x8fd9;&#x4e2a;&#x8bcd;&#x6765;&#x5f15;&#x7528;&#x7c7b;&#x7684;&#x5f53;&#x524d;&#xff08;&#x8fd0;&#x884c;&#x65f6;&#xff09;&#x5b9e;&#x4f8b;&#x3002;&#x5728",{"_index":1182,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x8fd9;&#x4e2a;&#x9519;&#x8bef;&#x544a;&#x8bc9;&#x6211;&#x4eec;&#xff0c;&#x5b9a;&#x4e49;&#x4e86",{"_index":3651,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x8fd9;&#x4e2a;&#x957f;&#x683c;&#x5f0f;&#x5f88;&#x65b9;&#x4fbf;&#x3002",{"_index":581,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x8fd9;&#x4e2a;zone&#x4ec5;&#x7528;&#x4e8e;&#x8bf4;&#x660e;&#x76ee;&#x7684;&#x3002",{"_index":6524,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x8fd9;&#x4e3a;&#x60a8;&#x7684;&#x6784;&#x5efa;&#x8fc7;&#x7a0b;&#x63d0;&#x4f9b;&#x4e86;&#x8fde;&#x7eed;&#x6027;&#xff0c;&#x5e76;&#x4f7f;&#x4eba;&#x4eec;&#x66f4;&#x5bb9;&#x6613;&#x6d4b;&#x8bd5;/&#x8fd0;&#x884c;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x800c;&#x65e0;&#x9700;&#x4e86;&#x89e3;&#x60a8;&#x7684;&#x786e;&#x5207;&#x6280;&#x672f;&#x5806;&#x6808;&#x3002",{"_index":4979,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x8fd9;&#x4e3b;&#x8981;&#x662f;&#x4e3a;&#x4e86;&#x65b9;&#x4fbf;&#x8bbf;&#x95ee;&#x3002",{"_index":2059,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x8fd9;&#x4e5f;&#x5c06;&#x786e;&#x4fdd",{"_index":1419,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8fd9;&#x4e9b;&#x505a;&#x4ec0;&#x4e48;&#x5462;&#xff1f",{"_index":3942,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8fd9;&#x4e9b;&#x51b3;&#x5b9a;&#x662f;&#x81f3;&#x5173;&#x91cd;&#x8981;&#x7684;&#xff0c;&#x6709;&#x65f6;&#x751a;&#x81f3;&#x5173;&#x4e4e;&#x751f;&#x6b7b;&#x3002",{"_index":2891,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x8fd9;&#x4e9b;&#x533a;&#x57df;&#x662f;&#x6267;&#x884c;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x5141;&#x8bb8;angular&#x8ddf;&#x8e2a;&#x5f02;&#x6b65;&#x6d3b;&#x52a8;&#x7684;&#x5f00;&#x59cb;&#x548c;&#x5b8c;&#x6210;&#xff0c;&#x5e76;&#x6839;&#x636e;&#x9700;&#x8981;&#x6267;&#x884c;&#x4efb;&#x52a1;&#xff08;&#x4f8b;&#x5982;&#xff0c;&#x53d8;&#x5316;&#x68c0;&#x6d4b;&#xff09;&#x3002",{"_index":6670,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x8fd9;&#x4e9b;&#x5b50;&#x8def;&#x7531;&#x7684;&#x7ec4;&#x4ef6;&#x5c06;&#x663e;&#x793a;&#x5728;&#x54ea;&#x91cc;&#xff1f",{"_index":4531,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["x8fd9;&#x4e9b;&#x5b57;&#x7b26;&#x4e32;&#x6587;&#x5b57;&#x53ef;&#x4ee5;&#x5305;&#x62ec;&#x6362;&#x884c;&#x7b26;&#xff0c;&#x5e76;&#x4e14;&#x6709;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x673a;&#x5236;&#x7528;&#x4e8e;&#x5c06;&#x53d8;&#x91cf;&#x63d2;&#x5165;&#x5b57;&#x7b26;&#x4e32;&#xff1a",{"_index":1526,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x8fd9;&#x4e9b;&#x5bf9;&#x53ef;&#x4ee5;&#x5728;&#x60a8;&#x7684;css&#x4e2d;&#x4f7f;&#x7528;&#x8bb8;&#x591a;&#x7ec4;&#x5408;&#xff0c;&#x4ee5;&#x6839;&#x636e;&#x5b83;&#x4eec;&#x4ee3;&#x8868;&#x7684;&#x4e09;&#x4e2a;&#x72ec;&#x7acb;&#x7684;&#x6807;&#x5fd7;&#x6765;&#x6539;&#x53d8;&#x6837;&#x5f0f;&#x3002",{"_index":2251,"title":{},"body":{"Form/visual_cues_for_users.html#用户的视觉提示":{}}}],["x8fd9;&#x4e9b;&#x5e95;&#x5c42;&#x5f62;&#x72b6;&#x50cf;typescript&#x7684;&#x63a5;&#x53e3;&#x4e00;&#x6837;&#x5de5;&#x4f5c;&#xff0c;&#x4e8b;&#x5b9e;&#x4e0a;typescript&#x6bd4;&#x8f83;&#x7c7b;&#x548c;&#x7c7b;&#x63a5;&#x53e3;&#x4e4b;&#x7c7b;&#x7684;&#x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#x3002",{"_index":1662,"title":{},"body":{"ES6&TypeScript/typescript/shapes.html#Shapes":{}}}],["x8fd9;&#x4e9b;&#x62e6;&#x622a;&#x53ef;&#x80fd;&#x5bfc;&#x81f4;&#x5916;&#x90e8;&#x5e93;&#x548c;angular&#x4e4b;&#x95f4;&#x7684;&#x610f;&#x5916;&#x884c;&#x4e3a;&#x3002",{"_index":6678,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x8fd9;&#x4e9b;&#x64cd;&#x4f5c;&#x901a;&#x8fc7;&#x4f7f;&#x7528;karma&#x63d2;&#x4ef6;&#x6765;&#x6267;&#x884c;&#xff0c;&#x5e76;&#x4e14;&#x7ecf;&#x5e38;&#x7528;&#x4e8e;&#x6362;&#x884c;&#x64cd;&#x4f5c;&#x3002",{"_index":5200,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x8fd9;&#x4e9b;&#x6539;&#x8fdb;&#x6709;&#x52a9;&#x4e8e;&#x51cf;&#x5c11;&#x5b66;&#x4e60;angular",{"_index":3051,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x8fd9;&#x4e9b;&#x6587;&#x4ef6;&#x4f1a;&#x6309;&#x987a;&#x5e8f;&#x52a0;&#x8f7d;&#xff0c;&#x6240;&#x4ee5;&#x987a;&#x5e8f;&#x5f88;&#x91cd;&#x8981;&#x3002",{"_index":5187,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x8fd9;&#x4e9b;&#x662f;&#x5f88;&#x7b80;&#x5355;&#x7684;&#x6d4b;&#x8bd5;&#xff1a",{"_index":5386,"title":{},"body":{"Testing/simple-actions.html#测试简单的-Action":{}}}],["x8fd9;&#x4e9b;&#x662f;&#x7528;&#x6237;&#x5b9a;&#x4e49;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x5728;&#x8fd9;&#x4e9b;&#x6d88;&#x606f;&#x4e2d;&#x63cf;&#x8ff0;&#x6027;&#x548c;&#x51c6;&#x786e;&#x6027;&#x662f;&#x4e00;&#x4e2a;&#x597d;&#x4e3b;&#x610f;&#x3002",{"_index":5401,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x8fd9;&#x4e9b;&#x670d;&#x52a1;&#x5c06;&#x6211;&#x4eec;&#x7684;&#x6839;&#x6a21;&#x5757;&#x4e0e;&#x7279;&#x5b9a;&#x5e73;&#x53f0;&#xff08;&#x6d4f;&#x89c8;&#x5668;&#xff09;&#x8026;&#x5408;&#xff0c;&#x4f46;&#x6211;&#x4eec;&#x5e0c;&#x671b;&#x6211;&#x4eec;&#x7684;&#x7279;&#x6027;&#x6a21;&#x5757;&#x4e0e;&#x5e73;&#x53f0;&#x65e0;&#x5173;&#x3002",{"_index":3489,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x8fd9;&#x4e9b;&#x811a;&#x672c;&#x5728",{"_index":4346,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x8fd9;&#x4e9b;api&#x88ab;&#x8bbe;&#x8ba1;&#x6210",{"_index":5697,"title":{},"body":{"animation/index.html#动画":{}}}],["x8fd9;&#x4f1a;&#x5bfc;&#x81f4;&#x590d;&#x6742;&#x7684;&#x53d8;&#x6362;&#x3002",{"_index":2012,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x8fd9;&#x4f1a;&#x5c06",{"_index":4362,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x8fd9;&#x4f1a;&#x7ed9;&#x5f00;&#x53d1;&#x8005;&#x5e26;&#x6765;&#x6df7;&#x4e71",{"_index":1162,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x8fd9;&#x4f7f",{"_index":5194,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x8fd9;&#x4f7f;&#x5f97;&#x5728;&#x66f4;&#x6539;action&#x548c;reducers&#x65f6;&#x6ca1;&#x6709;&#x5931;&#x53bb;redux&#x4e3a;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x5e26;&#x6765;&#x7684;&#x7075;&#x6d3b;&#x6027;&#x3002",{"_index":4774,"title":{},"body":{"Testing/after-thoughts.html#Afterthoughts":{}}}],["x8fd9;&#x4f7f;&#x5f97;&#x6d4b;&#x8bd5;&#x66f4;&#x5bb9;&#x6613;&#xff0c;&#x56e0;&#x4e3a;&#x60a8;&#x4e00;&#x6b21;&#x53ea;&#x5173;&#x6ce8;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x4e00;&#x4e2a;&#x65b9;&#x9762;&#x3002",{"_index":5064,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x8fd9;&#x4f7f;&#x6211;&#x4eec;&#x80fd;&#x591f;&#x751f;&#x6210;&#x751f;&#x4ea7;&#x6240;&#x9700;&#x7684;html&#x6587;&#x4ef6;&#x3002",{"_index":4371,"title":{},"body":{"Project-setup/plugins.html#插件":{}}}],["x8fd9;&#x4f7f;&#x6211;&#x4eec;&#x80fd;&#x591f;&#x8bbf;&#x95ee;&#x7c7b;&#x65b9;&#x6cd5;&#xff0c;&#x5982",{"_index":5605,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x8fd9;&#x5141;&#x8bb8;&#x5728;&#x4e0d;&#x6539;&#x53d8;&#x5f53;&#x524d",{"_index":6784,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x8fd9;&#x5141;&#x8bb8;&#x59d4;&#x6258;&#x94a9;&#x5b50;&#x800c;&#x4e0d;&#x4f1a;&#x91cd;&#x65b0;&#x5305;&#x88c5;&#x56de;&#x8c03;&#x3002",{"_index":6789,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["x8fd9;&#x5141;&#x8bb8;&#x5bf9;&#x503c;&#x7684;&#x52a8;&#x6001;&#x66f4;&#x6539;&#xff0c;&#x800c;&#x4e14;&#x8ba9;&#x6dfb;&#x52a0;&#x548c;&#x5220;&#x9664;&#x6837;&#x5f0f;&#x5c5e;&#x6027;&#x66f4;&#x52a0;&#x7075;&#x6d3b;&#x3002",{"_index":1061,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x8fd9;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x8ddf;&#x8e2a;&#x51fd;&#x6570;&#x91cc;&#x4f7f;&#x7528;&#x7684;&#x7c7b;&#x578b;&#x7684;&#x4fe1;&#x606f;&#x3002",{"_index":1606,"title":{},"body":{"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["x8fd9;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x8fd0;&#x884c;&#x4e00;&#x4e9b;&#x4ee3;&#x7801;&#x6765;&#x51b3;&#x5b9a;&#x6700;&#x7ec8;&#x6e32;&#x67d3;&#x7684;&#x8f93;&#x51fa;&#x3002",{"_index":1070,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x8fd9;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x914d;&#x7f6e;&#x4e00;&#x4e2a;&#x6d4b;&#x8bd5;&#x6a21;&#x5757;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x63d0;&#x4f9b;&#x6a21;&#x62df;&#x4f9d;&#x8d56;&#x3002",{"_index":5048,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x8fd9;&#x5141;&#x8bb8;&#x8de8;&#x8d8a;&#x8bb8;&#x591a;&#x5f02;&#x6b65;&#x8c03;&#x7528;&#x6765;&#x8ddf;&#x8e2a",{"_index":6521,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["x8fd9;&#x53ea;&#x662f;angular2",{"_index":5247,"title":{},"body":{"Testing/karma-config.html#其他资源":{}}}],["x8fd9;&#x53ef;&#x4ee5;&#x52a0;&#x5feb;&#x5b8c;&#x6210;&#x6574;&#x4e2a;&#x6d4b;&#x8bd5;&#x5468;&#x671f;&#x6240;&#x9700;&#x7684;&#x603b;&#x65f6;&#x95f4;&#xff0c;&#x56e0;&#x4e3a;&#x7279;&#x5b9a;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x4e0d;&#x4f1a;&#x963b;&#x6b62;&#x5176;&#x4ed6;&#x6d4b;&#x8bd5;&#x7684;&#x6267;&#x884c;&#x3002",{"_index":4841,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["x8fd9;&#x53ef;&#x4ee5;&#x5f88;&#x5bb9;&#x6613;&#x6539;&#x53d8;&#xff1a",{"_index":428,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x8fd9;&#x53ef;&#x4ee5;&#x6f5c;&#x5728;&#x5730;&#x7528;&#x4e8e;&#x7f8e;&#x5316;&#x6548;&#x679c;&#x6216;&#x7528;&#x7528;&#x4e8e;&#x624b;&#x52a8;&#x5904;&#x7406;&#x7ec4;&#x4ef6;&#x52a0;&#x8f7d;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x65e0;&#x8bba;&#x662f;&#x6027;&#x80fd;&#x8fd8;&#x662f;ux&#x3002",{"_index":3235,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x8fd9;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x660e;&#x786e;&#x8bbe;&#x7f6e;&#x6765;&#x56fa;&#x5b9a;&#x3002",{"_index":1443,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8fd9;&#x544a;&#x8bc9;&#x8def;&#x7531;&#x5668;&#x5728;&#x5339;&#x914d;&#x7a7a;&#x8def;&#x5f84;&#xff08;&#x2019;&#x2019;&#xff09;&#x65f6;&#x91cd;&#x5b9a;&#x5411;&#x5230",{"_index":4620,"title":{},"body":{"Routing/redirects.html#将路由器重定向到另一条路由":{}}}],["x8fd9;&#x544a;&#x8bc9;angular",{"_index":4555,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["x8fd9;&#x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x7684;&#x65b0;&#x5b9e;&#x4f8b;&#xff0c;&#x5b8c;&#x6210;&#x4efb;&#x4f55;&#x89d2;&#x5ea6;&#x7279;&#x5b9a;&#x7684;&#x4f8b;&#x7a0b;&#xff0c;&#x5982;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x3002",{"_index":5072,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x8fd9;&#x5c06;&#x5728;&#x540e;&#x7eed;&#x6b65;&#x9aa4;&#x4e2d;&#x6dfb;&#x52a0;&#x3002",{"_index":2072,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x8fd9;&#x5c06;&#x8ba9;&#x6211;&#x4eec;&#x8bbf;&#x95ee;&#x7ec4;&#x4ef6;&#xff0c;&#x6307;&#x4ee4;&#x548c;providers&#xff0c;&#x5982",{"_index":2051,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x8fd9;&#x5c06;&#x8fd0;&#x884c;typescript&#x7f16;&#x8bd1;&#x5668;&#xff0c;&#x5b83;&#x9075;&#x5faa;&#x4e0a;&#x9762;&#x6307;&#x5b9a;&#x7684;&#x914d;&#x7f6e;&#x8bbe;&#x7f6e;&#x3002",{"_index":4302,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x8fd9;&#x5c06;&#x901a;&#x77e5;angular&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x53ea;&#x53d6;&#x51b3;&#x4e8e;&#x5b83;&#x7684;&#x8f93;&#x5165;&#xff0c;&#x5e76;&#x4e14;&#x4f20;&#x9012;&#x7ed9;&#x5b83;&#x7684;&#x4efb;&#x4f55;&#x5bf9;&#x8c61;&#x5e94;&#x8be5;&#x88ab;&#x8ba4;&#x4e3a;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#x3002;&#x8fd9;&#x6b21;&#x5f53;&#x6211;&#x4eec;&#x70b9;&#x51fb;&#x201c;chang",{"_index":130,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x8fd9;&#x5c0f;&#x8282;&#x5185;&#x5bb9;&#x662f;&#x8bd1;&#x8005;&#x52a0;&#x7684;&#xff0c;&#x56e0;&#x4e3a;&#x6211;&#x8ba4;&#x4e3a;&#x5bf9;&#x4e8e;&#x65b0;&#x624b;&#x800c;&#x8a00;&#xff0c;&#x5b66;&#x4e60;&#x4e00;&#x4e2a;&#x6846;&#x67b6;&#x662f;&#x6709;&#x6210;&#x672c;&#x7684;&#xff0c;&#x7279;&#x522b;&#x662f;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x4e0d;&#x7b97;&#x7b80;&#x5355;&#x7684;&#x6280;&#x672f;&#x6765;&#x8bf4;&#xff0c;&#x6211;&#x5e0c;&#x671b;&#x8fd9;&#x7bc7;&#x6559;&#x7a0b;&#x662f;&#x5bf9;&#x65b0;&#x624b",{"_index":3005,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x8fd9;&#x5c31;&#x662f;&#x4e3a;&#x4ec0;&#x4e48;&#x6211;&#x4eec;&#x53ea;&#x5bfc;&#x5165",{"_index":3490,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x8fd9;&#x5c31;&#x662f;&#x6a21;&#x5757;&#x52a0;&#x8f7d;&#x5668;&#x8981;&#x89e3;&#x51b3;&#x7684;&#x95ee;&#x9898;&#x3002",{"_index":1328,"title":{},"body":{"ES6&TypeScript/es6/es6_modules.html#模块系统":{}}}],["x8fd9;&#x5e76;&#x4e0d;&#x610f;&#x5473;&#x7740;&#x6211;&#x4eec;&#x4e0d;&#x80fd;&#x63a5;&#x53d7;&#x65b0;&#x7684;&#x9009;&#x62e9;&#xff0c;&#x4f46;&#x662f;&#x73b0;&#x5728;&#xff0c;&#x5bf9;&#x4e8e;&#x6211;&#x4eec;&#x7684;&#x5ba2;&#x6237;&#xff0c;angular&#x7b26;&#x5408;&#x4ed6;&#x4eec;&#x7684;&#x9700;&#x6c42;&#xff0c;&#x6211;&#x4eec;&#x5bf9;&#x7ed3;&#x679c;&#x611f;&#x5230;&#x975e;&#x5e38;&#x6fc0;&#x52a8;&#x3002",{"_index":2921,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x8fd9;&#x610f;&#x5473;&#x7740;&#x53ef;&#x80fd;&#x62e5;&#x6709;&#x5c5e;&#x4e8e;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x7684;&#x670d;&#x52a1;&#xff0c;&#x8fd9;&#x4e9b;&#x670d;&#x52a1;&#x4e0d;&#x80fd;&#x7531;&#x6839;&#x6a21;&#x5757;&#x6216;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x70ed;&#x52a0;&#x8f7d;&#x7684;&#x6a21;&#x5757;&#x8bbf;&#x95ee;&#x3002",{"_index":3632,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x8fd9;&#x610f;&#x5473;&#x7740;&#x5df2;&#x7ecf;&#x719f;&#x7ec3;&#x4f7f;&#x7528;angular&#x7684;&#x7a0b;&#x5e8f;&#x5458;&#x5c06;&#x6bd4;&#x53e6;&#x4e00;&#x4e2a;&#x7c7b;&#x4f3c;react&#x6216;&#x7c7b;&#x4f3c;ember&#x7684;&#x6846;&#x67b6;&#x66f4;&#x5bb9;&#x6613;&#x8fc1;&#x79fb;&#x5230;angular",{"_index":3059,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x8fd9;&#x610f;&#x5473;&#x7740;&#x8fd9;&#x4e9b;&#x8bbe;&#x7f6e;&#x5e94;&#x8be5;&#x7531;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7279;&#x6027;&#x51b3;&#x5b9a;&#xff0c;&#x56e0;&#x6b64;&#x7531;&#x5bfc;&#x5165",{"_index":480,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x8fd9;&#x662f;&#x4e00;&#x4e2a",{"_index":3937,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x5178;&#x578b;&#x7684;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#xff0c;&#x60a8;&#x5c06;&#x5728;&#x6b64;&#x573a;&#x666f;&#x4e2d;&#x770b;&#x5230;&#xff0c;&#x6ca1;&#x6709;zone&#xff0c;&#x53ea;&#x663e;&#x793a;&#x53d1;&#x751f;&#x672a;&#x5904;&#x7406;&#x5f02;&#x5e38;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":6718,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5",{"_index":1180,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x6784;&#x9020;&#x51fd;&#x6570",{"_index":1179,"title":{},"body":{"ES6&TypeScript/es6/classes.html#类":{}}}],["x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x7834;&#x4f8b;&#x6765;&#x8bf4;&#x660e;&#x8fd9;&#x4e2a;&#x95ee;&#x9898;&#x3002",{"_index":6752,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x975e;&#x5e38;&#x5c0f;&#x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x4f46;&#x6211;&#x4eec;&#x5c06;&#x5982;&#x4f55;&#x6d4b;&#x8bd5;&#x5462;&#xff1f",{"_index":5538,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x8fd9;&#x662f;&#x4e00;&#x79cd;&#x81ea;&#x52a8;&#x8fde;&#x63a5;&#x65b9;&#x6cd5;&#xff0c;&#x53ea;&#x8981;&#x6709;&#x591a;&#x4e2a;&#x7528;&#x6237;&#xff0c;&#x5c31;&#x4f1a;&#x7acb;&#x5373;&#x5f00;&#x59cb;&#x5e7f;&#x64ad;&#x3002",{"_index":3888,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x8fd9;&#x662f;&#x4e2a;&#x4eba;&#x559c;&#x597d;&#x7684;&#x95ee;&#x9898",{"_index":4992,"title":{},"body":{"Testing/filename-conventions.html#文件名约定":{}}}],["x8fd9;&#x662f;&#x56e0;&#x4e3a",{"_index":1439,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8fd9;&#x662f;&#x56e0;&#x4e3a;&#x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x5de5;&#x5382;&#xff0c;&#x6211;&#x4eec;&#x6ca1;&#x6709;&#x5728;&#x4efb;&#x4f55;&#x5730;&#x65b9;&#x8bbf;&#x95e",{"_index":599,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x8fd9;&#x662f;&#x56e0;&#x4e3a;&#x5b83;&#x662f;&#x8bed;&#x6cd5;&#x7cd6;&#xff0c;&#x5141;&#x8bb8;&#x4ee5;&#x66f4;&#x76f4;&#x89c2;&#x7684;&#x65b9;&#x5f0f;&#x4f7f;&#x7528;&#x6307;&#x4ee4;&#xff0c;&#x7c7b;&#x4f3c;&#x4e8e;&#x5728;angular",{"_index":1079,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x8fd9;&#x662f;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x4f18;&#x5316;&#x6211;&#x4eec;&#x7684;&#x751f;&#x4ea7;&#x3002",{"_index":4240,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x8fd9;&#x662f;&#x56e0;&#x4e3a;&#x8ba1;&#x6570;&#x5668;&#x7ec4;&#x4ef6;&#x8026;&#x5408;&#x5230;&#x7279;&#x5b9a;&#x7684;&#x72b6;&#x6001;&#x548c;&#x52a8;&#x4f5c;&#x3002",{"_index":6086,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x8fd9;&#x662f;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bbe;&#x7f6e;&#x9884;&#x671f;&#x7684;&#x8def;&#x5f84;&#xff0c;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x4f7f;&#x7528;&#x7684;&#x7ec4;&#x4ef6;&#xff0c;&#x6211;&#x4eec;&#x5e0c;&#x671b;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x6765;&#x7406;&#x89e3;&#x5b83;&#x4eec;&#x3002",{"_index":4578,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x8fd9;&#x662f;&#x6211;&#x4eec;&#x5c06;&#x5728;&#x6574;&#x4e2a;&#x793a;&#x4f8b;&#x4e2d;&#x4f7f;&#x7528;&#x7684;appstate&#xff1a",{"_index":5821,"title":{},"body":{"state-management/example_application.html#示例应用":{}}}],["x8fd9;&#x662f;&#x7531;&#x4e8e;angular",{"_index":3250,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x8fd9;&#x662f;&#x88c5;&#x9970;&#x5de5;&#x5382;&#x6a21;&#x5f0f;&#x7684;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#x3002",{"_index":1594,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x8fd9;&#x662f;&#x8ddf;&#x8e2a;&#x54ea;&#x4e9b;&#x7ec4;&#x4ef6;/&#x670d;&#x52a1;/&#x7ba1;&#x9053;&#x7b49;&#x6709;&#x6ca1;&#x6709;&#x5199;&#x6d4b;&#x8bd5;&#x7684;&#x597d;&#x65b9;&#x6cd5;&#x3002",{"_index":5481,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x8fd9;&#x662f;&#x901a;&#x8fc7",{"_index":3967,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8fd9;&#x662f;&#x901a;&#x8fc7;&#x4e3a;&#x63d0;&#x4f9b;angular",{"_index":572,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x8fd9;&#x662f;&#x901a;&#x8fc7;&#x521b;&#x5efa;&#x4efb;&#x52a1;&#x6570;&#x7ec4;&#x6765;&#x5b8c;&#x6210;&#x7684;&#x3002",{"_index":4304,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x8fd9;&#x662f;&#x901a;&#x8fc7;&#x5728;&#x6267;&#x884c;&#x6bcf;&#x4e2a;&#x6d4b;&#x8bd5;&#x4e4b;&#x524d;&#x8c03;&#x7528",{"_index":5549,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x8fd9;&#x6b21;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x79f0;&#x4e3a",{"_index":3537,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x8fd9;&#x6b21;&#xff0c;&#x53ea;&#x8981;&#x6211;&#x4eec;&#x66f4;&#x6539",{"_index":3810,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x8fd9;&#x6b21;&#xff0c;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":145,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{}}}],["x8fd9;&#x770b;&#x8d77;&#x6765;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x4f46;&#x8bfb;&#x8005;&#x4f1a;&#x60f3;&#x77e5;&#x9053;angular",{"_index":418,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["x8fd9;&#x79cd;&#x5b57;&#x7b26;&#x4e32;&#x53ef;&#x4ee5;&#x5728;&#x5404;&#x79cd;&#x5404;&#x6837;&#x7684;&#x5730;&#x65b9;&#x6d3e;&#x4e0a;&#x7528;&#x573a;&#xff0c;&#x524d;&#x7aef;&#x5f00;&#x53d1;&#x662f;&#x5176;&#x4e2d;&#x4e4b;&#x4e00;&#x3002",{"_index":1527,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["x8fd9;&#x79cd;&#x65b9;&#x6cd5;&#x79f0;&#x4e3a;&#x201c;ahead",{"_index":3606,"title":{},"body":{"Modules/introduction.html#引导应用程序":{}}}],["x8fd9;&#x79cd;&#x884c;&#x4e3a;&#x53ef;&#x80fd;&#x5f88;&#x5c11;&#x53d1;&#x751f;&#xff0c;&#x6216;&#x8005;&#x5f53;&#x5b83;&#x5728;&#x4e00;&#x4e2a;&#x5c0f;&#x56e2;&#x961f;&#x4e2d;&#x53d1;&#x751f;&#x65f6;&#x5f88;&#x5bb9;&#x6613;&#x89e3;&#x51b3",{"_index":472,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}}}],["x8fd9;&#x79cd;&#x884c;&#x4e3a;&#x88ab;&#x79f0;&#x4e3a;&#x51b7",{"_index":3864,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["x8fd9;&#x8bf4;&#x660e;&#x5728;typescript&#x7684;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#xff0c;&#x5e76;&#x8868;&#x793a;&#x7ed3;&#x675f",{"_index":1845,"title":{},"body":{"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{},"ES6&TypeScript/typescript/typescript_features.html#类型":{}}}],["x8fd9;&#x901a;&#x5e38;&#x7528;&#x4e8e;&#x5305;&#x62ec;&#x6587;&#x4ef6;&#x5939;&#x3002",{"_index":4320,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x8fd9;&#x901a;&#x5e38;&#x7528;&#x4e8e;&#x6392;&#x9664;&#x6587;&#x4ef6;&#x5939;&#xff0c;&#x4f8b;&#x5982;&#x3002",{"_index":4318,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x8fd9;&#x901a;&#x5e38;&#x7528;&#x4e8e;&#x6d4b;&#x8bd5;&#x6587;&#x4ef6;&#x6269;&#x5c55;&#x540d;&#x3002",{"_index":4314,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x8fd9;&#x9075;&#x5faa;&#x4e0a;&#x9762;&#x6307;&#x5b9a;&#x7684;&#x8bed;&#x6cd5;&#x3002",{"_index":4316,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x8fd9;&#x91cc",{"_index":1266,"title":{},"body":{"ES6&TypeScript/es6/delegation.html#委托":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#xff0c;&#x7136;&#x540e;&#x544a;&#x8bc9;typescript&#x4f7f;&#x7528;&#x7c7b;&#x578b;&#x65ad;&#x8a00;&#x5c06;&#x5176;&#x89c6;&#x4e3a",{"_index":4821,"title":{},"body":{"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x5728;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x9ed8;&#x8ba4;&#x8def;&#x5f84;&#x53eb;&#x505a",{"_index":3701,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x5c06",{"_index":3636,"title":{},"body":{"Modules/lazy-load-di.html#延迟加载和依赖注入树":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x5c06;&#x770b;&#x770b;&#x5982;&#x4f55;&#x901a;&#x8fc7;&#x5f02;&#x6b65;&#x56de;&#x8c03;&#x4f20;&#x64ad;zone&#x7684;&#x57fa;&#x672c;&#x673a;&#x5236;&#x3002",{"_index":6339,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x6307;&#x5b9a;&#x4ee5;json&#x548c;html&#x683c;&#x5f0f;&#x8f93;&#x51fa;&#x7ed3;&#x679c;&#x3002",{"_index":5220,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x6709;&#x4e00;&#x4e2a",{"_index":4888,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x6d4b;&#x8bd5;&#x6211;&#x4eec;&#x8bd5;&#x56fe;&#x8bbe;&#x7f6e;&#x7684;&#x6d88;&#x606f;&#x662f;&#x5426;&#x5c06",{"_index":5555,"title":{},"body":{"Testing/verify.html#验证方法和属性":{}}}],["x8fd9;&#x91cc;&#x6211;&#x4eec;&#x7684;&#x7ec4;&#x4ef6;&#x4f9d;&#x8d56;&#x4e8",{"_index":5060,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["x8fd9;&#x91cc;&#x6211;&#x591a;&#x8bf4;&#x4e00;&#x53e5;&#xff0c;&#x6700;&#x8fd1;&#x770b;&#x4e00;&#x4e9b;&#x6587;&#x7ae0;&#x4e2d;&#x8c37;&#x6b4c;&#x8d8b;&#x52bf;&#x622a;&#x56fe;&#xff0c;&#x5927;&#x90fd;&#x6ca1;&#x6709;&#x628a;&#x8303;&#x56f4;&#x9650;&#x5b9a;&#x5728;&#x201c",{"_index":3010,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x8fd9;&#x91cc;&#x6211;&#x9009;&#x53d6;&#x7684;&#x4e3b;&#x8981;&#x662f;&#x4ed8;&#x8d39;&#x8bfe;&#x7a0b;&#xff0c;&#x56e0;&#x4e3a;&#x4ed8;&#x8d39;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x4e00;&#x5b9a;&#x7a0b;&#x5ea6;&#x4e0a;&#x53cd;&#x5e94;&#x4e86;&#x8fd9;&#x4e2a;&#x6846;&#x67b6;&#x7684;&#x5e02;&#x573a;&#x9700;&#x6c42;&#x3002;&#x6559;&#x7a0b;&#x591a;&#x610f;&#x5473;&#x7740;&#x793e;&#x533a;&#x5e9e;&#x5927;&#xff0c;&#x4f01;&#x4e1a;&#x5bf9;&#x8fd9;&#x65b9;&#x9762;&#x4eba;&#x624d;&#x6709;&#x9700;&#x6c42;&#x3002;&#x5982;&#x679c;&#x6846;&#x67b6;&#x51b7;&#x95e8;&#x7528;&#x7684;&#x4eba;&#x4e0d;&#x591a;&#xff0c;&#x90a3;&#x81ea;&#x7136;&#x4e0d;&#x4f1a;&#x6709;&#x4eba;&#x53bb;&#x4e3a;&#x5176;&#x5f00;&#x53d1;&#x6559;&#x7a0b;&#x3002",{"_index":3014,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x8fd9;&#x91cc;&#x662f;&#x4e00;&#x4e2a;&#x4f7f;&#x7528;&#x666e;&#x901a;&#x88c5;&#x9970;&#x5668;&#x7684;&#x7ecf;&#x5178;&#x5c5e;&#x6027;&#x793a;&#x4f8b;&#x3002",{"_index":1726,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x8fd9;&#x91cc;&#x662f;&#x4e00;&#x4e2a;&#x57fa;&#x672c;&#x7684;&#x670d;&#x52a1;&#x3002",{"_index":5010,"title":{},"body":{"Testing/http.html#测试HTTP请求":{}}}],["x8fd9;&#x91cc;&#x662f;&#x4e0a;&#x9762;&#x4f8b;&#x5b50;&#x7684;&#x8f93;&#x51fa",{"_index":6765,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["x8fd9;&#x91cc;&#x662f;&#x5b8c;&#x6574;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#x94a9;&#x5b50;&#x63a5;&#x53e3;&#x6e05;&#x5355;&#xff1a",{"_index":5648,"title":{},"body":{"advanced-components/component_lifecycle.html#组件生命周期":{}}}],["x8fd9;&#x91cc;&#x662f;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x6211;&#x4eec;&#x7684;&#x62fc;&#x56fe;&#x7684;&#x90e8;&#x5206;&#xff08;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff09;&#x3002",{"_index":3567,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["x8fd9;&#x91cc;&#x662f;&#x6211;&#x4eec;&#x7684",{"_index":5196,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x8fd9;&#x91cc;&#x662f;angular&#x6a21;&#x5757;&#x7684;&#x68d8;&#x624b;&#x90e8;&#x5206;&#x3002",{"_index":3511,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x8fd9;&#x91cc;&#x6709;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#xff1a",{"_index":4470,"title":{},"body":{"Routing/aux-routes.html#使用辅助路由":{}}}],["x8fd9;&#x91cc;&#x6709;&#x4e24;&#x4e2a;&#x771f;&#x6b63;&#x6709;&#x7528;&#x7684;&#x6570;&#x7ec4;&#x64cd;&#x4f5c",{"_index":3941,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x8fd9;&#x91cc;&#x6709;&#x51e0;&#x4e2a;&#x91cd;&#x8981;&#x7684;&#x4e8b;&#x60c5;&#x8981;&#x6ce8;&#x610f;&#xff1a",{"_index":3708,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x8fd9;&#x91cc;&#x7684",{"_index":1411,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8fd9;&#x91cc;&#x7684;&#x4e00;&#x4e2a;&#x5f88;&#x5927;&#x7684;&#x533a;&#x522b;&#x662f;&#xff0c;&#x7531;&#x4e8e;&#x7ed3;&#x6784;&#x6307;&#x4ee4;&#x7684;&#x6027;&#x8d28;&#x7ed1;&#x5b9a;&#x5230;&#x6a21;&#x677f;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bbf;&#x95e",{"_index":3239,"title":{},"body":{"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{}}}],["x8fd9;&#x91cc;&#xff0c;&#x4e0d;&#x7ba1;&#x662f;&#x5426;&#x5c06;&#x76f8;&#x540c;&#x7684;&#x503c;&#x4f20;&#x9012;&#x7ed9;&#x4ee4;&#x724c;&#x7684;&#x6784;&#x9020;&#x5668;&#xff0c;&#x5b83;&#x5c06;&#x4e0d;&#x4f1a;&#x5bfc;&#x81f4;&#x76f8;&#x540c;&#x7684;&#x7b26;&#x53f7;&#x3002",{"_index":502,"title":{},"body":{"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{}}}],["x8fd9;&#x91cc;&#xff0c;&#x5728",{"_index":1425,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8fd9;&#x91cc;&#xff0c;&#x5728;somefunction&#x5185;&#x7684",{"_index":1430,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["x8fd9;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x4e00;&#x4e2a;&#x8868;&#x8fbe;&#x5f0f;&#x548c;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x5b57;&#x9762;&#x91cf;&#x7ed1;&#x5b9a;&#x5230",{"_index":1050,"title":{},"body":{"Directives/ng_style_directive.html#NgStyle-指令":{}}}],["x8fd9;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x9884;&#x6784;&#x5efa",{"_index":4351,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["x8fd9;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x770b;&#x5230;&#x6211;&#x4eec;&#x524d;&#x9762;&#x8bf4;&#x7684;&#x7ed3;&#x6784;&#x5316;&#x6307;&#x4ee4;&#x4f7f;&#x7528;&#x7684",{"_index":1082,"title":{},"body":{"Directives/structural_directives.html#结构指令":{}}}],["x8fd9;&#x975e;&#x5e38;&#x65b9;&#x4fbf;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x53ef;&#x4ee5;&#x4fdd;&#x6301;&#x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x53ef;&#x94fe;&#x63a5;&#x5e76;&#x4e14;&#x53ef;&#x4ee5;&#x88ab;&#x6dfb;&#x52a0;&#x4e3a;&#x4e66;&#x7b7e;&#xff0c;&#x8fd8;&#x5141;&#x8bb8;&#x7528;&#x6237;&#x4e0e;&#x4ed6;&#x4eba;&#x5206;&#x4eab;&#x94fe;&#x63a5;&#x3002",{"_index":4760,"title":{},"body":{"Routing/why_routing.html#为什么要用路由？":{}}}],["x8fd9;&#x9f13;&#x52b1;&#x4f60;&#x628a;&#x4f60;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x60f3;&#x8c61;&#x6210;&#x4ece;&#x4e00;&#x7cfb;&#x5217;&#x4e8b;&#x4ef6;&#x4e2d;&#x201c;&#x8ba1;&#x7b97;&#x201d;&#x7684;ui&#x3002",{"_index":5992,"title":{},"body":{"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{}}}],["x8fdb;&#x4e00;&#x6b65;&#x9605;&#x8bfb;&#x548c;&#x53c2;&#x8003",{"_index":2733,"title":{"further-reading.html#进一步阅读和参考":{}},"body":{}}],["x8fdb;&#x5165;/&#x79bb;&#x5f00",{"_index":6343,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["x8fdb;&#x5ea6;&#x4e8b;&#x4ef6",{"_index":2354,"title":{"Http/progress.html#HTTP-进度事件":{}},"body":{"Http/progress.html#HTTP-进度事件":{}}}],["x8fdb;&#x884c;&#x6574;&#x5408;spy&#x6d4b;&#x8bd5;&#x529f;&#x80fd;&#x3002",{"_index":5487,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["x8fdb;&#x884c;&#x6bcf;&#x4e2a;&#x8f6c;&#x6362;&#x6bcf;&#x4e2a;&#x6307;&#x4ee4;&#x3002",{"_index":3432,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["x9002;&#x5f53;&#x7684;&#x5de5;&#x5177;&#x548c;&#x8bbe;&#x7f6e;&#x5bf9;&#x4efb;&#x4f55;&#x9879;&#x76ee;&#x90fd;&#x662f;&#x597d;&#x7684;&#xff0c;&#x4f46;&#x5b83;&#x5bf9;&#x4e8e;angular",{"_index":4376,"title":{},"body":{"Project-setup/project-setup.html#项目设置":{}}}],["x9002;&#x7528;&#x4e8e;&#x9700;&#x8981;&#x5b9e;&#x73b0;&#x591a;&#x4e2a;&#x63a5;&#x53e3;&#x7684;&#x5bf9;&#x8c61;&#x548c;&#x53c2;&#x6570;&#x3002",{"_index":1795,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["x9009;&#x62e9;&#x6a21;&#x5f0f",{"_index":6152,"title":{},"body":{"state-management/using_redux_with_components.html#使用-Redux-与-Components":{}}}],["x9009;&#x9879;&#x8bbe;&#x7f6e;&#x4e3a;true&#xff0c;&#x53ef;&#x4ee5;&#x5bf9;&#x8fdb;&#x5ea6;&#x4e8b;&#x4ef6;&#x8fdb;&#x884c;&#x8ddf;&#x8e2a;&#x3002",{"_index":2356,"title":{},"body":{"Http/progress.html#HTTP-进度事件":{}}}],["x901a;&#x5e38",{"_index":966,"title":{},"body":{"Directives/ng_for_directive.html#局部变量":{}}}],["x901a;&#x5e38;&#x6269;&#x5c55;&#x8bed;&#x53e5;&#x548c;&#x5269;&#x4f59;&#x53c2;&#x6570;&#x88ab;&#x5f15;&#x7528;&#x4e3a;spread&#x548c;rest&#x8fd0;&#x7b97;&#x7b26;&#xff0c;&#x4f46;&#x5b83;&#x4eec;&#x4e0d;&#x662f;&#x6839;&#x636e;ecmascript&#x89c4;&#x8303;&#x7684;&#x8fd0;&#x7b97;&#x7b26;&#x3002;&#x4e00;&#x4e9b;&#x53c2;&#x8003",{"_index":1504,"title":{},"body":{"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{}}}],["x901a;&#x5e38;&#x80fd;&#x63d0;&#x9ad8;&#x6548;&#x7387",{"_index":2834,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x901a;&#x5e38;&#xff0c;&#x5728;&#x5f02;&#x6b65;&#x4e8b;&#x4ef6;&#x94fe;&#x671f;&#x95f4;&#x629b;&#x51fa;&#x7684;&#x5f02;&#x5e38;&#x5c06;&#x4ec5;&#x5305;&#x62ec;&#x5728;&#x5f53;&#x524d;&#x65b9;&#x6cd5;&#x7684;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#x4e2d;&#x3002",{"_index":6708,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x901a;&#x5e38;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x8981;&#x91cd;&#x65b0;&#x8def;&#x7531;&#x4fdd;&#x5b58;&#x6587;&#x4ef6;&#x7684;&#x4f4d;&#x7f6e;&#x3002",{"_index":4237,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x901a;&#x5e38;&#xff0c;&#x88c5;&#x9970;&#x5668;&#x8fd4;&#x56de;&#x7684;&#x201c;&#x4e1c;&#x897f;&#x201d;&#x4e0e;&#x4f20;&#x5165;&#x7684;&#x4e1c;&#x897f;&#x662f;&#x76f8;&#x540c;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x5b83;&#x4ee5;&#x67d0;&#x79cd;&#x65b9;&#x5f0f;&#x88ab;&#x589e;&#x5f3a;&#x4e86;&#x3002",{"_index":1580,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["x901a;&#x8fc7;&#x4e0a;&#x8ff0;&#x65b9;&#x6cd5;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8f7b;&#x677e;&#x5730;&#x5c06;&#x6253;&#x5305;&#x5927;&#x5c0f;&#x51cf;&#x5c11;&#x5230;140k&#x5de6;&#x53f3;&#xff01",{"_index":3028,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x901a;&#x8fc7;&#x4e13;&#x6ce8;&#x4e8e;&#x4f7f;&#x6846;&#x67b6;&#x66f4;&#x6613;&#x4e8e;&#x8ba1;&#x7b97;&#x673a;&#x5904;&#x7406;&#xff0c;angular",{"_index":3048,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x901a;&#x8fc7;&#x4fdd;&#x5b58",{"_index":2060,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x901a;&#x8fc7;&#x5bfc;&#x51fa;&#x4e00;&#x4e2a;&#x63a5;&#x53d7;karma&#x5c06;&#x8981;&#x4f7f;&#x7528;&#x7684;&#x914d;&#x7f6e;&#x5bf9;&#x8c61;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x53ef;&#x4ee5;&#x5c06;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x653e;&#x5728;&#x4e00;&#x8d77;&#x3002",{"_index":5180,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x901a;&#x8fc7;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#xff0c;&#x6211;&#x4eec;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e0d;&#x9700;&#x8981;&#x7acb;&#x5373;&#x52a0;&#x8f7d;&#x6240;&#x6709;&#x5185;&#x5bb9;&#xff0c;&#x5b83;&#x53ea;&#x9700;&#x8981;&#x52a0;&#x8f7d;&#x7528;&#x6237;&#x671f;&#x671b;&#x7b2c;&#x4e00;&#x6b21;&#x52a0;&#x8f7d;&#x65f6;&#x770b;&#x5230;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3683,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x901a;&#x8fc7;&#x5f71;&#x54cd;&#x6a21;&#x677f;&#x7684;&#x5448;&#x73b0;&#x65b9;&#x5f0f;&#x6765;&#x6539;&#x53d8;&#x7ec4;&#x4ef6;&#x6216;&#x5143;&#x7d20;&#x7684;&#x884c;&#x4e3a;&#x7684;&#x6307;&#x4ee4",{"_index":745,"title":{},"body":{"Directives/directives.html#指令":{}}}],["x901a;&#x8fc7;&#x6267;&#x884c;&#x9759;&#x6001;&#x4ee3;&#x7801;&#x5206;&#x6790;&#x8fdb;&#x884c;&#x4f18;&#x5316;&#xff0c;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#x662f;tre",{"_index":3024,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["x901a;&#x8fc7;&#x786e;&#x4fdd;&#x60a8;&#x7684;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x652f;&#x6301;&#x591a;&#x79cd;&#x8bed;&#x8a00;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x8986;&#x76d6;&#x66f4;&#x5e7f;&#x6cdb;&#x7684;&#x53d7;&#x4f17;&#x7fa4;&#x4f53;&#xff0c;&#x5e76;&#x786e;&#x4fdd;&#x591a;&#x8bed;&#x8a00;&#x7528;&#x6237;&#x7684;&#x6d41;&#x7545;&#x7684;&#x7528;&#x6237;&#x4f53;&#x9a8c;&#x3002",{"_index":2521,"title":{},"body":{"i18n/i18n.html#i18n的目的是":{}}}],["x901a;&#x8fc7;&#x8c03;&#x7528;api&#x6536;&#x5230;&#x7684;&#x6570;&#x636",{"_index":5807,"title":{},"body":{"state-management/defining_your_main_application_state.html#定义应用的主状态":{}}}],["x901a;&#x8fc7;&#x8fd9;&#x4e2a;&#x66f4;&#x957f;&#x7684;&#x5806;&#x6808;&#x8ddf;&#x8e2a;&#x53ef;&#x4ee5;&#x5e2e;&#x52a9;&#x4f60;&#x8c03;&#x8bd5;angular&#x7684;&#x7279;&#x6027;&#xff0c;&#x5f02;&#x6b65;&#x4ea4;&#x4e92;&#x4ee3;&#x7801;&#xff0c;&#x5e76;&#x6709;&#x52a9;&#x4e8e;&#x66f4;&#x7cbe;&#x786e;&#x5b9a;&#x4f4d;&#x95ee;&#x9898;&#x3002",{"_index":6724,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x901a;&#x8fc7;&#x8fd9;&#x4e2a;&#x8bbe;&#x7f6e;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5728;&#x6211;&#x4eec;&#x7684;&#x6839;&#x6a21;&#x5757",{"_index":3801,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x901a;&#x8fc7;dispatch",{"_index":5875,"title":{"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{}},"body":{}}],["x901a;&#x8fc7;npm&#x5b89;&#x88c5;&#x7684;&#x8f6f;&#x4ef6;&#x5305;&#x4f7f;&#x7528;commonjs&#x7684;&#x6a21;&#x5757;&#x5316;&#x65b9;&#x5f0f;&#x5f15;&#x5165;&#x3002",{"_index":4209,"title":{},"body":{"Project-setup/installation_and_usage.html#Bundle":{}}}],["x907f;&#x514d;&#x5728;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x6a21;&#x5757;&#x7684;di&#x6811;&#x7684;&#x8f83;&#x4f4e;&#x7ea7;&#x522b;&#x4e2d;&#x521b;&#x5efa;&#x7b2c;&#x4e8c;&#x4e2a;&#x5b9e;&#x4f8b;&#xff0c;&#x5e76;&#x4e14;&#x4ec5;&#x4f7f;&#x7528;&#x5728;&#x6811;&#x6839;&#x5904;&#x6ce8;&#x518c;&#x7684;&#x670d;&#x52a1;&#x5b9e;&#x4f8b;&#x3002",{"_index":3796,"title":{},"body":{"Modules/shared-di-tree.html#共享相同的依赖注入树":{}}}],["x907f;&#x514d;&#x6ce8;&#x5165;&#x51b2;&#x7a81;&#xff1a;opaquetoken",{"_index":465,"title":{"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{}},"body":{}}],["x90e8;&#x5206;&#x3002",{"_index":4298,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x9009;&#x62e9;&#x5668;&#x5b57;&#x7b26;&#x4e32;&#xff1a",{"_index":5622,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["x90fd;&#x5728;&#x5f15;&#x53f7;&#x4e2d;&#x3002",{"_index":598,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["x914d;&#x7f6e",{"_index":3166,"title":{"Advanced-angular/aot_config.html#AoT-配置":{},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{},"Project-setup/loaders.html#Webpack-配置":{},"Testing/karma-config.html#Karma-配置":{}},"body":{}}],["x914d;&#x7f6e;&#x4e3a;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x3002",{"_index":3523,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x914d;&#x7f6e;&#x4f60;&#x7684;&#x5e94;&#x7528",{"_index":5750,"title":{"state-management/configuring_your_application.html#配置你的应用":{}},"body":{}}],["x914d;&#x7f6e;&#x5e94;&#x7528;&#x4ee5;&#x4f7f;&#x7528;redux",{"_index":5785,"title":{"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{}},"body":{}}],["x914d;&#x7f6e;&#x6211;&#x4eec;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x5c06;&#x8fd0;&#x884c;&#x7684;&#x73af;&#x5883;&#x3002",{"_index":5233,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x914d;&#x7f6e;&#x62e6;&#x622a;&#x5668",{"_index":2310,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["x914d;&#x7f6e;&#x6587;&#x4ef6;&#x4e2d;&#x8bbe;&#x7f6e;&#x7684;&#x4efb;&#x4f55;&#x8bb0;&#x5f55;&#x5668;&#x3002",{"_index":4975,"title":{},"body":{"Testing/execute.html#执行测试脚本":{}}}],["x914d;&#x7f6e;&#x8def;&#x7531",{"_index":4571,"title":{"Routing/config.html#配置路由":{}},"body":{}}],["x914d;&#x7f6e;&#xff08;&#x53ef;&#x9009;&#xff09",{"_index":5432,"title":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}},"body":{}}],["x91c7;&#x7528;&#x6280;&#x672f;&#x4f7f;&#x7f51;&#x7ad9;&#x53ef;&#x8bbf;&#x95ee;&#x7684;&#x7f51;&#x7ad9;&#x5c06;&#x786e;&#x4fdd;&#x5176;&#x7b26;&#x5408;&#x6240;&#x6709;&#x4eba;&#x7684;&#x6700;&#x4f4e;&#x53ef;&#x7528;&#x6027;&#x6807;&#x51c6;&#x3002",{"_index":6908,"title":{},"body":{"a11y/why-a11y.html#与用户体验和SEO叠加":{}}}],["x91cd;&#x5199;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#xff1a",{"_index":4879,"title":{},"body":{"Testing/async.html#测试异步操作":{}}}],["x91cd;&#x6784;&#x96be;&#x4ee5;&#x6d4b;&#x8bd5;&#x7684;&#x4ee3;&#x7801",{"_index":5365,"title":{"Testing/refactor.html#重构难以测试的代码":{}},"body":{}}],["x91cd;&#x8981;&#x7684;&#x662f;&#x6ce8;&#x610f;&#x5c5e;&#x6027;&#x503c;&#x4e0d;&#x80fd;&#x7531;&#x88c5;&#x9970;&#x5668;&#x76f4;&#x63a5;&#x64cd;&#x7eb5",{"_index":1724,"title":{},"body":{"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{}}}],["x91cd;&#x8981;&#x7684;&#x662f;&#x8981;&#x7406;&#x89e3;&#xff0c;&#x7ed9;&#x5b9a;&#x7684;&#x5806;&#x6808;&#x5e27;&#x53ea;&#x80fd;&#x4e0e;&#x4e00;&#x4e2a;&#x533a;&#x57df;&#x76f8;&#x5173;&#x8054;&#x3002",{"_index":6589,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x91cd;&#x8981;&#x7684;&#x662f;&#x8981;&#x77e5;&#x9053;zone.js&#x901a;&#x8fc7",{"_index":6675,"title":{},"body":{"zone/zone.html#Zones":{}}}],["x94fe;&#x63a5",{"_index":4552,"title":{"Routing/child_routes.html#链接":{}},"body":{}}],["x94fe;&#x63a5;&#x5230;&#x5e26;&#x53c2;&#x6570;&#x7684;&#x8def;&#x7531",{"_index":4725,"title":{"Routing/routeparams.html#链接到带参数的路由":{}},"body":{}}],["x94fe;&#x63a5;&#x7ba1;&#x9053",{"_index":4127,"title":{"Pipes/using_pipes.html#链接管道":{}},"body":{"Pipes/using_pipes.html#链接管道":{}}}],["x94fe;&#x63a5;&#x8fd9;&#x4e9b;&#x6346;&#x7ed1;&#x7684;&#x6587;&#x4ef6;&#x548c;&#x6211;&#x4eec;&#x5b9e;&#x9645;&#x7f16;&#x7801;&#x7684;&#x6587;&#x4ef6;&#x662f;&#x4f7f;&#x7528;&#x6240;&#x8c13;&#x7684;&#x6e90;&#x6620;&#x5c04;&#x3002;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x914d;&#x7f6e;&#x6e90;&#x5730;&#x56fe;&#x3002;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x7684;&#x662f;&#x5c06;&#x8fd9;&#x4e9b;&#x6e90;&#x6620;&#x5c04;&#x4fdd;&#x5b58;&#x5728;&#x7531",{"_index":4262,"title":{},"body":{"Project-setup/installation_and_usage.html#输出配置":{}}}],["x94fe;&#xff0c;&#x5bfc;&#x81f4;&#x4e00;&#x4e2a;&#x672a;&#x6355;&#x83b7;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":6716,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["x95ed;&#x5305;&#x5f15;&#x7528;&#x5141;&#x8bb8;&#x60a8;&#x8bb0;&#x4f4f;&#x6700;&#x7ec8;&#x8c03;&#x7528;&#x9a8c;&#x8bc1;&#x5668;&#x65f6;&#x7684;&#x6700;&#x5c0f;&#x503c;&#x3002",{"_index":2123,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x9644;&#x52a0;&#x5230;&#x8be5;&#x533a;&#x57df;&#x7684;&#x6570;&#x636e;shallow",{"_index":6284,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["x9664;&#x4e86;&#x51fd;&#x6570;&#xff0c;&#x63a5;&#x53e3;&#x4e5f;&#x53ef;&#x4ee5;&#x4e0e;&#x7c7b;&#x4e00;&#x8d77;&#x4f7f;&#x7528;&#x4ee5;&#x5b9a;&#x4e49;&#x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b",{"_index":1627,"title":{},"body":{"ES6&TypeScript/typescript/interfaces.html#接口":{}}}],["x9664;&#x4e86;&#x5b83;&#x6709;&#x81ea;&#x5df1;&#x7684;&#x8def;&#x7531;&#x548c;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":3712,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x9664;&#x4e86;&#x7b80;&#x5355;&#x5730;&#x904d;&#x5386;&#x5f02;&#x6b65;&#x96c6;&#x5408;&#x4e4b;&#x5916;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x6267;&#x884c;&#x5176;&#x4ed6;&#x64cd;&#x4f5c;&#xff0c;&#x4f8b;&#x5982;&#x8fc7;&#x6ee4;&#x6216;&#x6620;&#x5c04;&#xff0c;&#x4ee5;&#x53ca;rxj",{"_index":3935,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["x9664;&#x4e86;&#x8bed;&#x4e49;&#x76ee;&#x7684;&#xff0c;ngmodelgroup&#x4e0d;&#x5fc5;&#x5728",{"_index":2023,"title":{},"body":{"Form/nested-form-data.html#嵌套表单数据":{}}}],["x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c;&#x8bf8;&#x5982;&#x8bed;&#x4e49;&#x6807;&#x8bb0;&#x7684;&#x53ef;&#x8bbf;&#x95ee;&#x6027;&#x6280;&#x672f;&#x5e2e;&#x52a9;&#x641c;&#x7d22;&#x5f15;&#x64ce;&#x66f4;&#x597d;&#x5730;&#x7406;&#x89e3;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#xff0c;&#x4ece;&#x800c;&#x589e;&#x52a0;&#x66dd;&#x5149;&#x5ea6;&#x3002",{"_index":6910,"title":{},"body":{"a11y/why-a11y.html#与用户体验和SEO叠加":{}}}],["x9664;&#x975e;&#x660e;&#x786e;&#x5bfc;&#x51fa;&#x7ec4;&#x4ef6;&#xff0c;&#x7ba1;&#x9053;&#x548c;&#x6307;&#x4ee4;&#x7684;&#x8303;&#x56f4;&#x9650;&#x4e8e;&#x5176;&#x6a21;&#x5757;&#xff0c;&#x5426;&#x5219;&#x670d;&#x52a1;&#x5168;&#x5c40;&#x53ef;&#x7528;&#xff0c;&#x9664;&#x975e;&#x6a21;&#x5757;&#x5ef6;&#x8fdf;&#x52a0;&#x8f7d;&#x3002",{"_index":3512,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x968f;&#x7740;&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x7684;&#x53d1;&#x5c55;&#xff0c;&#x6211;&#x4eec;&#x5982;&#x4f55;&#x77e5;&#x9053;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x4e2d;&#x7684;&#x72b6;&#x6001;&#x53d8;&#x5316;&#x5c06;&#x4e00;&#x81f4;&#x800c;&#x51c6;&#x786e;&#x5730;&#x53cd;&#x6620;&#x5728;&#x5176;&#x4ed6;&#x6a21;&#x5757;&#x4e2d;&#xff1f",{"_index":6133,"title":{},"body":{"state-management/state-management.html#状态管理":{}}}],["x968f;&#x7740;&#x9879;&#x76ee;&#x8d8a;&#x6765;&#x8d8a;&#x5927;&#xff0c;&#x8981;&#x5305;&#x62ec;&#x7684;&#x6587;&#x4ef6;&#x6570;&#x91cf;&#x8d8a;&#x6765;&#x8d8a;&#x590d;&#x6742;&#xff0c;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x5f88;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#x5c06;&#x6587;&#x4ef6;&#x5bfc;&#x5165;&#x5230;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684;&#x6587;&#x4ef6;&#x4e2d",{"_index":5193,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x96c6;&#x4e2d;&#x5f0f;&#x9519;&#x8bef;&#x5904;&#x7406",{"_index":6310,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x96c6;&#x6210;&#x6d4b;&#x8bd5",{"_index":5453,"title":{},"body":{"Testing/testing.html#TDD测试":{}}}],["x9700;&#x8981",{"_index":3088,"title":{},"body":{"why_angular_2.html#Angular-1-amp-2-之间的差异":{}}}],["x9700;&#x8981;&#x4e00;&#x4e9b;&#x975e;&#x5e38;&#x5177;&#x4f53;&#x7684;&#x5305;&#x88c5;&#x5668;&#x548c;&#x4f8b;&#x7a0b;&#x3002",{"_index":5417,"title":{},"body":{"Testing/test-components.html#测试组件":{}}}],["x9700;&#x8981;&#x4e24;&#x4e2a;&#x5c5e;&#x6027;&#xff1a;&#x521d;&#x59cb;&#x503c;&#x548c;&#x9a8c;&#x8bc1;&#x5668;&#x5217;&#x8868;&#x3002",{"_index":2070,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["x9700;&#x8981;&#x6211;&#x4eec;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;promise&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":4849,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["x9700;&#x8981;&#x63d0;&#x4f9b;&#x62e6;&#x622a;&#x4e0d;&#x540c",{"_index":6304,"title":{},"body":{"zone/interception.html#拦截":{}}}],["x975e",{"_index":4325,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x975e;&#x5e38;&#x7c7b;&#x4f3c;&#x4e8",{"_index":3728,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["x9879;&#x76ee;&#x67b6;&#x6784;&#x4e0e;&#x7ef4;&#x62a4",{"_index":3071,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["x9879;&#x76ee;&#x8bbe;&#x7f6",{"_index":4375,"title":{"Project-setup/project-setup.html#项目设置":{}},"body":{}}],["x9884;&#x5904;&#x7406;&#x5668",{"_index":5198,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["x9884;&#x5b9a;&#x4e49;&#x53c2;&#x6570",{"_index":2114,"title":{},"body":{"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{}}}],["x989c;&#x8272;&#x5bf9;&#x6bd4;&#xff0c;&#x5143;&#x7d20;&#x7684;&#x7126;&#x70b9;&#x548c;&#x97f3;&#x9891;&#x548c;&#x4e8b;&#x4ef6;&#x7684;&#x6587;&#x672c;&#x8868;&#x793a",{"_index":5570,"title":{},"body":{"a11y/key-concerns.html#无障碍Web应用的关键":{}}}],["x98df;&#x8c31",{"_index":2547,"title":{},"body":{"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{}}}],["x9996;&#x5148;&#x8981;&#x4e86;&#x89e3;&#x7684;&#x662f;&#x5982;&#x4f55;&#x521b;&#x5efa",{"_index":6583,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["x9996;&#x5148;&#x8981;&#x660e;&#x786e;&#x4e00;&#x70b9;&#x7684;&#x662f;&#xff0c",{"_index":2651,"title":{},"body":{"compare.html#与其他框架比较":{}}}],["x9996;&#x5148;&#x8bf7;&#x6ce8;&#x610f;&#xff0c;&#x670d;&#x52a1;&#x4e0d;&#x5728",{"_index":3515,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["x9996;&#x5148;&#xff0c;&#x4ece;npm&#x83b7;&#x53d6",{"_index":3190,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["x9996;&#x5148;&#xff0c;&#x5728;&#x5b83;&#x7684;&#x7b80;&#x4fbf;&#x6027;&#x4e0a;&#x6709;&#x4e00;&#x70b9;&#x9b54;&#x6cd5;&#xff0c;&#x4f46;&#x662f;&#x5728;&#x4f60;&#x719f;&#x6089;&#x57fa;&#x7840;&#x77e5;&#x8bc6;&#x4e4b;&#x540e;&#xff0c;&#x5b66;&#x4e60;&#x5b83;&#x7684;&#x6784;&#x5efa;&#x5757;&#x5c06;&#x5141;&#x8bb8;&#x4f60;&#x5904;&#x7406;&#x66f4;&#x590d;&#x6742;&#x7684;&#x7528;&#x4f8b;&#x3002",{"_index":2030,"title":{},"body":{"Form/reactive-forms.html#响应式-模型驱动的表单":{}}}],["x9996;&#x5148;&#xff0c;&#x8003;&#x8651;&#x4e00;&#x4e2a;&#x5178;&#x578b;&#x7684;&#x8868;&#x5355;&#xff1a",{"_index":2175,"title":{},"body":{"Form/template-driven_forms.html#模版驱动表单":{}}}],["x9996;&#x5148;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x4ece;&#x5728;jasmine&#x4e2d;&#x5199;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x7684;&#x6d4b;&#x8bd5;&#x5f00;&#x59cb;&#x3002",{"_index":5394,"title":{},"body":{"Testing/simple-test.html#简单的测试":{}}}],["x9996;&#x5148;&#xff0c;&#x8ba9;&#x6211;&#x4eec;&#x4fee;&#x6539;&#x6211;&#x4eec;&#x7684",{"_index":6081,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["x9996;&#x9009;&#x65b9;&#x6cd5;&#x662f;&#x901a;&#x8fc7;webpack.config.js&#x6587;&#x4ef6;&#x914d;&#x7f6e;&#x88c5;&#x8f7d;&#x7a0b;&#x5e8f;&#x3002;&#x4f8b;&#x5982;&#xff0c;typescript&#x52a0;&#x8f7d;&#x5668;&#x4efb;&#x52a1;&#x770b;&#x8d77;&#x6765;&#x50cf;&#x8fd9;&#x6837;&#xff1a",{"_index":4301,"title":{},"body":{"Project-setup/loaders.html#Webpack-配置":{}}}],["x9a8c;&#x8bc1",{"_index":2225,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["x9a8c;&#x8bc1;&#x54cd;&#x5e94;&#x5f0f;&#x8868;&#x5355",{"_index":2149,"title":{"Form/reactive-forms_validation.html#验证响应式表单":{}},"body":{}}],["x9a8c;&#x8bc1;&#x65b9;&#x6cd5;&#x548c;&#x5c5e;&#x6027",{"_index":5529,"title":{"Testing/verify.html#验证方法和属性":{}},"body":{}}],["x9a8c;&#x8bc1;&#x6a21;&#x677f;&#x9a71;&#x52a8;&#x7684;&#x8868;&#x5355",{"_index":2224,"title":{"Form/validating_forms.html#验证模板驱动的表单":{}},"body":{}}],["x9a8c;&#x8bc1;&#x6a21;&#x677f;&#x9a71;&#x52a8;&#x7684;&#x8868;&#x5355;&#xff0c;&#x4e0b;&#x9762;&#x662f;&#x4f7f;&#x7528;html5&#x7684;&#x505a;&#x6cd5;&#xff1a",{"_index":2226,"title":{},"body":{"Form/validating_forms.html#验证模板驱动的表单":{}}}],["x9a8c;&#x8bc1;&#x8fd9;&#x6bb5;&#x4ee3;&#x7801;&#x3002;&#x4e0d;&#x51fa;&#x6240;&#x6599;&#xff0c;&#x62a5;&#x9519;&#x4e86;&#xff0c;&#x56e0;&#x4e3a",{"_index":1153,"title":{},"body":{"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{}}}],["x9ad8;&#x3002",{"_index":2914,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x9ad8;&#x5ea6;&#x652f;&#x6301;&#xff0c;&#x589e;&#x957f;&#x7684;&#x793e;&#x533a;&#x3002",{"_index":2912,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["x9ed8;&#x8ba4;&#x4e3a;&#x2019;prefix&#x2019;&#x7684;&#x53ef;&#x9009;&#x5c5e;&#x6027;&#x3002",{"_index":4585,"title":{},"body":{"Routing/config.html#路由定义对象":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x521b;&#x5efa;&#x4e00;&#x4e2a;xliff&#x6587;&#x4ef6;&#xff0c;&#x4f46;&#x60a8;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x9644;&#x52a0",{"_index":2628,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x58f0;&#x660e;&#x6570;&#x7ec4;&#x4e2d;&#x5b9a;&#x4e49;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x90fd;&#x662f",{"_index":3497,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x7ba1;&#x9053;&#x662f;&#x65e0;&#x72b6;&#x6001;&#x7684;&#x3002",{"_index":4159,"title":{},"body":{"Pipes/stateful_and_async_pipes.html#实现有状态管道":{}}}],["x9ed8;&#x8ba4;&#x8ba1;&#x5212;&#x884c;&#x4e3a",{"_index":6386,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["xff08",{"_index":407,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{}}}],["xff08;&#x4e00;&#x4e2a;&#x5355;&#x4f8b;&#xff09;&#x7684;&#x4e00;&#x4e2a;&#x5b9e;&#x4f8b;&#x5c06;&#x88ab;&#x6dfb;&#x52a0;&#x5230;&#x6839;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":3525,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["xff08;&#x4e00;&#x4e2a;&#x53ef;&#x89e3;&#x6790;&#x4e3a;boolean&#x7684;observable&#xff09;&#x7684;&#x503c;&#x3002",{"_index":4696,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["xff08;&#x4e00;&#x65e6",{"_index":6286,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["xff08;&#x4e00;&#x79cd;&#x7528;&#x4e8e;&#x6865;&#x63a5;javascript&#x548c;&#x79fb;&#x52a8;&#x7684;&#x5f00;&#x6e90;&#x5e93;&#xff09;&#x96c6;&#x6210;&#xff0c;&#x4f7f;&#x5176;&#x53ef;&#x79fb;&#x690d;&#x5230;&#x672c;&#x673a;&#x79fb;&#x52a8;&#x3002;&#x6b64;&#x5916;&#xff0c;ionic&#x56e2;&#x961f;&#x6b63;&#x5728;&#x5f00;&#x53d1;&#x4e00;&#x4e2a;&#x57fa;&#x4e8e;angular",{"_index":3068,"title":{},"body":{"why_angular_2.html#Angular-2-的优点":{}}}],["xff08;&#x4efb;&#x4f55;&#x6545;&#x969c;&#x8868;&#x793a;&#x4f9d;&#x8d56;&#x4e8e;&#x5176;&#x4ed6;&#x7ec4;&#x4ef6;&#x7684;&#x6d4b;&#x8bd5;&#xff0c;&#x56e0;&#x6b64;&#x4e0d;&#x662f;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x3002;&#xff09;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x7684;&#x7ef4;&#x62a4;&#x6210;&#x672c;&#x5f88;&#x4f4e;&#xff0c;&#x53ea;&#x6709;&#x5728;&#x4fee;&#x6539;&#x5355;&#x4e2a;&#x5355;&#x5143;&#x65f6;&#x624d;&#x66f4;&#x65b0;&#x3002;&#x5bf9;&#x4e8e;angular&#x4e2d;&#x7684;tdd&#xff0c;&#x5355;&#x4f4d;&#x6700;&#x5e38;&#x88ab;&#x5b9a;&#x4e49;&#x4e3a;&#x7c7b;&#xff0c;&#x7ba1;&#x9053;&#xff0c;&#x7ec4;&#x4ef6;&#x6216;&#x670d;&#x52a1;&#x3002;&#x4fdd;&#x6301;&#x5355;&#x4f4d;&#x76f8;&#x5bf9;&#x8f83;&#x5c0f;&#x662f;&#x5f88;&#x91cd;&#x8981;&#x7684;&#x3002;&#x8fd9;&#x6709;&#x52a9;&#x4e8e;&#x60a8;&#x7f16;&#x5199;&#x201c;&#x81ea;&#x6211;&#x8bb0;&#x5f55;&#x201d;&#x7684;&#x5c0f;&#x6d4b;&#x8bd5;&#xff0c;&#x5b83;&#x4eec;&#x6613;&#x4e8e;&#x9605;&#x8bfb;&#x548c;&#x7406;&#x89e3;&#x3002",{"_index":5456,"title":{},"body":{"Testing/testing.html#TDD测试":{}}}],["xff08;&#x4f8b;&#x5982",{"_index":5720,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["xff08;&#x5373;&#xff0c;&#x51fd;&#x6570;&#x7684;&#x524d;&#x534a;&#x90e8;&#x5206;&#x4e0d;&#x53ef;&#x80fd;&#x5728;&#x4e0e;&#x51fd;&#x6570;&#x7684;&#x540e;&#x534a;&#x90e8;&#x5206;&#x4e0d;&#x540c;&#x7684;&#x533a;&#x57df;&#x4e2d;&#x8fd0;&#x884c;&#x3002;&#x76f8;&#x540c;&#x7684;&#x51fd;&#x6570;&#x53ef;&#x80fd;&#x5728;&#x4e0d;&#x540c;&#x7684;&#x8c03;&#x7528;&#x4e0a;&#x5177;&#x6709;&#x4e0d;&#x540c;&#x7684;&#x533a;&#x57df;&#xff09;&#x3002",{"_index":6590,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["xff08;&#x547d;&#x4ee4;&#x6765;&#x81ea;npm&#x5305;&#xff09;&#x9012;&#x5f52;&#x5220;&#x9664;&#x6307;&#x5b9a;&#x6587;&#x4ef6;&#x5939;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x5185;&#x5bb9;&#xff1b",{"_index":4360,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["xff08;&#x6211;&#x4eec;&#x4e0d;&#x5e0c;&#x671b",{"_index":6549,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["xff08;&#x6ce8;&#x610f;&#xff0c;&#x5bf9;&#x4e8e;&#x7531;angular",{"_index":3201,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["xff08;&#x6ce8;&#x610f;&#xff1a;&#x5b9e;&#x9645;&#x5de5;&#x4f5c;&#x60c5;&#x51b5;&#x6709;&#x70b9;&#x590d;&#x6742;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x4eec;&#x901a;&#x8fc7;&#x7a0d;&#x540e;&#x8ba8;&#x8bba;&#x7684;&#x4efb;&#x52a1;&#x8c03;&#x5ea6;&#x673a;&#x5236;&#x8fdb;&#x884c;&#x8c03;&#x5ea6;&#xff0c;&#x4e3a;&#x4e86;&#x6e05;&#x695a;&#x8d77;&#x89c1;&#xff0c;&#x8be5;&#x793a;&#x4f8b;&#x8fdb;&#x884c;&#x4e86;&#x7b80;&#x5316;&#xff09;&#x3002",{"_index":6340,"title":{},"body":{"zone/patching_async_methods.html#异步方法补丁":{}}}],["xff08;&#x8fd9;&#x5c06;&#x5bfc;&#x81f4;&#x4e00;&#x4e2a",{"_index":6778,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["xff08;&#x9ed8;&#x8ba4;&#xff09",{"_index":5672,"title":{},"body":{"advanced-components/view_encapsulation.html#视图封装":{}}}],["xff09;&#x3002",{"_index":4977,"title":{},"body":{"Testing/execute.html#执行测试脚本":{},"zone/zone.html#Debugging":{}}}],["xff09;&#x3002;&#x200b",{"_index":4734,"title":{},"body":{"Routing/routeparams.html#读取路由参数":{}}}],["xff09;&#x4e2d;&#xff0c;&#x6dfb;&#x52a0;&#x4ee5;&#x4e0b;&#x4ee3;&#x7801;&#xff1a",{"_index":3193,"title":{},"body":{"Advanced-angular/aot_config.html#配置-ngtools-webpack":{}}}],["xff09;&#x5728;&#x5176;&#x4e0a;&#x5efa;&#x7acb;&#x548c;&#x53d1;&#x5c55;&#x3002",{"_index":2826,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["xff09;&#x5b9e;&#x73b0;&#x7684;&#xff1a",{"_index":574,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["xff09;&#x5c06;&#x8fd4;&#x56de;&#x6211;&#x4eec;&#x9884;&#x671f;&#x7684;&#x6570;&#x636e;&#xff0c;&#x4ece;&#x800c;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x9694;&#x79bb;&#x771f;&#x5b9e;&#x7f51;&#x7edc;&#x6d41;&#x91cf;&#x6d4b;&#x8bd5;&#x670d;&#x52a1;&#x3002",{"_index":5290,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["xff09;&#x662f;&#x4e00;&#x4e2a;&#x5e38;&#x89c1;&#x7684;&#x60ef;&#x4f8b;&#xff0c;&#x4f46;&#x662f;&#x53ea;&#x8981;&#x5728;&#x6574;&#x4e2a;&#x9879;&#x76ee;&#x4e2d;&#x662f;&#x4e00;&#x81f4;&#x7684;&#xff0c;&#x60a8;&#x53ef;&#x4ee5;&#x968f;&#x610f;&#x4f7f;&#x7528;&#x4efb;&#x4f55;&#x5199;&#x6cd5;&#x3002",{"_index":5721,"title":{},"body":{"state-management/actions.html#Actions":{}}}],["xff09;&#x6765;&#x5206;&#x9694;&#x63cf;&#x8ff0;&#xff08;&#x5de6;&#xff09;&#x548c;&#x4e0a;&#x4e0b;&#x6587;&#x610f;&#x4e49;&#xff08;&#x53f3;&#xff09;&#x3002",{"_index":2599,"title":{},"body":{"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{}}}],["xff09;&#x6807;&#x8bb0;&#x7684;&#x65b0;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x6587;&#x5b57;&#x7c7b;&#x578b;&#x3002",{"_index":1525,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["xff09;&#x7684;&#x6839;&#x7ec4;&#x4ef6;&#x3002",{"_index":3691,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["xff09;&#x8bbf;&#x95ee;&#x5176;&#x7236;&#x7ec4;&#x3002",{"_index":2068,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["xff09;&#xff0c;&#x4e4b;&#x540e;&#x6211;&#x4eec;&#x5c31;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x3002",{"_index":1603,"title":{},"body":{"ES6&TypeScript/typescript/generics.html#泛型":{}}}],["xff09;&#xff0c;&#x4ee5;&#x53ca;&#x4ece;&#x51fd;&#x6570;&#x6392;&#x961f;&#x5230;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x7684;&#x65f6;&#x95f4;&#x3002",{"_index":6723,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["xff0c",{"_index":423,"title":{},"body":{"Di/angular2_di.html#Angular-2’s-DI":{},"Directives/structural_directives.html#结构指令":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{},"Form/reactive-forms_basics.html#响应式表单基础":{},"plus.html#插件":{},"Modules/introduction.html#一个模块的基本使用":{},"Project-setup/loaders.html#Inline":{},"Routing/query_params.html#读取查询参数":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["xff0c;&#x4ed6;&#x4eec;&#x53ef;&#x4ee5;&#x8f7b;&#x677e;&#x5730;&#x505a;&#x5230;&#xff1a",{"_index":584,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["xff0c;&#x4ee5;&#x6b63;&#x786e;&#x7406;&#x89e3;&#x50cf",{"_index":3189,"title":{},"body":{"Advanced-angular/aot_config.html#AoT-配置":{}}}],["xff0c;&#x4f46;&#x5b83;&#x6ca1;&#x6709;&#x6ce8;&#x5165;&#x5668;&#x3002",{"_index":680,"title":{},"body":{"Di/the_injector_tree.html#注入树":{}}}],["xff0c;&#x4f46;&#x6211;&#x4eec;&#x8fd8;&#x6ca1;&#x6709;&#x8ba8;&#x8bba",{"_index":6300,"title":{},"body":{"zone/interception.html#拦截":{}}}],["xff0c;&#x4f46;&#x662f;&#x5728;angular&#x7684;&#x533a;&#x57df;&#x4e4b;&#x5916;&#x6267;&#x884c;&#x7684",{"_index":6706,"title":{},"body":{"zone/zone.html#变化检测":{}}}],["xff0c;&#x4f46;&#x662f;&#x5f53;&#x51fd;&#x6570;&#x4ece",{"_index":1441,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["xff0c;&#x4f7f;&#x60a8;&#x53ef;&#x4ee5;&#x8f7b;&#x677e;&#x5730;&#x53d1;&#x9001;&#x4efb;&#x4f55;&#x7c7b;&#x578b;&#x7684;&#x4e8b;&#x4ef6;&#xff0c;&#x5982;&#x5f53;&#x60a8;&#x7684;&#x7528;&#x6237;&#x8d2d;&#x4e70;&#x6587;&#x7ae0;&#x6216;&#x4e0b;&#x8f7d;&#x6587;&#x4ef6;&#x3002;&#x8fd9;&#x5bf9;&#x4e8e;&#x8ddf;&#x8e2a;&#x5e94;&#x7528;&#x5185;&#x7684;&#x8f6c;&#x5316;&#x5f88;&#x6709;&#x7528;&#x3002;&#x652f;&#x6301;&#xff08",{"_index":2745,"title":{},"body":{"plus.html#插件":{}}}],["xff0c;&#x4f8b;&#x5982;promise&#x521b;&#x5efa",{"_index":6534,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["xff0c;&#x4f9b;&#x6211;&#x4eec;&#x5728;&#x6211;&#x4eec;&#x7684;&#x6d4b;&#x8bd5;&#x4e2d;&#x4f7f;&#x7528;&#x3002",{"_index":5071,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["xff0c;&#x5219",{"_index":1416,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["xff0c;&#x53e6;&#x4e00;&#x4e2a;&#x7528;&#x4e8",{"_index":5313,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["xff0c;&#x53ef;&#x4ee5;&#x5e2e;&#x52a9;&#x5236;&#x5b9a;&#x60a8;&#x7684;&#x6d4b;&#x8bd5;&#x5de5;&#x4f5c;&#x6d41;&#x3002",{"_index":5231,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["xff0c;&#x56e0;&#x4e3a;&#x8fd9;&#x53ea;&#x662f",{"_index":6173,"title":{},"body":{"state-management/using_redux_with_components.html#计数器示例":{}}}],["xff0c;&#x5728;&#x5b83;&#x4e0a;&#x9762;&#x6709;&#x4e24;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x7ec4;&#x4ef6;&#xff0c;&#x5c31;&#x50cf;&#x6211;&#x4eec;&#x73b0;&#x5728;&#x6709;&#x7684;&#x4e00;&#x6837;&#x3002",{"_index":6082,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["xff0c;&#x5982;&#x679c;&#x7528;&#x6237;&#x5355;&#x51fb;&#x201c;&#x786e;&#x5b9a;&#x201d;&#xff0c;&#x8be5;&#x503c;&#x5c06;&#x89e3;&#x6790;&#x4e3a;true&#xff0c;&#x5982;&#x679c;&#x7528;&#x6237;&#x5355;&#x51fb;&#x201c;&#x53d6;&#x6d88;&#x201d;&#xff0c;&#x5219;&#x8be5;&#x503c;&#x5c06;&#x4e3a;false&#x3002",{"_index":4701,"title":{},"body":{"Routing/route_guards.html#异步路由哨兵":{}}}],["xff0c;&#x5b83;&#x5141;&#x8bb8;&#x6211;&#x4eec;&#x914d;&#x7f6e;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x4ece;&#x6211;&#x4eec;&#x7684;&#x540e;&#x7aef;&#x53d1;&#x9001;&#x7684;&#x54cd;&#x5e94;&#xff0c;&#x4ee5;&#x53ca;&#x6d4b;&#x8bd5;&#x4efb;&#x4f55;&#x6765;&#x81ea;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x6d4b;&#x8bd5;&#x7684;&#x670d;&#x52a1;&#x7684;&#x8bf7;&#x6c42;&#x3002",{"_index":5299,"title":{},"body":{"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["xff0c;&#x5b83;&#x5c06;&#x52a0;&#x8f7d",{"_index":3702,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["xff0c;&#x5b83;&#x5c06;&#x53c2;&#x6570;&#x653e;&#x5728;&#x8def;&#x5f84;&#x4e2d;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x8981;&#x67e5;&#x770b;id&#x4e3a;5&#x7684;&#x4ea7;&#x54c1;&#x7684;&#x4ea7;&#x54c1;&#x8be6;&#x7ec6;&#x4fe1;&#x606f;&#x9875;&#x9762;&#xff0c;&#x5fc5;&#x987b;&#x4f7f;&#x7528;&#x4ee5;&#x4e0b;url&#xff1a",{"_index":4724,"title":{},"body":{"Routing/routeparams.html#声明路由参数":{}}}],["xff0c;&#x5b83;&#x5c45;&#x4f4f;&#x5728;&#x53e6;&#x4e00;&#x4e2a;&#x6a21;&#x5757;&#x3002",{"_index":3519,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["xff0c;&#x5b83;&#x8fd8;&#x63d0;&#x4f9b;&#x4e86;&#x7b80;&#x5355;&#x7684;&#x65b9;&#x6cd5;&#x6765;&#x53d1;&#x9001;&#x81ea;&#x5b9a;&#x4e49;&#x4e8b;&#x4ef6;&#x5230;&#x60a8;&#x7684;provid",{"_index":2744,"title":{},"body":{"plus.html#插件":{}}}],["xff0c;&#x5b83;&#x9700;&#x8981;&#x4e00;&#x4e9b;&#x914d;&#x7f6e;&#x3002",{"_index":5434,"title":{},"body":{"Testing/testbed-configuration.html#TestBed-配置（可选）":{}}}],["xff0c;&#x5c31;&#x50cf",{"_index":3955,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["xff0c;&#x5e76;&#x4e14;&#x53ea;&#x662f;&#x4e00;&#x4e9b;&#x6587;&#x672c;&#x7684;&#x5360;&#x4f4d;&#x7b26;&#x3002",{"_index":3729,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["xff0c;&#x5e76;&#x4e14;&#x53ef;&#x4ee5;&#x88ab",{"_index":1372,"title":{},"body":{"ES6&TypeScript/es6/inheritance.html#子类化":{}}}],["xff0c;&#x5e76;&#x542f;&#x52a8;webpack&#x6784;&#x5efa;&#xff1b",{"_index":4364,"title":{},"body":{"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["xff0c;&#x5e76;&#x5c06;&#x5176;&#x5206;&#x914d;&#x7ed9;&#x5c5e;&#x6027",{"_index":5604,"title":{},"body":{"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{}}}],["xff0c;&#x5e76;&#x5c06;&#x6392;&#x5e8f;&#x6240;&#x6709",{"_index":587,"title":{},"body":{"Di/injection_beyond_classes.html#类以外的注入":{}}}],["xff0c;&#x5f53;&#x7f16;&#x8bd1;&#x5668;&#x627e;&#x5230;&#x5177;&#x6709",{"_index":3435,"title":{},"body":{"Modules/directive-duplications.html#指令复制":{}}}],["xff0c;&#x6211;&#x4eec;&#x4e0d;&#x9700;&#x8981;&#x5728;&#x6211;&#x4eec;&#x7684;&#x914d;&#x7f6e;&#x4e2d;&#x5305;&#x542b",{"_index":4297,"title":{},"body":{"Project-setup/loaders.html#Inline":{}}}],["xff0c;&#x6211;&#x4eec;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5b83;&#x8868;&#x793a;&#x6211;&#x4eec;&#x5305;&#x542b;&#x7684;&#x9a8c;&#x8bc1;&#x5668;&#x51fd;&#x6570;&#x3002",{"_index":2160,"title":{},"body":{"Form/reactive-forms_validation.html#验证响应式表单":{}}}],["xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528",{"_index":3959,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{},"Testing/async-execution.html#异步执行测试":{}}}],["xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5bf9;&#x5176;&#x6267;&#x884c;&#x6d4b;&#x8bd5;&#x64cd;&#x4f5c;&#x3002",{"_index":5050,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["xff0c;&#x6211;&#x4eec;&#x5728",{"_index":4533,"title":{},"body":{"Routing/child_routes.html#定义子路由":{}}}],["xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5728",{"_index":3584,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["xff0c;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x9996;&#x5148;&#x786e;&#x4fdd;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x4f7f;&#x7528;&#x6b63;&#x786e;&#x7684;&#x6307;&#x4ee4;&#x548c;&#x6b63;&#x786e;&#x7684;&#x7c7b;&#xff0c;&#x4ee5;&#x5229;&#x7528;&#x7a0b;&#x5e8f;&#x5f0f;&#x7684;&#x8868;&#x5355;&#x3002",{"_index":2049,"title":{},"body":{"Form/reactive-forms_basics.html#响应式表单基础":{}}}],["xff0c;&#x6216",{"_index":4554,"title":{},"body":{"Routing/child_routes.html#链接":{}}}],["xff0c;&#x6240;&#x4ee5;&#x6211;&#x9996;&#x5148;&#x8981;&#x8ba9;&#x4f60;&#x653e;&#x5fc3;&#x7684;&#x5c06;&#x65f6;&#x95f4;&#x548c;&#x7cbe;&#x529b;&#x6295;&#x5165;&#x5230;angular2",{"_index":3007,"title":{},"body":{"why_angular_2.html#数据说话⚡️":{}}}],["xff0c;&#x6709;&#x4e00;&#x4e2a;&#x8def;&#x7531;&#x673a;&#x5236;&#x548c;&#x4e24;&#x4e2a;&#x7ec4;&#x4ef6;&#xff1a",{"_index":3689,"title":{},"body":{"Modules/lazy-loading-module.html#延迟加载模块":{}}}],["xff0c;&#x7136;&#x540e;&#x5c06;&#x5b83;&#x4eec;&#x5bfc;&#x5165;&#x6211;&#x4eec;&#x7684",{"_index":3468,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["xff0c;&#x73b0;&#x5728;&#x5c06;&#x5728;&#x6bcf;&#x6b21;&#x76f8;&#x5173;store&#x5c5e;&#x6027;&#x7531;&#x7cfb;&#x7edf;&#x7684;&#x5176;&#x4f59;&#x90e8;&#x5206;&#x66f4;&#x65b0;&#x65f6;&#x4f7f;&#x7528;&#x65b0;&#x503c;&#x66f4;&#x65b0;&#x3002",{"_index":6114,"title":{},"body":{"state-management/redux_and_component_architecture.html#Redux和组件架构":{}}}],["xff0c;&#x7c7b;&#x4f3c",{"_index":3957,"title":{},"body":{"Observables/observables_array_operations.html#Observables-数组操作":{}}}],["xff0c;&#x7ec4;&#x4ef6;&#x7c7b;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x4e2d;&#x7684;host&#x5143;&#x7d20;&#x5c06;&#x662f",{"_index":3299,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{}}}],["xff0c;&#x7ed9;&#x5b83;&#x4e00;&#x4e2a;&#x62a5;&#x4ef7;&#xff0c;&#x770b;&#x770b;&#x5b83;&#x662f;&#x5426;&#x51fa;&#x73b0;&#x5728;dom&#x4e2d;&#x3002;&#x8fd9;&#x4e2a;&#x8fc7;&#x7a0b;&#x9700;&#x8981;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x7ec4;&#x4ef6;&#xff0c;&#x4f20;&#x5165;&#x4efb;&#x4f55;&#x4f9d;&#x8d56;&#x9879;&#xff0c;&#x89e6;&#x53d1;&#x7ec4;&#x4ef6;&#x6267;&#x884c;&#x4e00;&#x4e2a;&#x52a8;&#x4f5c;&#xff0c;&#x7136;&#x540e;&#x67e5;&#x770b;dom&#xff0c;&#x770b;&#x770b;&#x52a8;&#x4f5c;&#x662f;&#x5426;&#x662f;&#x6211;&#x4eec;&#x6240;&#x671f;&#x671b;&#x7684;&#x3002",{"_index":5054,"title":{},"body":{"Testing/injecting-dependencies.html#注入依赖和DOM修改":{}}}],["xff0c;&#x800c;&#x4e0d;&#x662f;&#x6574;&#x4f53;&#x3002;&#x4ece;&#x8fd9;&#x4e9b;&#x6d4b;&#x8bd5;&#x4e2d;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;redux&#x4e3b;&#x8981;&#x57fa;&#x4e8e;&#x7eaf;&#x51fd;&#x6570;&#x3002",{"_index":5360,"title":{},"body":{"Testing/reducers.html#测试-Reducers":{}}}],["xff0c;&#x800c;&#x5728;&#x6211;&#x4eec;&#x7684;&#x6587;&#x672c;&#x5b57;&#x6bb5;&#x8f93;&#x5165;&#x4e0a;&#x4f7f;&#x7528",{"_index":3874,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["xff0c;&#x800c;&#x662f;&#x5bfc;&#x5165",{"_index":3484,"title":{},"body":{"Modules/feature-modules.html#创建功能模块":{}}}],["xff0c;&#x800c;&#x662f;&#x5c06",{"_index":3597,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["xff0c;&#x800c;&#x662f;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x5bfc;&#x5165;&#x7684;&#x662f;&#x4ec",{"_index":3542,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["xff0c;&#x89e6;&#x53d1;&#x4e00;&#x4e2a",{"_index":6715,"title":{},"body":{"zone/zone.html#Debugging":{}}}],["xff0c;&#x8be5",{"_index":6303,"title":{},"body":{"zone/interception.html#拦截":{}}}],["xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x904d;&#x5386;&#x6bcf;&#x4e2a;&#x6570;&#x7ec4;&#x7684;&#x9879;&#x76ee;&#x5e76;&#x7d2f;&#x52a0;&#x4e00;&#x4e2a;&#x503c;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c",{"_index":5968,"title":{},"body":{"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{}}}],["xff0c;&#x8fd9;&#x53d6;&#x51b3;&#x4e8e;&#x6211;&#x4eec;&#x6d4b;&#x8bd5;&#x7684;&#x7ed3;&#x679c;&#x3002",{"_index":4852,"title":{},"body":{"Testing/async-execution.html#异步执行测试":{}}}],["xff0c;&#x8fd9;&#x53d6;&#x51b3;&#x4e8e;&#x662f;&#x5426;&#x6240;&#x6709;&#x6d4b;&#x8bd5;&#x901a;&#x8fc7;&#x3002",{"_index":5242,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740",{"_index":1590,"title":{},"body":{"ES6&TypeScript/typescript/decorators.html#装饰器":{}}}],["xff0c;&#x8fd9;&#x662f;webpack&#x8bbe;&#x7f6e;&#x7684;&#x914d;&#x7f6e;&#x6587;&#x4ef6;&#x3002",{"_index":4199,"title":{},"body":{"Project-setup/installation_and_usage.html#安装":{},"Project-setup/installation_and_usage.html#设置和使用":{}}}],["xff0c;&#x8fd9;&#x66f4;&#x50cf;&#x662f;&#x4e00;&#x4e2a;&#x73b0;&#x573a;&#x8868;&#x6f14;&#x3002",{"_index":3869,"title":{},"body":{"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{}}}],["xff0c;&#x8fd9;&#x6709;&#x52a9;&#x4e8e;&#x5b9e;&#x8df5;&#x5b66;&#x4e60;&#xff0c;&#x975e;&#x5e38;&#x9002;&#x5408;&#x9700;&#x8981;&#x5c06;&#x4ed6;&#x4eec;&#x7684;&#x6280;&#x672f;&#x8f6c;&#x6362;&#x5230;angular",{"_index":6888,"title":{},"body":{"README.html#About-Rangle’s-Angular-2-Training-Book":{}}}],["xff0c;&#x8fd9;&#x901a;&#x5e38;&#x662f;&#x4f60;&#x60f3;&#x8981;&#x7684;&#x3002",{"_index":1428,"title":{},"body":{"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{}}}],["xff0c;&#x901a;&#x8fc7;&#x5bfc;&#x822a;&#x5668;&#x4f20;&#x9012;&#x5b83;&#xff0c;&#x8fd9;&#x662f;&#x4f60;&#x4e0d;&#x5e94;&#x8be5;&#x5728;&#x73b0;&#x4ee3;react&#x5e94;&#x7528;&#x7a0b;&#x5e8f;&#x4e2d;&#x505a;&#x7684;&#x7b2c;&#x4e00;&#x4ef6;&#x4e8b;&#x60c5;&#x3002",{"_index":2862,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["xff0c;&#x90a3;&#x4e48;&#x5b83;&#x5c06;&#x671f;&#x671b;&#x5b83;&#x81ea;&#x5df1;&#x7684",{"_index":6541,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["xff0c;&#x90a3;&#x4e48;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x529f;&#x80fd;&#x6a21;&#x5757;&#x3002",{"_index":3595,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["xff0c;&#x90a3;&#x4e48;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x6839;&#x6a21;&#x5757;&#xff0c;&#x5982;&#x679c;&#x76f8;&#x53cd;&#x662f;&#x5bfc;&#x5165",{"_index":3594,"title":{},"body":{"Modules/introduction.html#一个模块的基本使用":{}}}],["xff0c;&#x90a3;&#x4e48;&#x60a8;&#x5bf9;&#x6b64;&#x7ec4;&#x4ef6;&#x7684;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x5c06;&#x5728",{"_index":4991,"title":{},"body":{"Testing/filename-conventions.html#文件名约定":{}}}],["xff0c;&#x9664;&#x975e;&#x60a8;&#x6709;&#x975e;&#x5e38;&#x7279;&#x6b8a;&#x7684;&#x9700;&#x6c42;&#xff0c;&#x9700;&#x8981;&#x5728;&#x4f9d;&#x8d56;&#x6ce8;&#x5165;&#x6811;&#x7684;&#x4e0d;&#x540c;&#x7ea7;&#x522b;&#x6709;&#x591a;&#x4e2a;&#x5b9e;&#x4f8b;&#x3002",{"_index":3551,"title":{},"body":{"Modules/feature-modules.html#服务和懒加载":{}}}],["xff0c;angular&#x662f;&#x4e00;&#x4e2a",{"_index":2844,"title":{},"body":{"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{}}}],["xff0c;chrome&#xff0c;safari&#xff0c;opera&#xff09;&#x4e0a;&#x8fd0;&#x884c;&#x3002",{"_index":6198,"title":{},"body":{"tooling/chrome.html#Web浏览器":{}}}],["xff0c;karma&#x5c06;&#x542f;&#x52a8;&#x914d;&#x7f6e;&#x7684;&#x6d4f;&#x89c8;&#x5668;&#xff0c;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#xff0c;&#x7136;&#x540e;&#x9000;&#x51fa",{"_index":5241,"title":{},"body":{"Testing/karma-config.html#概述":{}}}],["xff1a",{"_index":3294,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html#Host元素":{},"Project-setup/installation_and_usage.html#安装":{},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{}}}],["xhr",{"_index":5092,"title":{},"body":{"Testing/json-xhr.html":{},"zone/tasks.html":{},"zone/tasks.html#任务":{}}}],["xhr&#x8bf7;&#x6c42;&#x3002;&#x8fd9;&#x662f;istanbul&#x81ea;&#x5e26;&#x7684;&#x4e0d;&#x4e00;&#x5b9a;&#x9700;&#x8981",{"_index":5486,"title":{},"body":{"Testing/toolchain.html#测试工具链":{}}}],["xhrbackend",{"_index":5093,"title":{},"body":{"Testing/json-xhr.html":{},"Testing/json-xhr.html#测试JSONP和XHR后端":{},"Testing/mockbackend.html":{},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{}}}],["xhr模块的服务的测试方式与使用http",{"_index":5091,"title":{},"body":{"Testing/json-xhr.html":{}}}],["xhr请求。这是istanbul",{"_index":5465,"title":{},"body":{"Testing/toolchain.html":{}}}],["xi18n",{"_index":2523,"title":{},"body":{"i18n/import-translation-files.html":{},"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["xi18n&#x5c06;&#x5728;&#x63d0;&#x53d6;&#x7ffb;&#x8bd1;&#x6587;&#x672c;&#x4e4b;&#x524d;&#x7f16;&#x8bd1;&#x60a8;&#x7684;&#x4ee3;&#x7801;&#x3002",{"_index":2638,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["xi18n&#x81ea;&#x52a8;&#x751f;&#x6210;&#xff0c;&#x53ef;&#x5728;&#x7ffb;&#x8bd1;&#x6587;&#x4ef6;&#x4e2d;&#x627e;&#x5230;&#xff09",{"_index":2531,"title":{},"body":{"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{}}}],["xlf",{"_index":2567,"title":{},"body":{"i18n/import-using-jit.html":{}}}],["xliff",{"_index":2612,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["xmb",{"_index":2613,"title":{},"body":{"i18n/translation-text-extraction.html":{},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["xmb&#x6587;&#x4ef6;&#x3002",{"_index":2636,"title":{},"body":{"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{}}}],["xsrf",{"_index":2305,"title":{},"body":{"Http/interceptor.html":{}}}],["xsrf&#x4fdd;&#x62a4",{"_index":2315,"title":{},"body":{"Http/interceptor.html#Http-拦截器":{}}}],["yb",{"_index":4045,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["ye",{"_index":125,"title":{},"body":{"Change-detection/change_detection_strategy_onpush.html":{},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{},"state-management/redux_and_component_architecture.html":{},"state-management/redux_and_component_architecture.html#Redux和组件架构":{},"why_TypeScript.html":{},"why_TypeScript.html#Angular-Why-TypeScript":{}}}],["year",{"_index":1506,"title":{},"body":{"ES6&TypeScript/es6/template_strings.html":{},"ES6&TypeScript/es6/template_strings.html#模板字符串":{}}}],["yellow",{"_index":3284,"title":{},"body":{"Advanced-angular/listening_to_an_element_host.html":{},"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["yellowhighlightdirect",{"_index":3401,"title":{},"body":{"Modules/directive-duplications.html":{},"Modules/directive-duplications.html#指令复制":{}}}],["yottabyt",{"_index":4054,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["yourag",{"_index":1737,"title":{},"body":{"ES6&TypeScript/typescript/type_keyword.html":{},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{}}}],["yournam",{"_index":1214,"title":{},"body":{"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{}}}],["youtub",{"_index":2931,"title":{},"body":{"why_angular_2.html":{},"why_angular_2.html#数据说话⚡️":{}}}],["you’ll",{"_index":2506,"title":{},"body":{"Immutable/persistent_and_transient_data_structures.html":{}}}],["z0",{"_index":2219,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{}}}],["za",{"_index":2218,"title":{},"body":{"Form/validating_forms.html":{},"Form/validating_forms.html#验证模板驱动的表单":{}}}],["zb",{"_index":4044,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["zettabyt",{"_index":4053,"title":{},"body":{"Pipes/custom_pipes.html":{}}}],["zipwith",{"_index":2417,"title":{},"body":{"Immutable/lists.html":{}}}],["zone",{"_index":6257,"title":{"zone/zone-propagation.html#Zone-传播":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html#Zones":{},"zone/zone.html#在-Zone-内":{}},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/interception.html":{},"zone/interception.html#拦截":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tasks.html":{},"zone/tasks.html#任务":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zone.html":{},"zone/zone.html#Debugging":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{},"zone/zone_primer.html":{},"zone/zone_primer.html#What":{},"zone/zone_primer.html#Why":{}}}],["zone&#x2019;",{"_index":6372,"title":{},"body":{"zone/task_scheduling.html#Task-Scheduling":{}}}],["zone&#x3002",{"_index":6274,"title":{},"body":{"zone/context_propagation.html#上下文传播":{},"zone/task_scheduling.html#Task-Scheduling":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["zone&#x65f6;&#x624d;&#x8d77;&#x4f5c;&#x7528;&#x3002",{"_index":6749,"title":{},"body":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["zone&#xff08;forked&#xff09;&#xff0c;&#x5982;&#x4f55;&#x901a;&#x8fc7;&#x7cfb;&#x7edf;&#x4f20;&#x64ad;&#xff0c;&#x4ee5;&#x53ca;&#x5982;&#x4f55;&#x5f62;&#x8c61;&#x7684;&#x7406;&#x89e3",{"_index":6584,"title":{},"body":{"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["zone&#xff09",{"_index":6798,"title":{},"body":{"zone/zone_primer.html#What":{}}}],["zone&apo",{"_index":6624,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zone.curr",{"_index":6259,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{},"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}}}],["zone.current.fork",{"_index":6355,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["zone.current.schedulemacrotask",{"_index":6352,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["zone.current.wrap(callback",{"_index":6313,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["zone.j",{"_index":4181,"title":{},"body":{"Project-setup/installation_and_usage.html":{},"Project-setup/summary.html":{},"zone/zone.html":{},"zone/zone.html#Zones":{}}}],["zone.js&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x5168;&#x5c40;&#x533a;&#x57df;&#xff0c;&#x53ef;&#x4ee5;&#x88ab",{"_index":6671,"title":{},"body":{"zone/zone.html#Zones":{}}}],["zone.js:83:18",{"_index":6653,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zone.prototype.run",{"_index":6323,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["zone.prototype.run()[root",{"_index":6492,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["zone.prototype.run()[zonea",{"_index":6579,"title":{},"body":{"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["zone.prototype.runguard",{"_index":6322,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["zone.prototype.scheduletask",{"_index":6367,"title":{},"body":{"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["zone.prototype.wrap",{"_index":6320,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{},"zone/task_scheduling.html":{},"zone/task_scheduling.html#Task-Scheduling":{}}}],["zone.prototype.wrap[c",{"_index":6315,"title":{},"body":{"zone/patching_async_methods.html":{},"zone/patching_async_methods.html#异步方法补丁":{}}}],["zone.run",{"_index":6667,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zone.runtask",{"_index":6637,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zone.schedulemacrotask",{"_index":6656,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zone\\.js\\/dist",{"_index":4278,"title":{},"body":{"Project-setup/loaders.html":{},"Project-setup/loaders.html#Webpack-配置":{},"Project-setup/summary.html":{},"Project-setup/summary.html#总结":{}}}],["zonea",{"_index":6262,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{},"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["zonea&#x548c;attach&#x5c5e;&#x6027;&#xff0c;&#x5176;&#x4e2d;&#x4e00;&#x4e9b;&#x8986;&#x76d6;zonea&#x3002",{"_index":6279,"title":{},"body":{"zone/context_propagation.html#上下文传播":{}}}],["zonea.fork",{"_index":6266,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{}}}],["zonea.run",{"_index":6481,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{},"zone/zone-propagation.html":{},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{}}}],["zonealoc",{"_index":6493,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["zonealocationrestor",{"_index":6495,"title":{},"body":{"zone/tracking_async_operations.html":{},"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["zonea和attach属性，其中一些覆盖zonea",{"_index":6264,"title":{},"body":{"zone/context_propagation.html":{}}}],["zoneb",{"_index":6265,"title":{},"body":{"zone/context_propagation.html":{},"zone/context_propagation.html#上下文传播":{}}}],["zoneb的'b'返回zonea的'b'，因为zoneb没有'b",{"_index":6270,"title":{},"body":{"zone/context_propagation.html":{}}}],["zoneb返回zoneb定义'a'为2",{"_index":6268,"title":{},"body":{"zone/context_propagation.html":{}}}],["zonedelag",{"_index":6745,"title":{},"body":{"zone/zoneDelegate.html":{}}}],["zonedeleg",{"_index":6725,"title":{"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{}},"body":{"zone/zoneDelegate.html":{},"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["zonedelegate&#x94a9;&#x5b50;&#x3002",{"_index":6783,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["zonedelegate&#x94a9;&#x5b50;&#x88ab;&#x8c03;&#x7528;&#x3002",{"_index":6788,"title":{},"body":{"zone/zoneDelegate.html#为什么标准工具不起作用":{}}}],["zonedelegate.invok",{"_index":6665,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zonedelegate.invoketask",{"_index":6635,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zonedelegate.scheduletask",{"_index":6654,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zones&#xff0c;&#x5e76;&#x901a;&#x8fc7;&#x5f02;&#x6b65;&#x51fd;&#x6570;&#x4f20;&#x64ad",{"_index":6582,"title":{},"body":{"zone/zone-propagation.html#Zone-传播":{}}}],["zones&#xff0c;&#x73b0;&#x5728;&#x8ba9;&#x6211;&#x4eec;&#x770b;&#x770b;&#x6211;&#x4eec;&#x5982;&#x4f55;&#x8ddf;&#x8e2a;&#x8de8;&#x5f02;&#x6b65;&#x64cd;&#x4f5c;&#x7684",{"_index":6514,"title":{},"body":{"zone/tracking_async_operations.html#跟踪异步操作":{}}}],["zonetask.invok",{"_index":6639,"title":{},"body":{"zone/zone.html":{},"zone/zone.html#Debugging":{}}}],["zone’",{"_index":6350,"title":{},"body":{"zone/task_scheduling.html":{}}}],["zone（fork",{"_index":6551,"title":{},"body":{"zone/zone-propagation.html":{}}}]],"pipeline":["stemmer"]},"store":{"bootstrapping/bootstrapping.html":{"title":"","path":"\\bootstrapping\\bootstrapping.html","body":"#引导Angular 2应用程序 引导是Angular中的一个重要过程 - 它是Angular中加载应用程序的地方。 引导Angular 2应用程序肯定不同于Angular 1.x，但仍然是一个简单的过程。让我们来看看如何做到这一点。"},"Change-detection/angular_1_vs_angular_2.html":{"title":"","path":"\\Change-detection\\angular_1_vs_angular_2.html","body":"#Angular.js 与 Angular 中的变化检测策略 框架的两个版本之间的另一个区别是应用程序（指令或组件）检查DOM节点是否需要更新的方式。 由于双向数据绑定的本质，在Angular.js中不能保证父节点在子节点之前总是被检查。 有可能子节点可以改变父节点或兄弟节点或树中的任何其他节点，这又会在链中触发新的更新。 这使得变化检测机制难以遍历所有节点，并可能掉入具有臭名昭着的“震荡”循环中： 1 10 $digest() iterations reached. Aborting! 译注：这是Angular.js中的当两个方法互相watch时，就会导致不停地进行digest循环，当循环大于十次Angular就会抛出如上错误。 在Angular 2中，改变被保证单向传播。 更改检测器将遍历每个节点一次， 始终从根开始 。 这意味着父组件始终在其子组件之前检查。 Tree traversing in Angular 1 vs Angular 2 Figure: File Structure ❗不要 违背单向数据流策略 ，这会导致： 数据和视图处于不一致状态会导致应用程序难以推理 多次重复该过程等待数据稳定可能会导致性能问题"},"Change-detection/additional_resources.html":{"title":"","path":"\\Change-detection\\additional_resources.html","body":"#其他资源 要了解有关变更检测的详情，请访问以下链接（按相关性顺序）： NgConf 2014: Change Detection (Video) Angular API Docs: ChangeDetectionStrategy Victor Savkin Blog: Change Detection in Angular 2 Victor Savkin Blog: Two Phases of Angular 2 Applications Victor Savkin Blog: Angular, Immutability and Encapsulation"},"bootstrapping/file_structure.html":{"title":"","path":"\\bootstrapping\\file_structure.html","body":"#了解文件结构 让我们开始使用单个组件创建一个空的Angular 应用程序。为此，我们需要以下文件： app/app.component.ts - 这是我们定义根组件的地方 app/app.module.ts - 要引导的Angular模块的入口 index.html - 这是组件将被呈现的页面 app/main.ts - 是将组件和页面组合在一起的胶水 app/app.component.ts 1 2 3 4 5 6 7 import  Component  from '@angular/core' @Component ( selector: 'app-root' , template: 'bBootstrapping an Angular Application/b' ) export class AppComponent   index.html 1 2 3  body   app-root  Loading... / app-root  / body  app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 import  BrowserModule  from '@angular/platform-browser' ; import  NgModule  '@angular/core' ; import  AppComponent  from './app.component' @NgModule ( imports: [BrowserModule], declarations: [AppComponent], bootstrap: [AppComponent] ) export class AppModule   app/main.ts 1 2 3 4 import  platformBrowserDynamic  from '@angular/platform-browser-dynamic' ; import  AppModule  from './app.module' ; platformBrowserDynamic().bootstrapModule(AppModule); 如果你使用Ahead-of-Time（AoT）编译，你将编写 main.ts 如下。 1 2 3 4 import  platformBrowser from '@angular/platform-browser' ; import  AppModuleNgFactory  from '../aot/app/app.module.ngfactory' ; platformBrowser().bootstrapModuleFactory(AppModuleNgFactory); View Example 引导程序进程 main.ts ，这是应用程序的主入口点。 AppModule 作为我们应用程序的根模块运行。模块被配置为使用 AppComponent 作为引导的组件，并将在任何遇到的 app-root HTML元素上呈现。 index.html 文件中有一个 app HTML元素，我们使用 app/main.ts 来导入 AppModule 组件和 platformBrowserDynamic().bootstrapModule 函数，并启动该进程。如上所示，您可以选择使用 AoT ，在这种情况下，您将使用工厂，在示例中是 AppModuleNgFactory 和 bootstrapModuleFactory 。 为什么Angular 以这种方式 bootstrap 自身？ 那么实际上有一个很好的理由。 由于Angular不是基于Web的框架，我们可以编写将在NativeScript或Cordova或任何其他可以托管Angular应用程序的环境中运行的组件。 然后，神奇的是在我们的引导过程 - 我们可以导入我们想要使用的平台，这取决于我们所处的运行环境。在我们的示例中，由于我们在浏览器中运行Angular 2应用程序，因此我们使用 @angular/platform-browser-dynamic 中的bootstrapping进程。 这也是一个好主意，将 bootstrapping 程序放在自己单独的 main.ts 文件中。这使得测试更容易（因为组件与 bootstrap 调用隔离），更容易重用，并为我们的应用程序提供更好的组织和结构。 还有更多的关于理解Angular模块和 @NgModule 的内容将在稍后介绍，但现在这已经足够开始。"},"bootstrapping/bootstrapping_providers.html":{"title":"","path":"\\bootstrapping\\bootstrapping_providers.html","body":"#引导Providers 引导进程还在Angular中启动依赖注入系统。 我们不会在这里讨论Angular的依赖注入系统 - 稍后会介绍。 相反，让我们来看看如何使用整个应用的Providers引导应用程序的示例。 为此，我们将使用我们用来引导应用程序的模块的 providers 属性注册一个名为 GreeterService 的服务。 app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 import  BrowserModule  from '@angular/platform-browser' ; import  NgModule  '@angular/core' ; import  AppComponent  from './app.component' import  GreeterService  from './greeter.service' ; @NgModule ( imports: [BrowserModule], providers: [GreeterService], declarations: [AppComponent], bootstrap: [AppComponent] ) export class AppModule   View Example"},"Change-detection/Change_Detection.html":{"title":"","path":"\\Change-detection\\Change_Detection.html","body":"#变化检测 Figure: Change Detector by Vovka is licensed under Public Domain ( https://pixabay.com/en/coins-handful-russia-ruble-kopek-650779/ ) 变化检测是允许Angular保持我们的视图与我们的模型同步的过程。 变化检测在旧版本的Angular和新版本之间发生了很大的变化。在Angular 1中，框架保留了一长串观察者（每个属性绑定到我们的模板），需要在每次 digest 循环开始时检查。这被称为 脏检查 ，它是唯一可用的变化检测机制。 因为默认情况下Angular 1实现了双向数据绑定，所以变化的流动相当混乱，模型能够改变指令，指令亦能够改变模型，指令能够改变其他指令，模型也能够改变其他模型。 在Angular 2中， 信息流是单向的 ，即使使用ngModel来实现双向数据绑定，这只是流向顶部的单向流语法糖。在这个新版本的框架中，我们的代码负责更新模型。 Angular只负责通过选择的变化检测策略来反映组件和DOM中的那些变化。"},"Change-detection/change_detection_strategy_onpush.html":{"title":"","path":"\\Change-detection\\change_detection_strategy_onpush.html","body":"变化检测策略：OnPush 要通知Angular，我们将遵守前面提到的条件以提高性能，我们将在 MovieComponent 中使用 OnPush 变化检测策略。 app/movie.component.ts 1 2 3 4 5 6 7 @Component( // ... changeDetection: ChangeDetectionStrategy.OnPush  export class MovieComponent  // ...  View Example 这将通知Angular我们的组件只取决于它的输入，并且传递给它的任何对象应该被认为是不可变的。这次当我们点击“Change Actor Properties”按钮时视图不会发生任何变化。 让我们再回顾一下它背后的逻辑。 当用户单击按钮时，调用方法 changeActorPropertiesis 并更新 actor 对象的属性。 当变化检测分析绑定到AppComponent模板的属性时，它将看到与之前相同的景象： Is slogan !== previousSlogan No, it’s the same. Is title !== previousTitle ? No, it’s the same. Is actor !== previousActor ? No, it’s the same. 但是这一次，我们明确告诉Angular，我们的组件只取决于它的输入，并且它们都是不可变的。 然后，Angular假定 MovieComponent 没有改变，并且将跳过对该组件的检查。 因为我们没有强制 actor 对象是不可变的，所以我们的模型与视图不同步。 让我们重新运行应用程序，但这次我们将点击“Change Actor Object”按钮。 这次，我们创建一个 Actor 类的新实例，并将其分配给 this.actor 对象。 当变化检测分析与 AppComponent 模板绑定的属性时，它会发现： Is slogan !== previousSlogan No, it’s the same. Is title !== previousTitle ? No, it’s the same. Is actor !== previousActor ? Yes , it has changed. 因为变化检测现在知道 actor 对象改变了（它是一个新的实例），它将继续检查模板，以便 MovieComponent 更新其视图。 最后，我们的视图模版和数据模型是同步的。"},"Change-detection/change_detection_strategy_onpush.html#变化检测策略：OnPush":{"title":"&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x7B56;&#x7565;&#xFF1A;OnPush","path":"\\Change-detection\\change_detection_strategy_onpush.html#变化检测策略：OnPush","body":"&#x8981;&#x901A;&#x77E5;Angular&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x9075;&#x5B88;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;&#x6761;&#x4EF6;&#x4EE5;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5728; MovieComponent &#x4E2D;&#x4F7F;&#x7528; OnPush &#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x7B56;&#x7565;&#x3002; app/movie.component.ts 1 2 3 4 5 6 7 @Component({ // ... changeDetection: ChangeDetectionStrategy.OnPush } export class MovieComponent { // ... } View Example &#x8FD9;&#x5C06;&#x901A;&#x77E5;Angular&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x53EA;&#x53D6;&#x51B3;&#x4E8E;&#x5B83;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x5E76;&#x4E14;&#x4F20;&#x9012;&#x7ED9;&#x5B83;&#x7684;&#x4EFB;&#x4F55;&#x5BF9;&#x8C61;&#x5E94;&#x8BE5;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002;&#x8FD9;&#x6B21;&#x5F53;&#x6211;&#x4EEC;&#x70B9;&#x51FB;&#x201C;Change Actor Properties&#x201D;&#x6309;&#x94AE;&#x65F6;&#x89C6;&#x56FE;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x4EFB;&#x4F55;&#x53D8;&#x5316;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x518D;&#x56DE;&#x987E;&#x4E00;&#x4E0B;&#x5B83;&#x80CC;&#x540E;&#x7684;&#x903B;&#x8F91;&#x3002; &#x5F53;&#x7528;&#x6237;&#x5355;&#x51FB;&#x6309;&#x94AE;&#x65F6;&#xFF0C;&#x8C03;&#x7528;&#x65B9;&#x6CD5; changeActorPropertiesis &#x5E76;&#x66F4;&#x65B0; actor &#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x3002; &#x5F53;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x5206;&#x6790;&#x7ED1;&#x5B9A;&#x5230;AppComponent&#x6A21;&#x677F;&#x7684;&#x5C5E;&#x6027;&#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x770B;&#x5230;&#x4E0E;&#x4E4B;&#x524D;&#x76F8;&#x540C;&#x7684;&#x666F;&#x8C61;&#xFF1A; Is slogan !== previousSlogan No, it&#x2019;s the same. Is title !== previousTitle ? No, it&#x2019;s the same. Is actor !== previousActor ? No, it&#x2019;s the same. &#x4F46;&#x662F;&#x8FD9;&#x4E00;&#x6B21;&#xFF0C;&#x6211;&#x4EEC;&#x660E;&#x786E;&#x544A;&#x8BC9;Angular&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x53EA;&#x53D6;&#x51B3;&#x4E8E;&#x5B83;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x4EEC;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002; &#x7136;&#x540E;&#xFF0C;Angular&#x5047;&#x5B9A; MovieComponent &#x6CA1;&#x6709;&#x6539;&#x53D8;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x8DF3;&#x8FC7;&#x5BF9;&#x8BE5;&#x7EC4;&#x4EF6;&#x7684;&#x68C0;&#x67E5;&#x3002; &#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x5F3A;&#x5236; actor &#x5BF9;&#x8C61;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x578B;&#x4E0E;&#x89C6;&#x56FE;&#x4E0D;&#x540C;&#x6B65;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x91CD;&#x65B0;&#x8FD0;&#x884C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x4F46;&#x8FD9;&#x6B21;&#x6211;&#x4EEC;&#x5C06;&#x70B9;&#x51FB;&#x201C;Change Actor Object&#x201D;&#x6309;&#x94AE;&#x3002; &#x8FD9;&#x6B21;&#xFF0C;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; Actor &#x7C7B;&#x7684;&#x65B0;&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x5206;&#x914D;&#x7ED9; this.actor &#x5BF9;&#x8C61;&#x3002; &#x5F53;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x5206;&#x6790;&#x4E0E; AppComponent &#x6A21;&#x677F;&#x7ED1;&#x5B9A;&#x7684;&#x5C5E;&#x6027;&#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x53D1;&#x73B0;&#xFF1A; Is slogan !== previousSlogan No, it&#x2019;s the same. Is title !== previousTitle ? No, it&#x2019;s the same. Is actor !== previousActor ? Yes , it has changed. &#x56E0;&#x4E3A;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x73B0;&#x5728;&#x77E5;&#x9053; actor &#x5BF9;&#x8C61;&#x6539;&#x53D8;&#x4E86;&#xFF08;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B9E;&#x4F8B;&#xFF09;&#xFF0C;&#x5B83;&#x5C06;&#x7EE7;&#x7EED;&#x68C0;&#x67E5;&#x6A21;&#x677F;&#xFF0C;&#x4EE5;&#x4FBF; MovieComponent &#x66F4;&#x65B0;&#x5176;&#x89C6;&#x56FE;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x89C6;&#x56FE;&#x6A21;&#x7248;&#x548C;&#x6570;&#x636E;&#x6A21;&#x578B;&#x662F;&#x540C;&#x6B65;&#x7684;&#x3002;"},"Change-detection/change_detector_classes.html":{"title":"","path":"\\Change-detection\\change_detector_classes.html","body":"#变化检测类 在运行时，Angular 2将创建被称为变化检测器的特殊类，一个用于我们定义的每个组件。在这种情况下，Angular将创建两个类： AppComponent 和 AppComponent_ChangeDetector 。 变化检测器的目标是知道从上一次变化检测过程运行以来，组件的模板中使用的哪些模型属性已经改变。 为了知道，Angular创建了一个适当的变化检测器类的实例和一个链接到它应该检查的组件。 在我们的示例中，因为我们只有一个 MainComponent 和 MovieComponent 的实例，我们将只有一个 MainComponent_ChangeDetector 和 MovieComponent_ChangeDetector 的实例。 下面的代码片段是一个 MainComponent_ChangeDetector 类的概念模型。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class MainComponent_ChangeDetector  constructor ( public previousSlogan: string , public previousTitle: string , public previousActor: Actor, public movieComponent: MovieComponent )  detectChanges(slogan: string , title: string , actor: Actor)  if (slogan !== this .previousSlogan)  this .previousSlogan = slogan; this .movieComponent.slogan = slogan;  if (title !== this .previousTitle)  this .previousTitle = title; this .movieComponent.title = title;  if (actor !== this .previousActor)  this .previousActor = actor; this .movieComponent.actor = actor;    因为在我们的 MainComponent 的模板中我们引用了三个变量（slogan，title和actor），我们的变化检测器将有三个属性来存储这三个属性的“旧”值，加上一个对 MainComponent 实例的引用的“watch”。 当变化检测过程想知道我们的 MainComponent 实例是否已经改变时，它将运行 detectChanges 方法传递当前模型值以与旧的模型值进行比较。 如果检测到更改，组件将更新。 免责声明：这只是一个概念概述了如何更改检测器类工作; 实际实现可能不同。 #变化检测策略：默认 默认情况下，Angular为我们的应用程序中的每个组件定义了一定的变化检测策略。为了使这个定义显式，我们可以使用 @Component 装饰器的 changeDetection 属性。 app/movie.component.ts 1 2 3 4 5 6 7 8 9 10 // ... import ChangeDetectionStrategy from '@angular/core' ; @Component ( // ... changeDetection: ChangeDetectionStrategy.Default ) export class MovieComponent  // ...  让我们看看当用户使用默认策略时点击“Change Actor Properties”按钮时会发生什么。 如前所述，改变由事件触发，并且改变的传播在两个阶段进行：应用阶段和改变检测阶段。 阶段1（申请）： 在第一阶段，应用程序（我们的代码）负责响应一些事件更新模型。 在这种情况下，属性 actor.firstName 和 actor.lastName 被更新。 阶段2（变化检测）： 更改检测始终从根组件（在这种情况下是 AppComponent ）开始，并检查是否有任何绑定到其模板的模型属性已更改，将每个属性的旧值（触发事件之前）与新值（模型更新后）进行比较。。 AppComponent模板具有对三个属性， slogan , title 和 actor 的引用，因此由其相应的更改检测器进行的比较将如下所示： Is slogan !== previousSlogan ? 不，这是一样的。 Is title !== previousTitle ?不，这是一样的。 Is actor !== previousActor ? 不，这是一样的。 注意，即使我们改变 actor 对象的属性，我们总是使用同一个实例。因为我们做一个浅的比较，询问 if actor!== previousActor 的结果将永远是 false ，即使它的内部属性值确实改变了。尽管变化检测器不能找到任何变化，变化检测的 默认策略 是 遍历树的所有组件 ，即使它们似乎没有被修改。 接下来，变化检测在组件层次结构中向下移动，并检查绑定到 MovieComponent 模板的属性进行类似的比较： Is title !== previousTitle ? 不，这是一样的。 Is actorFirstName !== previousActorFirstName ? 是的，它已经改变了。 Is actorLastName !== previousActorLastName ? 是的，它已经改变了。 最后，Angular检测到绑定到模板的一些属性已更改，因此它将更新DOM以获取与模型同步的视图。 #性能影响 遍历所有树组件以检查更改可能是昂贵的。想象一下，我们有多个引用，而不是在 MainComponent 的模板中只有一个对 movie 的引用？ 1  movie * ngFor = \"let movie of movies\" [ title ]= \"movie.title\" [ actor ]= \"movie.actor\"  / movie  ` 如果我们的电影列表增长太大，我们的系统的性能将开始退化。我们可以将问题缩小到一个特定的比较： actor !== previousActor? 正如我们所学到的，这个结果不是很有用，因为我们可以改变对象的属性而不改变实例，比较的结果总是为 false 。因此，变化检测将必须检查每个子组件以查看该对象（ firstName 或 lastName ）的任何属性是否已更改。 如果我们可以找到一种方法来指示变化检测，我们的 MovieComponent 仅依赖于其输入，这些输入是不可变的？总之，我们试图保证当我们改变 actor 对象的任何属性时，我们最终得到一个不同的 Actor 实例，所以比较 actor!== previousActor 总是返回 true 。另一方面，如果我们没有更改任何属性，我们不会创建一个新的实例，所以相同的比较将返回 false 。 如果上述条件可以保证（每次任何其属性改变时创建一个新对象，否则我们保持相同的对象），当检查 MovieComponent 的输入时有以下结果： Is title !== previousTitle ? 不，这是一样的。 Is actor !== previousActor ?不，这是一样的。 那么我们可以跳过组件模板的内部检查，因为我们现在确定内部没有什么变化，没有必要更新DOM。这将提高变更检测系统的性能，因为更少的比较必须通过应用程序传播更改。"},"Change-detection/enforcing_immutability.html":{"title":"","path":"\\Change-detection\\enforcing_immutability.html","body":"#强制不变性 我们在前面的例子中做了一点。 我们告诉Angular我们所有的输入，包括 actor 对象，都是不可变的对象，但是我们继续更新它的属性，违反了不变性原则。 因此，我们最终在我们的模型和我们的视图之间出现同步问题。 一种强制不变性的方法是使用 Immutable.js 库。 因为在JavaScript原始类型，如 string 和 number 是不可变的，通过定义，我们应该只处理我们正在使用的对象。 在本例中为 actor 对象。 这里有一个例子，比较可变的 array 类型和不可变的 string 类型： 1 2 3 4 5 6 7 var b = [ 'C' , 'a' , 'r' ]; b[ 0 ] = 'B' ; console .log(b) // ['B', 'a', 'r'] = The first letter changed, arrays are mutable var a = 'Car' ; a[ 0 ] = 'B' ; console .log(a); // 'Car' = The first letter didn't change, strings are immutable 首先，我们需要使用命令安装immutable.js库： 1 npm install --save immutable 然后在我们的 AppComponent 中，我们导入库并使用它创建一个不可变的 actor 对象。 app/app.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import Component from '@angular/core' ; import MovieComponent from './movie.component' ; import * as Immutable from 'immutable' ; @Component ( selector: 'main' , template: ` h1MovieApp/h1 p slogan /p button type=\"button\" (click)=\"changeActor()\"Change Actor/button movie [title]=\"title\" [actor]=\"actor\"/movie` ) export class MainComponent  slogan: string = 'Just movie information' ; title: string = 'Terminator 1' ; actor: Immutable.Map string , string  = Immutable.Map(firstName: 'Arnold' , lastName: 'Schwarzenegger' ); changeActor()  this .actor = this .actor.merge(firstName: 'Nicholas' , lastName: 'Cage' );   现在，我们不是创建一个Actor类的实例，而是使用 Immutable.Map 来定义一个不可变的对象。 因为 this.actor 现在是一个不可变的对象，我们不能直接改变它的内部属性（ firstName 和 lastName ）。 然而，我们可以做的是创建另一个基于 actor 的对象，这两个字段具有不同的值 - 这正是 merge 方法的作用。 因为当我们尝试改变 actor 时，我们总是得到一个新的对象，所以在我们的组件中有两个不同的方法没有意义。 我们删除了方法 changeActorPrope rties和 changeActorObject 并创建了一个名为 changeActor 的新方法。 还必须对 MovieComponent 进行其他更改。 首先，我们需要将 actor 对象声明为不可变类型，并且在模板中，而不是尝试使用类似 actor.firstName 的语法直接访问对象属性，我们需要使用不可变的 get 方法。 app/movie.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import Component, Input from '@angular/core' ; import ChangeDetectionStrategy from '@angular/core' ; import * as Immutable from 'immutable' ; @Component ( selector: 'movie' , styles: [ 'div border: 1px solid black' ], template: ` div h3 title /h3 p labelActor:/label spanactor.get('firstName') actor.get('lastName')/span /p /div` , changeDetection: ChangeDetectionStrategy.OnPush ) export class MovieComponent  @Input () title: string ; @Input () actor: Immutable.Map string , string ;  使用这种模式，我们充分利用了“OnPush”变化检测策略，从而减少了Angular传播变化、获得模型、视图同步的工作量。 这提高了应用程序的性能。"},"Components/access_child_components_from_template.html":{"title":"","path":"\\Components\\access_child_components_from_template.html","body":"#从模板访问子组件 在我们的模板中，我们可能发现自己需要访问由我们用来构建自己的组件的子组件提供的值。 最直接的例子可能是处理表单或输入： app/app.component.html 1 2 3 4 5 6 7 8  section   form # myForm = \"ngForm\" ( ngSubmit )= \"onSubmit(myForm)\"   label for = \"name\"  Name / label   input type = \"text\" name = \"name\" id = \"name\" ngModel   button type = \"submit\"  Submit / button  / form  Form Value: formValue / section  app/app.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import  Component  from '@angular/core' ; @Component ( selector: 'rio-app' , templateUrl: 'app/app.component.html' ) export class AppComponent  formValue = JSON .stringify(); onSubmit (form: NgForm)  this .formValue = JSON .stringify(form.value);   View Example 这不是一个只有表单或输入的神奇功能，而是一种引用模板中子组件实例的方法。使用该引用，您可以访问该组件的公共属性和方法。 app/app.component.html 1 2  rio-profile # profile  / rio-profile  My name is  profile.name  app/profile.component.ts 1 2 3 4 5 6 7 @Component( selector: 'rio-profile' , templateUrl: 'app/profile.component.html' ) export class ProfileComponent  name = 'John Doe' ;  View Example 还有其他访问和连接子组件的方法，但是如果你只需要引用一个孩子的属性或方法，这可以是一个简单和直接的方法。"},"Components/app_structure_with_components.html":{"title":"","path":"\\Components\\app_structure_with_components.html","body":"#组件的应用程序结构 概念化Angular应用程序设计的一个有用方法是将它看作一个嵌套组件的树，每个组件都有一个独立的作用域。 例如，请考虑以下内容： 1 2 3 4 5 6 7 8  rio-todo-app   rio-todo-list   rio-todo-item  / rio-todo-item   rio-todo-item  / rio-todo-item   rio-todo-item  / rio-todo-item  / rio-todo-list   rio-todo-form  / rio-todo-form  / rio-todo-app  根节点 rio-todo-app ，包括一个 rio-todo-list 和一个 rio-todo-form 。 在列表中，我们有几个 rio-todo-item 。 这些组件中的每一个对于用户是可见的，他们可以与这些组件交互并且执行动作。"},"Components/components.html":{"title":"","path":"\\Components\\components.html","body":"#Angular2中的组件 任何Angular 2应用程序的核心理念是组件。实际上，整个应用程序可以被建模为这些组件的树。 这是Angular 2团队定义组件的方式： 组件控制一个屏幕空间的补丁，我们可以调用视图，并为应用程序声明可重用的UI构建块。 基本上，组件是最终用户可见的任何东西，并且可以在应用程序中重复使用多次。 在Angular1.x中，我们有路由器视图和指令，其工作类似于组件。指令组件的想法变得相当受欢迎。它们是通过使用控制器的指令创建的，同时依赖于controllerAs和bindToController属性。例如： 1 2 3 4 5 6 7 8 9 10 angular.module( 'ngcourse' ) .directive( 'ngcHelloComponent' , () = ( restrict: 'E' , scope:  name : '=' , template: 'spanHello,  ctrl.name ./span' , controller: MyComponentCtrl, controllerAs: 'ctrl' , bindToController: true ) ); 事实上，这个概念变得如此受欢迎，在Angular 1.5中， .component 方法被引入作为语法糖。 1 2 3 4 5 6 angular.module( 'ngcourse' ) .component( 'ngcHelloComponent' ,  bindings:  name : '=' , template: 'spanHello,  $ctrl.name ./span' , controller: MyComponentCtrl );"},"Components/creating_components.html":{"title":"","path":"\\Components\\creating_components.html","body":"#创建组件 创建组件需要三步： 从 @angular/core 引入 Component 装饰器 创建一个类，并用 @Component 修饰 在 @Component 中 ，设置selector、template 和 styles 等元数据 1 2 3 4 5 6 7 8 9 10 11 12 13 import Component from '@angular/core' ; @Component ( selector: 'hello' , template: 'pHello, name/p' ) export class Hello  name: string ; constructor ( )  this .name = 'World' ;   selector （选择器）：我们用它来告诉Angular创建和插入这个组件实例的元素属性。 template （模板）：HTML的一种形式，它告诉Angular如何呈现这个组件。下面的组件会将name变量的值插入到双括号 之间的模板中，在视图中呈现的是 pHello World/p 。 要使用这个组件，我们只需添加 hello/hello 到我们的HTML，Angular将插入这些标签之间的视图的实例。 查看示例"},"Components/passing_data_into_components.html":{"title":"","path":"\\Components\\passing_data_into_components.html","body":"#将数据传递到组件 有两种方式将数据传递到组件：“属性绑定”和“事件绑定”。 在Angular 2中，数据和事件变化检测从上到下发生从父级到子级。 然而对于Angular 2事件，我们可以使用DOM事件传递模型，其中事件从下到上从子到父。 因此，当涉及可撤消事件传播时，Angular 2事件可以像普通HTML DOM事件一样对待。 @Input() 装饰器定义了一组可以从父组件传递的参数。例如，我们可以修改 HelloComponent 组件，以便 name 可以由父提供。 1 2 3 4 5 6 7 8 9 import  Component, Input  from '@angular/core' ; @Component ( selector: 'rio-hello' , template: 'pHello, name!/p' , ) export class HelloComponent  @Input () name: string ;  制作组件的要点不仅是封装，而且是可重用性。 @Input() 允许我们配置组件的特定实例。 我们现在可以使用我们的组件： 1 2 3 4 !-- 绑定到原始字符串 --  rio-hello name = \"World\"  / rio-hello  !-- 绑定到父作用域 --  rio-hello [ name ]= \"helloName\"  / rio-hello  查看示例 与Angular 1.x不同，这是单向绑定。"},"Components/responding_to_component_events.html":{"title":"","path":"\\Components\\responding_to_component_events.html","body":"#响应组件事件 Angular 2中的事件与它们在Angular 1.x中的工作类似。最大的变化是模板语法。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import Component from '@angular/core' ; @Component ( selector: 'rio-counter' , template: ` div pCount: num/p button (click)=\"increment()\"Increment/button /div ` ) export class CounterComponent  num = 0 ; increment()  this .num++;   View Example 要通过 outputs 从组件发送数据，请先定义outputs属性。它接受组件向其父组件公开的输出参数的列表。 app/counter.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import  Component, EventEmitter, Input, Output  from '@angular/core' ; @Component ( selector: 'rio-counter' , templateUrl: 'app/counter.component.html' ) export class CounterComponent  @Input () count = 0 ; @Output () result = new EventEmitter number (); increment()  this .count++; this .result.emit( this .count);   app/counter.component.html 1 2 3 4  div   p  Count:  count  / p   button ( click )= \"increment()\"  Increment / button  / div  app/app.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import  Component, OnChange  from '@angular/core' ; @Component ( selector: 'rio-app' , templateUrl: 'app/app.component.html' ) export class AppComponent implements OnChange  num = 0 ; parentCount = 0 ; ngOnChange(val: number )  this .parentCount = val;   app/app.component.html 1 2 3 4 5 6  div  Parent Num:  num   br  Parent Count:  parentCount   rio-counter [ count ]= \"num\" ( result )= \"ngOnChange($event)\"  / rio-counter  / div  View Example 一组 input + output 绑定定义组件的公共API。在我们的模板中，我们使用 [方括号] 传递输入，使用（括号）来处理输出。"},"Components/projection.html":{"title":"","path":"\\Components\\projection.html","body":"#投影 投影是Angular 2中非常重要的概念。它使开发人员能够构建可重用的组件，并使应用程序更具可扩展性和可维护性。为了说明，假设我们有一个ChildComponent这样的： 1 2 3 4 5 6 7 8 9 10 11 12 @Component ( selector: 'child' , template: ` div h4Child Component/h4  childContent  /div ` ) export class ChildComponent  childContent: string = \"Default content\" ;  如果我们要将 替换为提供给 ChildComponent 的任何HTML，我们应该怎么办？ 一个诱人的想法是定义一个包含文本的@Input，但如果你想提供样式化的HTML或其他组件呢？ 尝试使用@Input处理这个问题可能会很快弄乱，这是内容投影的地方。组件默认情况下支持投影，您可以使用ngContent指令将投影内容放置在模板中。 因此，改变 ChildComponent 使用投影： app/child/child.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import  Component  from '@angular/core' ; @Component ( selector: 'rio-child' , template: ` div style=\"border: 1px solid blue; padding: 1rem;\" h4Child Component/h4 ng-content/ng-content /div ` ) export class ChildComponent   然后，当我们在模板中使用 ChildComponent 时： app/app.component.html 1 2 3 4 5 ...  rio-child   p  My  i  projected / i  content. / p  / rio-child  ... 这告诉Angular，对于 rio-child 的开始和结束标记之间出现的任何标记，放置在 ng-content/ng-content 内。 当这样做，我们可以有其他组件，标记等投影在这里和ChildComponent不需要知道或关心提供什么。 查看示例 但是，如果我们有多个 ng-content/ng-content ，并希望指定预计的内容一定的位置ng-content？例如，对于前面的ChildComponent，如果我们想投影内容转换成一个额外的格式化header和footer部分： 1 2 3 4 5 6 7 8 9 10 11 12 import Component, Input from '@angular/core' ; @Component ( selector: 'child' , template: ` h4Child Component/h4 ng-content select=\"header\"/ng-content ng-content/ng-content ng-content select=\"footer\"/ng-content ` ) class ChildComponent  然后在模板中，我们可以使用指令，例如 header ，通过 select =“header” 指定投影内容到 ng-content 的位置： app/app.component.html 1 2 3 4 5 6 7 8 9 10 ...  rio-child-select   section  Section Content / section   div class = \"class-select\"  div with .class-select / div   footer  Footer Content / footer   header  Header Content / header  / rio-child-select  ... 除了使用指令，开发人员还可以通过css类选择 ng-content ： 1  ng-content select = \".class-select\"  / ng-content  app/app.component.html 1 2 3  div class = \"class-select\"  div with .class-select / div  View Example"},"Components/structuring_applications_with_components.html":{"title":"","path":"\\Components\\structuring_applications_with_components.html","body":"#使用组件构建应用程序 随着应用程序的复杂性和规模的增长，我们希望进一步划分组件之间的责任。 Smart / Container 组件是特定于应用程序，更高级别的容器组件，可访问应用程序的域模型。 Dumb / Presentational 组件是负责UI呈现和/或经由组件API传递的特定实体的行为（即组件属性和事件）的组件。 这些组件更符合即将到来的Web组件标准。"},"Components/using_other_components.html":{"title":"","path":"\\Components\\using_other_components.html","body":"#使用其他组件 组件依赖于其他组件，指令和管道。例如， TodoListComponent 依赖于 TodoItemComponent 。要让组件知道这些依赖关系，我们将它们分组到一个模块中。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import NgModule from '@angular/core' ; import TodoListComponent from './components/todo-list.component' ; import TodoItemComponent from './components/todo-item.component' ; import TodoInputComponent from './components/todo-input.component' ; @NgModule ( imports: [ ... ], declarations: [ TodoListComponent, TodoItemComponent, TodoInputComponent ], bootstrap: [ ... ] ) export class ToDoAppModule   declarations 属性期望作为模块的一部分的组件，指令和管道的数组。 有关 NgModule 的更多信息，请参阅 模块部分 。"},"Components/two_way_data_binding.html":{"title":"","path":"\\Components\\two_way_data_binding.html","body":"#使用双向数据绑定 双向数据绑定使用 ngModel 指令将输入和输出绑定组合为单个符号。 1  input [( ngModel )]= \"name\"  它幕后做的相当于： 1  input [ ngModel ]= \"name\" ( ngModelChange )= \"name=$event\"  要创建一个支持双向绑定的组件，你必须定义一个 @Output 属性匹配 @Input ，但后缀为 Change ，例如： app/counter.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import  Component, Input, Output, EventEmitter  from '@angular/core' ; @Component ( selector: 'rio-counter' , templateUrl: 'app/counter.component.html' ) export class CounterComponent  @Input () count = 0 ; @Output () countChange = EventEmitter number (); increment()  this .count++; this .countChange.emit( this .count);   app/counter.component.html 1 2 3 4 5 6 7  div   p   ng-content  / ng-content  Count:  count  -  button ( click )= \"increment()\"  Increment / button  / p  / div  View Example"},"Di/angular2_di.html":{"title":"","path":"\\Di\\angular2_di.html","body":"Angular 2’s DI 最后一个例子介绍了一个假设的 Injector 对象。Angular 2更进一步简化了DI。 使用Angular 2，程序员几乎不必陷入注入细节。 Angular 2的DI系统（大部分）通过 @NgModule 来控制。 具体来说是 providers 和 declarations 数组。 （ declarations 是我们放置组件，管道和指令的地方； providers 是我们提供服务的地方） 例如： 1 2 3 4 5 6 7 8 9 10 11 12 import  Injectable, NgModule  from '@angular/core' ; @Component (...) class ChatWidget  constructor ( private authService: AuthService, private authWidget: AuthWidget, private chatSocket: ChatSocket )   @NgModule ( declarations: [ ChatWidget ] ) export class AppModule ; 在上面的例子中， AppModule 被告知关于 ChatWidget 类。 另一种说法是，Angular 2已经提供了一个 ChatWidget 。 这看起来很简单，但读者会想知道Angular 2如何知道如何构建 ChatWidget 。如果 ChatWidget 是一个字符串或一个简单的函数怎么办？ Angular 2假设它被赋予一个类。 AuthService ， AuthWidget 和 ChatSocket 怎么样？ ChatWidget 如何获取这些？ 这不是，至少还没有。 Angular 2不知道他们。 这可以很容易改变： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import  Injectable, NgModule  from '@angular/core' ; @Component (...) class ChatWidget  constructor ( private authService: AuthService, private authWidget: AuthWidget, private chatSocket: ChatSocket )   @Component (...) class AuthWidget  @Injectable () class AuthService  @Injectable () class ChatSocket  @NgModule ( declarations[ ChatWidget, AuthWidget ] providers: [ AuthService, ChatSocket ], ) 好吧，这开始看起更完整一些了。虽然还不清楚 ChatWidget 如何被告知关于它的依赖。也许这与那些奇怪的 @Injectable 语句有关。"},"Di/angular2_di.html#Angular-2’s-DI":{"title":"Angular 2&#x2019;s DI","path":"\\Di\\angular2_di.html#Angular-2’s-DI","body":"&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x4E2A;&#x5047;&#x8BBE;&#x7684; Injector &#x5BF9;&#x8C61;&#x3002;Angular 2&#x66F4;&#x8FDB;&#x4E00;&#x6B65;&#x7B80;&#x5316;&#x4E86;DI&#x3002; &#x4F7F;&#x7528;Angular 2&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x51E0;&#x4E4E;&#x4E0D;&#x5FC5;&#x9677;&#x5165;&#x6CE8;&#x5165;&#x7EC6;&#x8282;&#x3002; Angular 2&#x7684;DI&#x7CFB;&#x7EDF;&#xFF08;&#x5927;&#x90E8;&#x5206;&#xFF09;&#x901A;&#x8FC7; @NgModule &#x6765;&#x63A7;&#x5236;&#x3002; &#x5177;&#x4F53;&#x6765;&#x8BF4;&#x662F; providers &#x548C; declarations &#x6570;&#x7EC4;&#x3002; &#xFF08; declarations &#x662F;&#x6211;&#x4EEC;&#x653E;&#x7F6E;&#x7EC4;&#x4EF6;&#xFF0C;&#x7BA1;&#x9053;&#x548C;&#x6307;&#x4EE4;&#x7684;&#x5730;&#x65B9;&#xFF1B; providers &#x662F;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x7684;&#x5730;&#x65B9;&#xFF09; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 import { Injectable, NgModule } from &apos;@angular/core&apos; ; @Component ({...}) class ChatWidget { constructor ( private authService: AuthService, private authWidget: AuthWidget, private chatSocket: ChatSocket ) {} } @NgModule ({ declarations: [ ChatWidget ] }) export class AppModule {}; &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C; AppModule &#x88AB;&#x544A;&#x77E5;&#x5173;&#x4E8E; ChatWidget &#x7C7B;&#x3002; &#x53E6;&#x4E00;&#x79CD;&#x8BF4;&#x6CD5;&#x662F;&#xFF0C;Angular 2&#x5DF2;&#x7ECF;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A; ChatWidget &#x3002; &#x8FD9;&#x770B;&#x8D77;&#x6765;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x8BFB;&#x8005;&#x4F1A;&#x60F3;&#x77E5;&#x9053;Angular 2&#x5982;&#x4F55;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x6784;&#x5EFA; ChatWidget &#x3002;&#x5982;&#x679C; ChatWidget &#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x6216;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x51FD;&#x6570;&#x600E;&#x4E48;&#x529E;&#xFF1F; Angular 2&#x5047;&#x8BBE;&#x5B83;&#x88AB;&#x8D4B;&#x4E88;&#x4E00;&#x4E2A;&#x7C7B;&#x3002; AuthService &#xFF0C; AuthWidget &#x548C; ChatSocket &#x600E;&#x4E48;&#x6837;&#xFF1F; ChatWidget &#x5982;&#x4F55;&#x83B7;&#x53D6;&#x8FD9;&#x4E9B;&#xFF1F; &#x8FD9;&#x4E0D;&#x662F;&#xFF0C;&#x81F3;&#x5C11;&#x8FD8;&#x6CA1;&#x6709;&#x3002; Angular 2&#x4E0D;&#x77E5;&#x9053;&#x4ED6;&#x4EEC;&#x3002; &#x8FD9;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x6539;&#x53D8;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import { Injectable, NgModule } from &apos;@angular/core&apos; ; @Component ({...}) class ChatWidget { constructor ( private authService: AuthService, private authWidget: AuthWidget, private chatSocket: ChatSocket ) {} } @Component ({...}) class AuthWidget {} @Injectable () class AuthService {} @Injectable () class ChatSocket {} @NgModule ({ declarations[ ChatWidget, AuthWidget ] providers: [ AuthService, ChatSocket ], }) &#x597D;&#x5427;&#xFF0C;&#x8FD9;&#x5F00;&#x59CB;&#x770B;&#x8D77;&#x66F4;&#x5B8C;&#x6574;&#x4E00;&#x4E9B;&#x4E86;&#x3002;&#x867D;&#x7136;&#x8FD8;&#x4E0D;&#x6E05;&#x695A; ChatWidget &#x5982;&#x4F55;&#x88AB;&#x544A;&#x77E5;&#x5173;&#x4E8E;&#x5B83;&#x7684;&#x4F9D;&#x8D56;&#x3002;&#x4E5F;&#x8BB8;&#x8FD9;&#x4E0E;&#x90A3;&#x4E9B;&#x5947;&#x602A;&#x7684; @Injectable &#x8BED;&#x53E5;&#x6709;&#x5173;&#x3002;"},"Di/avoiding_collisions_opaque_token.html":{"title":"","path":"\\Di\\avoiding_collisions_opaque_token.html","body":"避免注入冲突：OpaqueToken 由于Angular允许使用令牌作为其依赖注入系统的标识符，潜在问题之一是使用相同的令牌来表示不同的实体。 例如，如果字符串 &#39;token&#39; 用于注入一个实体，可能完全不相关的东西也使用 &#39;token&#39; 注入一个不同的实体。 当Angular解析这些实体之一时，它可能正在解决错误的实体。 这种行为可能很少发生，或者当它在一个小团队中发生时很容易解决 - 但是当涉及到在同一代码库上单独工作的多个团队或来自不同来源的第三方模块时，这些冲突成为一个更大的问题。 考虑这个例子，其中主应用程序是两个模块的消费者：一个提供电子邮件服务，另一个提供日志服务。 app/email/email.service.ts 1 2 3 4 5 6 export const apiConfig = 'api-config' ; @Injectable () export class EmailService  constructor ( @Inject (apiConfig) public apiConfig )    app/email/email.module.ts 1 2 3 4 @NgModule ( providers: [ EmailService ], ) export class EmailModule   电子邮件服务api需要一些由字符串 api-config 标识的配置设置，由DI系统提供。 此模块应足够灵活，以便其可由不同模块在不同应用程序中使用。 这意味着这些设置应该由应用程序特性决定，因此由导入 EmailModule 的 AppModule 提供。 app/logger/logger.service.ts 1 2 3 4 5 6 export const apiConfig = 'api-config' ; @Injectable () export class LoggerService  constructor ( @Inject (apiConfig) public apiConfig )    app/logger/logger.module.ts 1 2 3 4 @NgModule ( providers: [ LoggerService ], ) export class LoggerModule   另一个服务 LoggerModule 由与创建EmailModule的团队不同的团队创建，并且还需要一个配置对象。 不出所料，他们决定对它们的配置对象使用相同的令牌，即字符串 api-config 。 为了避免两个具有相同名称的令牌之间的冲突，我们可以尝试重命名导入，如下所示。 app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 import  apiConfig as emailApiConfig  from './email/index' ; import  apiConfig as loggerApiConfig  from './logger/index' ; @NgModule ( ... providers: [  provide: emailApiConfig, useValue:  apiKey: 'email-key' , context: 'registration'  ,  provide: loggerApiConfig, useValue:  apiKey: 'logger-key'  , ], ... ) export class AppModule   View Example 当应用程序运行时，它会遇到一个冲突问题，导致两个模块获得相同的配置值，在本例中为 {apiKey：&#39;logger-key&#39;} 。 当主应用程序指定这些设置时，Angular将使用 loggerApiConfig 值覆盖第一个 emailApiConfig 值，因为它是最后提供的。 在这种情况下，模块实现细节泄露到父模块。 不仅如此，这些细节通过模块导出被混淆，这可能导致有问题的调试。现在该轮到 OpaqueToken 上场了。 OpaqueToken OpaqueTokens 是独特的和不可变的值，允许开发人员避免注入令牌id冲突。 1 2 3 4 5 6 7 import  OpaqueToken  from '@angular/core' ; const name = 'token' ; const token1 = new OpaqueToken(name); const token2 = new OpaqueToken(name); console .log(token1 === token2); // false 这里，不管是否将相同的值传递给令牌的构造器，它将不会导致相同的符号。 app/email/email.module.ts 1 2 3 4 5 6 export const apiConfig = new OpaqueToken( 'api-config' ); @Injectable () export class EmailService  constructor ( @Inject (apiConfig) public apiConfig: EmailConfig )    1 2 3 4 5 6 export const apiConfig = new OpaqueToken( 'api-config' ); @Injectable () export class LoggerService  constructor ( @Inject (apiConfig) public apiConfig: LoggerConfig )    View Example 在将标识令牌转换为 OpaqueTokens 而不改变任何其他内容之后，避免了冲突。 每个服务从根模块获取正确的配置对象，Angular现在能够区分使用相同字符串的两个令牌。"},"Di/avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken":{"title":"&#x907F;&#x514D;&#x6CE8;&#x5165;&#x51B2;&#x7A81;&#xFF1A;OpaqueToken","path":"\\Di\\avoiding_collisions_opaque_token.html#避免注入冲突：OpaqueToken","body":"&#x7531;&#x4E8E;Angular&#x5141;&#x8BB8;&#x4F7F;&#x7528;&#x4EE4;&#x724C;&#x4F5C;&#x4E3A;&#x5176;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x7CFB;&#x7EDF;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#xFF0C;&#x6F5C;&#x5728;&#x95EE;&#x9898;&#x4E4B;&#x4E00;&#x662F;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x4EE4;&#x724C;&#x6765;&#x8868;&#x793A;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x4F53;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x5B57;&#x7B26;&#x4E32; &apos;token&apos; &#x7528;&#x4E8E;&#x6CE8;&#x5165;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#xFF0C;&#x53EF;&#x80FD;&#x5B8C;&#x5168;&#x4E0D;&#x76F8;&#x5173;&#x7684;&#x4E1C;&#x897F;&#x4E5F;&#x4F7F;&#x7528; &apos;token&apos; &#x6CE8;&#x5165;&#x4E00;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x4F53;&#x3002; &#x5F53;Angular&#x89E3;&#x6790;&#x8FD9;&#x4E9B;&#x5B9E;&#x4F53;&#x4E4B;&#x4E00;&#x65F6;&#xFF0C;&#x5B83;&#x53EF;&#x80FD;&#x6B63;&#x5728;&#x89E3;&#x51B3;&#x9519;&#x8BEF;&#x7684;&#x5B9E;&#x4F53;&#x3002; &#x8FD9;&#x79CD;&#x884C;&#x4E3A;&#x53EF;&#x80FD;&#x5F88;&#x5C11;&#x53D1;&#x751F;&#xFF0C;&#x6216;&#x8005;&#x5F53;&#x5B83;&#x5728;&#x4E00;&#x4E2A;&#x5C0F;&#x56E2;&#x961F;&#x4E2D;&#x53D1;&#x751F;&#x65F6;&#x5F88;&#x5BB9;&#x6613;&#x89E3;&#x51B3; - &#x4F46;&#x662F;&#x5F53;&#x6D89;&#x53CA;&#x5230;&#x5728;&#x540C;&#x4E00;&#x4EE3;&#x7801;&#x5E93;&#x4E0A;&#x5355;&#x72EC;&#x5DE5;&#x4F5C;&#x7684;&#x591A;&#x4E2A;&#x56E2;&#x961F;&#x6216;&#x6765;&#x81EA;&#x4E0D;&#x540C;&#x6765;&#x6E90;&#x7684;&#x7B2C;&#x4E09;&#x65B9;&#x6A21;&#x5757;&#x65F6;&#xFF0C;&#x8FD9;&#x4E9B;&#x51B2;&#x7A81;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x66F4;&#x5927;&#x7684;&#x95EE;&#x9898;&#x3002; &#x8003;&#x8651;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x5176;&#x4E2D;&#x4E3B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x662F;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x6D88;&#x8D39;&#x8005;&#xFF1A;&#x4E00;&#x4E2A;&#x63D0;&#x4F9B;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x63D0;&#x4F9B;&#x65E5;&#x5FD7;&#x670D;&#x52A1;&#x3002; app/email/email.service.ts 1 2 3 4 5 6 export const apiConfig = &apos;api-config&apos; ; @Injectable () export class EmailService { constructor ( @Inject (apiConfig) public apiConfig ) { } } app/email/email.module.ts 1 2 3 4 @NgModule ({ providers: [ EmailService ], }) export class EmailModule { } &#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x670D;&#x52A1;api&#x9700;&#x8981;&#x4E00;&#x4E9B;&#x7531;&#x5B57;&#x7B26;&#x4E32; api-config &#x6807;&#x8BC6;&#x7684;&#x914D;&#x7F6E;&#x8BBE;&#x7F6E;&#xFF0C;&#x7531;DI&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x3002; &#x6B64;&#x6A21;&#x5757;&#x5E94;&#x8DB3;&#x591F;&#x7075;&#x6D3B;&#xFF0C;&#x4EE5;&#x4FBF;&#x5176;&#x53EF;&#x7531;&#x4E0D;&#x540C;&#x6A21;&#x5757;&#x5728;&#x4E0D;&#x540C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x4F7F;&#x7528;&#x3002; &#x8FD9;&#x610F;&#x5473;&#x7740;&#x8FD9;&#x4E9B;&#x8BBE;&#x7F6E;&#x5E94;&#x8BE5;&#x7531;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7279;&#x6027;&#x51B3;&#x5B9A;&#xFF0C;&#x56E0;&#x6B64;&#x7531;&#x5BFC;&#x5165; EmailModule &#x7684; AppModule &#x63D0;&#x4F9B;&#x3002; app/logger/logger.service.ts 1 2 3 4 5 6 export const apiConfig = &apos;api-config&apos; ; @Injectable () export class LoggerService { constructor ( @Inject (apiConfig) public apiConfig ) { } } app/logger/logger.module.ts 1 2 3 4 @NgModule ({ providers: [ LoggerService ], }) export class LoggerModule { } &#x53E6;&#x4E00;&#x4E2A;&#x670D;&#x52A1; LoggerModule &#x7531;&#x4E0E;&#x521B;&#x5EFA;EmailModule&#x7684;&#x56E2;&#x961F;&#x4E0D;&#x540C;&#x7684;&#x56E2;&#x961F;&#x521B;&#x5EFA;&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x5BF9;&#x8C61;&#x3002; &#x4E0D;&#x51FA;&#x6240;&#x6599;&#xFF0C;&#x4ED6;&#x4EEC;&#x51B3;&#x5B9A;&#x5BF9;&#x5B83;&#x4EEC;&#x7684;&#x914D;&#x7F6E;&#x5BF9;&#x8C61;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x4EE4;&#x724C;&#xFF0C;&#x5373;&#x5B57;&#x7B26;&#x4E32; api-config &#x3002; &#x4E3A;&#x4E86;&#x907F;&#x514D;&#x4E24;&#x4E2A;&#x5177;&#x6709;&#x76F8;&#x540C;&#x540D;&#x79F0;&#x7684;&#x4EE4;&#x724C;&#x4E4B;&#x95F4;&#x7684;&#x51B2;&#x7A81;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x91CD;&#x547D;&#x540D;&#x5BFC;&#x5165;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#x3002; app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 import { apiConfig as emailApiConfig } from &apos;./email/index&apos; ; import { apiConfig as loggerApiConfig } from &apos;./logger/index&apos; ; @NgModule ({ ... providers: [ { provide: emailApiConfig, useValue: { apiKey: &apos;email-key&apos; , context: &apos;registration&apos; } }, { provide: loggerApiConfig, useValue: { apiKey: &apos;logger-key&apos; } }, ], ... }) export class AppModule { } View Example &#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x5B83;&#x4F1A;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x51B2;&#x7A81;&#x95EE;&#x9898;&#xFF0C;&#x5BFC;&#x81F4;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#x83B7;&#x5F97;&#x76F8;&#x540C;&#x7684;&#x914D;&#x7F6E;&#x503C;&#xFF0C;&#x5728;&#x672C;&#x4F8B;&#x4E2D;&#x4E3A; {apiKey&#xFF1A;&apos;logger-key&apos;} &#x3002; &#x5F53;&#x4E3B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6307;&#x5B9A;&#x8FD9;&#x4E9B;&#x8BBE;&#x7F6E;&#x65F6;&#xFF0C;Angular&#x5C06;&#x4F7F;&#x7528; loggerApiConfig &#x503C;&#x8986;&#x76D6;&#x7B2C;&#x4E00;&#x4E2A; emailApiConfig &#x503C;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x6700;&#x540E;&#x63D0;&#x4F9B;&#x7684;&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6A21;&#x5757;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x6CC4;&#x9732;&#x5230;&#x7236;&#x6A21;&#x5757;&#x3002; &#x4E0D;&#x4EC5;&#x5982;&#x6B64;&#xFF0C;&#x8FD9;&#x4E9B;&#x7EC6;&#x8282;&#x901A;&#x8FC7;&#x6A21;&#x5757;&#x5BFC;&#x51FA;&#x88AB;&#x6DF7;&#x6DC6;&#xFF0C;&#x8FD9;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x6709;&#x95EE;&#x9898;&#x7684;&#x8C03;&#x8BD5;&#x3002;&#x73B0;&#x5728;&#x8BE5;&#x8F6E;&#x5230; OpaqueToken &#x4E0A;&#x573A;&#x4E86;&#x3002;"},"Di/avoiding_collisions_opaque_token.html#OpaqueToken":{"title":"OpaqueToken","path":"\\Di\\avoiding_collisions_opaque_token.html#OpaqueToken","body":"OpaqueTokens &#x662F;&#x72EC;&#x7279;&#x7684;&#x548C;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x503C;&#xFF0C;&#x5141;&#x8BB8;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x907F;&#x514D;&#x6CE8;&#x5165;&#x4EE4;&#x724C;id&#x51B2;&#x7A81;&#x3002; 1 2 3 4 5 6 7 import { OpaqueToken } from &apos;@angular/core&apos; ; const name = &apos;token&apos; ; const token1 = new OpaqueToken(name); const token2 = new OpaqueToken(name); console .log(token1 === token2); // false &#x8FD9;&#x91CC;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x5426;&#x5C06;&#x76F8;&#x540C;&#x7684;&#x503C;&#x4F20;&#x9012;&#x7ED9;&#x4EE4;&#x724C;&#x7684;&#x6784;&#x9020;&#x5668;&#xFF0C;&#x5B83;&#x5C06;&#x4E0D;&#x4F1A;&#x5BFC;&#x81F4;&#x76F8;&#x540C;&#x7684;&#x7B26;&#x53F7;&#x3002; app/email/email.module.ts 1 2 3 4 5 6 export const apiConfig = new OpaqueToken( &apos;api-config&apos; ); @Injectable () export class EmailService { constructor ( @Inject (apiConfig) public apiConfig: EmailConfig ) { } } 1 2 3 4 5 6 export const apiConfig = new OpaqueToken( &apos;api-config&apos; ); @Injectable () export class LoggerService { constructor ( @Inject (apiConfig) public apiConfig: LoggerConfig ) { } } View Example &#x5728;&#x5C06;&#x6807;&#x8BC6;&#x4EE4;&#x724C;&#x8F6C;&#x6362;&#x4E3A; OpaqueTokens &#x800C;&#x4E0D;&#x6539;&#x53D8;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x5185;&#x5BB9;&#x4E4B;&#x540E;&#xFF0C;&#x907F;&#x514D;&#x4E86;&#x51B2;&#x7A81;&#x3002; &#x6BCF;&#x4E2A;&#x670D;&#x52A1;&#x4ECE;&#x6839;&#x6A21;&#x5757;&#x83B7;&#x53D6;&#x6B63;&#x786E;&#x7684;&#x914D;&#x7F6E;&#x5BF9;&#x8C61;&#xFF0C;Angular&#x73B0;&#x5728;&#x80FD;&#x591F;&#x533A;&#x5206;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4E24;&#x4E2A;&#x4EE4;&#x724C;&#x3002;"},"Di/di.html":{"title":"","path":"\\Di\\di.html","body":"#Angular 2依赖注入 依赖注入（DI）是Angular 1.x的核心特性，在Angular 2中没有改变。DI是一个编程概念，它早于Angular。 DI的目的是简化软件组件中的依赖关系管理。 通过减少组件需要知道的关于其依赖性的信息量，单元测试可以变得更容易，并且代码更可能是灵活的。 Angular 2通过统一Angular 1.x的两个注入系统改进了Angular 1.x的DI模型。 Angular 2中已经修复了与静态分析，压缩和命名空间冲突相关的工具问题。"},"Di/di_framework.html":{"title":"","path":"\\Di\\di_framework.html","body":"#DI 框架 现在我们有一个花里胡哨的 Hamburger 类，它容易测试，但是目前工作起来很尴尬。实例化一个 Hamburger 需要： 1 const hamburger = new Hamburger( new Bun(), new Patty( 'beef' ), new Toppings([])); 创建一个汉堡包需要很多工作，现在所有不同的代码，使 Hamburger 必须了解如何将 Bun , Patty 和 Toppings 实例化。 处理这个新问题的一种方法可能是使用工厂函数： 1 2 3 4 5 6 function makeHamburger ( )  const bun = new Bun(); const patty = new Patty( 'beef' ); const toppings = new Toppings([ 'lettuce' , 'tomato' , 'pickles' ]); return new Hamburger(bun, patty, toppings);  这是一个改进，但是当需要创建更复杂的 Hamburger 时这个工厂将变得混乱。 工厂还负责知道如何创建四个不同的组件。 这对一个函数来说做得太多了。 这是一个依赖注入框架可以帮助。 DI框架具有 Injector 对象的概念。 注入器很像上面的工厂函数，但是更通用，功能强大。 而不是一个巨大的工厂函数，注入器有一个工厂，或 配方 （双关意图）的对象集合。 使用 Injector ，创建 Hamburger 可以像以下一样简单： 1 2 const injector = new Injector([Hamburger, Bun, Patty, Toppings]); const burger = injector.get(Hamburger);"},"Di/inject_and_injectable.html":{"title":"","path":"\\Di\\inject_and_injectable.html","body":"#@Inject 和 @Injectable 看起来像 @SomeName 的语句是装饰器。 装饰器 是JavaScript的扩展。 简而言之，装饰器让程序员修改和/或标记方法，类，属性和参数。有很多种装饰器。 在本节中，重点将放在与DI相关的装饰器： @Inject 和 @Injectable 。 有关装饰器的更多信息，请参阅 EcmaScript 6和TypeScript特性部分 。 #@Inject() @Inject() 是一个手动机制，让Angular 2知道必须注入参数。 它可以这样使用： 1 2 3 4 5 6 7 8 9 10 11 12 13 import  Component, Inject  from '@angular/core' ; import  Hamburger  from '../services/hamburger' ; @Component ( selector: 'app' , template: `Bun Type:  bunType ` ) export class App  bunType: string ; constructor ( @Inject (Hamburger) h )  this .bunType = h.bun.type;   在上面示例中，我们要求 chatWidget 是单例的，Angular通过调用 @Inject(ChatWidget) 与类符号 ChatWidget 关联。 需要特别注意的是，我们使用 ChatWidget 的类型和作为其单例的引用。 我们没有使用 ChatWidget 来实例化任何东西，Angular在幕后帮我们做好了。 当使用TypeScript时，@Inject只需要注入 primitives 。 TypeScript的类型让Angular 2知道在大多数情况下要做什么。 以上示例将在TypeScript中简化为： 1 2 3 4 5 6 7 8 9 10 11 12 13 import  Component  from '@angular/core' ; import  ChatWidget  from '../components/chat-widget' ; @Component ( selector: 'app' , template: `Encryption:  encryption ` ) export class App  encryption: boolean ; constructor ( chatWidget: ChatWidget )  this .encryption = chatWidget.chatSocket.encryption;   View Example #@Injectable() @Injectable() 让Angular 2知道一个类可以用于依赖注入器。 如果类上有其他Angular 2装饰器或没有任何依赖， @Injectable() 不是必须的。 重要的是任何要注入Angular 2的类都被 装饰 。 然而，最佳实践是使用 @Injectable() 来装饰注入，因为它对开发者更强的语义。 这里有一个用 @Injectable 标记的 ChatWidget 示例： 1 2 3 4 5 6 7 8 9 10 import Injectable from '@angular/core' ; import AuthService from './auth-service' ; import AuthWidget from './auth-widget' ; import ChatSocket from './chat-socket' ; @Injectable () export class ChatWidget  constructor ( public authService: AuthService, public authWidget: AuthWidget, public chatSocket: ChatSocket )    在上面的例子中，Angular 2的注入器通过使用类型信息来确定要注入到 ChatWidget 的构造函数中。 这是可能的，因为这些特定的依赖关系是类型化的，并且不是原始类型。 在某些情况下，Angular 2的DI需要更多的信息，而不仅仅是类型。"},"Di/injection_beyond_classes.html":{"title":"","path":"\\Di\\injection_beyond_classes.html","body":"类以外的注入 到目前为止，注入过的唯一类型是类，但Angular 2不限于注入类。 还简要提及了 providers 的概念。 到目前为止， providers 已经在数组中使用Angular 2的 @NgModule 元数据。 providers 也都是类标识符。 Angular 2让程序员用更详细的“食谱”指定 providers 。 这是通过为提供Angular 2一个对象字面量（ {} ）实现的： 1 2 3 4 5 6 7 8 import  NgModule  from '@angular/core' ; import  App  from './containers/app' ; // hypothetical app component import  ChatWidget  from './components/chat-widget' ; @NgModule ( providers: [  provide: ChatWidget, useClass: ChatWidget  ], ) export class DiExample ; 这个例子是另一个 provide 一个类的例子，但它使用Angular 2的更长格式。 这个长格式很方便。 如果程序员想要关闭 ChatWidget 实现，例如允许一个 MockChatWidget ，他们可以轻松地做到： 1 2 3 4 5 6 7 8 9 import  NgModule  from '@angular/core' ; import  App  from './containers/app' ; // hypothetical app component import  ChatWidget  from './components/chat-widget' ; import  MockChatWidget  from './components/mock-chat-widget' ; @NgModule ( providers: [  provide: ChatWidget, useClass: MockChatWidget  ], ) export class DiExample ; 这个实现交换的最好的部分是注入系统知道如何构建 MockChatWidget ，并将排序所有 provider 。 注射器可以使用多个类。 useValue 和 useFactory 是Angular 2可以使用的 provider “recipes”的另外两个示例。 例如： 1 2 3 4 5 6 7 8 9 import  NgModule  from '@angular/core' ; import  App  from './containers/app' ; // hypothetical app component const randomFactory = () =  return Math .random(); ; @NgModule ( providers: [  provide: 'Random' , useFactory: randomFactory  ], ) export class DiExample ; 在假设的app组件中，“Random”可以注入： 1 2 3 4 5 6 7 8 9 10 11 12 import  Component, Inject, provide  from '@angular/core' ; @Component ( selector: 'app' , template: `Random:  value ` ) export class App  value: number ; constructor ( @Inject ( 'Random' ) r )  this .value = r;   View Example 一个重要的注意事项是， provide 函数和消费者中的 ‘Random’ 都在引号中。 这是因为作为一个工厂，我们没有在任何地方访问 Random 标识符。 上面的例子使用Angular 2的 useFactory 。 当Angular 2被告知使用 useFactory 来 provide 东西时，Angular 2期望提供的值是一个函数。 有时函数和类甚至比需要的更多。 Angular 2有一个名为 useValue 的“食谱”，这些情况几乎完全相同： 1 2 3 4 5 6 7 import  NgModule  from '@angular/core' ; import  App  from './containers/app' ; // hypothetical app component @NgModule ( providers: [  provide: 'Random' , useValue: Math .random()  ], ) export class DiExample ; View Example 在这种情况下， Math.random 的乘积被分配给传递给 provider 的 useValue 属性。"},"Di/injection_beyond_classes.html#类以外的注入":{"title":"&#x7C7B;&#x4EE5;&#x5916;&#x7684;&#x6CE8;&#x5165;","path":"\\Di\\injection_beyond_classes.html#类以外的注入","body":"&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;&#x6CE8;&#x5165;&#x8FC7;&#x7684;&#x552F;&#x4E00;&#x7C7B;&#x578B;&#x662F;&#x7C7B;&#xFF0C;&#x4F46;Angular 2&#x4E0D;&#x9650;&#x4E8E;&#x6CE8;&#x5165;&#x7C7B;&#x3002; &#x8FD8;&#x7B80;&#x8981;&#x63D0;&#x53CA;&#x4E86; providers &#x7684;&#x6982;&#x5FF5;&#x3002; &#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C; providers &#x5DF2;&#x7ECF;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x4F7F;&#x7528;Angular 2&#x7684; @NgModule &#x5143;&#x6570;&#x636E;&#x3002; providers &#x4E5F;&#x90FD;&#x662F;&#x7C7B;&#x6807;&#x8BC6;&#x7B26;&#x3002; Angular 2&#x8BA9;&#x7A0B;&#x5E8F;&#x5458;&#x7528;&#x66F4;&#x8BE6;&#x7EC6;&#x7684;&#x201C;&#x98DF;&#x8C31;&#x201D;&#x6307;&#x5B9A; providers &#x3002; &#x8FD9;&#x662F;&#x901A;&#x8FC7;&#x4E3A;&#x63D0;&#x4F9B;Angular 2&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;&#xFF08; {} &#xFF09;&#x5B9E;&#x73B0;&#x7684;&#xFF1A; 1 2 3 4 5 6 7 8 import { NgModule } from &apos;@angular/core&apos; ; import { App } from &apos;./containers/app&apos; ; // hypothetical app component import { ChatWidget } from &apos;./components/chat-widget&apos; ; @NgModule ({ providers: [ { provide: ChatWidget, useClass: ChatWidget } ], }) export class DiExample {}; &#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x662F;&#x53E6;&#x4E00;&#x4E2A; provide &#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x4F46;&#x5B83;&#x4F7F;&#x7528;Angular 2&#x7684;&#x66F4;&#x957F;&#x683C;&#x5F0F;&#x3002; &#x8FD9;&#x4E2A;&#x957F;&#x683C;&#x5F0F;&#x5F88;&#x65B9;&#x4FBF;&#x3002; &#x5982;&#x679C;&#x7A0B;&#x5E8F;&#x5458;&#x60F3;&#x8981;&#x5173;&#x95ED; ChatWidget &#x5B9E;&#x73B0;&#xFF0C;&#x4F8B;&#x5982;&#x5141;&#x8BB8;&#x4E00;&#x4E2A; MockChatWidget &#xFF0C;&#x4ED6;&#x4EEC;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x5730;&#x505A;&#x5230;&#xFF1A; 1 2 3 4 5 6 7 8 9 import { NgModule } from &apos;@angular/core&apos; ; import { App } from &apos;./containers/app&apos; ; // hypothetical app component import { ChatWidget } from &apos;./components/chat-widget&apos; ; import { MockChatWidget } from &apos;./components/mock-chat-widget&apos; ; @NgModule ({ providers: [ { provide: ChatWidget, useClass: MockChatWidget } ], }) export class DiExample {}; &#x8FD9;&#x4E2A;&#x5B9E;&#x73B0;&#x4EA4;&#x6362;&#x7684;&#x6700;&#x597D;&#x7684;&#x90E8;&#x5206;&#x662F;&#x6CE8;&#x5165;&#x7CFB;&#x7EDF;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x6784;&#x5EFA; MockChatWidget &#xFF0C;&#x5E76;&#x5C06;&#x6392;&#x5E8F;&#x6240;&#x6709; provider &#x3002; &#x6CE8;&#x5C04;&#x5668;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x7C7B;&#x3002; useValue &#x548C; useFactory &#x662F;Angular 2&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684; provider &#x201C;recipes&#x201D;&#x7684;&#x53E6;&#x5916;&#x4E24;&#x4E2A;&#x793A;&#x4F8B;&#x3002; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 import { NgModule } from &apos;@angular/core&apos; ; import { App } from &apos;./containers/app&apos; ; // hypothetical app component const randomFactory = () = { return Math .random(); }; @NgModule ({ providers: [ { provide: &apos;Random&apos; , useFactory: randomFactory } ], }) export class DiExample {}; &#x5728;&#x5047;&#x8BBE;&#x7684;app&#x7EC4;&#x4EF6;&#x4E2D;&#xFF0C;&#x201C;Random&#x201D;&#x53EF;&#x4EE5;&#x6CE8;&#x5165;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 import { Component, Inject, provide } from &apos;@angular/core&apos; ; @Component ({ selector: &apos;app&apos; , template: `Random: {{ value }}` }) export class App { value: number ; constructor ( @Inject ( &apos;Random&apos; ) r ) { this .value = r; } } View Example &#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6CE8;&#x610F;&#x4E8B;&#x9879;&#x662F;&#xFF0C; provide &#x51FD;&#x6570;&#x548C;&#x6D88;&#x8D39;&#x8005;&#x4E2D;&#x7684; &#x2018;Random&#x2019; &#x90FD;&#x5728;&#x5F15;&#x53F7;&#x4E2D;&#x3002; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5DE5;&#x5382;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x5728;&#x4EFB;&#x4F55;&#x5730;&#x65B9;&#x8BBF;&#x95EE; Random &#x6807;&#x8BC6;&#x7B26;&#x3002; &#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4F7F;&#x7528;Angular 2&#x7684; useFactory &#x3002; &#x5F53;Angular 2&#x88AB;&#x544A;&#x77E5;&#x4F7F;&#x7528; useFactory &#x6765; provide &#x4E1C;&#x897F;&#x65F6;&#xFF0C;Angular 2&#x671F;&#x671B;&#x63D0;&#x4F9B;&#x7684;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x3002; &#x6709;&#x65F6;&#x51FD;&#x6570;&#x548C;&#x7C7B;&#x751A;&#x81F3;&#x6BD4;&#x9700;&#x8981;&#x7684;&#x66F4;&#x591A;&#x3002; Angular 2&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; useValue &#x7684;&#x201C;&#x98DF;&#x8C31;&#x201D;&#xFF0C;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x51E0;&#x4E4E;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#xFF1A; 1 2 3 4 5 6 7 import { NgModule } from &apos;@angular/core&apos; ; import { App } from &apos;./containers/app&apos; ; // hypothetical app component @NgModule ({ providers: [ { provide: &apos;Random&apos; , useValue: Math .random() } ], }) export class DiExample {}; View Example &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; Math.random &#x7684;&#x4E58;&#x79EF;&#x88AB;&#x5206;&#x914D;&#x7ED9;&#x4F20;&#x9012;&#x7ED9; provider &#x7684; useValue &#x5C5E;&#x6027;&#x3002;"},"Di/the_injector_tree.html":{"title":"","path":"\\Di\\the_injector_tree.html","body":"注入树 Angular 2注入器（一般）返回单例。 也就是说，在前面的示例中，应用程序中的所有组件都将接收相同的随机数。 在Angular1.x中只有一个注入器，并且所有服务都是单例。 Angular 2通过使用注入器树来克服这个限制。 在Angular 2中，每个应用程序不只有一个注入器，每个应用程序至少有一个注入器。 注入器被组织在与Angular 2的组件树平行的树中。 考虑下面的树，它是一个包含两个打开的聊天窗口和登录/注销小部件的聊天应用程序的模型。 Figure: Image of a Component Tree, and a DI Tree 在上图中，有一个根注入器，它通过 @NgModule 的 providers 数组建立。有一个 LoginService 注册到根注入器。 根注入器下面是根 @Component 。这个特定的组件没有 providers 数组，并将使用根注入器的所有依赖项。 还有两个子注入器，每个 ChatWindow 组件一个。每个组件都有自己的 ChatService 实例。 第三个子组件是 Logout/Login ，但它没有注入器。 有几个没有注射器的孙子组件。每个 ChatWindow 有 ChatFeed 和 ChatInput 组件。还有 LoginWidget 和 LogoutWidget 组件，其中 Logout/Login 作为它们的父组件。 注入器树不会为每个组件创建新的注入器，但会为每个在其装饰器中具有 providers 数组的组件创建一个新的注入器。 没有 providers 数组的组件查看其注册器的父组件。如果父级没有注入器，它将查找，直到它到达根注入器。 警告： 请小心使用 providers 数组。如果子组件使用父组件的 providers 数组中依赖进行装饰，则子组件将影响父组件的依赖关系。这可能带来各种意想不到的后果。 考虑下面的例子： app/module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import  NgModule  from '@angular/core' ; import  BrowserModule  from '@angular/platform-browser' ; import  App  from './app.component' ; import  ChildInheritor, ChildOwnInjector  from './components/index' ; import  Unique  from './services/unique' ; const randomFactory = () =  return Math .random(); ; @NgModule ( imports: [ BrowserModule ], declarations: [ App, ChildInheritor, ChildOwnInjector, ], /** Provide dependencies here */ providers: [ Unique, ], bootstrap: [ App ], ) export class AppModule  在上面的示例中， Unique 被引导到根注入器。 app/services/unique.ts 1 2 3 4 5 6 7 8 9 10 import  Injectable  from '@angular/core' ; @Injectable () export class Unique  value: string ; constructor ( )  this .value = (+ Date .now()).toString( 16 ) + '.' + Math .floor( Math .random() * 500 );   Unique 服务在实例化时生成其实例唯一的值。 app/components/child-inheritor.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import  Component, Inject  from '@angular/core' ; import  Unique  from '../services/unique' ; @Component ( selector: 'child-inheritor' , template: `span value /span` ) export class ChildInheritor  value: number ; constructor ( u: Unique )  this .value = u.value;   子继承器没有注入器。它将向上遍历组件树，寻找注入器。 app/components/child-own-injector.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import  Component, Inject  from '@angular/core' ; import  Unique  from '../services/unique' ; @Component ( selector: 'child-own-injector' , template: `span value /span` , providers: [Unique] ) export class ChildOwnInjector  value: number ; constructor ( u: Unique )  this .value = u.value;   The child own injector component has an injector that is populated with its own instance of Unique . This component will not share the same value as the root injector’s Unique instance. 子组件自己的注入组件有一个注入器，它填充了自己的 Unique 实例。 此组件不会与根注入器的 Unique 实例共享相同的值。 app/containers/app.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import  Component, Inject  from '@angular/core' ; import  Unique  from '../services/unique' ; @Component ( selector: 'app' , template: ` p App's Unique dependency has a value of  value  /p p which should match /p p ChildInheritor's value: child-inheritor/child-inheritor /p p However, /p p ChildOwnInjector should have its own value: child-own-injector/child-own-injector p ChildOwnInjector's other instance should also have its own value child-own-injector/child-own-injector /p ` , ) export class App  value: number ; constructor ( u: Unique )  this .value = u.value;   View Example"},"Di/the_injector_tree.html#注入树":{"title":"&#x6CE8;&#x5165;&#x6811;","path":"\\Di\\the_injector_tree.html#注入树","body":"Angular 2&#x6CE8;&#x5165;&#x5668;&#xFF08;&#x4E00;&#x822C;&#xFF09;&#x8FD4;&#x56DE;&#x5355;&#x4F8B;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x524D;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x7EC4;&#x4EF6;&#x90FD;&#x5C06;&#x63A5;&#x6536;&#x76F8;&#x540C;&#x7684;&#x968F;&#x673A;&#x6570;&#x3002; &#x5728;Angular1.x&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x5E76;&#x4E14;&#x6240;&#x6709;&#x670D;&#x52A1;&#x90FD;&#x662F;&#x5355;&#x4F8B;&#x3002; Angular 2&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x6CE8;&#x5165;&#x5668;&#x6811;&#x6765;&#x514B;&#x670D;&#x8FD9;&#x4E2A;&#x9650;&#x5236;&#x3002; &#x5728;Angular 2&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0D;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x6BCF;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x6CE8;&#x5165;&#x5668;&#x3002; &#x6CE8;&#x5165;&#x5668;&#x88AB;&#x7EC4;&#x7EC7;&#x5728;&#x4E0E;Angular 2&#x7684;&#x7EC4;&#x4EF6;&#x6811;&#x5E73;&#x884C;&#x7684;&#x6811;&#x4E2D;&#x3002; &#x8003;&#x8651;&#x4E0B;&#x9762;&#x7684;&#x6811;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6253;&#x5F00;&#x7684;&#x804A;&#x5929;&#x7A97;&#x53E3;&#x548C;&#x767B;&#x5F55;/&#x6CE8;&#x9500;&#x5C0F;&#x90E8;&#x4EF6;&#x7684;&#x804A;&#x5929;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6A21;&#x578B;&#x3002; Figure: Image of a Component Tree, and a DI Tree &#x5728;&#x4E0A;&#x56FE;&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x6839;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x5B83;&#x901A;&#x8FC7; @NgModule &#x7684; providers &#x6570;&#x7EC4;&#x5EFA;&#x7ACB;&#x3002;&#x6709;&#x4E00;&#x4E2A; LoginService &#x6CE8;&#x518C;&#x5230;&#x6839;&#x6CE8;&#x5165;&#x5668;&#x3002; &#x6839;&#x6CE8;&#x5165;&#x5668;&#x4E0B;&#x9762;&#x662F;&#x6839; @Component &#x3002;&#x8FD9;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x7EC4;&#x4EF6;&#x6CA1;&#x6709; providers &#x6570;&#x7EC4;&#xFF0C;&#x5E76;&#x5C06;&#x4F7F;&#x7528;&#x6839;&#x6CE8;&#x5165;&#x5668;&#x7684;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x9879;&#x3002; &#x8FD8;&#x6709;&#x4E24;&#x4E2A;&#x5B50;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x6BCF;&#x4E2A; ChatWindow &#x7EC4;&#x4EF6;&#x4E00;&#x4E2A;&#x3002;&#x6BCF;&#x4E2A;&#x7EC4;&#x4EF6;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684; ChatService &#x5B9E;&#x4F8B;&#x3002; &#x7B2C;&#x4E09;&#x4E2A;&#x5B50;&#x7EC4;&#x4EF6;&#x662F; Logout/Login &#xFF0C;&#x4F46;&#x5B83;&#x6CA1;&#x6709;&#x6CE8;&#x5165;&#x5668;&#x3002; &#x6709;&#x51E0;&#x4E2A;&#x6CA1;&#x6709;&#x6CE8;&#x5C04;&#x5668;&#x7684;&#x5B59;&#x5B50;&#x7EC4;&#x4EF6;&#x3002;&#x6BCF;&#x4E2A; ChatWindow &#x6709; ChatFeed &#x548C; ChatInput &#x7EC4;&#x4EF6;&#x3002;&#x8FD8;&#x6709; LoginWidget &#x548C; LogoutWidget &#x7EC4;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D; Logout/Login &#x4F5C;&#x4E3A;&#x5B83;&#x4EEC;&#x7684;&#x7236;&#x7EC4;&#x4EF6;&#x3002; &#x6CE8;&#x5165;&#x5668;&#x6811;&#x4E0D;&#x4F1A;&#x4E3A;&#x6BCF;&#x4E2A;&#x7EC4;&#x4EF6;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x4F46;&#x4F1A;&#x4E3A;&#x6BCF;&#x4E2A;&#x5728;&#x5176;&#x88C5;&#x9970;&#x5668;&#x4E2D;&#x5177;&#x6709; providers &#x6570;&#x7EC4;&#x7684;&#x7EC4;&#x4EF6;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6CE8;&#x5165;&#x5668;&#x3002; &#x6CA1;&#x6709; providers &#x6570;&#x7EC4;&#x7684;&#x7EC4;&#x4EF6;&#x67E5;&#x770B;&#x5176;&#x6CE8;&#x518C;&#x5668;&#x7684;&#x7236;&#x7EC4;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x7236;&#x7EA7;&#x6CA1;&#x6709;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x5B83;&#x5C06;&#x67E5;&#x627E;&#xFF0C;&#x76F4;&#x5230;&#x5B83;&#x5230;&#x8FBE;&#x6839;&#x6CE8;&#x5165;&#x5668;&#x3002; &#x8B66;&#x544A;&#xFF1A; &#x8BF7;&#x5C0F;&#x5FC3;&#x4F7F;&#x7528; providers &#x6570;&#x7EC4;&#x3002;&#x5982;&#x679C;&#x5B50;&#x7EC4;&#x4EF6;&#x4F7F;&#x7528;&#x7236;&#x7EC4;&#x4EF6;&#x7684; providers &#x6570;&#x7EC4;&#x4E2D;&#x4F9D;&#x8D56;&#x8FDB;&#x884C;&#x88C5;&#x9970;&#xFF0C;&#x5219;&#x5B50;&#x7EC4;&#x4EF6;&#x5C06;&#x5F71;&#x54CD;&#x7236;&#x7EC4;&#x4EF6;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002;&#x8FD9;&#x53EF;&#x80FD;&#x5E26;&#x6765;&#x5404;&#x79CD;&#x610F;&#x60F3;&#x4E0D;&#x5230;&#x7684;&#x540E;&#x679C;&#x3002; &#x8003;&#x8651;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; app/module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import { NgModule } from &apos;@angular/core&apos; ; import { BrowserModule } from &apos;@angular/platform-browser&apos; ; import { App } from &apos;./app.component&apos; ; import { ChildInheritor, ChildOwnInjector } from &apos;./components/index&apos; ; import { Unique } from &apos;./services/unique&apos; ; const randomFactory = () = { return Math .random(); }; @NgModule ({ imports: [ BrowserModule ], declarations: [ App, ChildInheritor, ChildOwnInjector, ], /** Provide dependencies here */ providers: [ Unique, ], bootstrap: [ App ], }) export class AppModule {} &#x5728;&#x4E0A;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C; Unique &#x88AB;&#x5F15;&#x5BFC;&#x5230;&#x6839;&#x6CE8;&#x5165;&#x5668;&#x3002; app/services/unique.ts 1 2 3 4 5 6 7 8 9 10 import { Injectable } from &apos;@angular/core&apos; ; @Injectable () export class Unique { value: string ; constructor ( ) { this .value = (+ Date .now()).toString( 16 ) + &apos;.&apos; + Math .floor( Math .random() * 500 ); } } Unique &#x670D;&#x52A1;&#x5728;&#x5B9E;&#x4F8B;&#x5316;&#x65F6;&#x751F;&#x6210;&#x5176;&#x5B9E;&#x4F8B;&#x552F;&#x4E00;&#x7684;&#x503C;&#x3002; app/components/child-inheritor.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import { Component, Inject } from &apos;@angular/core&apos; ; import { Unique } from &apos;../services/unique&apos; ; @Component ({ selector: &apos;child-inheritor&apos; , template: `span{{ value }}/span` }) export class ChildInheritor { value: number ; constructor ( u: Unique ) { this .value = u.value; } } &#x5B50;&#x7EE7;&#x627F;&#x5668;&#x6CA1;&#x6709;&#x6CE8;&#x5165;&#x5668;&#x3002;&#x5B83;&#x5C06;&#x5411;&#x4E0A;&#x904D;&#x5386;&#x7EC4;&#x4EF6;&#x6811;&#xFF0C;&#x5BFB;&#x627E;&#x6CE8;&#x5165;&#x5668;&#x3002; app/components/child-own-injector.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import { Component, Inject } from &apos;@angular/core&apos; ; import { Unique } from &apos;../services/unique&apos; ; @Component ({ selector: &apos;child-own-injector&apos; , template: `span{{ value }}/span` , providers: [Unique] }) export class ChildOwnInjector { value: number ; constructor ( u: Unique ) { this .value = u.value; } } The child own injector component has an injector that is populated with its own instance of Unique . This component will not share the same value as the root injector&#x2019;s Unique instance. &#x5B50;&#x7EC4;&#x4EF6;&#x81EA;&#x5DF1;&#x7684;&#x6CE8;&#x5165;&#x7EC4;&#x4EF6;&#x6709;&#x4E00;&#x4E2A;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x5B83;&#x586B;&#x5145;&#x4E86;&#x81EA;&#x5DF1;&#x7684; Unique &#x5B9E;&#x4F8B;&#x3002; &#x6B64;&#x7EC4;&#x4EF6;&#x4E0D;&#x4F1A;&#x4E0E;&#x6839;&#x6CE8;&#x5165;&#x5668;&#x7684; Unique &#x5B9E;&#x4F8B;&#x5171;&#x4EAB;&#x76F8;&#x540C;&#x7684;&#x503C;&#x3002; app/containers/app.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import { Component, Inject } from &apos;@angular/core&apos; ; import { Unique } from &apos;../services/unique&apos; ; @Component ({ selector: &apos;app&apos; , template: ` p App&apos;s Unique dependency has a value of {{ value }} /p p which should match /p p ChildInheritor&apos;s value: child-inheritor/child-inheritor /p p However, /p p ChildOwnInjector should have its own value: child-own-injector/child-own-injector p ChildOwnInjector&apos;s other instance should also have its own value child-own-injector/child-own-injector /p ` , }) export class App { value: number ; constructor ( u: Unique ) { this .value = u.value; } } View Example"},"Di/what_is_di.html":{"title":"","path":"\\Di\\what_is_di.html","body":"#什么是依赖注入 所以依赖注入使程序员的生活更容易，但它真正做什么？ 考虑下面的代码： 1 2 3 4 5 6 7 8 9 10 class Hamburger  private bun: Bun; private patty: Patty; private toppings: Toppings; constructor ( )  this .bun = new Bun( 'withSesameSeeds' ); this .patty = new Patty( 'beef' ); this .toppings = new Toppings([ 'lettuce' , 'pickle' , 'tomato' ]);   上面的代码是一个表示一个汉堡包类。 该类假设汉堡包括Bun, Patty 和 Toppings。 该类还负责制作Bun, Patty 和 Toppings。 这是一件坏事。 如果需要素食汉堡怎么办？ 一个天真的方法可能是： 1 2 3 4 5 6 7 8 9 10 class VeggieHamburger  private bun: Bun; private patty: Patty; private toppings: Toppings; constructor ( )  this .bun = new Bun( 'withSesameSeeds' ); this .patty = new Patty( 'tofu' ); this .toppings = new Toppings([ 'lettuce' , 'pickle' , 'tomato' ]);   有，问题解决了吗？ 但是如果我们需要一个无麸质汉堡包呢？ 如果我们想要不同的Toppings…如果是更通用的东西如： 1 2 3 4 5 6 7 8 9 10 class Hamburger  private bun: Bun; private patty: Patty; private toppings: Toppings; constructor ( bunType: string , pattyType: string , toppings: string [] )  this .bun = new Bun(bunType); this .patty = new Patty(pattyType); this .toppings = new Toppings(toppings);   好吧，这有点不同，它在某些方面更灵活，但它仍然相当脆弱。 如果Patty构造函数改变以允许新的功能会发生什么？ 整个汉堡包类必须更新。 事实上，任何时候任何这些在汉堡的构造函数中使用的构造函数都会改变，汉堡包也必须改变。 此外，测试期间会发生什么？ 如何有效地mocked Bun, Patty 和 Toppings？ 考虑这些关注，类可以重写为： 1 2 3 4 5 6 7 8 9 10 class Hamburger  private bun: Bun; private patty: Patty; private toppings: Toppings; constructor ( bun: Bun, patty: Patty, toppings: Toppings )  this .bun = bun; this .patty = patty; this .toppings = toppings;   现在当汉堡实例化时，它不需要知道关于它的 Bun, Patty 和 Toppings。 这些元素的构建已经被移出类了。 这种模式非常常见以至于TypeScript允许将他它简写成如下形式： 1 2 3 4 class Hamburger  constructor ( private bun: Bun, private patty: Patty, private toppings: Toppings )   汉堡包类现在更简单，更容易测试。 这种将依赖项提供给Hamburger的模型是基本的依赖注入。 但是还是有一个问题。 如何管理Bun，Patty和Toppings的实例化？ 这是依赖注入作为框架可以使程序员受益的地方，它是Angular 2提供的依赖注入系统。"},"Directives/attribute_directives.html":{"title":"","path":"\\Directives\\attribute_directives.html","body":"#属性指令 属性指令是改变组件的外观或行为的一种方式。 理想情况下，指令应该以组件不可知的方式工作，而不是绑定到实现细节。 例如，Angular 2内置的属性指令ngClass和ngStyle，可以在任何组件或元素上工作。"},"Directives/directives.html":{"title":"","path":"\\Directives\\directives.html","body":"指令 指令修改DOM以更改DOM元素的外观，行为或布局。 指令是Angular 2用于构建应用程序的核心构建块之一。 事实上，Angular 2组件是大部分带有模板的指令 从Angular 1的角度来看，Angular 2组件已经承担了很多角色指令。 涉及模板和依赖注入规则的大多数问题将通过组件完成，涉及修改通用行为的问题通过指令完成。 在Angular 2中有三种主要类型的指令： Component（组件） - 指令与模板 Attribute directives（属性指令） -更改组件或元素的行为但不影响模板的指令 Structural directives（结构指令） - 通过影响模板的呈现方式来改变组件或元素的行为的指令"},"Directives/directives.html#指令":{"title":"&#x6307;&#x4EE4;","path":"\\Directives\\directives.html#指令","body":"&#x6307;&#x4EE4;&#x4FEE;&#x6539;DOM&#x4EE5;&#x66F4;&#x6539;DOM&#x5143;&#x7D20;&#x7684;&#x5916;&#x89C2;&#xFF0C;&#x884C;&#x4E3A;&#x6216;&#x5E03;&#x5C40;&#x3002; &#x6307;&#x4EE4;&#x662F;Angular 2&#x7528;&#x4E8E;&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6838;&#x5FC3;&#x6784;&#x5EFA;&#x5757;&#x4E4B;&#x4E00;&#x3002; &#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;Angular 2&#x7EC4;&#x4EF6;&#x662F;&#x5927;&#x90E8;&#x5206;&#x5E26;&#x6709;&#x6A21;&#x677F;&#x7684;&#x6307;&#x4EE4; &#x4ECE;Angular 1&#x7684;&#x89D2;&#x5EA6;&#x6765;&#x770B;&#xFF0C;Angular 2&#x7EC4;&#x4EF6;&#x5DF2;&#x7ECF;&#x627F;&#x62C5;&#x4E86;&#x5F88;&#x591A;&#x89D2;&#x8272;&#x6307;&#x4EE4;&#x3002; &#x6D89;&#x53CA;&#x6A21;&#x677F;&#x548C;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x89C4;&#x5219;&#x7684;&#x5927;&#x591A;&#x6570;&#x95EE;&#x9898;&#x5C06;&#x901A;&#x8FC7;&#x7EC4;&#x4EF6;&#x5B8C;&#x6210;&#xFF0C;&#x6D89;&#x53CA;&#x4FEE;&#x6539;&#x901A;&#x7528;&#x884C;&#x4E3A;&#x7684;&#x95EE;&#x9898;&#x901A;&#x8FC7;&#x6307;&#x4EE4;&#x5B8C;&#x6210;&#x3002; &#x5728;Angular 2&#x4E2D;&#x6709;&#x4E09;&#x79CD;&#x4E3B;&#x8981;&#x7C7B;&#x578B;&#x7684;&#x6307;&#x4EE4;&#xFF1A; Component&#xFF08;&#x7EC4;&#x4EF6;&#xFF09; - &#x6307;&#x4EE4;&#x4E0E;&#x6A21;&#x677F; Attribute directives&#xFF08;&#x5C5E;&#x6027;&#x6307;&#x4EE4;&#xFF09; -&#x66F4;&#x6539;&#x7EC4;&#x4EF6;&#x6216;&#x5143;&#x7D20;&#x7684;&#x884C;&#x4E3A;&#x4F46;&#x4E0D;&#x5F71;&#x54CD;&#x6A21;&#x677F;&#x7684;&#x6307;&#x4EE4; Structural directives&#xFF08;&#x7ED3;&#x6784;&#x6307;&#x4EE4;&#xFF09; - &#x901A;&#x8FC7;&#x5F71;&#x54CD;&#x6A21;&#x677F;&#x7684;&#x5448;&#x73B0;&#x65B9;&#x5F0F;&#x6765;&#x6539;&#x53D8;&#x7EC4;&#x4EF6;&#x6216;&#x5143;&#x7D20;&#x7684;&#x884C;&#x4E3A;&#x7684;&#x6307;&#x4EE4;"},"Directives/ng_class_directive.html":{"title":"","path":"\\Directives\\ng_class_directive.html","body":"NgClass 指令 ngClass 指令更改绑定到其附加的组件或元素的 class 属性。有几种不同的方式使用指令。 绑定一个字符串 我们可以直接将一个字符串绑定到属性。这就像添加一个html class 属性一样。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Component ( selector: 'app-class-as-string' , template: ` p ngClass=\"centered-text underlined\" class=\"orange\" ng-content/ng-content /p ` , styles: [ ` .centered-text  text-align: center;  .underlined  border-bottom: 1px solid #ccc;  .orange  color: orange;  ` ] ) export class ClassAsStringComponent   View Example 在这种情况下，我们直接绑定一个字符串，所以我们避免使用方括号包装指令。还要注意 ngClass 使用 class 属性来组合最终的类。 绑定一个数组 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @Component ( selector: 'app-class-as-array' , template: ` p [ngClass]=\"['warning', 'big']\" ng-content/ng-content /p ` , styles: [ ` .warning  color: red; font-weight: bold;  .big  font-size: 1.2rem;  ` ] ) export class ClassAsArrayComponent   View Example 在这里，由于我们使用表达式绑定到 ngClass 指令，我们需要在方括号中包装指令名称。当你想有一个函数放在适用的类名列表时，传入数组是很有用的。 绑定一个对象 最后，一个对象可以绑定到指令。如果该属性为true，Angular 2将该对象的每个属性名称应用于组件。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 @Component ( selector: 'app-class-as-object' , template: ` p [ngClass]=\" card: true, dark: false, flat: flat \" ng-content/ng-content br button type=\"button\" (click)=\"flat=!flat\"Toggle Flat/button /p ` , styles: [ ` .card  border: 1px solid #eee; padding: 1rem; margin: 0.4rem; font-family: sans-serif; box-shadow: 2px 2px 2px #888888;  .dark  background-color: #444; border-color: #000; color: #fff;  .flat  box-shadow: none;  ` ] ) export class ClassAsObjectComponent  flat: boolean = true ;  View Example 在这里我们可以看到，由于对象的 card 和 flat 属性是true，这些classes将会生效，但由于 dark 是false，它不会生效。"},"Directives/ng_class_directive.html#NgClass-指令":{"title":"NgClass &#x6307;&#x4EE4;","path":"\\Directives\\ng_class_directive.html#NgClass-指令","body":"ngClass &#x6307;&#x4EE4;&#x66F4;&#x6539;&#x7ED1;&#x5B9A;&#x5230;&#x5176;&#x9644;&#x52A0;&#x7684;&#x7EC4;&#x4EF6;&#x6216;&#x5143;&#x7D20;&#x7684; class &#x5C5E;&#x6027;&#x3002;&#x6709;&#x51E0;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x4F7F;&#x7528;&#x6307;&#x4EE4;&#x3002;"},"Directives/ng_class_directive.html#绑定一个字符串":{"title":"&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;","path":"\\Directives\\ng_class_directive.html#绑定一个字符串","body":"&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5C06;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7ED1;&#x5B9A;&#x5230;&#x5C5E;&#x6027;&#x3002;&#x8FD9;&#x5C31;&#x50CF;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;html class &#x5C5E;&#x6027;&#x4E00;&#x6837;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Component ({ selector: &apos;app-class-as-string&apos; , template: ` p ngClass=centered-text underlined class=orange ng-content/ng-content /p ` , styles: [ ` .centered-text { text-align: center; } .underlined { border-bottom: 1px solid #ccc; } .orange { color: orange; } ` ] }) export class ClassAsStringComponent { } View Example &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x65B9;&#x62EC;&#x53F7;&#x5305;&#x88C5;&#x6307;&#x4EE4;&#x3002;&#x8FD8;&#x8981;&#x6CE8;&#x610F; ngClass &#x4F7F;&#x7528; class &#x5C5E;&#x6027;&#x6765;&#x7EC4;&#x5408;&#x6700;&#x7EC8;&#x7684;&#x7C7B;&#x3002;"},"Directives/ng_class_directive.html#绑定一个数组":{"title":"&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;","path":"\\Directives\\ng_class_directive.html#绑定一个数组","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @Component ({ selector: &apos;app-class-as-array&apos; , template: ` p [ngClass]=[&apos;warning&apos;, &apos;big&apos;] ng-content/ng-content /p ` , styles: [ ` .warning { color: red; font-weight: bold; } .big { font-size: 1.2rem; } ` ] }) export class ClassAsArrayComponent { } View Example &#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x8868;&#x8FBE;&#x5F0F;&#x7ED1;&#x5B9A;&#x5230; ngClass &#x6307;&#x4EE4;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x65B9;&#x62EC;&#x53F7;&#x4E2D;&#x5305;&#x88C5;&#x6307;&#x4EE4;&#x540D;&#x79F0;&#x3002;&#x5F53;&#x4F60;&#x60F3;&#x6709;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x653E;&#x5728;&#x9002;&#x7528;&#x7684;&#x7C7B;&#x540D;&#x5217;&#x8868;&#x65F6;&#xFF0C;&#x4F20;&#x5165;&#x6570;&#x7EC4;&#x662F;&#x5F88;&#x6709;&#x7528;&#x7684;&#x3002;"},"Directives/ng_class_directive.html#绑定一个对象":{"title":"&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;","path":"\\Directives\\ng_class_directive.html#绑定一个对象","body":"&#x6700;&#x540E;&#xFF0C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x7ED1;&#x5B9A;&#x5230;&#x6307;&#x4EE4;&#x3002;&#x5982;&#x679C;&#x8BE5;&#x5C5E;&#x6027;&#x4E3A;true&#xFF0C;Angular 2&#x5C06;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x540D;&#x79F0;&#x5E94;&#x7528;&#x4E8E;&#x7EC4;&#x4EF6;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 @Component ({ selector: &apos;app-class-as-object&apos; , template: ` p [ngClass]={ card: true, dark: false, flat: flat } ng-content/ng-content br button type=button (click)=flat=!flatToggle Flat/button /p ` , styles: [ ` .card { border: 1px solid #eee; padding: 1rem; margin: 0.4rem; font-family: sans-serif; box-shadow: 2px 2px 2px #888888; } .dark { background-color: #444; border-color: #000; color: #fff; } .flat { box-shadow: none; } ` ] }) export class ClassAsObjectComponent { flat: boolean = true ; } View Example &#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x7531;&#x4E8E;&#x5BF9;&#x8C61;&#x7684; card &#x548C; flat &#x5C5E;&#x6027;&#x662F;true&#xFF0C;&#x8FD9;&#x4E9B;classes&#x5C06;&#x4F1A;&#x751F;&#x6548;&#xFF0C;&#x4F46;&#x7531;&#x4E8E; dark &#x662F;false&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x751F;&#x6548;&#x3002;"},"Directives/ng_if_directive.html":{"title":"","path":"\\Directives\\ng_if_directive.html","body":"#NgIf 指令 ngIf指令根据表达式是真还是假有条件地呈现组件或元素 这里是我们的应用程序组件，我们将ngIf指令绑定到一个示例组件。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 @Component ( selector: 'app' , template: ` button type=\"button\" (click)=\"toggleExists()\"Toggle Component/button hr/ if-example *ngIf=\"exists\" Hello /if-example ` ) export class AppComponent  exists: boolean = true ; toggleExists()  this .exists = ! this .exists;   查看示例 单击按钮将切换IfExampleComponent是否为DOM的一部分，而不仅仅是它是否可见。 这意味着每次点击按钮时，IfExampleComponent将被创建或销毁。 这可能是有昂贵的创建/销毁操作的组件的问题。 例如，一个组件可以有一个大的子子树或构造时进行多个HTTP调用。 在这些情况下，如果可能，最好避免使用ngIf。 ⚡️ngIf 语法在 4.0 后已经支持 else 。此外，条件值现在可以存储在局部变量中，供以后重用。当与 async 管道一起使用时特别有用。 1 2 3 4  div * ngIf = \"userObservable | async; else loading; let user\"  Hello user.last, user.first! / div   template # loading  Waiting... / template  注意当使用 then 时 *ngIf 所在的元素部分将被忽略。 1 2 3  element * ngIf = \"someExpression then thenRef else elseRef\"  / element   template # thenRef  AAA / template   template # elseRef  BBB / template "},"Directives/ng_switch_directives.html":{"title":"","path":"\\Directives\\ng_switch_directives.html","body":"#NgSwitch 指令 ngSwitch 实际上包括两个指令，一个属性指令和一个结构指令。 它非常类似于JavaScript和其他编程语言中的switch语句，但是在模板中。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 @Component ( selector: 'app-root' , template: ` div class=\"tabs-selection\" app-tab [active]=\"isSelected(1)\" (click)=\"setTab(1)\"Tab 1/app-tab app-tab [active]=\"isSelected(2)\" (click)=\"setTab(2)\"Tab 2/app-tab app-tab [active]=\"isSelected(3)\" (click)=\"setTab(3)\"Tab 3/app-tab /div div [ngSwitch]=\"tab\" app-tab-content *ngSwitchCase=\"1\"Tab content 1/app-tab-content app-tab-content *ngSwitchCase=\"2\"Tab content 2/app-tab-content app-tab-content *ngSwitchCase=\"3\"app-tab-3/app-tab-3/app-tab-content app-tab-content *ngSwitchDefaultSelect a tab/app-tab-content /div ` ) export class AppComponent  tab: number = 0 ; setTab(num: number )  this .tab = num;  isSelected(num: number )  return this .tab === num;   View Example 这里我们看到 ngSwitch 属性指令附加到一个元素。 该表达式绑定到指令定义什么将在 switch 指令中进行比较。 如果绑定到 ngSwitchCase 的表达式匹配给予 ngSwitch 的表达式，那么将创建这些组件，并销毁其他组件。 如果没有匹配的情况，则会创建与其绑定的 ngSwitchDefault 的组件，其他组件将被销毁。 注意，可以使用 ngSwitchCase 来匹配多个组件，在这些情况下，将创建所有匹配的组件。 由于组件被创建或销毁，请注意这样做的成本。"},"Directives/ng_for_directive.html":{"title":"","path":"\\Directives\\ng_for_directive.html","body":"#NgFor 指令 ngFor 指令是通过使用可迭代的每个项作为模板的上下文来重复模板的一种方式。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @Component ( selector: 'app-root' , template: ` app-for-example *ngFor=\"let episode of episodes\" [episode]=\"episode\" episode.title /app-for-example ` ) export class AppComponent  episodes = [  title: 'Winter Is Coming' , director: 'Tim Van Patten' ,  title: 'The Kingsroad' , director: 'Tim Van Patten' ,  title: 'Lord Snow' , director: 'Brian Kirk' ,  title: 'Cripples, Bastards, and Broken Things' , director: 'Brian Kirk' ,  title: 'The Wolf and the Lion' , director: 'Brian Kirk' ,  title: 'A Golden Crown' , director: 'Daniel Minahan' ,  title: 'You Win or You Die' , director: 'Daniel Minahan' ,  title: 'The Pointy End' , director: 'Daniel Minahan'  ];  View Example ngFor 指令与我们看到的其他指令有不同的语法。 如果你熟悉 for...of 语句，你会注意到，他们几乎相同。 ngFor 允许您指定要迭代的iterable对象，以及在范围内引用每个项的名称。 在我们的示例中，您可以看到该 episode 可用于插值以及属性绑定。 该指令做一些额外的解析，所以当它扩展到模板形式，它看起来有点不同： 1 2 3 4 5 6 7 8 9 10 @Component ( selector: 'app' , template: ` template ngFor [ngForOf]=\"episodes\" let-episode app-for-example [episode]=\"episode\" episode.title /app-for-example /template ` ) View Example 请注意，模板元素上有一个奇怪的let-episode属性。 ngFor指令在其范围内提供一些变量作为上下文。 let-episode是一个上下文绑定，这里它接受迭代的每个项的值。 局部变量 NgFor 还提供了可以被局部变量别名的其他值： index - 当前项目的位置在从0开始的迭代中 first - 如果当前项是可迭代中的第一个项，则为true last - 如果当前项是可迭代中的最后一个项，则为true even - 如果当前索引为偶数，则为true odd - 如果当前索引是奇数，则为true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Component ( selector: 'app' , template: ` for-example *ngFor=\"let episode of episodes; let i = index; let isOdd = odd\" [episode]=\"episode\" [ngClass]=\" odd: isOdd \" i+1. episode.title /for-example hr/ h2Desugared/h2 template ngFor [ngForOf]=\"episodes\" let-episode let-i=\"index\" let-isOdd=\"odd\" for-example [episode]=\"episode\" [ngClass]=\" odd: isOdd \" i+1. episode.title /for-example /template ` ) View Example ##trackBy 通常 ngFor 用于迭代具有唯一ID字段的对象列表。 在这种情况下，我们可以提供一个 trackBy 函数，帮助Angular跟踪列表中的项目，以便它可以检测哪些项目已添加或删除，并提高性能。 Angular 2将通过引用来尝试和跟踪对象，以确定应该创建和销毁哪些项目。 然而，如果你用一个新的对象源代替列表，也许是一个API请求的结果，我们可以通过告诉Angular 2如何跟踪事情来获得一些额外的性能。 例如，如果 Add Episode 按钮是要发出请求并返回新的剧集列表，我们可能不想销毁并重新创建列表中的每个项目。 如果剧集有唯一的ID，我们可以添加一个 trackBy 函数： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 @Component ( selector: 'app-root' , template: ` button (click)=\"addOtherEpisode()\" [disabled]=\"otherEpisodes.length === 0\" Add Episode /button app-for-example *ngFor=\"let episode of episodes; let i = index; let isOdd = odd; trackBy: trackById\" [episode]=\"episode\" [ngClass]=\" odd: isOdd \" episode.title /app-for-example ` ) export class AppComponent  otherEpisodes = [  title: 'Two Swords' , director: 'D. B. Weiss' , id: 8 ,  title: 'The Lion and the Rose' , director: 'Alex Graves' , id: 9 ,  title: 'Breaker of Chains' , director: 'Michelle MacLaren' , id: 10 ,  title: 'Oathkeeper' , director: 'Michelle MacLaren' , id: 11 ] episodes = [  title: 'Winter Is Coming' , director: 'Tim Van Patten' , id: 0 ,  title: 'The Kingsroad' , director: 'Tim Van Patten' , id: 1 ,  title: 'Lord Snow' , director: 'Brian Kirk' , id: 2 ,  title: 'Cripples, Bastards, and Broken Things' , director: 'Brian Kirk' , id: 3 ,  title: 'The Wolf and the Lion' , director: 'Brian Kirk' , id: 4 ,  title: 'A Golden Crown' , director: 'Daniel Minahan' , id: 5 ,  title: 'You Win or You Die' , director: 'Daniel Minahan' , id: 6   title: 'The Pointy End' , director: 'Daniel Minahan' , id: 7  ]; addOtherEpisode()  // We want to create a new object reference for sake of example let episodesCopy = JSON .parse( JSON .stringify( this .episodes)) this .episodes=[...episodesCopy, this .otherEpisodes.pop()];  trackById(index: number , episode: any ): number  return episode.id;   要了解这会如何影响 ForExample 组件，我们向它添加一些 console。 1 2 3 4 5 6 7 8 9 10 export class ForExampleComponent  @Input () episode; ngOnInit()  console .log( 'component created' , this .episode)  ngOnDestroy()  console .log( 'destroying component' , this .episode)   View Example 当我们查看示例时，当我们点击 Add Episode 时，我们可以看到控制台输出，指示只有一个组件被创建 - 用于新添加到列表中的项目。 但是，如果我们从 *ngFor 中删除 trackBy - 每次我们单击按钮，我们将看到组件中的项目被销毁和重新创建。 View Example Without trackBy"},"Directives/ng_for_directive.html#局部变量":{"title":"&#x5C40;&#x90E8;&#x53D8;&#x91CF;","path":"\\Directives\\ng_for_directive.html#局部变量","body":"NgFor &#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x53EF;&#x4EE5;&#x88AB;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x522B;&#x540D;&#x7684;&#x5176;&#x4ED6;&#x503C;&#xFF1A; index - &#x5F53;&#x524D;&#x9879;&#x76EE;&#x7684;&#x4F4D;&#x7F6E;&#x5728;&#x4ECE;0&#x5F00;&#x59CB;&#x7684;&#x8FED;&#x4EE3;&#x4E2D; first - &#x5982;&#x679C;&#x5F53;&#x524D;&#x9879;&#x662F;&#x53EF;&#x8FED;&#x4EE3;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x9879;&#xFF0C;&#x5219;&#x4E3A;true last - &#x5982;&#x679C;&#x5F53;&#x524D;&#x9879;&#x662F;&#x53EF;&#x8FED;&#x4EE3;&#x4E2D;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x9879;&#xFF0C;&#x5219;&#x4E3A;true even - &#x5982;&#x679C;&#x5F53;&#x524D;&#x7D22;&#x5F15;&#x4E3A;&#x5076;&#x6570;&#xFF0C;&#x5219;&#x4E3A;true odd - &#x5982;&#x679C;&#x5F53;&#x524D;&#x7D22;&#x5F15;&#x662F;&#x5947;&#x6570;&#xFF0C;&#x5219;&#x4E3A;true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Component ({ selector: &apos;app&apos; , template: ` for-example *ngFor=let episode of episodes; let i = index; let isOdd = odd [episode]=episode [ngClass]={ odd: isOdd } {{i+1}}. {{episode.title}} /for-example hr/ h2Desugared/h2 template ngFor [ngForOf]=episodes let-episode let-i=index let-isOdd=odd for-example [episode]=episode [ngClass]={ odd: isOdd } {{i+1}}. {{episode.title}} /for-example /template ` }) View Example ##trackBy &#x901A;&#x5E38; ngFor &#x7528;&#x4E8E;&#x8FED;&#x4EE3;&#x5177;&#x6709;&#x552F;&#x4E00;ID&#x5B57;&#x6BB5;&#x7684;&#x5BF9;&#x8C61;&#x5217;&#x8868;&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A; trackBy &#x51FD;&#x6570;&#xFF0C;&#x5E2E;&#x52A9;Angular&#x8DDF;&#x8E2A;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x4EE5;&#x4FBF;&#x5B83;&#x53EF;&#x4EE5;&#x68C0;&#x6D4B;&#x54EA;&#x4E9B;&#x9879;&#x76EE;&#x5DF2;&#x6DFB;&#x52A0;&#x6216;&#x5220;&#x9664;&#xFF0C;&#x5E76;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#x3002; Angular 2&#x5C06;&#x901A;&#x8FC7;&#x5F15;&#x7528;&#x6765;&#x5C1D;&#x8BD5;&#x548C;&#x8DDF;&#x8E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x4EE5;&#x786E;&#x5B9A;&#x5E94;&#x8BE5;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x54EA;&#x4E9B;&#x9879;&#x76EE;&#x3002; &#x7136;&#x800C;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7528;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5BF9;&#x8C61;&#x6E90;&#x4EE3;&#x66FF;&#x5217;&#x8868;&#xFF0C;&#x4E5F;&#x8BB8;&#x662F;&#x4E00;&#x4E2A;API&#x8BF7;&#x6C42;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x544A;&#x8BC9;Angular 2&#x5982;&#x4F55;&#x8DDF;&#x8E2A;&#x4E8B;&#x60C5;&#x6765;&#x83B7;&#x5F97;&#x4E00;&#x4E9B;&#x989D;&#x5916;&#x7684;&#x6027;&#x80FD;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C; Add Episode &#x6309;&#x94AE;&#x662F;&#x8981;&#x53D1;&#x51FA;&#x8BF7;&#x6C42;&#x5E76;&#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x5267;&#x96C6;&#x5217;&#x8868;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x4E0D;&#x60F3;&#x9500;&#x6BC1;&#x5E76;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x9879;&#x76EE;&#x3002; &#x5982;&#x679C;&#x5267;&#x96C6;&#x6709;&#x552F;&#x4E00;&#x7684;ID&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A; trackBy &#x51FD;&#x6570;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 @Component ({ selector: &apos;app-root&apos; , template: ` button (click)=addOtherEpisode() [disabled]=otherEpisodes.length === 0 Add Episode /button app-for-example *ngFor=let episode of episodes; let i = index; let isOdd = odd; trackBy: trackById [episode]=episode [ngClass]={ odd: isOdd } {{episode.title}} /app-for-example ` }) export class AppComponent { otherEpisodes = [ { title: &apos;Two Swords&apos; , director: &apos;D. B. Weiss&apos; , id: 8 }, { title: &apos;The Lion and the Rose&apos; , director: &apos;Alex Graves&apos; , id: 9 }, { title: &apos;Breaker of Chains&apos; , director: &apos;Michelle MacLaren&apos; , id: 10 }, { title: &apos;Oathkeeper&apos; , director: &apos;Michelle MacLaren&apos; , id: 11 }] episodes = [ { title: &apos;Winter Is Coming&apos; , director: &apos;Tim Van Patten&apos; , id: 0 }, { title: &apos;The Kingsroad&apos; , director: &apos;Tim Van Patten&apos; , id: 1 }, { title: &apos;Lord Snow&apos; , director: &apos;Brian Kirk&apos; , id: 2 }, { title: &apos;Cripples, Bastards, and Broken Things&apos; , director: &apos;Brian Kirk&apos; , id: 3 }, { title: &apos;The Wolf and the Lion&apos; , director: &apos;Brian Kirk&apos; , id: 4 }, { title: &apos;A Golden Crown&apos; , director: &apos;Daniel Minahan&apos; , id: 5 }, { title: &apos;You Win or You Die&apos; , director: &apos;Daniel Minahan&apos; , id: 6 } { title: &apos;The Pointy End&apos; , director: &apos;Daniel Minahan&apos; , id: 7 } ]; addOtherEpisode() { // We want to create a new object reference for sake of example let episodesCopy = JSON .parse( JSON .stringify( this .episodes)) this .episodes=[...episodesCopy, this .otherEpisodes.pop()]; } trackById(index: number , episode: any ): number { return episode.id; } } &#x8981;&#x4E86;&#x89E3;&#x8FD9;&#x4F1A;&#x5982;&#x4F55;&#x5F71;&#x54CD; ForExample &#x7EC4;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x5411;&#x5B83;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B; console&#x3002; 1 2 3 4 5 6 7 8 9 10 export class ForExampleComponent { @Input () episode; ngOnInit() { console .log( &apos;component created&apos; , this .episode) } ngOnDestroy() { console .log( &apos;destroying component&apos; , this .episode) } } View Example &#x5F53;&#x6211;&#x4EEC;&#x67E5;&#x770B;&#x793A;&#x4F8B;&#x65F6;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x70B9;&#x51FB; Add Episode &#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#xFF0C;&#x6307;&#x793A;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#x88AB;&#x521B;&#x5EFA; - &#x7528;&#x4E8E;&#x65B0;&#x6DFB;&#x52A0;&#x5230;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x9879;&#x76EE;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4ECE; *ngFor &#x4E2D;&#x5220;&#x9664; trackBy - &#x6BCF;&#x6B21;&#x6211;&#x4EEC;&#x5355;&#x51FB;&#x6309;&#x94AE;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x770B;&#x5230;&#x7EC4;&#x4EF6;&#x4E2D;&#x7684;&#x9879;&#x76EE;&#x88AB;&#x9500;&#x6BC1;&#x548C;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x3002; View Example Without trackBy"},"Directives/ng_style_directive.html":{"title":"","path":"\\Directives\\ng_style_directive.html","body":"NgStyle 指令 Angular 2提供了一个内置的指令 ngStyle 来修改组件或元素的 style 属性。这里有一个例子： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component ( selector: 'app-style-example' , template: ` p style=\"padding: 1rem\" [ngStyle]=\" 'color': 'red', 'font-weight': 'bold', 'borderBottom': borderStyle \" ng-content/ng-content /p ` ) export class StyleExampleComponent  borderStyle = '1px solid black' ;  View Example 请注意，绑定指令的方式与组件属性绑定完全相同。 这里，我们将一个表达式和一个对象字面量绑定到 ngStyle 指令，因此指令名称必须用方括号括起来。 ngStyle 接受一个对象，其属性和值定义该元素的样式。 在这种情况下，我们可以看到，当指定 style 属性时，可以使用短横线式（kebab case）和小驼峰式（lower camel case）命名。 还要注意，在对元素进行样式设计时，html的 style 属性和Angular ngStyle 指令都是合并的。 我们可以将样式属性从模板中移除到组件中作为属性对象，然后使用属性绑定将其分配给 NgStyle 。 这允许对值的动态更改，而且让添加和删除样式属性更加灵活。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Component ( selector: 'app-style-example' , template: ` p style=\"padding: 1rem\" [ngStyle]=\"alertStyles\" ng-content/ng-content /p ` ) export class StyleExampleComponent  borderStyle = '1px solid black' ; alertStyles =  'color' : 'red' , 'font-weight' : 'bold' , 'borderBottom' : this .borderStyle ; "},"Directives/ng_style_directive.html#NgStyle-指令":{"title":"NgStyle &#x6307;&#x4EE4;","path":"\\Directives\\ng_style_directive.html#NgStyle-指令","body":"Angular 2&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5185;&#x7F6E;&#x7684;&#x6307;&#x4EE4; ngStyle &#x6765;&#x4FEE;&#x6539;&#x7EC4;&#x4EF6;&#x6216;&#x5143;&#x7D20;&#x7684; style &#x5C5E;&#x6027;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Component ({ selector: &apos;app-style-example&apos; , template: ` p style=padding: 1rem [ngStyle]={ &apos;color&apos;: &apos;red&apos;, &apos;font-weight&apos;: &apos;bold&apos;, &apos;borderBottom&apos;: borderStyle } ng-content/ng-content /p ` }) export class StyleExampleComponent { borderStyle = &apos;1px solid black&apos; ; } View Example &#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x7ED1;&#x5B9A;&#x6307;&#x4EE4;&#x7684;&#x65B9;&#x5F0F;&#x4E0E;&#x7EC4;&#x4EF6;&#x5C5E;&#x6027;&#x7ED1;&#x5B9A;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x3002; &#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x548C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;&#x7ED1;&#x5B9A;&#x5230; ngStyle &#x6307;&#x4EE4;&#xFF0C;&#x56E0;&#x6B64;&#x6307;&#x4EE4;&#x540D;&#x79F0;&#x5FC5;&#x987B;&#x7528;&#x65B9;&#x62EC;&#x53F7;&#x62EC;&#x8D77;&#x6765;&#x3002; ngStyle &#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x5C5E;&#x6027;&#x548C;&#x503C;&#x5B9A;&#x4E49;&#x8BE5;&#x5143;&#x7D20;&#x7684;&#x6837;&#x5F0F;&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5F53;&#x6307;&#x5B9A; style &#x5C5E;&#x6027;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x77ED;&#x6A2A;&#x7EBF;&#x5F0F;&#xFF08;kebab case&#xFF09;&#x548C;&#x5C0F;&#x9A7C;&#x5CF0;&#x5F0F;&#xFF08;lower camel case&#xFF09;&#x547D;&#x540D;&#x3002; &#x8FD8;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x5728;&#x5BF9;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x6837;&#x5F0F;&#x8BBE;&#x8BA1;&#x65F6;&#xFF0C;html&#x7684; style &#x5C5E;&#x6027;&#x548C;Angular ngStyle &#x6307;&#x4EE4;&#x90FD;&#x662F;&#x5408;&#x5E76;&#x7684;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x6837;&#x5F0F;&#x5C5E;&#x6027;&#x4ECE;&#x6A21;&#x677F;&#x4E2D;&#x79FB;&#x9664;&#x5230;&#x7EC4;&#x4EF6;&#x4E2D;&#x4F5C;&#x4E3A;&#x5C5E;&#x6027;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x5C5E;&#x6027;&#x7ED1;&#x5B9A;&#x5C06;&#x5176;&#x5206;&#x914D;&#x7ED9; NgStyle &#x3002; &#x8FD9;&#x5141;&#x8BB8;&#x5BF9;&#x503C;&#x7684;&#x52A8;&#x6001;&#x66F4;&#x6539;&#xFF0C;&#x800C;&#x4E14;&#x8BA9;&#x6DFB;&#x52A0;&#x548C;&#x5220;&#x9664;&#x6837;&#x5F0F;&#x5C5E;&#x6027;&#x66F4;&#x52A0;&#x7075;&#x6D3B;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Component ({ selector: &apos;app-style-example&apos; , template: ` p style=padding: 1rem [ngStyle]=alertStyles ng-content/ng-content /p ` }) export class StyleExampleComponent { borderStyle = &apos;1px solid black&apos; ; alertStyles = { &apos;color&apos; : &apos;red&apos; , &apos;font-weight&apos; : &apos;bold&apos; , &apos;borderBottom&apos; : this .borderStyle }; }"},"Directives/structural_directives.html":{"title":"","path":"\\Directives\\structural_directives.html","body":"结构指令 结构指令是处理组件或元素通过使用模板标签呈现的方式。 这允许我们运行一些代码来决定最终渲染的输出。 Angular 2有一些内置的结构指令，如 ngIf ， ngFor 和 ngSwitch 。 注意：对于不熟悉模板标记的用户，它是一个具有几个特殊属性的HTML元素。 嵌入在模板标记中的内容不会在网页加载时呈现，而是在运行时通过代码加载的内容。 有关模板标记的更多信息，请访问 MDN文档 。 结构化指令在模板中有自己的特殊语法，它们作为语法糖。 1 2 3 4 5 6 7 8 @Component( selector: &apos;app-directive-example&apos;, template: ` p *structuralDirective=expression Under a structural directive. /p ` ) 我们的伪结构伪指令不带方括号，而是带有星号。 注意，即使没有方括号，绑定仍然是表达式绑定。 这是因为它是语法糖，允许以更直观的方式使用指令，类似于在Angular 1中使用指令。上面的组件模板等价于以下： 1 2 3 4 5 6 7 8 9 10 @Component ( selector: 'app-directive-example' , template: ` template [structuralDirective]=\"expression\" p Under a structural directive. /p /template ` ) 这里，我们看到我们前面说的结构化指令使用的 template 标签。 Angular 2也有一个做同样的事情的内置 template 指令。 1 2 3 4 5 6 7 8 @Component ( selector: 'app-directive-example' , template: ` p template=\"structuralDirective expression\" Under a structural directive. /p ` )"},"Directives/structural_directives.html#结构指令":{"title":"&#x7ED3;&#x6784;&#x6307;&#x4EE4;","path":"\\Directives\\structural_directives.html#结构指令","body":"&#x7ED3;&#x6784;&#x6307;&#x4EE4;&#x662F;&#x5904;&#x7406;&#x7EC4;&#x4EF6;&#x6216;&#x5143;&#x7D20;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x6A21;&#x677F;&#x6807;&#x7B7E;&#x5448;&#x73B0;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x8FD9;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x8FD0;&#x884C;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x6765;&#x51B3;&#x5B9A;&#x6700;&#x7EC8;&#x6E32;&#x67D3;&#x7684;&#x8F93;&#x51FA;&#x3002; Angular 2&#x6709;&#x4E00;&#x4E9B;&#x5185;&#x7F6E;&#x7684;&#x7ED3;&#x6784;&#x6307;&#x4EE4;&#xFF0C;&#x5982; ngIf &#xFF0C; ngFor &#x548C; ngSwitch &#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x5BF9;&#x4E8E;&#x4E0D;&#x719F;&#x6089;&#x6A21;&#x677F;&#x6807;&#x8BB0;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x51E0;&#x4E2A;&#x7279;&#x6B8A;&#x5C5E;&#x6027;&#x7684;HTML&#x5143;&#x7D20;&#x3002; &#x5D4C;&#x5165;&#x5728;&#x6A21;&#x677F;&#x6807;&#x8BB0;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x4E0D;&#x4F1A;&#x5728;&#x7F51;&#x9875;&#x52A0;&#x8F7D;&#x65F6;&#x5448;&#x73B0;&#xFF0C;&#x800C;&#x662F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x52A0;&#x8F7D;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x6709;&#x5173;&#x6A21;&#x677F;&#x6807;&#x8BB0;&#x7684;&#x66F4;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x8BF7;&#x8BBF;&#x95EE; MDN&#x6587;&#x6863; &#x3002; &#x7ED3;&#x6784;&#x5316;&#x6307;&#x4EE4;&#x5728;&#x6A21;&#x677F;&#x4E2D;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x7279;&#x6B8A;&#x8BED;&#x6CD5;&#xFF0C;&#x5B83;&#x4EEC;&#x4F5C;&#x4E3A;&#x8BED;&#x6CD5;&#x7CD6;&#x3002; 1 2 3 4 5 6 7 8 @Component({ selector: &apos;app-directive-example&apos;, template: ` p *structuralDirective=expression Under a structural directive. /p ` }) &#x6211;&#x4EEC;&#x7684;&#x4F2A;&#x7ED3;&#x6784;&#x4F2A;&#x6307;&#x4EE4;&#x4E0D;&#x5E26;&#x65B9;&#x62EC;&#x53F7;&#xFF0C;&#x800C;&#x662F;&#x5E26;&#x6709;&#x661F;&#x53F7;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x5373;&#x4F7F;&#x6CA1;&#x6709;&#x65B9;&#x62EC;&#x53F7;&#xFF0C;&#x7ED1;&#x5B9A;&#x4ECD;&#x7136;&#x662F;&#x8868;&#x8FBE;&#x5F0F;&#x7ED1;&#x5B9A;&#x3002; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x8BED;&#x6CD5;&#x7CD6;&#xFF0C;&#x5141;&#x8BB8;&#x4EE5;&#x66F4;&#x76F4;&#x89C2;&#x7684;&#x65B9;&#x5F0F;&#x4F7F;&#x7528;&#x6307;&#x4EE4;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x5728;Angular 1&#x4E2D;&#x4F7F;&#x7528;&#x6307;&#x4EE4;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x7EC4;&#x4EF6;&#x6A21;&#x677F;&#x7B49;&#x4EF7;&#x4E8E;&#x4EE5;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 @Component ({ selector: &apos;app-directive-example&apos; , template: ` template [structuralDirective]=expression p Under a structural directive. /p /template ` }) &#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x6211;&#x4EEC;&#x524D;&#x9762;&#x8BF4;&#x7684;&#x7ED3;&#x6784;&#x5316;&#x6307;&#x4EE4;&#x4F7F;&#x7528;&#x7684; template &#x6807;&#x7B7E;&#x3002; Angular 2&#x4E5F;&#x6709;&#x4E00;&#x4E2A;&#x505A;&#x540C;&#x6837;&#x7684;&#x4E8B;&#x60C5;&#x7684;&#x5185;&#x7F6E; template &#x6307;&#x4EE4;&#x3002; 1 2 3 4 5 6 7 8 @Component ({ selector: &apos;app-directive-example&apos; , template: ` p template=structuralDirective expression Under a structural directive. /p ` })"},"Directives/using_multiple_structural_directives.html":{"title":"","path":"\\Directives\\using_multiple_structural_directives.html","body":"#使用多个结构指令 有时我们想要将多个结构指令结合在一起，例如使用 ngFor 进行迭代，但想要执行 ngIf 以确保值匹配一些或多个条件。 组合结构指令可能会导致意想不到的结果，因此Angular要求模板一次只能绑定到一个指令。 要应用多个指令，我们必须扩展含糖语法或嵌套模板标签。 1 2 3 4 5 6 7 8 9 10 @Component ( selector: 'app-root' , template: ` template ngFor [ngForOf]=\"[1,2,3,4,5,6]\" let-item div *ngIf=\"item  3\" item /div /template ` ) View Example 如果选项卡标题和内容被抽象到组件类中，下面的选项卡示例可以使用 ngFor 和 ngSwitch 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import Component from '@angular/core' ; @Component ( selector: 'app-root' , template: ` div class=\"tabs-selection\" tab *ngFor=\"let tab of tabs; let i = index\" [active]=\"isSelected(i)\" (click)=\"setTab(i)\"  tab.title  /tab /div div [ngSwitch]=\"tabNumber\" template ngFor [ngForOf]=\"tabs\" let-tab let-i=\"index\" tab-content *ngSwitchCase=\"i\" tab.content /tab-content /template tab-content *ngSwitchDefaultSelect a tab/tab-content /div ` ) export class AppComponent  tabNumber: number = -1 ; tabs = [  title: 'Tab 1' , content: 'Tab content 1' ,  title: 'Tab 2' , content: 'Tab content 2' ,  title: 'Tab 3' , content: 'Tab content 3' , ]; setTab(num: number )  this .tabNumber = num;  isSelected(num: number )  return this .tabNumber === i;   View Example"},"ES6&TypeScript/ES6&TypeScript.html":{"title":"","path":"\\ES6&TypeScript\\ES6&TypeScript.html","body":"EcmaScript 6 and TypeScript Features 我们常说的“JavaScript”语言的正式名叫“EcmaScript”。 新版本的JavaScript，“EcmaScript 6”或“ES6”，提供了许多新功能，扩展了语言的能力。ES6在今天的浏览器中没有得到广泛支持，因此需要转换为ES5。 你可以在几个转换器之间进行选择，但我们将使用TypeScript，Angular团队也使用它来编写的 Angular 2。Angular 2使用了许多ES6和TypeScript的特性。"},"ES6&TypeScript/ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features":{"title":"EcmaScript 6 and TypeScript Features","path":"\\ES6&TypeScript\\ES6&TypeScript.html#EcmaScript-6-and-TypeScript-Features","body":"&#x6211;&#x4EEC;&#x5E38;&#x8BF4;&#x7684;&#x201C;JavaScript&#x201D;&#x8BED;&#x8A00;&#x7684;&#x6B63;&#x5F0F;&#x540D;&#x53EB;&#x201C;EcmaScript&#x201D;&#x3002; &#x65B0;&#x7248;&#x672C;&#x7684;JavaScript&#xFF0C;&#x201C;EcmaScript 6&#x201D;&#x6216;&#x201C;ES6&#x201D;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x8BB8;&#x591A;&#x65B0;&#x529F;&#x80FD;&#xFF0C;&#x6269;&#x5C55;&#x4E86;&#x8BED;&#x8A00;&#x7684;&#x80FD;&#x529B;&#x3002;ES6&#x5728;&#x4ECA;&#x5929;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x6CA1;&#x6709;&#x5F97;&#x5230;&#x5E7F;&#x6CDB;&#x652F;&#x6301;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x8F6C;&#x6362;&#x4E3A;ES5&#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x51E0;&#x4E2A;&#x8F6C;&#x6362;&#x5668;&#x4E4B;&#x95F4;&#x8FDB;&#x884C;&#x9009;&#x62E9;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;TypeScript&#xFF0C;Angular&#x56E2;&#x961F;&#x4E5F;&#x4F7F;&#x7528;&#x5B83;&#x6765;&#x7F16;&#x5199;&#x7684; Angular 2&#x3002;Angular 2&#x4F7F;&#x7528;&#x4E86;&#x8BB8;&#x591A;ES6&#x548C;TypeScript&#x7684;&#x7279;&#x6027;&#x3002;"},"ES6&TypeScript/es6/arrow_functions.html":{"title":"","path":"\\ES6&TypeScript\\es6\\arrow_functions.html","body":"箭头函数 ES6 提供了一些处理 this 的新语法: “箭头函数”。箭头函数能使高阶函数更容易的工作。 新的“胖箭头”符号还可以用更简单的方式来定义匿名函数。 请看下面的例子： 1 2 3 4 items.forEach( function ( x )  console .log(x); incrementedItems.push(x+ 1 ); ); 可以通过“箭头函数”改写如下形式： 1 2 3 4 items.forEach( ( x ) =  console .log(x); incrementedItems.push(x+ 1 ); ); 计算一个表达式并返回值的函数可以被定义更简单： 1 incrementedItems = items.map( ( x ) = x+ 1 ); 下面代码与上面几乎等价： 1 2 3 incrementedItems = items.map( function ( x )  return x+ 1 ; ); 但是箭头函数和一般函数有一个很重要的区别： 箭头函数不会产生自己作用域下的 this , arguments , super 和 new.target 等对象。当 this 在一个箭头函数内部使用时候，JavaScript 会使用函数所在上下文的 this 值。请看下面的例子： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Toppings  constructor (toppings)  this .toppings = Array .isArray(toppings) ? toppings : [];  outputList()  this .toppings.forEach( function ( topping, i )  console .log(topping, i + '/' + this .toppings.length); // no this )   var ctrl = new Toppings([ 'cheese' , 'lettuce' ]); ctrl.outputList(); 让我们在 http://jsbin.com 验证这段代码。不出所料，报错了，因为 this 在匿名函数中的值是 undefined。 现在，让我们改变使用箭头函数的方式： 1 2 3 4 5 6 7 8 9 10 11 12 13 class Toppings  constructor (toppings)  this .toppings = Array .isArray(toppings) ? toppings : [];  outputList()  this .toppings .forEach( ( topping, i ) = console .log(topping, i + '/' + this .toppings.length) // `this` works! )   var ctrl = new Toppings([ 'cheese' , 'lettuce' ]); 这个箭头函数内部的 this 指向的是实例变量. _注意_ 箭头函数没有 arguments 对象 , 这会给开发者带来混乱. super 和 new.target 同样来自外部作用域。 ###译注 箭头函数就是个简写形式的函数表达式； 它拥有词法作用域的this值（即不会新产生自己作用域下的this, arguments, super 和 new.target 等对象）； 箭头函数总是匿名的。"},"ES6&TypeScript/es6/arrow_functions.html#箭头函数":{"title":"&#x7BAD;&#x5934;&#x51FD;&#x6570;","path":"\\ES6&TypeScript\\es6\\arrow_functions.html#箭头函数","body":"ES6 &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x5904;&#x7406; this &#x7684;&#x65B0;&#x8BED;&#x6CD5;: &#x201C;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x201D;&#x3002;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x80FD;&#x4F7F;&#x9AD8;&#x9636;&#x51FD;&#x6570;&#x66F4;&#x5BB9;&#x6613;&#x7684;&#x5DE5;&#x4F5C;&#x3002; &#x65B0;&#x7684;&#x201C;&#x80D6;&#x7BAD;&#x5934;&#x201D;&#x7B26;&#x53F7;&#x8FD8;&#x53EF;&#x4EE5;&#x7528;&#x66F4;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9A;&#x4E49;&#x533F;&#x540D;&#x51FD;&#x6570;&#x3002; &#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; 1 2 3 4 items.forEach( function ( x ) { console .log(x); incrementedItems.push(x+ 1 ); }); &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x201C;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x201D;&#x6539;&#x5199;&#x5982;&#x4E0B;&#x5F62;&#x5F0F;&#xFF1A; 1 2 3 4 items.forEach( ( x ) = { console .log(x); incrementedItems.push(x+ 1 ); }); &#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x88AB;&#x5B9A;&#x4E49;&#x66F4;&#x7B80;&#x5355;&#xFF1A; 1 incrementedItems = items.map( ( x ) = x+ 1 ); &#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E0E;&#x4E0A;&#x9762;&#x51E0;&#x4E4E;&#x7B49;&#x4EF7;&#xFF1A; 1 2 3 incrementedItems = items.map( function ( x ) { return x+ 1 ; }); &#x4F46;&#x662F;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x548C;&#x4E00;&#x822C;&#x51FD;&#x6570;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#xFF1A; &#x7BAD;&#x5934;&#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x4EA7;&#x751F;&#x81EA;&#x5DF1;&#x4F5C;&#x7528;&#x57DF;&#x4E0B;&#x7684; this , arguments , super &#x548C; new.target &#x7B49;&#x5BF9;&#x8C61;&#x3002;&#x5F53; this &#x5728;&#x4E00;&#x4E2A;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x65F6;&#x5019;&#xFF0C;JavaScript &#x4F1A;&#x4F7F;&#x7528;&#x51FD;&#x6570;&#x6240;&#x5728;&#x4E0A;&#x4E0B;&#x6587;&#x7684; this &#x503C;&#x3002;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Toppings { constructor (toppings) { this .toppings = Array .isArray(toppings) ? toppings : []; } outputList() { this .toppings.forEach( function ( topping, i ) { console .log(topping, i + &apos;/&apos; + this .toppings.length); // no this }) } } var ctrl = new Toppings([ &apos;cheese&apos; , &apos;lettuce&apos; ]); ctrl.outputList(); &#x8BA9;&#x6211;&#x4EEC;&#x5728; http://jsbin.com &#x9A8C;&#x8BC1;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x3002;&#x4E0D;&#x51FA;&#x6240;&#x6599;&#xFF0C;&#x62A5;&#x9519;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A; this &#x5728;&#x533F;&#x540D;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x503C;&#x662F; undefined&#x3002; &#x73B0;&#x5728;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x6539;&#x53D8;&#x4F7F;&#x7528;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x7684;&#x65B9;&#x5F0F;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 class Toppings { constructor (toppings) { this .toppings = Array .isArray(toppings) ? toppings : []; } outputList() { this .toppings .forEach( ( topping, i ) = console .log(topping, i + &apos;/&apos; + this .toppings.length) // `this` works! ) } } var ctrl = new Toppings([ &apos;cheese&apos; , &apos;lettuce&apos; ]); &#x8FD9;&#x4E2A;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x7684; this &#x6307;&#x5411;&#x7684;&#x662F;&#x5B9E;&#x4F8B;&#x53D8;&#x91CF;. _&#x6CE8;&#x610F;_ &#x7BAD;&#x5934;&#x51FD;&#x6570;&#x6CA1;&#x6709; arguments &#x5BF9;&#x8C61; , &#x8FD9;&#x4F1A;&#x7ED9;&#x5F00;&#x53D1;&#x8005;&#x5E26;&#x6765;&#x6DF7;&#x4E71;. super &#x548C; new.target &#x540C;&#x6837;&#x6765;&#x81EA;&#x5916;&#x90E8;&#x4F5C;&#x7528;&#x57DF;&#x3002; ###&#x8BD1;&#x6CE8; &#x7BAD;&#x5934;&#x51FD;&#x6570;&#x5C31;&#x662F;&#x4E2A;&#x7B80;&#x5199;&#x5F62;&#x5F0F;&#x7684;&#x51FD;&#x6570;&#x8868;&#x8FBE;&#x5F0F;&#xFF1B; &#x5B83;&#x62E5;&#x6709;&#x8BCD;&#x6CD5;&#x4F5C;&#x7528;&#x57DF;&#x7684;this&#x503C;&#xFF08;&#x5373;&#x4E0D;&#x4F1A;&#x65B0;&#x4EA7;&#x751F;&#x81EA;&#x5DF1;&#x4F5C;&#x7528;&#x57DF;&#x4E0B;&#x7684;this, arguments, super &#x548C; new.target &#x7B49;&#x5BF9;&#x8C61;&#xFF09;&#xFF1B; &#x7BAD;&#x5934;&#x51FD;&#x6570;&#x603B;&#x662F;&#x533F;&#x540D;&#x7684;&#x3002;"},"ES6&TypeScript/es6/classes.html":{"title":"","path":"\\ES6&TypeScript\\es6\\classes.html","body":"类 类是ES6中的一个新特性，用于描述对象的蓝图，使EcmaScript的原型继承模型函数更像一个传统的基于类的语言。 1 2 3 4 5 6 7 8 class Hamburger  constructor ( )  // 这是一个构造函数  listToppings()  // 这是一个方法   基于类的传统语言通常保留 this 这个词来引用类的当前（运行时）实例。在 Javascript 中， this 指的是调用上下文，因此可以改变为除对象之外的其他东西。 对象 对象是使用 new 运算符创建的类的实例。当使用点号访问对象上的方法时， this 将引用点左边的对象。 1 2 let burger = new Hamburger(); burger.listToppings(); 在上面的代码片段中，每当从Hamburger类中使用 this 时，它将引用对象 burger 。 更改调用上下文 JavaScript代码可以选择使用以下方法之一将 this 提供给调用时的方法。 Function.prototype.call(object [,arg, …]) Function.prototype.bind(object [,arg, …]) Function.prototype.apply(object [,argsArray])"},"ES6&TypeScript/es6/classes.html#类":{"title":"&#x7C7B;","path":"\\ES6&TypeScript\\es6\\classes.html#类","body":"&#x7C7B;&#x662F;ES6&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x65B0;&#x7279;&#x6027;&#xFF0C;&#x7528;&#x4E8E;&#x63CF;&#x8FF0;&#x5BF9;&#x8C61;&#x7684;&#x84DD;&#x56FE;&#xFF0C;&#x4F7F;EcmaScript&#x7684;&#x539F;&#x578B;&#x7EE7;&#x627F;&#x6A21;&#x578B;&#x51FD;&#x6570;&#x66F4;&#x50CF;&#x4E00;&#x4E2A;&#x4F20;&#x7EDF;&#x7684;&#x57FA;&#x4E8E;&#x7C7B;&#x7684;&#x8BED;&#x8A00;&#x3002; 1 2 3 4 5 6 7 8 class Hamburger { constructor ( ) { // &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570; } listToppings() { // &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5; } } &#x57FA;&#x4E8E;&#x7C7B;&#x7684;&#x4F20;&#x7EDF;&#x8BED;&#x8A00;&#x901A;&#x5E38;&#x4FDD;&#x7559; this &#x8FD9;&#x4E2A;&#x8BCD;&#x6765;&#x5F15;&#x7528;&#x7C7B;&#x7684;&#x5F53;&#x524D;&#xFF08;&#x8FD0;&#x884C;&#x65F6;&#xFF09;&#x5B9E;&#x4F8B;&#x3002;&#x5728; Javascript &#x4E2D;&#xFF0C; this &#x6307;&#x7684;&#x662F;&#x8C03;&#x7528;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x6539;&#x53D8;&#x4E3A;&#x9664;&#x5BF9;&#x8C61;&#x4E4B;&#x5916;&#x7684;&#x5176;&#x4ED6;&#x4E1C;&#x897F;&#x3002; &#x5BF9;&#x8C61; &#x5BF9;&#x8C61;&#x662F;&#x4F7F;&#x7528; new &#x8FD0;&#x7B97;&#x7B26;&#x521B;&#x5EFA;&#x7684;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x5F53;&#x4F7F;&#x7528;&#x70B9;&#x53F7;&#x8BBF;&#x95EE;&#x5BF9;&#x8C61;&#x4E0A;&#x7684;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C; this &#x5C06;&#x5F15;&#x7528;&#x70B9;&#x5DE6;&#x8FB9;&#x7684;&#x5BF9;&#x8C61;&#x3002; 1 2 let burger = new Hamburger(); burger.listToppings(); &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x7247;&#x6BB5;&#x4E2D;&#xFF0C;&#x6BCF;&#x5F53;&#x4ECE;Hamburger&#x7C7B;&#x4E2D;&#x4F7F;&#x7528; this &#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x5F15;&#x7528;&#x5BF9;&#x8C61; burger &#x3002; &#x66F4;&#x6539;&#x8C03;&#x7528;&#x4E0A;&#x4E0B;&#x6587; JavaScript&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#x4E4B;&#x4E00;&#x5C06; this &#x63D0;&#x4F9B;&#x7ED9;&#x8C03;&#x7528;&#x65F6;&#x7684;&#x65B9;&#x6CD5;&#x3002; Function.prototype.call(object [,arg, &#x2026;]) Function.prototype.bind(object [,arg, &#x2026;]) Function.prototype.apply(object [,argsArray])"},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html":{"title":"","path":"\\ES6&TypeScript\\es6\\constants_and_block_scoped_variables.html","body":"#常量和块作用域变量 ES6引入了块范围的概念。 块范围界定对来自其他语言（如C，Java或甚至PHP）的程序员来说是熟悉的。 在ES5 JavaScript和更早版本中， var 的作用域是函数，它们可以在外部上下文中“看到”它们的函数。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var five = 5 ; var threeAlso = three; // error function scope1 ( )  var three = 3 ; var fiveAlso = five; // == 5 var sevenAlso = seven; // error  function scope2 ( )  var seven = 7 ; var fiveAlso = five; // == 5 var threeAlso = three; // error  ES5中的函数本质上是可以在外面“看到”，但不能进入的容器。 在ES6中，var仍然以这种方式工作，使用函数作为容器，但有两种新的方法来声明变量： const 和 let 。 const 和 let 使用 { 和 } 块作为容器，故称为“块作用域”。 块作用域在循环期间非常有用。 考虑以下代码： 1 2 3 4 5 6 7 var i; for (i = 0; i  10; i += 1)  var j = i; let k = i;  console.log(j); // 9 console.log(k); // undefined 尽管引入块作用域，函数仍然是处理大多数循环的首选机制。 let 工作类似 var 在其数据读/写的意义。 let 在用于for循环时也很有用。 例如，不使用 let ，以下示例将输出 5,5,5,5,5 ： 1 2 3 for ( var x= 0 ; x 5 ; x++)  setTimeout( () = console .log(x), 0 )  但是， 当我们使用 let 代替 var ，值回按我们希望的方式在限制的作用域内。 1 2 3 for ( let x= 0 ; x 5 ; x++)  setTimeout( () = console .log(x), 0 )  此外， const 是只读的。一旦 const 被分配，标识符不能被重新分配。 例如： 1 2 3 4 5 const myName = 'pat' ; let yourName = 'jo' ; yourName = 'sam' ; // assigns myName = 'jan' ; // error 只读性质可以用任何对象来演示： 1 2 3 4 const literal = ; literal.attribute = &apos;test&apos;; // fine literal = []; // error; 但是有两种情况，const不会像你想象的那样工作。 一个const对象字面量 对对象的const引用。 Const对象字面量 1 2 3 4 5 6 7 const person =  name: 'Tammy' ; person.name = 'Pushpa' ; // OK, name property changed. person = null ; // \"TypeError: Assignment to constant variable. 上面的示例演示了我们能够更改 person 对象的name属性，但是我们无法重置 person 的引用，因为它已标记为 const 对象的Const引用 类似上面的代码是使用 const 引用，下面我们切换到使用 let 创建源文本（literal）对象。 1 2 3 4 5 6 7 8 9 let person =  name: 'Tammy' ; const p = person; p.name = 'Pushpa' ; // OK, name property changed. p = null ; // \"TypeError: Assignment to constant variable. 标记一个对象的引用为const不会让对象里的属性也为const。 MDN:const"},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#Const对象字面量":{"title":"Const&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;","path":"\\ES6&TypeScript\\es6\\constants_and_block_scoped_variables.html#Const对象字面量","body":"1 2 3 4 5 6 7 const person = { name: &apos;Tammy&apos; }; person.name = &apos;Pushpa&apos; ; // OK, name property changed. person = null ; // TypeError: Assignment to constant variable. &#x4E0A;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x6F14;&#x793A;&#x4E86;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x66F4;&#x6539; person &#x5BF9;&#x8C61;&#x7684;name&#x5C5E;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x91CD;&#x7F6E; person &#x7684;&#x5F15;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5DF2;&#x6807;&#x8BB0;&#x4E3A; const"},"ES6&TypeScript/es6/constants_and_block_scoped_variables.html#对象的Const引用":{"title":"&#x5BF9;&#x8C61;&#x7684;Const&#x5F15;&#x7528;","path":"\\ES6&TypeScript\\es6\\constants_and_block_scoped_variables.html#对象的Const引用","body":"&#x7C7B;&#x4F3C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x4F7F;&#x7528; const &#x5F15;&#x7528;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x5207;&#x6362;&#x5230;&#x4F7F;&#x7528; let &#x521B;&#x5EFA;&#x6E90;&#x6587;&#x672C;&#xFF08;literal&#xFF09;&#x5BF9;&#x8C61;&#x3002; 1 2 3 4 5 6 7 8 9 let person = { name: &apos;Tammy&apos; }; const p = person; p.name = &apos;Pushpa&apos; ; // OK, name property changed. p = null ; // TypeError: Assignment to constant variable. &#x6807;&#x8BB0;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x4E3A;const&#x4E0D;&#x4F1A;&#x8BA9;&#x5BF9;&#x8C61;&#x91CC;&#x7684;&#x5C5E;&#x6027;&#x4E5F;&#x4E3A;const&#x3002; MDN:const"},"ES6&TypeScript/es6/delegation.html":{"title":"","path":"\\ES6&TypeScript\\es6\\delegation.html","body":"委托 在继承部分，我们研究了扩展类功能的一种方法，另一种方法是使用委托来扩展功能。 使用委托，一个对象将包含对不同对象的引用，它将切换执行功能的请求。 下面的代码显示如何使用委派与 Bird 类和 Penguin 类。 Penguin 类有一个对 Bird 类的引用，它将对自己的walk方法的调用委派给 Bird 的walk方法。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // ES6 class Bird  constructor (weight, height)  this .weight = weight; this .height = height;  walk()  console .log( 'walk!' );   class Penguin  constructor (bird)  this .bird = bird;  walk()  this .bird.walk();  swim()  console .log( 'swim!' );   const bird = new Bird(...); const penguin = new Penguin(bird); penguin.walk(); //walk! penguin.swim(); //swim! 关于“行为委派”的良好讨论可以在 这里 找到。"},"ES6&TypeScript/es6/delegation.html#委托":{"title":"&#x59D4;&#x6258;","path":"\\ES6&TypeScript\\es6\\delegation.html#委托","body":"&#x5728;&#x7EE7;&#x627F;&#x90E8;&#x5206;&#xFF0C;&#x6211;&#x4EEC;&#x7814;&#x7A76;&#x4E86;&#x6269;&#x5C55;&#x7C7B;&#x529F;&#x80FD;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528;&#x59D4;&#x6258;&#x6765;&#x6269;&#x5C55;&#x529F;&#x80FD;&#x3002; &#x4F7F;&#x7528;&#x59D4;&#x6258;&#xFF0C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5C06;&#x5305;&#x542B;&#x5BF9;&#x4E0D;&#x540C;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5B83;&#x5C06;&#x5207;&#x6362;&#x6267;&#x884C;&#x529F;&#x80FD;&#x7684;&#x8BF7;&#x6C42;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x663E;&#x793A;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x59D4;&#x6D3E;&#x4E0E; Bird &#x7C7B;&#x548C; Penguin &#x7C7B;&#x3002; Penguin &#x7C7B;&#x6709;&#x4E00;&#x4E2A;&#x5BF9; Bird &#x7C7B;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5B83;&#x5C06;&#x5BF9;&#x81EA;&#x5DF1;&#x7684;walk&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x59D4;&#x6D3E;&#x7ED9; Bird &#x7684;walk&#x65B9;&#x6CD5;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // ES6 class Bird { constructor (weight, height) { this .weight = weight; this .height = height; } walk() { console .log( &apos;walk!&apos; ); } } class Penguin { constructor (bird) { this .bird = bird; } walk() { this .bird.walk(); } swim() { console .log( &apos;swim!&apos; ); } } const bird = new Bird(...); const penguin = new Penguin(bird); penguin.walk(); //walk! penguin.swim(); //swim! &#x5173;&#x4E8E;&#x201C;&#x884C;&#x4E3A;&#x59D4;&#x6D3E;&#x201D;&#x7684;&#x826F;&#x597D;&#x8BA8;&#x8BBA;&#x53EF;&#x4EE5;&#x5728; &#x8FD9;&#x91CC; &#x627E;&#x5230;&#x3002;"},"ES6&TypeScript/es6/destructuring.html":{"title":"","path":"\\ES6&TypeScript\\es6\\destructuring.html","body":"#解构 解构是一种无需编写大量代码就能从 {} 或 [] 中快速提取数据的方式。 使用解构来转换以下内容（ MDN 中的例子）： 1 2 3 4 5 let foo = [ 'one' , 'two' , 'three' ]; let one = foo[ 0 ]; let two = foo[ 1 ]; let three = foo[ 2 ]; 转换成 1 2 3 let foo = [ 'one' , 'two' , 'three' ]; let [one, two, three] = foo; console .log(one); // 'one' 这很有趣，但是起初可能很难看到应用场景。 ES6还支持对象解构，这可能使用途更明显： 1 2 3 4 5 6 7 8 9 10 let myModule =  drawSquare: function drawSquare ( length )  /* implementation */ , drawCircle: function drawCircle ( radius )  /* implementation */ , drawText: function drawText ( text )  /* implementation */ , ; let drawSquare, drawText = myModule; drawSquare( 5 ); drawText( 'hello' ); 解构也可以用于将对象传递到函数中，从而允许以简洁的方式从对象中提取特定属性。还可以为解构参数分配默认值，如果传入配置对象，这可能是一个有用的模式。 1 2 3 4 5 6 7 8 let jane =  firstName : 'Jane' , lastName : 'Doe' ; let john =  firstName : 'John' , lastName : 'Doe' , middleName : 'Smith'  function sayName ( firstName, lastName, middleName = 'N/A'  )  console .log( `Hello $firstName $middleName $lastName ` )  sayName(jane) // - Hello Jane N/A Doe sayName(john) // - Helo John Smith Doe 有许多更复杂的事情可以通过解构解决，MDN有一些很好的例子，包括嵌套对象解构和 for...in 运算符的动态解构。"},"ES6&TypeScript/es6/es6.html":{"title":"","path":"\\ES6&TypeScript\\es6\\es6.html","body":"ES6 JavaScript是在1995年创建的，但语言今天仍然欣欣向荣。有子集，超集，当前最新版本为ES6，这带来了很多新的特性。 一些亮点： 类与继承 箭头函数 模板字符串 常量和块作用域变量 … 展开运算符和 … 剩余操作符 解构 模块和模块加载器 Promise"},"ES6&TypeScript/es6/es6.html#ES6":{"title":"ES6","path":"\\ES6&TypeScript\\es6\\es6.html#ES6","body":"JavaScript&#x662F;&#x5728;1995&#x5E74;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x4F46;&#x8BED;&#x8A00;&#x4ECA;&#x5929;&#x4ECD;&#x7136;&#x6B23;&#x6B23;&#x5411;&#x8363;&#x3002;&#x6709;&#x5B50;&#x96C6;&#xFF0C;&#x8D85;&#x96C6;&#xFF0C;&#x5F53;&#x524D;&#x6700;&#x65B0;&#x7248;&#x672C;&#x4E3A;ES6&#xFF0C;&#x8FD9;&#x5E26;&#x6765;&#x4E86;&#x5F88;&#x591A;&#x65B0;&#x7684;&#x7279;&#x6027;&#x3002; &#x4E00;&#x4E9B;&#x4EAE;&#x70B9;&#xFF1A; &#x7C7B;&#x4E0E;&#x7EE7;&#x627F; &#x7BAD;&#x5934;&#x51FD;&#x6570; &#x6A21;&#x677F;&#x5B57;&#x7B26;&#x4E32; &#x5E38;&#x91CF;&#x548C;&#x5757;&#x4F5C;&#x7528;&#x57DF;&#x53D8;&#x91CF; &#x2026; &#x5C55;&#x5F00;&#x8FD0;&#x7B97;&#x7B26;&#x548C; &#x2026; &#x5269;&#x4F59;&#x64CD;&#x4F5C;&#x7B26; &#x89E3;&#x6784; &#x6A21;&#x5757;&#x548C;&#x6A21;&#x5757;&#x52A0;&#x8F7D;&#x5668; Promise"},"ES6&TypeScript/es6/es6_modules.html":{"title":"","path":"\\ES6&TypeScript\\es6\\es6_modules.html","body":"ES6 模块 ES6引入 模块 支持。 ES6中的模块是单个文件，它允许代码和数据隔离，它有助于在逻辑上组织和聚合代码。 在其他语言中，它被称为包或库。 模块内的所有代码和数据都有文件作用域，这意味着它们不能被模块外部的代码访问。 要在模块外部共享代码或数据，需要使用 export 关键字导出。 1 2 3 4 5 // File: circle.js export const pi = 3.141592 ; export const circumference = diameter = diameter * pi; 上面的代码使用了箭头函数 circumference 。 模块系统 在后端（服务器端）使用模块是相对简单的，你只需使用 import 关键字。 然而，Web浏览器没有模块或导入的概念，他们只知道如何加载JavaScript代码。 我们需要一种方法来引入一个javascript模块，以便从其他JavaScript代码开始使用它。 这就是模块加载器要解决的问题。 我们不会讲解各种模块系统，但值得了解的是，有各种模块加载器可用。 流行的选择有： RequireJS SystemJS Webpack 从浏览器加载模块 下面我们使用SystemJS来加载模块。 该脚本首先加载SystemJS库的代码，然后调用 System.import 的函数用于导入（加载）应用程序模块。 加载ES6模块有点棘手。 在符合ES6的浏览器中，使用System关键字以异步方式加载模块。 为了使我们的代码与当前的浏览器一起使用，我们将使用SystemJS库作为polyfill： 1 2 3 4 5 6 7 8 9 10  script src = \"/node_module/systemjs/dist/system.js\"  / script   script  var promise = System.import( 'app' ) .then( function ( )  console .log( 'Loaded!' ); ) .then( null , function ( error )  console .error( 'Failed to load:' , error); ); / script "},"ES6&TypeScript/es6/es6_modules.html#ES6-模块":{"title":"ES6 &#x6A21;&#x5757;","path":"\\ES6&TypeScript\\es6\\es6_modules.html#ES6-模块","body":"ES6&#x5F15;&#x5165; &#x6A21;&#x5757; &#x652F;&#x6301;&#x3002; ES6&#x4E2D;&#x7684;&#x6A21;&#x5757;&#x662F;&#x5355;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#x9694;&#x79BB;&#xFF0C;&#x5B83;&#x6709;&#x52A9;&#x4E8E;&#x5728;&#x903B;&#x8F91;&#x4E0A;&#x7EC4;&#x7EC7;&#x548C;&#x805A;&#x5408;&#x4EE3;&#x7801;&#x3002; &#x5728;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x5B83;&#x88AB;&#x79F0;&#x4E3A;&#x5305;&#x6216;&#x5E93;&#x3002; &#x6A21;&#x5757;&#x5185;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#x90FD;&#x6709;&#x6587;&#x4EF6;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5B83;&#x4EEC;&#x4E0D;&#x80FD;&#x88AB;&#x6A21;&#x5757;&#x5916;&#x90E8;&#x7684;&#x4EE3;&#x7801;&#x8BBF;&#x95EE;&#x3002; &#x8981;&#x5728;&#x6A21;&#x5757;&#x5916;&#x90E8;&#x5171;&#x4EAB;&#x4EE3;&#x7801;&#x6216;&#x6570;&#x636E;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528; export &#x5173;&#x952E;&#x5B57;&#x5BFC;&#x51FA;&#x3002; 1 2 3 4 5 // File: circle.js export const pi = 3.141592 ; export const circumference = diameter = diameter * pi; &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4F7F;&#x7528;&#x4E86;&#x7BAD;&#x5934;&#x51FD;&#x6570; circumference &#x3002;"},"ES6&TypeScript/es6/es6_modules.html#模块系统":{"title":"&#x6A21;&#x5757;&#x7CFB;&#x7EDF;","path":"\\ES6&TypeScript\\es6\\es6_modules.html#模块系统","body":"&#x5728;&#x540E;&#x7AEF;&#xFF08;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#xFF09;&#x4F7F;&#x7528;&#x6A21;&#x5757;&#x662F;&#x76F8;&#x5BF9;&#x7B80;&#x5355;&#x7684;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x4F7F;&#x7528; import &#x5173;&#x952E;&#x5B57;&#x3002; &#x7136;&#x800C;&#xFF0C;Web&#x6D4F;&#x89C8;&#x5668;&#x6CA1;&#x6709;&#x6A21;&#x5757;&#x6216;&#x5BFC;&#x5165;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x4ED6;&#x4EEC;&#x53EA;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x52A0;&#x8F7D;JavaScript&#x4EE3;&#x7801;&#x3002; &#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x6765;&#x5F15;&#x5165;&#x4E00;&#x4E2A;javascript&#x6A21;&#x5757;&#xFF0C;&#x4EE5;&#x4FBF;&#x4ECE;&#x5176;&#x4ED6;JavaScript&#x4EE3;&#x7801;&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x8FD9;&#x5C31;&#x662F;&#x6A21;&#x5757;&#x52A0;&#x8F7D;&#x5668;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x3002; &#x6211;&#x4EEC;&#x4E0D;&#x4F1A;&#x8BB2;&#x89E3;&#x5404;&#x79CD;&#x6A21;&#x5757;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F46;&#x503C;&#x5F97;&#x4E86;&#x89E3;&#x7684;&#x662F;&#xFF0C;&#x6709;&#x5404;&#x79CD;&#x6A21;&#x5757;&#x52A0;&#x8F7D;&#x5668;&#x53EF;&#x7528;&#x3002; &#x6D41;&#x884C;&#x7684;&#x9009;&#x62E9;&#x6709;&#xFF1A; RequireJS SystemJS Webpack"},"ES6&TypeScript/es6/es6_modules.html#从浏览器加载模块":{"title":"&#x4ECE;&#x6D4F;&#x89C8;&#x5668;&#x52A0;&#x8F7D;&#x6A21;&#x5757;","path":"\\ES6&TypeScript\\es6\\es6_modules.html#从浏览器加载模块","body":"&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x4F7F;&#x7528;SystemJS&#x6765;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x3002; &#x8BE5;&#x811A;&#x672C;&#x9996;&#x5148;&#x52A0;&#x8F7D;SystemJS&#x5E93;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528; System.import &#x7684;&#x51FD;&#x6570;&#x7528;&#x4E8E;&#x5BFC;&#x5165;&#xFF08;&#x52A0;&#x8F7D;&#xFF09;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6A21;&#x5757;&#x3002; &#x52A0;&#x8F7D;ES6&#x6A21;&#x5757;&#x6709;&#x70B9;&#x68D8;&#x624B;&#x3002; &#x5728;&#x7B26;&#x5408;ES6&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;System&#x5173;&#x952E;&#x5B57;&#x4EE5;&#x5F02;&#x6B65;&#x65B9;&#x5F0F;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x3002; &#x4E3A;&#x4E86;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;&#x4E0E;&#x5F53;&#x524D;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;SystemJS&#x5E93;&#x4F5C;&#x4E3A;polyfill&#xFF1A; 1 2 3 4 5 6 7 8 9 10  script src = /node_module/systemjs/dist/system.js  / script   script  var promise = System.import( &apos;app&apos; ) .then( function ( ) { console .log( &apos;Loaded!&apos; ); }) .then( null , function ( error ) { console .error( &apos;Failed to load:&apos; , error); }); / script "},"ES6&TypeScript/es6/inheritance.html":{"title":"","path":"\\ES6&TypeScript\\es6\\inheritance.html","body":"继承 JavaScript的继承与其他语言中的继承的工作不同，这可能很混乱。 ES6类提供了一种语法糖，试图缓解使用ES5中存在的原型继承的问题。 为了说明这一点，我们创建一个动物园应用，其中创建鸟类。在经典继承中，我们定义一个基类，然后将其子类化以创建一个派生类。 子类化 下面的示例代码显示如何使用 extends 关键字从 Bird 派生 Penguin 。还要注意在 Penguin 的子类构造函数中使用的 super 关键字，它用于将参数传递给基类 Bird 的构造函数。 Bird 类定义了 Penguin 类继承的方法 walk ，并且可以被 Penguin 对象的实例使用。 同样， Penguin 类定义了不能用于 Bird 对象的方法 swim 。 继承从上到下从基类到它的子类。 对象初始化 当使用 new 运算符创建对象时，调用类构造函数，在完全创建对象之前将调用它。 consturctor 用于传递参数以初始化新创建的对象。 对象创建的顺序从它的基类开始，然后向下移动到任何子类。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // 基类 : ES6 class Bird  constructor (weight, height)  this .weight = weight; this .height = height;  walk()  console .log( 'walk!' );   // 子类 class Penguin extends Bird  constructor (weight, height)  super (weight, height);  swim()  console .log( 'swim!' );   // Penguin object let penguin = new Penguin(...); penguin.walk(); //walk! penguin.swim(); //swim! 下面我们展示了在 class 引入JavaScript之前，原型继承是如何实现的。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 // JavaScript classical inheritance. // Bird constructor function Bird ( weight, height )  this .weight = weight; this .height = height;  // Add method to Bird prototype. Bird.prototype.walk = function ( )  console .log( \"walk!\" ); ; // Penguin constructor. function Penguin ( weight, height )  Bird.call( this , weight, height);  // Prototypal inheritance (Penguin is-a Bird). Penguin.prototype = Object .create( Bird.prototype ); Penguin.prototype.constructor = Penguin; // Add method to Penguin prototype. Penguin.prototype.swim = function ( )  console .log( \"swim!\" ); ; // Create a Penguin object. let penguin = new Penguin( 50 , 10 ); // Calls method on Bird, since it's not defined by Penguin. penguin.walk(); // walk! // Calls method on Penguin. penguin.swim(); // swim!"},"ES6&TypeScript/es6/inheritance.html#继承":{"title":"&#x7EE7;&#x627F;","path":"\\ES6&TypeScript\\es6\\inheritance.html#继承","body":"JavaScript&#x7684;&#x7EE7;&#x627F;&#x4E0E;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x7EE7;&#x627F;&#x7684;&#x5DE5;&#x4F5C;&#x4E0D;&#x540C;&#xFF0C;&#x8FD9;&#x53EF;&#x80FD;&#x5F88;&#x6DF7;&#x4E71;&#x3002; ES6&#x7C7B;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x8BED;&#x6CD5;&#x7CD6;&#xFF0C;&#x8BD5;&#x56FE;&#x7F13;&#x89E3;&#x4F7F;&#x7528;ES5&#x4E2D;&#x5B58;&#x5728;&#x7684;&#x539F;&#x578B;&#x7EE7;&#x627F;&#x7684;&#x95EE;&#x9898;&#x3002; &#x4E3A;&#x4E86;&#x8BF4;&#x660E;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x52A8;&#x7269;&#x56ED;&#x5E94;&#x7528;&#xFF0C;&#x5176;&#x4E2D;&#x521B;&#x5EFA;&#x9E1F;&#x7C7B;&#x3002;&#x5728;&#x7ECF;&#x5178;&#x7EE7;&#x627F;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x57FA;&#x7C7B;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5176;&#x5B50;&#x7C7B;&#x5316;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6D3E;&#x751F;&#x7C7B;&#x3002;"},"ES6&TypeScript/es6/inheritance.html#子类化":{"title":"&#x5B50;&#x7C7B;&#x5316;","path":"\\ES6&TypeScript\\es6\\inheritance.html#子类化","body":"&#x4E0B;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x663E;&#x793A;&#x5982;&#x4F55;&#x4F7F;&#x7528; extends &#x5173;&#x952E;&#x5B57;&#x4ECE; Bird &#x6D3E;&#x751F; Penguin &#x3002;&#x8FD8;&#x8981;&#x6CE8;&#x610F;&#x5728; Penguin &#x7684;&#x5B50;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F7F;&#x7528;&#x7684; super &#x5173;&#x952E;&#x5B57;&#xFF0C;&#x5B83;&#x7528;&#x4E8E;&#x5C06;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x7ED9;&#x57FA;&#x7C7B; Bird &#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x3002; Bird &#x7C7B;&#x5B9A;&#x4E49;&#x4E86; Penguin &#x7C7B;&#x7EE7;&#x627F;&#x7684;&#x65B9;&#x6CD5; walk &#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x88AB; Penguin &#x5BF9;&#x8C61;&#x7684;&#x5B9E;&#x4F8B;&#x4F7F;&#x7528;&#x3002; &#x540C;&#x6837;&#xFF0C; Penguin &#x7C7B;&#x5B9A;&#x4E49;&#x4E86;&#x4E0D;&#x80FD;&#x7528;&#x4E8E; Bird &#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5; swim &#x3002; &#x7EE7;&#x627F;&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#x4ECE;&#x57FA;&#x7C7B;&#x5230;&#x5B83;&#x7684;&#x5B50;&#x7C7B;&#x3002;"},"ES6&TypeScript/es6/inheritance.html#对象初始化":{"title":"&#x5BF9;&#x8C61;&#x521D;&#x59CB;&#x5316;","path":"\\ES6&TypeScript\\es6\\inheritance.html#对象初始化","body":"&#x5F53;&#x4F7F;&#x7528; new &#x8FD0;&#x7B97;&#x7B26;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x8C03;&#x7528;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x5728;&#x5B8C;&#x5168;&#x521B;&#x5EFA;&#x5BF9;&#x8C61;&#x4E4B;&#x524D;&#x5C06;&#x8C03;&#x7528;&#x5B83;&#x3002; consturctor &#x7528;&#x4E8E;&#x4F20;&#x9012;&#x53C2;&#x6570;&#x4EE5;&#x521D;&#x59CB;&#x5316;&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x7684;&#x987A;&#x5E8F;&#x4ECE;&#x5B83;&#x7684;&#x57FA;&#x7C7B;&#x5F00;&#x59CB;&#xFF0C;&#x7136;&#x540E;&#x5411;&#x4E0B;&#x79FB;&#x52A8;&#x5230;&#x4EFB;&#x4F55;&#x5B50;&#x7C7B;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // &#x57FA;&#x7C7B; : ES6 class Bird { constructor (weight, height) { this .weight = weight; this .height = height; } walk() { console .log( &apos;walk!&apos; ); } } // &#x5B50;&#x7C7B; class Penguin extends Bird { constructor (weight, height) { super (weight, height); } swim() { console .log( &apos;swim!&apos; ); } } // Penguin object let penguin = new Penguin(...); penguin.walk(); //walk! penguin.swim(); //swim! &#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;&#x5728; class &#x5F15;&#x5165;JavaScript&#x4E4B;&#x524D;&#xFF0C;&#x539F;&#x578B;&#x7EE7;&#x627F;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 // JavaScript classical inheritance. // Bird constructor function Bird ( weight, height ) { this .weight = weight; this .height = height; } // Add method to Bird prototype. Bird.prototype.walk = function ( ) { console .log( walk! ); }; // Penguin constructor. function Penguin ( weight, height ) { Bird.call( this , weight, height); } // Prototypal inheritance (Penguin is-a Bird). Penguin.prototype = Object .create( Bird.prototype ); Penguin.prototype.constructor = Penguin; // Add method to Penguin prototype. Penguin.prototype.swim = function ( ) { console .log( swim! ); }; // Create a Penguin object. let penguin = new Penguin( 50 , 10 ); // Calls method on Bird, since it&apos;s not defined by Penguin. penguin.walk(); // walk! // Calls method on Penguin. penguin.swim(); // swim!"},"ES6&TypeScript/es6/refresher_on_this.html":{"title":"","path":"\\ES6&TypeScript\\es6\\refresher_on_this.html","body":"回顾一下 this 在JavaScript类中，我们将使用 this 关键字来引用类的实例。例如： 1 2 3 4 5 6 7 8 9 class Toppings  ... formatToppings()  /* 实现细节 */  list()  return this .formatToppings( this .toppings);   这里的 this 指的是 Toppings 类的一个实例。 只要使用点号调用 list 方法，如 myToppings.list() ，则 this.formatToppings(this.toppings) 调用在类的实例上定义的 formatToppings() 方法。 这也将确保 formatToppings 内部， this 指的是同一个实例。 但是， this 也可以指其他东西。有两种基本情况你应该记住。 方法调用： 1 someObject.someMethod(); 这里，在 someMethod 内的 this 将引用 someObject ，这通常是你想要的。 函数调用： 1 someFunction(); 这里，在someFunction内的 this 可以指不同的东西，这取决于我们是否处于“strict”模式。 不使用“strict”模式，这是指调用 someFunction() 的上下文，这很少是你想要的。 在“strict”模式下， this 将是未定义的。 View Example 其中一个含义是，你不能轻易地从它的对象中分离一个方法。考虑这个例子： 1 2 var log = console .log; log( 'Hello' ); 在许多浏览器中这会报错。 这是因为 log 期望 this 指的是 console ，但是当函数从 console 分离时，引用丢失了。 这可以通过明确设置来固定。 一种方法是使用 bind() 方法，它允许您指定要用于绑定函数内的 this 的值。 1 2 var log = console .log.bind( console ); log( 'Hello' ); 你也可以使用 Function.call 和 Function.apply 实现相同的功能，但我们不在这里讨论。 另一个可能令人困惑的实例是匿名函数或在其他函数中声明的函数。 例如： 1 2 3 4 5 6 7 8 9 10 class ServerRequest  notify()  ...  fetch()  getFromServer( function callback ( err, data )  this .notify(); // 这不会生效 );   在上面的代码中， this 不会指向期望的对象：在“strict”模式下，它将是未定义的。这引出另一个ES6特性 - 箭头函数，将在下面介绍。"},"ES6&TypeScript/es6/refresher_on_this.html#回顾一下-this":{"title":"&#x56DE;&#x987E;&#x4E00;&#x4E0B; this","path":"\\ES6&TypeScript\\es6\\refresher_on_this.html#回顾一下-this","body":"&#x5728;JavaScript&#x7C7B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528; this &#x5173;&#x952E;&#x5B57;&#x6765;&#x5F15;&#x7528;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 class Toppings { ... formatToppings() { /* &#x5B9E;&#x73B0;&#x7EC6;&#x8282; */ } list() { return this .formatToppings( this .toppings); } } &#x8FD9;&#x91CC;&#x7684; this &#x6307;&#x7684;&#x662F; Toppings &#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002; &#x53EA;&#x8981;&#x4F7F;&#x7528;&#x70B9;&#x53F7;&#x8C03;&#x7528; list &#x65B9;&#x6CD5;&#xFF0C;&#x5982; myToppings.list() &#xFF0C;&#x5219; this.formatToppings(this.toppings) &#x8C03;&#x7528;&#x5728;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x4E0A;&#x5B9A;&#x4E49;&#x7684; formatToppings() &#x65B9;&#x6CD5;&#x3002; &#x8FD9;&#x4E5F;&#x5C06;&#x786E;&#x4FDD; formatToppings &#x5185;&#x90E8;&#xFF0C; this &#x6307;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002; &#x4F46;&#x662F;&#xFF0C; this &#x4E5F;&#x53EF;&#x4EE5;&#x6307;&#x5176;&#x4ED6;&#x4E1C;&#x897F;&#x3002;&#x6709;&#x4E24;&#x79CD;&#x57FA;&#x672C;&#x60C5;&#x51B5;&#x4F60;&#x5E94;&#x8BE5;&#x8BB0;&#x4F4F;&#x3002; &#x65B9;&#x6CD5;&#x8C03;&#x7528;&#xFF1A; 1 someObject.someMethod(); &#x8FD9;&#x91CC;&#xFF0C;&#x5728; someMethod &#x5185;&#x7684; this &#x5C06;&#x5F15;&#x7528; someObject &#xFF0C;&#x8FD9;&#x901A;&#x5E38;&#x662F;&#x4F60;&#x60F3;&#x8981;&#x7684;&#x3002; &#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF1A; 1 someFunction(); &#x8FD9;&#x91CC;&#xFF0C;&#x5728;someFunction&#x5185;&#x7684; this &#x53EF;&#x4EE5;&#x6307;&#x4E0D;&#x540C;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x8FD9;&#x53D6;&#x51B3;&#x4E8E;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x5904;&#x4E8E;&#x201C;strict&#x201D;&#x6A21;&#x5F0F;&#x3002; &#x4E0D;&#x4F7F;&#x7528;&#x201C;strict&#x201D;&#x6A21;&#x5F0F;&#xFF0C;&#x8FD9;&#x662F;&#x6307;&#x8C03;&#x7528; someFunction() &#x7684;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x8FD9;&#x5F88;&#x5C11;&#x662F;&#x4F60;&#x60F3;&#x8981;&#x7684;&#x3002; &#x5728;&#x201C;strict&#x201D;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C; this &#x5C06;&#x662F;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x3002; View Example &#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x4F60;&#x4E0D;&#x80FD;&#x8F7B;&#x6613;&#x5730;&#x4ECE;&#x5B83;&#x7684;&#x5BF9;&#x8C61;&#x4E2D;&#x5206;&#x79BB;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x8003;&#x8651;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; 1 2 var log = console .log; log( &apos;Hello&apos; ); &#x5728;&#x8BB8;&#x591A;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8FD9;&#x4F1A;&#x62A5;&#x9519;&#x3002; &#x8FD9;&#x662F;&#x56E0;&#x4E3A; log &#x671F;&#x671B; this &#x6307;&#x7684;&#x662F; console &#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x51FD;&#x6570;&#x4ECE; console &#x5206;&#x79BB;&#x65F6;&#xFF0C;&#x5F15;&#x7528;&#x4E22;&#x5931;&#x4E86;&#x3002; &#x8FD9;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x660E;&#x786E;&#x8BBE;&#x7F6E;&#x6765;&#x56FA;&#x5B9A;&#x3002; &#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528; bind() &#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x60A8;&#x6307;&#x5B9A;&#x8981;&#x7528;&#x4E8E;&#x7ED1;&#x5B9A;&#x51FD;&#x6570;&#x5185;&#x7684; this &#x7684;&#x503C;&#x3002; 1 2 var log = console .log.bind( console ); log( &apos;Hello&apos; ); &#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Function.call &#x548C; Function.apply &#x5B9E;&#x73B0;&#x76F8;&#x540C;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x4E0D;&#x5728;&#x8FD9;&#x91CC;&#x8BA8;&#x8BBA;&#x3002; &#x53E6;&#x4E00;&#x4E2A;&#x53EF;&#x80FD;&#x4EE4;&#x4EBA;&#x56F0;&#x60D1;&#x7684;&#x5B9E;&#x4F8B;&#x662F;&#x533F;&#x540D;&#x51FD;&#x6570;&#x6216;&#x5728;&#x5176;&#x4ED6;&#x51FD;&#x6570;&#x4E2D;&#x58F0;&#x660E;&#x7684;&#x51FD;&#x6570;&#x3002; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 class ServerRequest { notify() { ... } fetch() { getFromServer( function callback ( err, data ) { this .notify(); // &#x8FD9;&#x4E0D;&#x4F1A;&#x751F;&#x6548; }); } } &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; this &#x4E0D;&#x4F1A;&#x6307;&#x5411;&#x671F;&#x671B;&#x7684;&#x5BF9;&#x8C61;&#xFF1A;&#x5728;&#x201C;strict&#x201D;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;&#x5B83;&#x5C06;&#x662F;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x3002;&#x8FD9;&#x5F15;&#x51FA;&#x53E6;&#x4E00;&#x4E2A;ES6&#x7279;&#x6027; - &#x7BAD;&#x5934;&#x51FD;&#x6570;&#xFF0C;&#x5C06;&#x5728;&#x4E0B;&#x9762;&#x4ECB;&#x7ECD;&#x3002;"},"ES6&TypeScript/es6/spread_and_rest.html":{"title":"","path":"\\ES6&TypeScript\\es6\\spread_and_rest.html","body":"扩展语句和剩余参数 在以下情况下，扩展语句允许表达式就地扩展： 数组 函数调用 多变量解构 剩余参数与扩展语句相反，它将不定数量的逗号分隔的表达式收集到数组中。 扩展语句 1 2 3 const add = ( a, b ) = a + b; let args = [ 3 , 5 ]; add(...args); // same as `add(args[0], args[1])`, or `add.apply(null, args)` 函数不是JavaScript中唯一使用逗号分隔列表的地方 - []现在可以轻松连接： 1 2 let cde = [ 'c' , 'd' , 'e' ]; let scale = [ 'a' , 'b' , ...cde, 'f' , 'g' ]; // ['a', 'b', 'c', 'd', 'e', 'f', 'g'] 同样，对象字面量可以做同样的事情： 1 2 let mapABC =  a : 5 , b : 6 , c : 3 ; let mapABCD =  ...mapABC, d : 7 ; //  a: 5, b: 6, c: 3, d: 7  剩余参数 剩余参数共享扩展语句的省略号语法，但目的不同。剩余参数用于访问传递给函数不确定数量的参数。 例如： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function addSimple ( a, b )  return a + b;  function add ( ...numbers )  return numbers[ 0 ] + numbers[ 1 ];  addSimple( 3 , 2 ); // 5 add( 3 , 2 ); // 5 // or in es6 style: const addEs6 = ( ...numbers ) = numbers.reduce( ( p, c ) = p + c, 0 ); addEs6( 1 , 2 , 3 ); // 6 技术上，JavaScript已经在每个函数上设置了一个 arguments 变量（除了箭头函数），但是 arguments 有很多问题，其中之一就是它在技术上不是数组。 剩余参数实际上是数组，它提供对 map ， filter ， reduce 等方法的访问。另一个重要的区别是剩余参数只包括在函数中没有特别命名的参数，如： 1 2 3 4 5 6 7 8 function print ( a, b, c, ...more )  console .log(more[ 0 ]); console .log( arguments [ 0 ]);  print( 1 , 2 , 3 , 4 , 5 ); // 4 // 1 注意: 通常扩展语句和剩余参数被引用为Spread和Rest运算符，但它们不是根据ECMAScript规范的运算符。一些参考 MDN-Spread Syntax , MDN-Rest Parameters , ECMAScript Spec - Spread Syntax , ECMAScript Spec - Rest Parameters"},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句和剩余参数":{"title":"&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x548C;&#x5269;&#x4F59;&#x53C2;&#x6570;","path":"\\ES6&TypeScript\\es6\\spread_and_rest.html#扩展语句和剩余参数","body":"&#x5728;&#x4EE5;&#x4E0B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x5141;&#x8BB8;&#x8868;&#x8FBE;&#x5F0F;&#x5C31;&#x5730;&#x6269;&#x5C55;&#xFF1A; &#x6570;&#x7EC4; &#x51FD;&#x6570;&#x8C03;&#x7528; &#x591A;&#x53D8;&#x91CF;&#x89E3;&#x6784; &#x5269;&#x4F59;&#x53C2;&#x6570;&#x4E0E;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x76F8;&#x53CD;&#xFF0C;&#x5B83;&#x5C06;&#x4E0D;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x9017;&#x53F7;&#x5206;&#x9694;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x6536;&#x96C6;&#x5230;&#x6570;&#x7EC4;&#x4E2D;&#x3002; &#x6269;&#x5C55;&#x8BED;&#x53E5; 1 2 3 const add = ( a, b ) = a + b; let args = [ 3 , 5 ]; add(...args); // same as `add(args[0], args[1])`, or `add.apply(null, args)` &#x51FD;&#x6570;&#x4E0D;&#x662F;JavaScript&#x4E2D;&#x552F;&#x4E00;&#x4F7F;&#x7528;&#x9017;&#x53F7;&#x5206;&#x9694;&#x5217;&#x8868;&#x7684;&#x5730;&#x65B9; - []&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x8FDE;&#x63A5;&#xFF1A; 1 2 let cde = [ &apos;c&apos; , &apos;d&apos; , &apos;e&apos; ]; let scale = [ &apos;a&apos; , &apos;b&apos; , ...cde, &apos;f&apos; , &apos;g&apos; ]; // [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;, &apos;g&apos;] &#x540C;&#x6837;&#xFF0C;&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;&#x53EF;&#x4EE5;&#x505A;&#x540C;&#x6837;&#x7684;&#x4E8B;&#x60C5;&#xFF1A; 1 2 let mapABC = { a : 5 , b : 6 , c : 3 }; let mapABCD = { ...mapABC, d : 7 }; // { a: 5, b: 6, c: 3, d: 7 } &#x5269;&#x4F59;&#x53C2;&#x6570; &#x5269;&#x4F59;&#x53C2;&#x6570;&#x5171;&#x4EAB;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x7684;&#x7701;&#x7565;&#x53F7;&#x8BED;&#x6CD5;&#xFF0C;&#x4F46;&#x76EE;&#x7684;&#x4E0D;&#x540C;&#x3002;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x7528;&#x4E8E;&#x8BBF;&#x95EE;&#x4F20;&#x9012;&#x7ED9;&#x51FD;&#x6570;&#x4E0D;&#x786E;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x53C2;&#x6570;&#x3002; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function addSimple ( a, b ) { return a + b; } function add ( ...numbers ) { return numbers[ 0 ] + numbers[ 1 ]; } addSimple( 3 , 2 ); // 5 add( 3 , 2 ); // 5 // or in es6 style: const addEs6 = ( ...numbers ) = numbers.reduce( ( p, c ) = p + c, 0 ); addEs6( 1 , 2 , 3 ); // 6 &#x6280;&#x672F;&#x4E0A;&#xFF0C;JavaScript&#x5DF2;&#x7ECF;&#x5728;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x4E0A;&#x8BBE;&#x7F6E;&#x4E86;&#x4E00;&#x4E2A; arguments &#x53D8;&#x91CF;&#xFF08;&#x9664;&#x4E86;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#xFF09;&#xFF0C;&#x4F46;&#x662F; arguments &#x6709;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x5C31;&#x662F;&#x5B83;&#x5728;&#x6280;&#x672F;&#x4E0A;&#x4E0D;&#x662F;&#x6570;&#x7EC4;&#x3002; &#x5269;&#x4F59;&#x53C2;&#x6570;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6570;&#x7EC4;&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x5BF9; map &#xFF0C; filter &#xFF0C; reduce &#x7B49;&#x65B9;&#x6CD5;&#x7684;&#x8BBF;&#x95EE;&#x3002;&#x53E6;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x662F;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x53EA;&#x5305;&#x62EC;&#x5728;&#x51FD;&#x6570;&#x4E2D;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x547D;&#x540D;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 function print ( a, b, c, ...more ) { console .log(more[ 0 ]); console .log( arguments [ 0 ]); } print( 1 , 2 , 3 , 4 , 5 ); // 4 // 1 &#x6CE8;&#x610F;: &#x901A;&#x5E38;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x548C;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x88AB;&#x5F15;&#x7528;&#x4E3A;Spread&#x548C;Rest&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x4E0D;&#x662F;&#x6839;&#x636E;ECMAScript&#x89C4;&#x8303;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x3002;&#x4E00;&#x4E9B;&#x53C2;&#x8003; MDN-Spread Syntax , MDN-Rest Parameters , ECMAScript Spec - Spread Syntax , ECMAScript Spec - Rest Parameters"},"ES6&TypeScript/es6/spread_and_rest.html#扩展语句":{"title":"&#x6269;&#x5C55;&#x8BED;&#x53E5;","path":"\\ES6&TypeScript\\es6\\spread_and_rest.html#扩展语句","body":"1 2 3 const add = ( a, b ) = a + b; let args = [ 3 , 5 ]; add(...args); // same as `add(args[0], args[1])`, or `add.apply(null, args)` &#x51FD;&#x6570;&#x4E0D;&#x662F;JavaScript&#x4E2D;&#x552F;&#x4E00;&#x4F7F;&#x7528;&#x9017;&#x53F7;&#x5206;&#x9694;&#x5217;&#x8868;&#x7684;&#x5730;&#x65B9; - []&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x8FDE;&#x63A5;&#xFF1A; 1 2 let cde = [ &apos;c&apos; , &apos;d&apos; , &apos;e&apos; ]; let scale = [ &apos;a&apos; , &apos;b&apos; , ...cde, &apos;f&apos; , &apos;g&apos; ]; // [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;, &apos;g&apos;] &#x540C;&#x6837;&#xFF0C;&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;&#x53EF;&#x4EE5;&#x505A;&#x540C;&#x6837;&#x7684;&#x4E8B;&#x60C5;&#xFF1A; 1 2 let mapABC = { a : 5 , b : 6 , c : 3 }; let mapABCD = { ...mapABC, d : 7 }; // { a: 5, b: 6, c: 3, d: 7 } &#x5269;&#x4F59;&#x53C2;&#x6570; &#x5269;&#x4F59;&#x53C2;&#x6570;&#x5171;&#x4EAB;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x7684;&#x7701;&#x7565;&#x53F7;&#x8BED;&#x6CD5;&#xFF0C;&#x4F46;&#x76EE;&#x7684;&#x4E0D;&#x540C;&#x3002;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x7528;&#x4E8E;&#x8BBF;&#x95EE;&#x4F20;&#x9012;&#x7ED9;&#x51FD;&#x6570;&#x4E0D;&#x786E;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x53C2;&#x6570;&#x3002; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function addSimple ( a, b ) { return a + b; } function add ( ...numbers ) { return numbers[ 0 ] + numbers[ 1 ]; } addSimple( 3 , 2 ); // 5 add( 3 , 2 ); // 5 // or in es6 style: const addEs6 = ( ...numbers ) = numbers.reduce( ( p, c ) = p + c, 0 ); addEs6( 1 , 2 , 3 ); // 6 &#x6280;&#x672F;&#x4E0A;&#xFF0C;JavaScript&#x5DF2;&#x7ECF;&#x5728;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x4E0A;&#x8BBE;&#x7F6E;&#x4E86;&#x4E00;&#x4E2A; arguments &#x53D8;&#x91CF;&#xFF08;&#x9664;&#x4E86;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#xFF09;&#xFF0C;&#x4F46;&#x662F; arguments &#x6709;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x5C31;&#x662F;&#x5B83;&#x5728;&#x6280;&#x672F;&#x4E0A;&#x4E0D;&#x662F;&#x6570;&#x7EC4;&#x3002; &#x5269;&#x4F59;&#x53C2;&#x6570;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6570;&#x7EC4;&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x5BF9; map &#xFF0C; filter &#xFF0C; reduce &#x7B49;&#x65B9;&#x6CD5;&#x7684;&#x8BBF;&#x95EE;&#x3002;&#x53E6;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x662F;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x53EA;&#x5305;&#x62EC;&#x5728;&#x51FD;&#x6570;&#x4E2D;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x547D;&#x540D;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 function print ( a, b, c, ...more ) { console .log(more[ 0 ]); console .log( arguments [ 0 ]); } print( 1 , 2 , 3 , 4 , 5 ); // 4 // 1 &#x6CE8;&#x610F;: &#x901A;&#x5E38;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x548C;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x88AB;&#x5F15;&#x7528;&#x4E3A;Spread&#x548C;Rest&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x4E0D;&#x662F;&#x6839;&#x636E;ECMAScript&#x89C4;&#x8303;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x3002;&#x4E00;&#x4E9B;&#x53C2;&#x8003; MDN-Spread Syntax , MDN-Rest Parameters , ECMAScript Spec - Spread Syntax , ECMAScript Spec - Rest Parameters"},"ES6&TypeScript/es6/spread_and_rest.html#剩余参数":{"title":"&#x5269;&#x4F59;&#x53C2;&#x6570;","path":"\\ES6&TypeScript\\es6\\spread_and_rest.html#剩余参数","body":"&#x5269;&#x4F59;&#x53C2;&#x6570;&#x5171;&#x4EAB;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x7684;&#x7701;&#x7565;&#x53F7;&#x8BED;&#x6CD5;&#xFF0C;&#x4F46;&#x76EE;&#x7684;&#x4E0D;&#x540C;&#x3002;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x7528;&#x4E8E;&#x8BBF;&#x95EE;&#x4F20;&#x9012;&#x7ED9;&#x51FD;&#x6570;&#x4E0D;&#x786E;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x53C2;&#x6570;&#x3002; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 function addSimple ( a, b ) { return a + b; } function add ( ...numbers ) { return numbers[ 0 ] + numbers[ 1 ]; } addSimple( 3 , 2 ); // 5 add( 3 , 2 ); // 5 // or in es6 style: const addEs6 = ( ...numbers ) = numbers.reduce( ( p, c ) = p + c, 0 ); addEs6( 1 , 2 , 3 ); // 6 &#x6280;&#x672F;&#x4E0A;&#xFF0C;JavaScript&#x5DF2;&#x7ECF;&#x5728;&#x6BCF;&#x4E2A;&#x51FD;&#x6570;&#x4E0A;&#x8BBE;&#x7F6E;&#x4E86;&#x4E00;&#x4E2A; arguments &#x53D8;&#x91CF;&#xFF08;&#x9664;&#x4E86;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#xFF09;&#xFF0C;&#x4F46;&#x662F; arguments &#x6709;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x5C31;&#x662F;&#x5B83;&#x5728;&#x6280;&#x672F;&#x4E0A;&#x4E0D;&#x662F;&#x6570;&#x7EC4;&#x3002; &#x5269;&#x4F59;&#x53C2;&#x6570;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6570;&#x7EC4;&#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x5BF9; map &#xFF0C; filter &#xFF0C; reduce &#x7B49;&#x65B9;&#x6CD5;&#x7684;&#x8BBF;&#x95EE;&#x3002;&#x53E6;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x662F;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x53EA;&#x5305;&#x62EC;&#x5728;&#x51FD;&#x6570;&#x4E2D;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x547D;&#x540D;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 function print ( a, b, c, ...more ) { console .log(more[ 0 ]); console .log( arguments [ 0 ]); } print( 1 , 2 , 3 , 4 , 5 ); // 4 // 1 &#x6CE8;&#x610F;: &#x901A;&#x5E38;&#x6269;&#x5C55;&#x8BED;&#x53E5;&#x548C;&#x5269;&#x4F59;&#x53C2;&#x6570;&#x88AB;&#x5F15;&#x7528;&#x4E3A;Spread&#x548C;Rest&#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x4F46;&#x5B83;&#x4EEC;&#x4E0D;&#x662F;&#x6839;&#x636E;ECMAScript&#x89C4;&#x8303;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x3002;&#x4E00;&#x4E9B;&#x53C2;&#x8003; MDN-Spread Syntax , MDN-Rest Parameters , ECMAScript Spec - Spread Syntax , ECMAScript Spec - Rest Parameters"},"ES6&TypeScript/es6/template_strings.html":{"title":"","path":"\\ES6&TypeScript\\es6\\template_strings.html","body":"模板字符串 在传统的JavaScript中，包含在匹配的  或 &#39; 标记内的文本被认为是一个字符串。  或 &#39; 内的文本只能在一行上，没有办法在这些字符串中插入数据，这导致了很多看起来像下面那样丑陋的串联代码： 1 2 3 4 var name = 'Sam' ; var age = 42 ; console .log( 'hello my name is ' + name + ' I am ' + age + ' years old' ); ES6引入了一种通过反引号（ ` ）标记的新的字符串文字类型。 这些字符串文字可以包括换行符，并且有一个新的机制用于将变量插入字符串： 1 2 3 4 var name = 'Sam' ; var age = 42 ; console .log( `hello my name is $name , and I am $age years old` ); 这种字符串可以在各种各样的地方派上用场，前端开发是其中之一。 ###译注 多行字符串 1 2 3 4 console.log(`string text line 1 string text line 2`); // string text line 1 // string text line 2 嵌入表达式 1 2 console.log(`three is $1 + 2 not $2 * 1 + 2.`); // three is 3 not 4. 带标签的模板字符串 1 2 3 4 5 6 7 function tag ( strings, ...values )  console .log(strings); // [\"three is \", \" not \", raw: Array[2]] console .log(values); // [3, 4] return \"Hello!\" ;  tag `three is $ 1 + 2  not $ 2 * 1 + 2  ` ; // \"Hello!\""},"ES6&TypeScript/es6/template_strings.html#模板字符串":{"title":"&#x6A21;&#x677F;&#x5B57;&#x7B26;&#x4E32;","path":"\\ES6&TypeScript\\es6\\template_strings.html#模板字符串","body":"&#x5728;&#x4F20;&#x7EDF;&#x7684;JavaScript&#x4E2D;&#xFF0C;&#x5305;&#x542B;&#x5728;&#x5339;&#x914D;&#x7684;  &#x6216; &apos; &#x6807;&#x8BB0;&#x5185;&#x7684;&#x6587;&#x672C;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x3002;  &#x6216; &apos; &#x5185;&#x7684;&#x6587;&#x672C;&#x53EA;&#x80FD;&#x5728;&#x4E00;&#x884C;&#x4E0A;&#xFF0C;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x5728;&#x8FD9;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x63D2;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x4E86;&#x5F88;&#x591A;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x4E0B;&#x9762;&#x90A3;&#x6837;&#x4E11;&#x964B;&#x7684;&#x4E32;&#x8054;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 4 var name = &apos;Sam&apos; ; var age = 42 ; console .log( &apos;hello my name is &apos; + name + &apos; I am &apos; + age + &apos; years old&apos; ); ES6&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x79CD;&#x901A;&#x8FC7;&#x53CD;&#x5F15;&#x53F7;&#xFF08; ` &#xFF09;&#x6807;&#x8BB0;&#x7684;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x6587;&#x5B57;&#x7C7B;&#x578B;&#x3002; &#x8FD9;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x6587;&#x5B57;&#x53EF;&#x4EE5;&#x5305;&#x62EC;&#x6362;&#x884C;&#x7B26;&#xFF0C;&#x5E76;&#x4E14;&#x6709;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x673A;&#x5236;&#x7528;&#x4E8E;&#x5C06;&#x53D8;&#x91CF;&#x63D2;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#xFF1A; 1 2 3 4 var name = &apos;Sam&apos; ; var age = 42 ; console .log( `hello my name is ${name} , and I am ${age} years old` ); &#x8FD9;&#x79CD;&#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x5728;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x5730;&#x65B9;&#x6D3E;&#x4E0A;&#x7528;&#x573A;&#xFF0C;&#x524D;&#x7AEF;&#x5F00;&#x53D1;&#x662F;&#x5176;&#x4E2D;&#x4E4B;&#x4E00;&#x3002; ###&#x8BD1;&#x6CE8; &#x591A;&#x884C;&#x5B57;&#x7B26;&#x4E32; 1 2 3 4 console.log(`string text line 1 string text line 2`); // string text line 1 // string text line 2 &#x5D4C;&#x5165;&#x8868;&#x8FBE;&#x5F0F; 1 2 console.log(`three is ${1 + 2} not ${2 * 1 + 2}.`); // three is 3 not 4. &#x5E26;&#x6807;&#x7B7E;&#x7684;&#x6A21;&#x677F;&#x5B57;&#x7B26;&#x4E32; 1 2 3 4 5 6 7 function tag ( strings, ...values ) { console .log(strings); // [three is ,  not , raw: Array[2]] console .log(values); // [3, 4] return Hello! ; } tag `three is ${ 1 + 2 } not ${ 2 * 1 + 2 } ` ; // Hello!"},"ES6&TypeScript/typescript/class_decorators.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\class_decorators.html","body":"类装饰器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 function log ( prefix?: string )  return ( target ) =  // save a reference to the original constructor var original = target; // a utility function to generate instances of a class function construct ( constructor, args )  var c: any = function ( )  return constructor .apply(this, args);  c.prototype = constructor .prototype; return new c();  // the new constructor behavior var f: any = function (...args)  console .log(prefix + original.name); return construct(original, args);  // copy prototype so instanceof operator still works f.prototype = original.prototype; // return new constructor (will override original) return f; ;  @log( 'hello' ) class World   const w = new World(); // outputs \"helloWorld\" 在示例中 log 使用 @ 调用，并传递一个字符串作为参数， @log() 返回一个匿名函数，是实际的装饰器。 装饰器函数接受一个类或构造函数（ES5）作为参数。 装饰器函数然后返回一个新的类构造函数，每当 World 被实例化时使用。 这个装饰器除了将其给定的参数和其目标的类名注销到控制台之外什么都不做。"},"ES6&TypeScript/typescript/class_decorators.html#类装饰器":{"title":"&#x7C7B;&#x88C5;&#x9970;&#x5668;","path":"\\ES6&TypeScript\\typescript\\class_decorators.html#类装饰器","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 function log ( prefix?: string ) { return ( target ) = { // save a reference to the original constructor var original = target; // a utility function to generate instances of a class function construct ( constructor, args ) { var c: any = function ( ) { return constructor .apply(this, args); } c.prototype = constructor .prototype; return new c(); } // the new constructor behavior var f: any = function (...args) { console .log(prefix + original.name); return construct(original, args); } // copy prototype so instanceof operator still works f.prototype = original.prototype; // return new constructor (will override original) return f; }; } @log( &apos;hello&apos; ) class World { } const w = new World(); // outputs helloWorld &#x5728;&#x793A;&#x4F8B;&#x4E2D; log &#x4F7F;&#x7528; @ &#x8C03;&#x7528;&#xFF0C;&#x5E76;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C; @log() &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF0C;&#x662F;&#x5B9E;&#x9645;&#x7684;&#x88C5;&#x9970;&#x5668;&#x3002; &#x88C5;&#x9970;&#x5668;&#x51FD;&#x6570;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x7C7B;&#x6216;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF08;ES5&#xFF09;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002; &#x88C5;&#x9970;&#x5668;&#x51FD;&#x6570;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x6BCF;&#x5F53; World &#x88AB;&#x5B9E;&#x4F8B;&#x5316;&#x65F6;&#x4F7F;&#x7528;&#x3002; &#x8FD9;&#x4E2A;&#x88C5;&#x9970;&#x5668;&#x9664;&#x4E86;&#x5C06;&#x5176;&#x7ED9;&#x5B9A;&#x7684;&#x53C2;&#x6570;&#x548C;&#x5176;&#x76EE;&#x6807;&#x7684;&#x7C7B;&#x540D;&#x6CE8;&#x9500;&#x5230;&#x63A7;&#x5236;&#x53F0;&#x4E4B;&#x5916;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x505A;&#x3002;"},"ES6&TypeScript/typescript/decorators.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\decorators.html","body":"装饰器 装饰器被提议用于未来版本的JavaScript，但是Angular 2团队真的想使用它们，并且它们已经被包括在TypeScript中。 装饰器是用前缀 @ 符号调用的函数，后面紧跟一个类，参数，方法或属性。 装饰器函数提供关于类，参数或方法的信息，装饰器函数返回某处的位置，或以某种方式操纵其目标。 通常，装饰器返回的“东西”与传入的东西是相同的，但是它以某种方式被增强了。 装饰器在TypeScript中是相当新的，并且大多数使用案例展示了现有装饰器的使用。 然而，装饰器只是函数，并且通过几个例子更容易理解。 装饰器是函数，有四个东西（类，参数，方法和属性）可以装饰; 因此装饰器有四个不同的函数签名： class: declare type ClassDecorator = (target: TFunction) = TFunction | void; property: declare type PropertyDecorator = (target: Object, propertyKey: string | symbol) = void; method: declare type MethodDecorator = (target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor) = TypedPropertyDescriptor | void; parameter: declare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number) = void; 已经使用Angular 2的读者会注意到这些签名看起来不像Angular 2特定装饰器，如 @Component() 使用的签名。 注意 @Component 上的 () ，这意味着 @Component 在JavaScript遇到 @Component() 时被调用。 反过来，这意味着必须有一个组件函数在某处返回一个匹配上面描述的装饰器签名的函数。 这是装饰工厂模式的一个例子。 如果装饰器仍然看起来很困惑，也许一些例子会帮你理清思路。"},"ES6&TypeScript/typescript/decorators.html#装饰器":{"title":"&#x88C5;&#x9970;&#x5668;","path":"\\ES6&TypeScript\\typescript\\decorators.html#装饰器","body":"&#x88C5;&#x9970;&#x5668;&#x88AB;&#x63D0;&#x8BAE;&#x7528;&#x4E8E;&#x672A;&#x6765;&#x7248;&#x672C;&#x7684;JavaScript&#xFF0C;&#x4F46;&#x662F;Angular 2&#x56E2;&#x961F;&#x771F;&#x7684;&#x60F3;&#x4F7F;&#x7528;&#x5B83;&#x4EEC;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x4EEC;&#x5DF2;&#x7ECF;&#x88AB;&#x5305;&#x62EC;&#x5728;TypeScript&#x4E2D;&#x3002; &#x88C5;&#x9970;&#x5668;&#x662F;&#x7528;&#x524D;&#x7F00; @ &#x7B26;&#x53F7;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x540E;&#x9762;&#x7D27;&#x8DDF;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x53C2;&#x6570;&#xFF0C;&#x65B9;&#x6CD5;&#x6216;&#x5C5E;&#x6027;&#x3002; &#x88C5;&#x9970;&#x5668;&#x51FD;&#x6570;&#x63D0;&#x4F9B;&#x5173;&#x4E8E;&#x7C7B;&#xFF0C;&#x53C2;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x88C5;&#x9970;&#x5668;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x67D0;&#x5904;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x6216;&#x4EE5;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x64CD;&#x7EB5;&#x5176;&#x76EE;&#x6807;&#x3002; &#x901A;&#x5E38;&#xFF0C;&#x88C5;&#x9970;&#x5668;&#x8FD4;&#x56DE;&#x7684;&#x201C;&#x4E1C;&#x897F;&#x201D;&#x4E0E;&#x4F20;&#x5165;&#x7684;&#x4E1C;&#x897F;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4EE5;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x88AB;&#x589E;&#x5F3A;&#x4E86;&#x3002; &#x88C5;&#x9970;&#x5668;&#x5728;TypeScript&#x4E2D;&#x662F;&#x76F8;&#x5F53;&#x65B0;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x5927;&#x591A;&#x6570;&#x4F7F;&#x7528;&#x6848;&#x4F8B;&#x5C55;&#x793A;&#x4E86;&#x73B0;&#x6709;&#x88C5;&#x9970;&#x5668;&#x7684;&#x4F7F;&#x7528;&#x3002; &#x7136;&#x800C;&#xFF0C;&#x88C5;&#x9970;&#x5668;&#x53EA;&#x662F;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x8FC7;&#x51E0;&#x4E2A;&#x4F8B;&#x5B50;&#x66F4;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x3002; &#x88C5;&#x9970;&#x5668;&#x662F;&#x51FD;&#x6570;&#xFF0C;&#x6709;&#x56DB;&#x4E2A;&#x4E1C;&#x897F;&#xFF08;&#x7C7B;&#xFF0C;&#x53C2;&#x6570;&#xFF0C;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#xFF09;&#x53EF;&#x4EE5;&#x88C5;&#x9970;; &#x56E0;&#x6B64;&#x88C5;&#x9970;&#x5668;&#x6709;&#x56DB;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#xFF1A; class: declare type ClassDecorator = (target: TFunction) = TFunction | void; property: declare type PropertyDecorator = (target: Object, propertyKey: string | symbol) = void; method: declare type MethodDecorator = (target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor) = TypedPropertyDescriptor | void; parameter: declare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number) = void; &#x5DF2;&#x7ECF;&#x4F7F;&#x7528;Angular 2&#x7684;&#x8BFB;&#x8005;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#x8FD9;&#x4E9B;&#x7B7E;&#x540D;&#x770B;&#x8D77;&#x6765;&#x4E0D;&#x50CF;Angular 2&#x7279;&#x5B9A;&#x88C5;&#x9970;&#x5668;&#xFF0C;&#x5982; @Component() &#x4F7F;&#x7528;&#x7684;&#x7B7E;&#x540D;&#x3002; &#x6CE8;&#x610F; @Component &#x4E0A;&#x7684; () &#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740; @Component &#x5728;JavaScript&#x9047;&#x5230; @Component() &#x65F6;&#x88AB;&#x8C03;&#x7528;&#x3002; &#x53CD;&#x8FC7;&#x6765;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5FC5;&#x987B;&#x6709;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#x51FD;&#x6570;&#x5728;&#x67D0;&#x5904;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5339;&#x914D;&#x4E0A;&#x9762;&#x63CF;&#x8FF0;&#x7684;&#x88C5;&#x9970;&#x5668;&#x7B7E;&#x540D;&#x7684;&#x51FD;&#x6570;&#x3002; &#x8FD9;&#x662F;&#x88C5;&#x9970;&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x7684;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x3002; &#x5982;&#x679C;&#x88C5;&#x9970;&#x5668;&#x4ECD;&#x7136;&#x770B;&#x8D77;&#x6765;&#x5F88;&#x56F0;&#x60D1;&#xFF0C;&#x4E5F;&#x8BB8;&#x4E00;&#x4E9B;&#x4F8B;&#x5B50;&#x4F1A;&#x5E2E;&#x4F60;&#x7406;&#x6E05;&#x601D;&#x8DEF;&#x3002;"},"ES6&TypeScript/typescript/generics.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\generics.html","body":"泛型 泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。 1 2 3 function identityT(arg: T): T  return arg;  我们给identity添加了类型变量 T 。 T 帮助我们捕获用户传入的类型（比如： number ），之后我们就可以使用这个类型。 之后我们再次使用了 T 当做返回值类型。现在我们可以知道参数类型与返回值类型是相同的了。 这允许我们跟踪函数里使用的类型的信息。"},"ES6&TypeScript/typescript/generics.html#泛型":{"title":"&#x6CDB;&#x578B;","path":"\\ES6&TypeScript\\typescript\\generics.html#泛型","body":"&#x6CDB;&#x578B;&#xFF08;Generics&#xFF09;&#x662F;&#x6307;&#x5728;&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x3001;&#x63A5;&#x53E3;&#x6216;&#x7C7B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0D;&#x9884;&#x5148;&#x6307;&#x5B9A;&#x5177;&#x4F53;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x518D;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x4E00;&#x79CD;&#x7279;&#x6027;&#x3002; 1 2 3 function identityT(arg: T): T { return arg; } &#x6211;&#x4EEC;&#x7ED9;identity&#x6DFB;&#x52A0;&#x4E86;&#x7C7B;&#x578B;&#x53D8;&#x91CF; T &#x3002; T &#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x6355;&#x83B7;&#x7528;&#x6237;&#x4F20;&#x5165;&#x7684;&#x7C7B;&#x578B;&#xFF08;&#x6BD4;&#x5982;&#xFF1A; number &#xFF09;&#xFF0C;&#x4E4B;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x3002; &#x4E4B;&#x540E;&#x6211;&#x4EEC;&#x518D;&#x6B21;&#x4F7F;&#x7528;&#x4E86; T &#x5F53;&#x505A;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E0E;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x662F;&#x76F8;&#x540C;&#x7684;&#x4E86;&#x3002; &#x8FD9;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x8DDF;&#x8E2A;&#x51FD;&#x6570;&#x91CC;&#x4F7F;&#x7528;&#x7684;&#x7C7B;&#x578B;&#x7684;&#x4FE1;&#x606F;&#x3002;"},"ES6&TypeScript/typescript/interfaces.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\interfaces.html","body":"接口 一个 接口 是一个TypeScript工件，它不是ECMAScript的一部分。 接口是一种用于相对于参数及其类型定义函数上的契约的方式。 除了函数，接口也可以与类一起使用以定义自定义类型 接口是一个抽象类型，它不像类一样包含任何代码。 它仅定义API的“签名”或形状。 在代码转换期间， interface 不会生成任何代码，它仅在开发期间被Typescript用于类型检查。 下面是描述函数API的接口的示例： 1 2 3 4 5 6 7 8 9 10 interface Callback  (error: Error , data: any ): void ;  function callServer ( callback: Callback )  callback( null , 'hi' );  callServer( ( error, data ) = console .log(data)); // 'hi' callServer( 'hi' ); // tsc error 有时JavaScript函数可以接受多个类型以及不同的参数，也就是说，它们可以有不同的调用签名。接口可以用来指定。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface PrintOutput  (message: string ): void ; // common case (message: string []): void ; // less common case  let printOut: PrintOutput = ( message ) =  if ( Array .isArray(message))  console .log(message.join( ', ' ));  else  console .log(message);   printOut( 'hello' ); // 'hello' printOut([ 'hi' , 'bye' ]); // 'hi, bye' 下面是一个描述对象字面量的接口的示例： 1 2 3 4 5 6 7 interface Action  type : string ;  let a: Action =  type : 'literal' "},"ES6&TypeScript/typescript/interfaces.html#接口":{"title":"&#x63A5;&#x53E3;","path":"\\ES6&TypeScript\\typescript\\interfaces.html#接口","body":"&#x4E00;&#x4E2A; &#x63A5;&#x53E3; &#x662F;&#x4E00;&#x4E2A;TypeScript&#x5DE5;&#x4EF6;&#xFF0C;&#x5B83;&#x4E0D;&#x662F;ECMAScript&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002; &#x63A5;&#x53E3;&#x662F;&#x4E00;&#x79CD;&#x7528;&#x4E8E;&#x76F8;&#x5BF9;&#x4E8E;&#x53C2;&#x6570;&#x53CA;&#x5176;&#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x4E0A;&#x7684;&#x5951;&#x7EA6;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x9664;&#x4E86;&#x51FD;&#x6570;&#xFF0C;&#x63A5;&#x53E3;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0E;&#x7C7B;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#x4EE5;&#x5B9A;&#x4E49;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B; &#x63A5;&#x53E3;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x4E0D;&#x50CF;&#x7C7B;&#x4E00;&#x6837;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x4EE3;&#x7801;&#x3002; &#x5B83;&#x4EC5;&#x5B9A;&#x4E49;API&#x7684;&#x201C;&#x7B7E;&#x540D;&#x201D;&#x6216;&#x5F62;&#x72B6;&#x3002; &#x5728;&#x4EE3;&#x7801;&#x8F6C;&#x6362;&#x671F;&#x95F4;&#xFF0C; interface &#x4E0D;&#x4F1A;&#x751F;&#x6210;&#x4EFB;&#x4F55;&#x4EE3;&#x7801;&#xFF0C;&#x5B83;&#x4EC5;&#x5728;&#x5F00;&#x53D1;&#x671F;&#x95F4;&#x88AB;Typescript&#x7528;&#x4E8E;&#x7C7B;&#x578B;&#x68C0;&#x67E5;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x63CF;&#x8FF0;&#x51FD;&#x6570;API&#x7684;&#x63A5;&#x53E3;&#x7684;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 interface Callback { (error: Error , data: any ): void ; } function callServer ( callback: Callback ) { callback( null , &apos;hi&apos; ); } callServer( ( error, data ) = console .log(data)); // &apos;hi&apos; callServer( &apos;hi&apos; ); // tsc error &#x6709;&#x65F6;JavaScript&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x591A;&#x4E2A;&#x7C7B;&#x578B;&#x4EE5;&#x53CA;&#x4E0D;&#x540C;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x8C03;&#x7528;&#x7B7E;&#x540D;&#x3002;&#x63A5;&#x53E3;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface PrintOutput { (message: string ): void ; // common case (message: string []): void ; // less common case } let printOut: PrintOutput = ( message ) = { if ( Array .isArray(message)) { console .log(message.join( &apos;, &apos; )); } else { console .log(message); } } printOut( &apos;hello&apos; ); // &apos;hello&apos; printOut([ &apos;hi&apos; , &apos;bye&apos; ]); // &apos;hi, bye&apos; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x63CF;&#x8FF0;&#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 interface Action { type : string ; } let a: Action = { type : &apos;literal&apos; }"},"ES6&TypeScript/typescript/linting.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\linting.html","body":"#Linting 许多编辑支持“linting”的概念 - 计算机程序的语法检查。 可以在程序员的编辑器中和/或通过自动化来完成。 对于TypeScript有一个名为tslint的包（npm install –save-dev tslint），可以插入许多编辑器。 tslint也可以配置一个tslint.json文件。 Webpack可以在尝试运行tsc之前运行tslint。 这是通过安装tslint-loader（npm install –save-dev tslint-loader）来实现的，它插入到webpack中，如下所示： 1 2 3 4 5 6 7 8 9 10 11 // ... module :  preLoaders: [  test : /\\.ts$/ , loader : 'tslint'  ], loaders: [  test : /\\.ts$/ , loader : 'ts' , exclude : /node_modules/ , // ... ] // ... "},"ES6&TypeScript/typescript/shapes.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\shapes.html","body":"Shapes 下面的TypeScript是JavaScript，下面的JavaScript通常是一个JIT（即时编译器）。 给定JavaScript的底层语义，类型通常由“形状”推理。 这些底层形状像TypeScript的接口一样工作，事实上TypeScript比较类和类接口之类的自定义类型。 考虑前面示例的扩展： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 interface Action  type : string ;  let a: Action =  type : 'literal'  class NotAnAction  type : string ; constructor ( )  this .type = 'Constructor function (class)' ;   a = new NotAnAction(); // valid TypeScript! 尽管 Action 与 NotAnAction 具有不同的标识符， 但是 tsc 允许我们将 NotAnAction 的实例分配给具有 Action 类型的实例。这是因为TypeScript只真的关心对象具有相同的形状。换句话说，如果两个对象具有相同的属性，具有相同的类型，那么这两个对象被认为是相同类型。"},"ES6&TypeScript/typescript/shapes.html#Shapes":{"title":"Shapes","path":"\\ES6&TypeScript\\typescript\\shapes.html#Shapes","body":"&#x4E0B;&#x9762;&#x7684;TypeScript&#x662F;JavaScript&#xFF0C;&#x4E0B;&#x9762;&#x7684;JavaScript&#x901A;&#x5E38;&#x662F;&#x4E00;&#x4E2A;JIT&#xFF08;&#x5373;&#x65F6;&#x7F16;&#x8BD1;&#x5668;&#xFF09;&#x3002; &#x7ED9;&#x5B9A;JavaScript&#x7684;&#x5E95;&#x5C42;&#x8BED;&#x4E49;&#xFF0C;&#x7C7B;&#x578B;&#x901A;&#x5E38;&#x7531;&#x201C;&#x5F62;&#x72B6;&#x201D;&#x63A8;&#x7406;&#x3002; &#x8FD9;&#x4E9B;&#x5E95;&#x5C42;&#x5F62;&#x72B6;&#x50CF;TypeScript&#x7684;&#x63A5;&#x53E3;&#x4E00;&#x6837;&#x5DE5;&#x4F5C;&#xFF0C;&#x4E8B;&#x5B9E;&#x4E0A;TypeScript&#x6BD4;&#x8F83;&#x7C7B;&#x548C;&#x7C7B;&#x63A5;&#x53E3;&#x4E4B;&#x7C7B;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#x3002; &#x8003;&#x8651;&#x524D;&#x9762;&#x793A;&#x4F8B;&#x7684;&#x6269;&#x5C55;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 interface Action { type : string ; } let a: Action = { type : &apos;literal&apos; } class NotAnAction { type : string ; constructor ( ) { this .type = &apos;Constructor function (class)&apos; ; } } a = new NotAnAction(); // valid TypeScript! &#x5C3D;&#x7BA1; Action &#x4E0E; NotAnAction &#x5177;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#xFF0C; &#x4F46;&#x662F; tsc &#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5C06; NotAnAction &#x7684;&#x5B9E;&#x4F8B;&#x5206;&#x914D;&#x7ED9;&#x5177;&#x6709; Action &#x7C7B;&#x578B;&#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;TypeScript&#x53EA;&#x771F;&#x7684;&#x5173;&#x5FC3;&#x5BF9;&#x8C61;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x5F62;&#x72B6;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x3002;"},"ES6&TypeScript/typescript/typeScript.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\typeScript.html","body":"#TypeScript ES6是当前的JavaScript版本。 TypeScript是ES6的超集，这意味着所有ES6功能都是TypeScript的一部分，但并非所有TypeScript功能都是ES6的一部分。 因此，TypeScript必须转换为ES5以在大多数浏览器中运行。 TypeScript的主要特征之一是添加类型信息，也因此得名。这种类型信息可以帮助JavaScript程序变得更易预测和推断。 类型让开发者编写更明确的“契约”。换句话说，函数签名之类的东西更加明确。 未使用TS： 1 2 3 4 5 6 function add ( a, b )  return a + b;  add( 1 , 3 ); // 4 add( 1 , '3' ); // '13' 使用TS： 1 2 3 4 5 6 7 function add ( a: number , b: number )  return a + b;  add( 1 , 3 ); // 4 // 编译器会在运行JS之前报错 add( 1 , '3' ); // '13'"},"ES6&TypeScript/typescript/typeScript_start.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\typeScript_start.html","body":"#TypeScript入门 使用npm安装TypeScript转换器： 1 $ npm install -g typescript 然后使用 tsc 手动将TypeScript源文件编译为ES5： 1 2 $ tsc test.ts $ node test.js ##关于ES6示例 我们早期的ES6类现在不会编译。 TypeScript比ES6更苛刻，它需要声明实例属性： 1 2 3 4 5 6 class Pizza  toppings: string []; constructor ( toppings: string [] )  this .toppings = toppings;   注意，现在我们已经声明 toppings 是一个字符串数组，TypeScript将强制这样做。 如果我们尝试为它分配一个数字，我们将在编译时收到一个错误。 如果你想让一个属性的值可以设置为任何类型，你只需声明其类型为“any”： 1 2 3 4 class Pizza  toppings: any ; //... "},"ES6&TypeScript/typescript/type_inference.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\type_inference.html","body":"#类型推断 关于TypeScript类型的一个常见误解是代码需要在每个可能的机会上显式地描述类型。幸运的是这不是这样。TypeScript有一个丰富的类型推理系统，将为程序员“填空”。考虑以下： type-in​​ference-found-error.ts 1 2 let numbers = [ 2 , 3 , 5 , 7 , 11 ]; numbers = [ 'this will generate a type error' ]; 1 2 3 tsc ./type-inference-finds-error.ts type-inference-finds-error.ts(2,1): error TS2322: Type &apos;string[]&apos; is not assignable to type &apos;number[]&apos;. Type &apos;string&apos; is not assignable to type &apos;number&apos;. 代码不包含额外的类型信息。事实上，它是有效的ES6。 如果var已经使用，这将是有效的ES5。然而TypeScript仍然能够确定类型信息。 类型推理也可以通过上下文工作，这是回调方便。考虑以下： type-inference-finds-error-2.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 interface FakeEvent  type : string ;  interface FakeEventHandler  (e: FakeEvent): void ;  class FakeWindow  onMouseDown: FakeEventHandler  const fakeWindow = new FakeWindow(); fakeWindow.onMouseDown = ( a: number ) =  // this will fail ; tsc ./ type -inference-finds-error -2. ts type -inference-finds-error -2. ts( 14 , 1 ): error TS2322: Type '(a: number) = void' is not assignable to type 'FakeEventHandler' . Types of parameters 'a' and 'e' are incompatible. Type 'number' is not assignable to type 'FakeEvent' . Property 'type' is missing in type 'Number' . 在此示例中，上下文不明显，因为接口已被明确定义。在浏览器环境中与真正的window对象，这将是一个方便的功能，特别是类型完成Event 对象。"},"ES6&TypeScript/typescript/property_decorators.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\property_decorators.html","body":"属性装饰器 属性装饰器使用类的属性。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function Override ( label: string )  return function ( target: any , key: string )  Object .defineProperty(target, key,  configurable: false , get : () = label );   class Test  @Override ( 'test' ) // invokes Override, which returns the decorator name: string = 'pat' ;  let t = new Test(); console .log(t.name); // 'test' 以上示例必须使用 --experimentalDecorators 和 --emitDecoratorMetadata 标志编译。 在这种情况下，装饰属性由传递给装饰器的标签替换。 重要的是注意属性值不能由装饰器直接操纵; 而是使用访问器。 这里是一个使用普通装饰器的经典属性示例。 1 2 3 4 5 6 7 8 9 10 11 12 function ReadOnly ( target: any , key: string )  Object .defineProperty(target, key,  writable: false );  class Test  @ReadOnly // notice there are no `()` name: string ;  const t = new Test(); t.name = 'jan' ; console .log(t.name); // 'undefined' 在这种情况下，name属性不可写，并且保持未定义。"},"ES6&TypeScript/typescript/property_decorators.html#属性装饰器":{"title":"&#x5C5E;&#x6027;&#x88C5;&#x9970;&#x5668;","path":"\\ES6&TypeScript\\typescript\\property_decorators.html#属性装饰器","body":"&#x5C5E;&#x6027;&#x88C5;&#x9970;&#x5668;&#x4F7F;&#x7528;&#x7C7B;&#x7684;&#x5C5E;&#x6027;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function Override ( label: string ) { return function ( target: any , key: string ) { Object .defineProperty(target, key, { configurable: false , get : () = label }); } } class Test { @Override ( &apos;test&apos; ) // invokes Override, which returns the decorator name: string = &apos;pat&apos; ; } let t = new Test(); console .log(t.name); // &apos;test&apos; &#x4EE5;&#x4E0A;&#x793A;&#x4F8B;&#x5FC5;&#x987B;&#x4F7F;&#x7528; --experimentalDecorators &#x548C; --emitDecoratorMetadata &#x6807;&#x5FD7;&#x7F16;&#x8BD1;&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x88C5;&#x9970;&#x5C5E;&#x6027;&#x7531;&#x4F20;&#x9012;&#x7ED9;&#x88C5;&#x9970;&#x5668;&#x7684;&#x6807;&#x7B7E;&#x66FF;&#x6362;&#x3002; &#x91CD;&#x8981;&#x7684;&#x662F;&#x6CE8;&#x610F;&#x5C5E;&#x6027;&#x503C;&#x4E0D;&#x80FD;&#x7531;&#x88C5;&#x9970;&#x5668;&#x76F4;&#x63A5;&#x64CD;&#x7EB5;; &#x800C;&#x662F;&#x4F7F;&#x7528;&#x8BBF;&#x95EE;&#x5668;&#x3002; &#x8FD9;&#x91CC;&#x662F;&#x4E00;&#x4E2A;&#x4F7F;&#x7528;&#x666E;&#x901A;&#x88C5;&#x9970;&#x5668;&#x7684;&#x7ECF;&#x5178;&#x5C5E;&#x6027;&#x793A;&#x4F8B;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 function ReadOnly ( target: any , key: string ) { Object .defineProperty(target, key, { writable: false }); } class Test { @ReadOnly // notice there are no `()` name: string ; } const t = new Test(); t.name = &apos;jan&apos; ; console .log(t.name); // &apos;undefined&apos; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;name&#x5C5E;&#x6027;&#x4E0D;&#x53EF;&#x5199;&#xFF0C;&#x5E76;&#x4E14;&#x4FDD;&#x6301;&#x672A;&#x5B9A;&#x4E49;&#x3002;"},"ES6&TypeScript/typescript/type_keyword.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\type_keyword.html","body":"类型关键字 type 关键字定义类型的别名。 1 2 3 type str = string ; let cheese: str = 'gorgonzola' ; let cake: str = 10 ; // Type 'number' is not assignable to type 'string' 乍一看，这似乎并不是非常有用（即使是错误提及原始类型），但随着类型注释变得更加复杂， type 关键字的好处变得明显。 联合类型 联合类型允许类型注释指定属性应该是一组类型之一（两者任一）。 1 2 3 4 5 6 function admitAge ( age: number | string ): string  return `I am $age , alright?!` ;  admitAge( 30 ); // 'I am 30, alright?!' admitAge( 'Forty' ); // 'I am Forty, alright?!' type 关键字简化了注释和重用联合类型。 1 2 3 4 5 6 7 8 9 type Age = number | string ; function admitAge ( age: Age ): string  return `I am $age , alright?!` ;  let myAge: Age = 50 ; let yourAge: Age = 'One Hundred' ; admitAge(yourAge); // 'I am One Hundred, alright?!' 联合类型的字符串文字类型是一个非常有用的模式，创建基本上是带有字符串值的枚举。 1 2 3 4 5 6 7 8 type PartyZone = \"pizza hut\" | \"waterpark\" | \"bowling alley\" | \"abandoned warehouse\" ; function goToParty ( place: PartyZone ): string  return `lets go to the $place ` ;  goToParty( \"pizza hut\" ); goToParty( \"chuck e. cheese\" ); // Argument of type `\"chuck e. cheese\"' is not assignable to parameter of type 'PartyZone' 交叉类型 交叉类型是两种或更多种类型的组合。 适用于需要实现多个接口的对象和参数。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface Kicker  kick(speed: number ): number ;  interface Puncher  punch(power: number ): number ;  // assign intersection type definition to alias KickPuncher type KickPuncher = Kicker &amp; Puncher; function attack ( warrior: KickPuncher )  warrior.kick( 102 ); warrior.punch( 412 ); warrior.judoChop(); // Property 'judoChop' does not exist on type 'KickPuncher'  函数类型定义 函数类型注释可以比内置函数类型的typescript更加具体。 Function 类型定义允许您将函数签名附加到它自己的类型。 1 2 3 4 5 6 7 8 type MaybeError = Error | null ; type Callback = ( err: MaybeError, response: Object ) = void ; function sendRequest ( cb: Callback ): void  if (cb)  cb( null , );   语法与ES6 fat-arrow函数类似。 ([params]) = [return type] . 前面为了说明类型关键字而提高了代码片段的可读性，这里是定义为inline的函数类型。 1 2 3 4 5 function sendRequest ( cb: (err: Error | null , response: Object ) = void ): void  if (cb)  cb( null , );  "},"ES6&TypeScript/typescript/type_keyword.html#类型关键字":{"title":"&#x7C7B;&#x578B;&#x5173;&#x952E;&#x5B57;","path":"\\ES6&TypeScript\\typescript\\type_keyword.html#类型关键字","body":"type &#x5173;&#x952E;&#x5B57;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#x7684;&#x522B;&#x540D;&#x3002; 1 2 3 type str = string ; let cheese: str = &apos;gorgonzola&apos; ; let cake: str = 10 ; // Type &apos;number&apos; is not assignable to type &apos;string&apos; &#x4E4D;&#x4E00;&#x770B;&#xFF0C;&#x8FD9;&#x4F3C;&#x4E4E;&#x5E76;&#x4E0D;&#x662F;&#x975E;&#x5E38;&#x6709;&#x7528;&#xFF08;&#x5373;&#x4F7F;&#x662F;&#x9519;&#x8BEF;&#x63D0;&#x53CA;&#x539F;&#x59CB;&#x7C7B;&#x578B;&#xFF09;&#xFF0C;&#x4F46;&#x968F;&#x7740;&#x7C7B;&#x578B;&#x6CE8;&#x91CA;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x590D;&#x6742;&#xFF0C; type &#x5173;&#x952E;&#x5B57;&#x7684;&#x597D;&#x5904;&#x53D8;&#x5F97;&#x660E;&#x663E;&#x3002; &#x8054;&#x5408;&#x7C7B;&#x578B; &#x8054;&#x5408;&#x7C7B;&#x578B;&#x5141;&#x8BB8;&#x7C7B;&#x578B;&#x6CE8;&#x91CA;&#x6307;&#x5B9A;&#x5C5E;&#x6027;&#x5E94;&#x8BE5;&#x662F;&#x4E00;&#x7EC4;&#x7C7B;&#x578B;&#x4E4B;&#x4E00;&#xFF08;&#x4E24;&#x8005;&#x4EFB;&#x4E00;&#xFF09;&#x3002; 1 2 3 4 5 6 function admitAge ( age: number | string ): string { return `I am ${age} , alright?!` ; } admitAge( 30 ); // &apos;I am 30, alright?!&apos; admitAge( &apos;Forty&apos; ); // &apos;I am Forty, alright?!&apos; type &#x5173;&#x952E;&#x5B57;&#x7B80;&#x5316;&#x4E86;&#x6CE8;&#x91CA;&#x548C;&#x91CD;&#x7528;&#x8054;&#x5408;&#x7C7B;&#x578B;&#x3002; 1 2 3 4 5 6 7 8 9 type Age = number | string ; function admitAge ( age: Age ): string { return `I am ${age} , alright?!` ; } let myAge: Age = 50 ; let yourAge: Age = &apos;One Hundred&apos; ; admitAge(yourAge); // &apos;I am One Hundred, alright?!&apos; &#x8054;&#x5408;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x6587;&#x5B57;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x521B;&#x5EFA;&#x57FA;&#x672C;&#x4E0A;&#x662F;&#x5E26;&#x6709;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x7684;&#x679A;&#x4E3E;&#x3002; 1 2 3 4 5 6 7 8 type PartyZone = pizza hut | waterpark | bowling alley | abandoned warehouse ; function goToParty ( place: PartyZone ): string { return `lets go to the ${place} ` ; } goToParty( pizza hut ); goToParty( chuck e. cheese ); // Argument of type `chuck e. cheese&apos; is not assignable to parameter of type &apos;PartyZone&apos; &#x4EA4;&#x53C9;&#x7C7B;&#x578B; &#x4EA4;&#x53C9;&#x7C7B;&#x578B;&#x662F;&#x4E24;&#x79CD;&#x6216;&#x66F4;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x7EC4;&#x5408;&#x3002; &#x9002;&#x7528;&#x4E8E;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x591A;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x5BF9;&#x8C61;&#x548C;&#x53C2;&#x6570;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 interface Kicker { kick(speed: number ): number ; } interface Puncher { punch(power: number ): number ; } // assign intersection type definition to alias KickPuncher type KickPuncher = Kicker &amp; Puncher; function attack ( warrior: KickPuncher ) { warrior.kick( 102 ); warrior.punch( 412 ); warrior.judoChop(); // Property &apos;judoChop&apos; does not exist on type &apos;KickPuncher&apos; } &#x51FD;&#x6570;&#x7C7B;&#x578B;&#x5B9A;&#x4E49; &#x51FD;&#x6570;&#x7C7B;&#x578B;&#x6CE8;&#x91CA;&#x53EF;&#x4EE5;&#x6BD4;&#x5185;&#x7F6E;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x7684;typescript&#x66F4;&#x52A0;&#x5177;&#x4F53;&#x3002; Function &#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x5141;&#x8BB8;&#x60A8;&#x5C06;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x9644;&#x52A0;&#x5230;&#x5B83;&#x81EA;&#x5DF1;&#x7684;&#x7C7B;&#x578B;&#x3002; 1 2 3 4 5 6 7 8 type MaybeError = Error | null ; type Callback = ( err: MaybeError, response: Object ) = void ; function sendRequest ( cb: Callback ): void { if (cb) { cb( null , {}); } } &#x8BED;&#x6CD5;&#x4E0E;ES6 fat-arrow&#x51FD;&#x6570;&#x7C7B;&#x4F3C;&#x3002; ([params]) = [return type] . &#x524D;&#x9762;&#x4E3A;&#x4E86;&#x8BF4;&#x660E;&#x7C7B;&#x578B;&#x5173;&#x952E;&#x5B57;&#x800C;&#x63D0;&#x9AD8;&#x4E86;&#x4EE3;&#x7801;&#x7247;&#x6BB5;&#x7684;&#x53EF;&#x8BFB;&#x6027;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x5B9A;&#x4E49;&#x4E3A;inline&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3002; 1 2 3 4 5 function sendRequest ( cb: (err: Error | null , response: Object ) = void ): void { if (cb) { cb( null , {}); } }"},"ES6&TypeScript/typescript/typescript_classes.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\typescript_classes.html","body":"#TypeScript类 TypeScript还将类视为自己的类型： 1 2 3 4 5 6 7 8 9 class Foo  foo: number ;  class Bar  bar: string ;  class Baz  constructor ( foo: Foo, bar: Bar )    let baz = new Baz( new Foo(), new Bar()); // valid baz = new Baz( new Bar(), new Foo()); // tsc errors 像函数参数一样，类有时具有可选成员。 同样的 ?: 语法可以用于 class 定义： 1 2 3 4 class Person  name: string ; nickName?: string ;  在上面的示例中， Person 的实例保证有一个 name ，并且可以可选地具有 nickName 。 修饰符 在类中修饰符分为三种： public 公有、 private 私有和 protected 受保护。 public：类的每个成员默认为 public ，可以自由被访问。 private：类成员被标记为 private 时就不能在类的外部访问。 protected： protected 和 private 行为很相似，但 protected 成员可以在派生类中访问。 继承与多态 封装，继承和多态是面型对象的三大特性。 TypeScript的继承与ES6基本一致。 多态是同一个行为具有多个不同表现形式或形态的能力。比如在各种程序中对键盘的同一个按键事件响应都不相同，这就是多态性。 实现多态的方法有：重写、接口、抽象类和抽象方法。"},"ES6&TypeScript/typescript/typescript_features.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\typescript_features.html","body":"TypeScript特性 现在，从TypeScript代码生成JavaScript已经被去神秘化了，它的一些功能可以被描述和实验。 类型 接口 形状 装饰 类型 许多人没有意识到这一点，JavaScript中实际上有类型的，但他们只是“鸭子类型”，这大概意味着程序员不必去想它们。TypeScript中也存在JavaScript的类型： boolean (true/false) number整数，浮点数， Infinity 和 NaN string 字符和字符串 []其他类型的数组，如 number[] 或 boolean[] {} 对象字面量 undefined 没有设置 TypeScript添加 enum 枚举类 { Red, Blue, Green } any 使用任何类型 void 无类型 原始类型示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 let isDone: boolean = false ; let height: number = 6 ; let name: string = \"bob\" ; let list: number [] = [ 1 , 2 , 3 ]; let list: Array  number  = [ 1 , 2 , 3 ]; enum Color Red, Green, Blue; let c: Color = Color.Green; let notSure: any = 4 ; notSure = \"maybe a string instead\" ; notSure = false ; // okay, definitely a boolean function showMessage ( data: string ): void  alert(data);  showMessage( 'hello' ); 这说明在TypeScript的基本类型，并表示结束 showMessage 的功能。在这个函数中的参数有时被检查特定类型的 tsc 运行。 在许多JavaScript函数中，函数采用可选参数是很常见的。TypeScript为此提供支持，如下所示： 1 2 3 4 5 6 7 8 9 function logMessage ( message: string , isDebug?: boolean )  if (isDebug)  console .log( 'Debug: ' + message);  else  console .log(message);   logMessage( 'hi' ); // 'hi' logMessage( 'test' , true ); // 'Debug: test' 使用 ? 让 tsc 知道 isDebug 是一个可选参数。 如果 isDebug 被省略 tsc 不会报错。"},"ES6&TypeScript/typescript/typescript_features.html#TypeScript特性":{"title":"TypeScript&#x7279;&#x6027;","path":"\\ES6&TypeScript\\typescript\\typescript_features.html#TypeScript特性","body":"&#x73B0;&#x5728;&#xFF0C;&#x4ECE;TypeScript&#x4EE3;&#x7801;&#x751F;&#x6210;JavaScript&#x5DF2;&#x7ECF;&#x88AB;&#x53BB;&#x795E;&#x79D8;&#x5316;&#x4E86;&#xFF0C;&#x5B83;&#x7684;&#x4E00;&#x4E9B;&#x529F;&#x80FD;&#x53EF;&#x4EE5;&#x88AB;&#x63CF;&#x8FF0;&#x548C;&#x5B9E;&#x9A8C;&#x3002; &#x7C7B;&#x578B; &#x63A5;&#x53E3; &#x5F62;&#x72B6; &#x88C5;&#x9970; &#x7C7B;&#x578B; &#x8BB8;&#x591A;&#x4EBA;&#x6CA1;&#x6709;&#x610F;&#x8BC6;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;JavaScript&#x4E2D;&#x5B9E;&#x9645;&#x4E0A;&#x6709;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x4F46;&#x4ED6;&#x4EEC;&#x53EA;&#x662F;&#x201C;&#x9E2D;&#x5B50;&#x7C7B;&#x578B;&#x201D;&#xFF0C;&#x8FD9;&#x5927;&#x6982;&#x610F;&#x5473;&#x7740;&#x7A0B;&#x5E8F;&#x5458;&#x4E0D;&#x5FC5;&#x53BB;&#x60F3;&#x5B83;&#x4EEC;&#x3002;TypeScript&#x4E2D;&#x4E5F;&#x5B58;&#x5728;JavaScript&#x7684;&#x7C7B;&#x578B;&#xFF1A; boolean (true/false) number&#x6574;&#x6570;&#xFF0C;&#x6D6E;&#x70B9;&#x6570;&#xFF0C; Infinity &#x548C; NaN string &#x5B57;&#x7B26;&#x548C;&#x5B57;&#x7B26;&#x4E32; []&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x5982; number[] &#x6216; boolean[] {} &#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF; undefined &#x6CA1;&#x6709;&#x8BBE;&#x7F6E; TypeScript&#x6DFB;&#x52A0; enum &#x679A;&#x4E3E;&#x7C7B; { Red, Blue, Green } any &#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x7C7B;&#x578B; void &#x65E0;&#x7C7B;&#x578B; &#x539F;&#x59CB;&#x7C7B;&#x578B;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 let isDone: boolean = false ; let height: number = 6 ; let name: string = bob ; let list: number [] = [ 1 , 2 , 3 ]; let list: Array  number  = [ 1 , 2 , 3 ]; enum Color {Red, Green, Blue}; let c: Color = Color.Green; let notSure: any = 4 ; notSure = maybe a string instead ; notSure = false ; // okay, definitely a boolean function showMessage ( data: string ): void { alert(data); } showMessage( &apos;hello&apos; ); &#x8FD9;&#x8BF4;&#x660E;&#x5728;TypeScript&#x7684;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#xFF0C;&#x5E76;&#x8868;&#x793A;&#x7ED3;&#x675F; showMessage &#x7684;&#x529F;&#x80FD;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x6709;&#x65F6;&#x88AB;&#x68C0;&#x67E5;&#x7279;&#x5B9A;&#x7C7B;&#x578B;&#x7684; tsc &#x8FD0;&#x884C;&#x3002; &#x5728;&#x8BB8;&#x591A;JavaScript&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x51FD;&#x6570;&#x91C7;&#x7528;&#x53EF;&#x9009;&#x53C2;&#x6570;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x3002;TypeScript&#x4E3A;&#x6B64;&#x63D0;&#x4F9B;&#x652F;&#x6301;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1 2 3 4 5 6 7 8 9 function logMessage ( message: string , isDebug?: boolean ) { if (isDebug) { console .log( &apos;Debug: &apos; + message); } else { console .log(message); } } logMessage( &apos;hi&apos; ); // &apos;hi&apos; logMessage( &apos;test&apos; , true ); // &apos;Debug: test&apos; &#x4F7F;&#x7528; ? &#x8BA9; tsc &#x77E5;&#x9053; isDebug &#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x53C2;&#x6570;&#x3002; &#x5982;&#x679C; isDebug &#x88AB;&#x7701;&#x7565; tsc &#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#x3002;"},"ES6&TypeScript/typescript/typescript_features.html#类型":{"title":"&#x7C7B;&#x578B;","path":"\\ES6&TypeScript\\typescript\\typescript_features.html#类型","body":"&#x8BB8;&#x591A;&#x4EBA;&#x6CA1;&#x6709;&#x610F;&#x8BC6;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;JavaScript&#x4E2D;&#x5B9E;&#x9645;&#x4E0A;&#x6709;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x4F46;&#x4ED6;&#x4EEC;&#x53EA;&#x662F;&#x201C;&#x9E2D;&#x5B50;&#x7C7B;&#x578B;&#x201D;&#xFF0C;&#x8FD9;&#x5927;&#x6982;&#x610F;&#x5473;&#x7740;&#x7A0B;&#x5E8F;&#x5458;&#x4E0D;&#x5FC5;&#x53BB;&#x60F3;&#x5B83;&#x4EEC;&#x3002;TypeScript&#x4E2D;&#x4E5F;&#x5B58;&#x5728;JavaScript&#x7684;&#x7C7B;&#x578B;&#xFF1A; boolean (true/false) number&#x6574;&#x6570;&#xFF0C;&#x6D6E;&#x70B9;&#x6570;&#xFF0C; Infinity &#x548C; NaN string &#x5B57;&#x7B26;&#x548C;&#x5B57;&#x7B26;&#x4E32; []&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x5982; number[] &#x6216; boolean[] {} &#x5BF9;&#x8C61;&#x5B57;&#x9762;&#x91CF; undefined &#x6CA1;&#x6709;&#x8BBE;&#x7F6E; TypeScript&#x6DFB;&#x52A0; enum &#x679A;&#x4E3E;&#x7C7B; { Red, Blue, Green } any &#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x7C7B;&#x578B; void &#x65E0;&#x7C7B;&#x578B; &#x539F;&#x59CB;&#x7C7B;&#x578B;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 let isDone: boolean = false ; let height: number = 6 ; let name: string = bob ; let list: number [] = [ 1 , 2 , 3 ]; let list: Array  number  = [ 1 , 2 , 3 ]; enum Color {Red, Green, Blue}; let c: Color = Color.Green; let notSure: any = 4 ; notSure = maybe a string instead ; notSure = false ; // okay, definitely a boolean function showMessage ( data: string ): void { alert(data); } showMessage( &apos;hello&apos; ); &#x8FD9;&#x8BF4;&#x660E;&#x5728;TypeScript&#x7684;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#xFF0C;&#x5E76;&#x8868;&#x793A;&#x7ED3;&#x675F; showMessage &#x7684;&#x529F;&#x80FD;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x6709;&#x65F6;&#x88AB;&#x68C0;&#x67E5;&#x7279;&#x5B9A;&#x7C7B;&#x578B;&#x7684; tsc &#x8FD0;&#x884C;&#x3002; &#x5728;&#x8BB8;&#x591A;JavaScript&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x51FD;&#x6570;&#x91C7;&#x7528;&#x53EF;&#x9009;&#x53C2;&#x6570;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x3002;TypeScript&#x4E3A;&#x6B64;&#x63D0;&#x4F9B;&#x652F;&#x6301;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1 2 3 4 5 6 7 8 9 function logMessage ( message: string , isDebug?: boolean ) { if (isDebug) { console .log( &apos;Debug: &apos; + message); } else { console .log(message); } } logMessage( &apos;hi&apos; ); // &apos;hi&apos; logMessage( &apos;test&apos; , true ); // &apos;Debug: test&apos; &#x4F7F;&#x7528; ? &#x8BA9; tsc &#x77E5;&#x9053; isDebug &#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x53C2;&#x6570;&#x3002; &#x5982;&#x679C; isDebug &#x88AB;&#x7701;&#x7565; tsc &#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#x3002;"},"ES6&TypeScript/typescript/typings.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\typings.html","body":"#类型⚡️ TypeScript 提供了以下基本类型： 布尔（boolean） 数字（number） 字符串（string） 数组（array） 元组（tuple） 枚举（enum） 任意值（any） null 和 undefined void never 其中元组、枚举、任意值、void和never类型是 TypeScript 特有的。 元组类型 元组类型用于表示已知元素类型和数量的数组，各类型不必相同。 1 2 3 let x: [ string , number ]; x= [ 'angular' , 25 ]; x= [ 25 , 'angular' ]; //报错 枚举类型 枚举是一个可被命名的整型常数的集合，枚举类型为集合成员赋予有意义的名称，增强可读性。 1 2 3 enum week Mon, Tues, Wed, Thurs, Fri, Sat, Sun ; let Wed: week = Color.Wed; console .log(Wed) // 2 枚举值默认从 0 开始，往后逐个加 1（递增）；也就是说，week 中的 Mon、Tues …… Sun 对应的值分别为 0、1 …… 6。也可以给每个名字都指定一个值，但大多数我们给第一个名字指定值就可以了 enum week{ Mon = 1, Tues, Wed, Thurs, Fri, Sat, Sun }; 任意值类型和void类型 任意值是TypeScript针对类型不明确的变量使用的一种数据类型。 void表示没有任何类型。例如一个函数没有返回值时，那他返回的的类型是void。 never类型 never 是所有类型的子类型，代表从来不会出现的值的类型。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 返回 never 的函数必须有无法被执行到的终止点 function error ( message: string ): never  throw new Error (message);  // 推断的返回值是 never function fail ( )  return error( \"一些东西失败了\" );  // 返回 never 的函数必须有无法被执行到的终止点 function infiniteLoop ( ): never  while ( true )    精明的读者可能会想知道当TypeScript程序员需要调用没有类型信息的JavaScript模块接口时会发生什么。 TypeScript将标记为 *.d.ts 的文件视为定义文件。 这些文件旨在使用TypeScript来描述由JavaScript库提供的接口。 在TypeScript 2.0中，用户可以直接从 @types 通过 npm 获取类型文件（例如， npm install --save @types/lodash 将安装 lodash 类型文件）。"},"ES6&TypeScript/typescript/working_with_tsc.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\working_with_tsc.html","body":"#使用 tsc 到目前为止 tsc 已用于编译单个文件。通常，程序会有多个文件进行编译。值得庆幸的是 tsc 可以处理多个文件作为参数。 a.ts 1 export const A = ( a ) = console .log(a); b.ts 1 export const B = ( b ) = console .log(b); TypeScript1.8.2之前： 1 2 $ tsc ./a.ts ./b.ts a.ts(1,1): error TS1148: Cannot compile modules unless the &apos;--module&apos; flag is provided. 嗯。 这个模块标志的处理是什么？ TypeScript有一个帮助菜单，让我们来看看： 1 2 3 $ tsc --help | grep module -m KIND, --module KIND Specify module code generation: &apos;commonjs&apos;, &apos;amd&apos;, &apos;system&apos;, &apos;umd&apos; or &apos;es2015&apos; --moduleResolution Specifies module resolution strategy: &apos;node&apos; (Node.js) or &apos;classic&apos; (TypeScript pre-1.6). （TypeScript比我们显示的更多帮助;为了简洁，我们通过grep过滤）。有两个引用“module”的帮助条目，–module是一个TypeScript所抱怨的。 该描述解释了TypeScript支持许多不同的模块方案。 目前，commonjs是可取的。 这将产生与node.js的模块系统兼容的模块。 1 $ tsc -m commonjs ./a.ts ./b.ts TypeScript1.8.2之后，tsc有一个默认规则–module选项：target ===’ES6’？ ‘ES6’：’commonjs’（更多细节可以在这里找到），所以我们可以简单地运行： 1 $ tsc ./a.ts ./b.ts tsc应该不产生输出。 在许多命令行传统中，没有任何输出实际上是成功的标志。 列出目录内容将确认我们的TypeScript文件已经编译完成。 1 2 $ ls a.js a.ts b.js b.ts 非常好 - 现在有两个JavaScript模块可供使用。 即使项目很小告诉 tsc 命令编译什么非常乏味和麻烦的。 幸运的是TypeScript有一个简化这个的方法。 tsconfig.json 文件让程序员写下他们想要的所有编译器设置。 当运行 tsc 时，它会查找 tsconfig.json 文件并使用它们的规则来编译JavaScript。 对于Angular 2项目，有一些特定的设置需要在项目的 tsconfig.json 中配置。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \"compilerOptions\" :  \"module\" : \"commonjs\" , \"target\" : \"es5\" , \"emitDecoratorMetadata\" : true , \"experimentalDecorators\" : true , \"noImplicitAny\" : false , \"removeComments\" : false , \"sourceMap\" : true , \"exclude\" : [ \"node_modules\" , \"dist/\" ] "},"ES6&TypeScript/typescript/parameter_decorators.html":{"title":"","path":"\\ES6&TypeScript\\typescript\\parameter_decorators.html","body":"参数装饰器 1 2 3 4 5 6 7 8 9 10 11 function logPosition ( target: any, propertyKey: string, parameterIndex: number )  console .log(parameterIndex);  class Cow  say(b: string, @logPosition c: boolean)  console .log(b);   new Cow().say( 'hello' , false ); // outputs 1 (newline) hello 上面演示了装饰方法的参数。熟悉Angular 2的读者现在可以想象Angular 2如何实现他们的 @Inject() 系统。"},"ES6&TypeScript/typescript/parameter_decorators.html#参数装饰器":{"title":"&#x53C2;&#x6570;&#x88C5;&#x9970;&#x5668;","path":"\\ES6&TypeScript\\typescript\\parameter_decorators.html#参数装饰器","body":"1 2 3 4 5 6 7 8 9 10 11 function logPosition ( target: any, propertyKey: string, parameterIndex: number ) { console .log(parameterIndex); } class Cow { say(b: string, @logPosition c: boolean) { console .log(b); } } new Cow().say( &apos;hello&apos; , false ); // outputs 1 (newline) hello &#x4E0A;&#x9762;&#x6F14;&#x793A;&#x4E86;&#x88C5;&#x9970;&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#x3002;&#x719F;&#x6089;Angular 2&#x7684;&#x8BFB;&#x8005;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x60F3;&#x8C61;Angular 2&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x4ED6;&#x4EEC;&#x7684; @Inject() &#x7CFB;&#x7EDF;&#x3002;"},"Form/form.html":{"title":"","path":"\\Form\\form.html","body":"Forms 没有用户输入的应用程序只是一个页面。 捕获用户的输入是任何应用程序的基石。 在许多情况下，这意味着各种各样复杂的处理形式。 Angular 2在处理表单上比Angular 1更灵活，我们不再局限于只依赖 ngModel 。这在很大程度上简单和增强了我们的表单。 模板驱动 表单使用内置指令以最少的代码创建简单的表单组件。 FormBuilder 使用提供的API处理更复杂的验证和子窗体。"},"Form/form.html#Forms":{"title":"Forms","path":"\\Form\\form.html#Forms","body":"&#x6CA1;&#x6709;&#x7528;&#x6237;&#x8F93;&#x5165;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#x3002; &#x6355;&#x83B7;&#x7528;&#x6237;&#x7684;&#x8F93;&#x5165;&#x662F;&#x4EFB;&#x4F55;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x57FA;&#x77F3;&#x3002; &#x5728;&#x8BB8;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5404;&#x79CD;&#x5404;&#x6837;&#x590D;&#x6742;&#x7684;&#x5904;&#x7406;&#x5F62;&#x5F0F;&#x3002; Angular 2&#x5728;&#x5904;&#x7406;&#x8868;&#x5355;&#x4E0A;&#x6BD4;Angular 1&#x66F4;&#x7075;&#x6D3B;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x518D;&#x5C40;&#x9650;&#x4E8E;&#x53EA;&#x4F9D;&#x8D56; ngModel &#x3002;&#x8FD9;&#x5728;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x7B80;&#x5355;&#x548C;&#x589E;&#x5F3A;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x8868;&#x5355;&#x3002; &#x6A21;&#x677F;&#x9A71;&#x52A8; &#x8868;&#x5355;&#x4F7F;&#x7528;&#x5185;&#x7F6E;&#x6307;&#x4EE4;&#x4EE5;&#x6700;&#x5C11;&#x7684;&#x4EE3;&#x7801;&#x521B;&#x5EFA;&#x7B80;&#x5355;&#x7684;&#x8868;&#x5355;&#x7EC4;&#x4EF6;&#x3002; FormBuilder &#x4F7F;&#x7528;&#x63D0;&#x4F9B;&#x7684;API&#x5904;&#x7406;&#x66F4;&#x590D;&#x6742;&#x7684;&#x9A8C;&#x8BC1;&#x548C;&#x5B50;&#x7A97;&#x4F53;&#x3002;"},"Form/getting-started.html":{"title":"","path":"\\Form\\getting-started.html","body":"入门 Opt-In APIs 在我们深入了解任何表单的功能之前，我们需要使用 FormsModule 和/或 ReactiveFormsModule 引导我们的应用程序。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import  platformBrowserDynamic  from '@angular/platform-browser-dynamic' import  FormsModule  from '@angular/forms' ; import  AppComponent  from './components' @NgModule ( imports: [ BrowserModule, FormsModule, ], declarations: [AppComponent], bootstrap: [AppComponent] ) export class AppModule   platformBrowserDynamic().bootstrapModule(AppModule) Input 标签 大多数表单示例使用以下HTML5样式来标记Input： 1 2  label for = \"name\"  Name / label   input type = \"text\" name = \"username\" id = \"name\"  Angular 2也支持替代HTML5风格，这排除了在 input 上的 id 的必要性： 1 2 3 4  label  Name  input type = \"text\" name = \"username\"  / label "},"Form/getting-started.html#入门":{"title":"&#x5165;&#x95E8;","path":"\\Form\\getting-started.html#入门","body":"Opt-In APIs &#x5728;&#x6211;&#x4EEC;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x4EFB;&#x4F55;&#x8868;&#x5355;&#x7684;&#x529F;&#x80FD;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528; FormsModule &#x548C;/&#x6216; ReactiveFormsModule &#x5F15;&#x5BFC;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import { platformBrowserDynamic } from &apos;@angular/platform-browser-dynamic&apos; import { FormsModule } from &apos;@angular/forms&apos; ; import { AppComponent } from &apos;./components&apos; @NgModule ({ imports: [ BrowserModule, FormsModule, ], declarations: [AppComponent], bootstrap: [AppComponent] }) export class AppModule { } platformBrowserDynamic().bootstrapModule(AppModule) Input &#x6807;&#x7B7E; &#x5927;&#x591A;&#x6570;&#x8868;&#x5355;&#x793A;&#x4F8B;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;HTML5&#x6837;&#x5F0F;&#x6765;&#x6807;&#x8BB0;Input&#xFF1A; 1 2  label for = name  Name / label   input type = text name = username id = name  Angular 2&#x4E5F;&#x652F;&#x6301;&#x66FF;&#x4EE3;HTML5&#x98CE;&#x683C;&#xFF0C;&#x8FD9;&#x6392;&#x9664;&#x4E86;&#x5728; input &#x4E0A;&#x7684; id &#x7684;&#x5FC5;&#x8981;&#x6027;&#xFF1A; 1 2 3 4  label  Name  input type = text name = username  / label "},"Form/nested-form-data.html":{"title":"","path":"\\Form\\nested-form-data.html","body":"嵌套表单数据 如果你发现你在把一维的表单替换成嵌套的数据上遇到了麻烦，不用怕，Angular已经涵盖了简单和复杂的情况。 假设你要提交一个类似下面的数据： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  \"contact\" :  \"firstname\" : \"Bob\" , \"lastname\" : \"McKenzie\" , \"email\" : \"BobAndDoug@GreatWhiteNorth.com\" , \"phone\" : \"555-TAKE-OFF\" , \"address\" :  \"street\" : \"123 Some St\" , \"city\" : \"Toronto\" , \"region\" : \"ON\" , \"country\" : \"CA\" , \"code\" : \"H0H 0H0\" , \"paymentCard\" :  \"provider\" : \"Credit Lending Company Inc\" , \"cardholder\" : \"Doug McKenzie\" , \"number\" : \"123 456 789 012\" , \"verification\" : \"321\" , \"expiry\" : \"2020-02\"   虽然表单是平面和一维的，但从它们构建的数据不是。将您已经提供的数据转换为所需的形状， 这会导致复杂的变换。 更糟的是，在可能在表单输入中遇到命名冲突的情况下，您可能会发现自己为了语义而使用长而笨拙的名称。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  form   fieldset   legend  Contact / legend   label for = \"contact_first-name\"  First Name / label   input type = \"text\" name = \"contact_first-name\" id = \"contact_first-name\"   label for = \"contact_last-name\"  Last Name / label   input type = \"text\" name = \"contact_last-name\" id = \"contact_last-name\"   label for = \"contact_email\"  Email / label   input type = \"email\" name = \"contact_email\" id = \"contact_email\"   label for = \"contact_phone\"  Phone / label   input type = \"text\" name = \"contact_phone\" id = \"contact_phone\"  / fieldset  !-- ... -- / form  表单处理程序必须将该数据转换为API期望的表单。 幸运的是，这是Angular 2有一个解决方案。 ngModelGroup 当在Angular 2中构建模板驱动的表单时，我们可以依靠 ngModelGroup 指令来实现一个更干净的实现，这样Angular就会将表单字段转换为嵌套数据。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  form # paymentForm = \"ngForm\" ( ngSubmit )= \"purchase(paymentForm)\"   fieldset ngModelGroup = \"contact\"   legend  Contact / legend   label  First Name  input type = \"text\" name = \"firstname\" ngModel  / label   label  Last Name  input type = \"text\" name = \"lastname\" ngModel  / label   label  Email  input type = \"email\" name = \"email\" ngModel  / label   label  Phone  input type = \"text\" name = \"phone\" ngModel  / label  / fieldset   fieldset ngModelGroup = \"address\"  !-- ... -- / fieldset   fieldset ngModelGroup = \"paymentCard\"  !-- ... -- / fieldset  / form  使用替代HTML5标签格式; ID与 ngForm / ngModelparadigm 没有关系 除了语义目的，ngModelGroup不必在 fieldset 上使用，它会和放在 div 上一样。 如果我们填写表单，它将以我们需要的API的形式结束，而且仍然可以依靠HTML进行验证。"},"Form/nested-form-data.html#嵌套表单数据":{"title":"&#x5D4C;&#x5957;&#x8868;&#x5355;&#x6570;&#x636E;","path":"\\Form\\nested-form-data.html#嵌套表单数据","body":"&#x5982;&#x679C;&#x4F60;&#x53D1;&#x73B0;&#x4F60;&#x5728;&#x628A;&#x4E00;&#x7EF4;&#x7684;&#x8868;&#x5355;&#x66FF;&#x6362;&#x6210;&#x5D4C;&#x5957;&#x7684;&#x6570;&#x636E;&#x4E0A;&#x9047;&#x5230;&#x4E86;&#x9EBB;&#x70E6;&#xFF0C;&#x4E0D;&#x7528;&#x6015;&#xFF0C;Angular&#x5DF2;&#x7ECF;&#x6DB5;&#x76D6;&#x4E86;&#x7B80;&#x5355;&#x548C;&#x590D;&#x6742;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x5047;&#x8BBE;&#x4F60;&#x8981;&#x63D0;&#x4EA4;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x4E0B;&#x9762;&#x7684;&#x6570;&#x636E;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { contact : { firstname : Bob , lastname : McKenzie , email : BobAndDoug@GreatWhiteNorth.com , phone : 555-TAKE-OFF }, address : { street : 123 Some St , city : Toronto , region : ON , country : CA , code : H0H 0H0 }, paymentCard : { provider : Credit Lending Company Inc , cardholder : Doug McKenzie , number : 123 456 789 012 , verification : 321 , expiry : 2020-02 } } &#x867D;&#x7136;&#x8868;&#x5355;&#x662F;&#x5E73;&#x9762;&#x548C;&#x4E00;&#x7EF4;&#x7684;&#xFF0C;&#x4F46;&#x4ECE;&#x5B83;&#x4EEC;&#x6784;&#x5EFA;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x662F;&#x3002;&#x5C06;&#x60A8;&#x5DF2;&#x7ECF;&#x63D0;&#x4F9B;&#x7684;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x4E3A;&#x6240;&#x9700;&#x7684;&#x5F62;&#x72B6;&#xFF0C; &#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x590D;&#x6742;&#x7684;&#x53D8;&#x6362;&#x3002; &#x66F4;&#x7CDF;&#x7684;&#x662F;&#xFF0C;&#x5728;&#x53EF;&#x80FD;&#x5728;&#x8868;&#x5355;&#x8F93;&#x5165;&#x4E2D;&#x9047;&#x5230;&#x547D;&#x540D;&#x51B2;&#x7A81;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x60A8;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x4E3A;&#x4E86;&#x8BED;&#x4E49;&#x800C;&#x4F7F;&#x7528;&#x957F;&#x800C;&#x7B28;&#x62D9;&#x7684;&#x540D;&#x79F0;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  form   fieldset   legend  Contact / legend   label for = contact_first-name  First Name / label   input type = text name = contact_first-name id = contact_first-name   label for = contact_last-name  Last Name / label   input type = text name = contact_last-name id = contact_last-name   label for = contact_email  Email / label   input type = email name = contact_email id = contact_email   label for = contact_phone  Phone / label   input type = text name = contact_phone id = contact_phone  / fieldset  !-- ... -- / form  &#x8868;&#x5355;&#x5904;&#x7406;&#x7A0B;&#x5E8F;&#x5FC5;&#x987B;&#x5C06;&#x8BE5;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x4E3A;API&#x671F;&#x671B;&#x7684;&#x8868;&#x5355;&#x3002; &#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x662F;Angular 2&#x6709;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002; ngModelGroup &#x5F53;&#x5728;Angular 2&#x4E2D;&#x6784;&#x5EFA;&#x6A21;&#x677F;&#x9A71;&#x52A8;&#x7684;&#x8868;&#x5355;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F9D;&#x9760; ngModelGroup &#x6307;&#x4EE4;&#x6765;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x66F4;&#x5E72;&#x51C0;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x6837;Angular&#x5C31;&#x4F1A;&#x5C06;&#x8868;&#x5355;&#x5B57;&#x6BB5;&#x8F6C;&#x6362;&#x4E3A;&#x5D4C;&#x5957;&#x6570;&#x636E;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  form # paymentForm = ngForm ( ngSubmit )= purchase(paymentForm)   fieldset ngModelGroup = contact   legend  Contact / legend   label  First Name  input type = text name = firstname ngModel  / label   label  Last Name  input type = text name = lastname ngModel  / label   label  Email  input type = email name = email ngModel  / label   label  Phone  input type = text name = phone ngModel  / label  / fieldset   fieldset ngModelGroup = address  !-- ... -- / fieldset   fieldset ngModelGroup = paymentCard  !-- ... -- / fieldset  / form  &#x4F7F;&#x7528;&#x66FF;&#x4EE3;HTML5&#x6807;&#x7B7E;&#x683C;&#x5F0F;; ID&#x4E0E; ngForm / ngModelparadigm &#x6CA1;&#x6709;&#x5173;&#x7CFB; &#x9664;&#x4E86;&#x8BED;&#x4E49;&#x76EE;&#x7684;&#xFF0C;ngModelGroup&#x4E0D;&#x5FC5;&#x5728; fieldset &#x4E0A;&#x4F7F;&#x7528;&#xFF0C;&#x5B83;&#x4F1A;&#x548C;&#x653E;&#x5728; div &#x4E0A;&#x4E00;&#x6837;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x586B;&#x5199;&#x8868;&#x5355;&#xFF0C;&#x5B83;&#x5C06;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;API&#x7684;&#x5F62;&#x5F0F;&#x7ED3;&#x675F;&#xFF0C;&#x800C;&#x4E14;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x4F9D;&#x9760;HTML&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x3002;"},"Form/reactive-forms.html":{"title":"","path":"\\Form\\reactive-forms.html","body":"响应式/模型驱动的表单 在我们的模板中使用指令给我们没有太多的样板快速原型的能力，我们被束缚住了。 相反，响应式表单，让我们通过代码定义我们的形式，并给我们对数据验证更多的灵活性和控制。 首先，在它的简便性上有一点魔法，但是在你熟悉基础知识之后，学习它的构建块将允许你处理更复杂的用例。"},"Form/reactive-forms.html#响应式-模型驱动的表单":{"title":"&#x54CD;&#x5E94;&#x5F0F;/&#x6A21;&#x578B;&#x9A71;&#x52A8;&#x7684;&#x8868;&#x5355;","path":"\\Form\\reactive-forms.html#响应式-模型驱动的表单","body":"&#x5728;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x677F;&#x4E2D;&#x4F7F;&#x7528;&#x6307;&#x4EE4;&#x7ED9;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x592A;&#x591A;&#x7684;&#x6837;&#x677F;&#x5FEB;&#x901F;&#x539F;&#x578B;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x6211;&#x4EEC;&#x88AB;&#x675F;&#x7F1A;&#x4F4F;&#x4E86;&#x3002; &#x76F8;&#x53CD;&#xFF0C;&#x54CD;&#x5E94;&#x5F0F;&#x8868;&#x5355;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x5E76;&#x7ED9;&#x6211;&#x4EEC;&#x5BF9;&#x6570;&#x636E;&#x9A8C;&#x8BC1;&#x66F4;&#x591A;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x548C;&#x63A7;&#x5236;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x5728;&#x5B83;&#x7684;&#x7B80;&#x4FBF;&#x6027;&#x4E0A;&#x6709;&#x4E00;&#x70B9;&#x9B54;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x4F60;&#x719F;&#x6089;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#x4E4B;&#x540E;&#xFF0C;&#x5B66;&#x4E60;&#x5B83;&#x7684;&#x6784;&#x5EFA;&#x5757;&#x5C06;&#x5141;&#x8BB8;&#x4F60;&#x5904;&#x7406;&#x66F4;&#x590D;&#x6742;&#x7684;&#x7528;&#x4F8B;&#x3002;"},"Form/reactive-forms_basics.html":{"title":"","path":"\\Form\\reactive-forms_basics.html","body":"响应式表单基础 开始使用 FormBuilder ，我们必须首先确保我们正在使用正确的指令和正确的类，以利用程序式的表单。 为此，我们需要确保在应用程序模块的引导阶段中导入 FormsModule 和 ReactiveFormsModule 。 这将让我们访问组件，指令和providers，如 FormBuilder ， FormGroup 和 FormControl 在我们的例子中，将构建一个登录表单，我们看下面的内容： app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import  Component  from '@angular/core' ; import  FormGroup, FormControl, FormBuilder  from '@angular/forms' ; @Component ( selector: 'app-root' , templateUrl: 'app/app.component.html' ) export class AppComponent  username = new FormControl( '' ) password = new FormControl( '' ) loginForm: FormGroup = this .builder.group( username: this .username, password: this .password ); constructor ( private builder: FormBuilder )   login()  console .log( this .loginForm.value); // Attempt Logging in...   app/login-form.component.html 1 2 3 4 5 6 7 8 9  form [ formGroup ]= \"loginForm\" ( ngSubmit )= \"login()\"   label for = \"username\"  username / label   input type = \"text\" name = \"username\" id = \"username\" [ formControl ]= \"username\"   label for = \"password\"  password / label   input type = \"password\" name = \"password\" id = \"password\" [ formControl ]= \"password\"   button type = \"submit\"  log in / button  / form  View Example FormControl 请注意， FormControl 类被分配到类似命名的字段，无论是在此还是在 FormBuilder＃group({ }) 方法中。 这主要是为了方便访问。 通过保存 this 对 FormControl 实例的引用，您可以访问模板中的输入，而无需引用表单本身。 否则，可以通过使用 loginForm.controls.username 和 loginForm.controls.password 在模板中访问表单字段。 同样，此情况下的任何 FormControl 实例都可以通过使用其 .root 属性（例如 username.root.controls.password ）访问其父组。 确保root和控件在使用之前存在。 FormControl 需要两个属性：初始值和验证器列表。 现在，我们没有验证。 这将在后续步骤中添加。"},"Form/reactive-forms_basics.html#响应式表单基础":{"title":"&#x54CD;&#x5E94;&#x5F0F;&#x8868;&#x5355;&#x57FA;&#x7840;","path":"\\Form\\reactive-forms_basics.html#响应式表单基础","body":"&#x5F00;&#x59CB;&#x4F7F;&#x7528; FormBuilder &#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x9996;&#x5148;&#x786E;&#x4FDD;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#x6B63;&#x786E;&#x7684;&#x6307;&#x4EE4;&#x548C;&#x6B63;&#x786E;&#x7684;&#x7C7B;&#xFF0C;&#x4EE5;&#x5229;&#x7528;&#x7A0B;&#x5E8F;&#x5F0F;&#x7684;&#x8868;&#x5355;&#x3002; &#x4E3A;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x786E;&#x4FDD;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6A21;&#x5757;&#x7684;&#x5F15;&#x5BFC;&#x9636;&#x6BB5;&#x4E2D;&#x5BFC;&#x5165; FormsModule &#x548C; ReactiveFormsModule &#x3002; &#x8FD9;&#x5C06;&#x8BA9;&#x6211;&#x4EEC;&#x8BBF;&#x95EE;&#x7EC4;&#x4EF6;&#xFF0C;&#x6307;&#x4EE4;&#x548C;providers&#xFF0C;&#x5982; FormBuilder &#xFF0C; FormGroup &#x548C; FormControl &#x5728;&#x6211;&#x4EEC;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x5C06;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x767B;&#x5F55;&#x8868;&#x5355;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x5185;&#x5BB9;&#xFF1A; app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import { Component } from &apos;@angular/core&apos; ; import { FormGroup, FormControl, FormBuilder } from &apos;@angular/forms&apos; ; @Component ({ selector: &apos;app-root&apos; , templateUrl: &apos;app/app.component.html&apos; }) export class AppComponent { username = new FormControl( &apos;&apos; ) password = new FormControl( &apos;&apos; ) loginForm: FormGroup = this .builder.group({ username: this .username, password: this .password }); constructor ( private builder: FormBuilder ) { } login() { console .log( this .loginForm.value); // Attempt Logging in... } } app/login-form.component.html 1 2 3 4 5 6 7 8 9  form [ formGroup ]= loginForm ( ngSubmit )= login()   label for = username  username / label   input type = text name = username id = username [ formControl ]= username   label for = password  password / label   input type = password name = password id = password [ formControl ]= password   button type = submit  log in / button  / form  View Example FormControl &#x8BF7;&#x6CE8;&#x610F;&#xFF0C; FormControl &#x7C7B;&#x88AB;&#x5206;&#x914D;&#x5230;&#x7C7B;&#x4F3C;&#x547D;&#x540D;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x5728;&#x6B64;&#x8FD8;&#x662F;&#x5728; FormBuilder&#xFF03;group({ }) &#x65B9;&#x6CD5;&#x4E2D;&#x3002; &#x8FD9;&#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x8BBF;&#x95EE;&#x3002; &#x901A;&#x8FC7;&#x4FDD;&#x5B58; this &#x5BF9; FormControl &#x5B9E;&#x4F8B;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x6A21;&#x677F;&#x4E2D;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x800C;&#x65E0;&#x9700;&#x5F15;&#x7528;&#x8868;&#x5355;&#x672C;&#x8EAB;&#x3002; &#x5426;&#x5219;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528; loginForm.controls.username &#x548C; loginForm.controls.password &#x5728;&#x6A21;&#x677F;&#x4E2D;&#x8BBF;&#x95EE;&#x8868;&#x5355;&#x5B57;&#x6BB5;&#x3002; &#x540C;&#x6837;&#xFF0C;&#x6B64;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x4EFB;&#x4F55; FormControl &#x5B9E;&#x4F8B;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x5176; .root &#x5C5E;&#x6027;&#xFF08;&#x4F8B;&#x5982; username.root.controls.password &#xFF09;&#x8BBF;&#x95EE;&#x5176;&#x7236;&#x7EC4;&#x3002; &#x786E;&#x4FDD;root&#x548C;&#x63A7;&#x4EF6;&#x5728;&#x4F7F;&#x7528;&#x4E4B;&#x524D;&#x5B58;&#x5728;&#x3002; FormControl &#x9700;&#x8981;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A;&#x521D;&#x59CB;&#x503C;&#x548C;&#x9A8C;&#x8BC1;&#x5668;&#x5217;&#x8868;&#x3002; &#x73B0;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x9A8C;&#x8BC1;&#x3002; &#x8FD9;&#x5C06;&#x5728;&#x540E;&#x7EED;&#x6B65;&#x9AA4;&#x4E2D;&#x6DFB;&#x52A0;&#x3002;"},"Form/reactive-forms_custom_validation.html":{"title":"","path":"\\Form\\reactive-forms_custom_validation.html","body":"自定义验证响应式表单 内置验证器非常有用，能够引入你自己的验证方式。 Angular 2可以让你以很轻松地做到。 让我们假设使用相同的登录表单，但现在我们还要测试我们的密码在其中某处有感叹号。 app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 function hasExclamationMark ( input: FormControl )  const hasExclamation = input.value.indexOf( '!' ) = 0 ; return hasExclamation ? null :  needsExclamation: true ;  // ... this .password = new FormControl( '' , [ Validators.required, hasExclamationMark ]); 一个简单的函数接受 FormControl 实例，并返回null如果一切都很好。 如果测试失败，它返回一个具有任意命名属性的对象。 属性名称将用于 .hasError() 测试。 app/login-form.component.ts 1 2 3 4 5 !-- ... --  div [ hidden ]= \"!password.hasError('needsExclamation')\"  Your password must have an exclamation mark! / div  !-- ... -- View Example 预定义参数 有一个自定义验证器来检查感叹号可能是有帮助的，但如果你需要检查一些其他形式的标点符号怎么办？ 你可能需要一遍又一遍地写做相同的事情。 考虑前面的例子 Validators.minLength(5) 。 如果验证器只是一个函数，它们如何允许一个参数来控制长度？ 简单，真的。 这不是Angular或TypeScript的一个戏法，它是简单的JavaScript闭包。 1 2 3 4 5 function minLength ( minimum )  return function ( input )  return input.value.length = minimum ? null :  minLength: true ; ;  假设你有一个函数，它接受一个“最小”参数并返回另一个函数。 从内部定义和返回的函数成为验证器。 闭包引用允许您记住最终调用验证器时的最小值。 让我们将这种思路应用到 PunctuationValidator 。 app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function hasPunctuation ( punctuation: string , errorType: string )  return function ( input: FormControl )  return input.value.indexOf(punctuation) = 0 ? null :  [errorType]: true ; ;  // ... this .password = new FormControl( '' , [ Validators.required, hasPunctuation( '&amp;' , 'ampersandRequired' ) ]); app/login-form.component.html 1 2 3 4 5 !-- ... --  div [ hidden ]= \"!password.hasError('ampersandRequired')\"  You must have an &amp;amp; in your password. / div  !-- ... -- View Example 使用其他输入验证输入 记住前面提到的：输入可以通过 .root 访问他们的父上下文。 因此，复杂的验证可以通过 .root 在表单上获取。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function duplicatePassword ( input: FormControl )  if (!input.root || !input.root.controls)  return null ;  const exactMatch = input.root.controls.password === input.value; return exactMatch ? null :  mismatchedPassword: true ;  // ... this .duplicatePassword = new FormControl( '' , [ Validators.required, duplicatePassword ]); View Example"},"Form/reactive-forms_custom_validation.html#自定义验证响应式表单":{"title":"&#x81EA;&#x5B9A;&#x4E49;&#x9A8C;&#x8BC1;&#x54CD;&#x5E94;&#x5F0F;&#x8868;&#x5355;","path":"\\Form\\reactive-forms_custom_validation.html#自定义验证响应式表单","body":"&#x5185;&#x7F6E;&#x9A8C;&#x8BC1;&#x5668;&#x975E;&#x5E38;&#x6709;&#x7528;&#xFF0C;&#x80FD;&#x591F;&#x5F15;&#x5165;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x9A8C;&#x8BC1;&#x65B9;&#x5F0F;&#x3002; Angular 2&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x4EE5;&#x5F88;&#x8F7B;&#x677E;&#x5730;&#x505A;&#x5230;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x767B;&#x5F55;&#x8868;&#x5355;&#xFF0C;&#x4F46;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x8FD8;&#x8981;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;&#x5BC6;&#x7801;&#x5728;&#x5176;&#x4E2D;&#x67D0;&#x5904;&#x6709;&#x611F;&#x53F9;&#x53F7;&#x3002; app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 function hasExclamationMark ( input: FormControl ) { const hasExclamation = input.value.indexOf( &apos;!&apos; ) = 0 ; return hasExclamation ? null : { needsExclamation: true }; } // ... this .password = new FormControl( &apos;&apos; , [ Validators.required, hasExclamationMark ]); &#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x51FD;&#x6570;&#x63A5;&#x53D7; FormControl &#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;null&#x5982;&#x679C;&#x4E00;&#x5207;&#x90FD;&#x5F88;&#x597D;&#x3002; &#x5982;&#x679C;&#x6D4B;&#x8BD5;&#x5931;&#x8D25;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x4EFB;&#x610F;&#x547D;&#x540D;&#x5C5E;&#x6027;&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x5C5E;&#x6027;&#x540D;&#x79F0;&#x5C06;&#x7528;&#x4E8E; .hasError() &#x6D4B;&#x8BD5;&#x3002; app/login-form.component.ts 1 2 3 4 5 !-- ... --  div [ hidden ]= !password.hasError(&apos;needsExclamation&apos;)  Your password must have an exclamation mark! / div  !-- ... -- View Example &#x9884;&#x5B9A;&#x4E49;&#x53C2;&#x6570; &#x6709;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x9A8C;&#x8BC1;&#x5668;&#x6765;&#x68C0;&#x67E5;&#x611F;&#x53F9;&#x53F7;&#x53EF;&#x80FD;&#x662F;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x68C0;&#x67E5;&#x4E00;&#x4E9B;&#x5176;&#x4ED6;&#x5F62;&#x5F0F;&#x7684;&#x6807;&#x70B9;&#x7B26;&#x53F7;&#x600E;&#x4E48;&#x529E;&#xFF1F; &#x4F60;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4E00;&#x904D;&#x53C8;&#x4E00;&#x904D;&#x5730;&#x5199;&#x505A;&#x76F8;&#x540C;&#x7684;&#x4E8B;&#x60C5;&#x3002; &#x8003;&#x8651;&#x524D;&#x9762;&#x7684;&#x4F8B;&#x5B50; Validators.minLength(5) &#x3002; &#x5982;&#x679C;&#x9A8C;&#x8BC1;&#x5668;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4EEC;&#x5982;&#x4F55;&#x5141;&#x8BB8;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x6765;&#x63A7;&#x5236;&#x957F;&#x5EA6;&#xFF1F; &#x7B80;&#x5355;&#xFF0C;&#x771F;&#x7684;&#x3002; &#x8FD9;&#x4E0D;&#x662F;Angular&#x6216;TypeScript&#x7684;&#x4E00;&#x4E2A;&#x620F;&#x6CD5;&#xFF0C;&#x5B83;&#x662F;&#x7B80;&#x5355;&#x7684;JavaScript&#x95ED;&#x5305;&#x3002; 1 2 3 4 5 function minLength ( minimum ) { return function ( input ) { return input.value.length = minimum ? null : { minLength: true }; }; } &#x5047;&#x8BBE;&#x4F60;&#x6709;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x201C;&#x6700;&#x5C0F;&#x201D;&#x53C2;&#x6570;&#x5E76;&#x8FD4;&#x56DE;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x3002; &#x4ECE;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x548C;&#x8FD4;&#x56DE;&#x7684;&#x51FD;&#x6570;&#x6210;&#x4E3A;&#x9A8C;&#x8BC1;&#x5668;&#x3002; &#x95ED;&#x5305;&#x5F15;&#x7528;&#x5141;&#x8BB8;&#x60A8;&#x8BB0;&#x4F4F;&#x6700;&#x7EC8;&#x8C03;&#x7528;&#x9A8C;&#x8BC1;&#x5668;&#x65F6;&#x7684;&#x6700;&#x5C0F;&#x503C;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x5C06;&#x8FD9;&#x79CD;&#x601D;&#x8DEF;&#x5E94;&#x7528;&#x5230; PunctuationValidator &#x3002; app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function hasPunctuation ( punctuation: string , errorType: string ) { return function ( input: FormControl ) { return input.value.indexOf(punctuation) = 0 ? null : { [errorType]: true }; }; } // ... this .password = new FormControl( &apos;&apos; , [ Validators.required, hasPunctuation( &apos;&amp;&apos; , &apos;ampersandRequired&apos; ) ]); app/login-form.component.html 1 2 3 4 5 !-- ... --  div [ hidden ]= !password.hasError(&apos;ampersandRequired&apos;)  You must have an &amp;amp; in your password. / div  !-- ... -- View Example &#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x8F93;&#x5165;&#x9A8C;&#x8BC1;&#x8F93;&#x5165; &#x8BB0;&#x4F4F;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;&#xFF1A;&#x8F93;&#x5165;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; .root &#x8BBF;&#x95EE;&#x4ED6;&#x4EEC;&#x7684;&#x7236;&#x4E0A;&#x4E0B;&#x6587;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x590D;&#x6742;&#x7684;&#x9A8C;&#x8BC1;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; .root &#x5728;&#x8868;&#x5355;&#x4E0A;&#x83B7;&#x53D6;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 function duplicatePassword ( input: FormControl ) { if (!input.root || !input.root.controls) { return null ; } const exactMatch = input.root.controls.password === input.value; return exactMatch ? null : { mismatchedPassword: true }; } // ... this .duplicatePassword = new FormControl( &apos;&apos; , [ Validators.required, duplicatePassword ]); View Example"},"Form/reactive-forms_validation.html":{"title":"","path":"\\Form\\reactive-forms_validation.html","body":"验证响应式表单 从上一个登录表单构建，我们可以快速轻松地添加验证。 Angular 2提供了开箱即用的许多验证器。 它们可以与其余的依赖关系一起导入。 app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import  Component  from '@angular/core' ; import  Validators, FormBuilder, FormControl  from '@angular/forms' ; @Component ( // ... ) export class AppComponent  username = new FormControl( '' , [ Validators.required, Validators.minLength( 5 ) ]); password = new FormControl( '' , [Validators.required]); loginForm: FormGroup = this .builder.group( username: this .username, password: this .password ); constructor ( private builder: FormBuilder )   login ()  console .log( this .loginForm.value); // Attempt Logging in...   app/login-form.component.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  form [ formGroup ]= \"loginForm\" ( ngSubmit )= \"login()\"   div   label for = \"username\"  username / label   input type = \"text\" name = \"username\" id = \"username\" [ formControl ]= \"username\"   div [ hidden ]= \"username.valid || username.untouched\"   div  The following problems have been found with the username: / div   div [ hidden ]= \"!username.hasError('minlength')\"  Username can not be shorter than 5 characters. / div   div [ hidden ]= \"!username.hasError('required')\"  Username is required. / div  / div  / div   div   label for = \"password\"  password / label   input type = \"password\" name = \"password\" id = \"password\" [ formControl ]= \"password\"   div [ hidden ]= \"password.valid || password.untouched\"   div  The following problems have been found with the password: / div   div [ hidden ]= \"!password.hasError('required')\"  The password is required. / div  / div  / div   button type = \"submit\" [ disabled ]= \"!loginForm.valid\"  Log In / button  / form  注意，我们对字段和表单本身添加了相当稳健的验证，只使用内置验证器和一些模板逻辑。 View Example 我们使用 .valid 和 .untouched 来确定是否需要显示错误，而字段是必需的，没有理由告诉用户如果字段尚未被访问，该值是错误的。 对于内置验证，我们在表单元素上调用 .hasError() ，我们传递一个字符串，它表示我们包含的验证器函数。 仅当此测试返回true时，才会显示错误消息。"},"Form/reactive-forms_validation.html#验证响应式表单":{"title":"&#x9A8C;&#x8BC1;&#x54CD;&#x5E94;&#x5F0F;&#x8868;&#x5355;","path":"\\Form\\reactive-forms_validation.html#验证响应式表单","body":"&#x4ECE;&#x4E0A;&#x4E00;&#x4E2A;&#x767B;&#x5F55;&#x8868;&#x5355;&#x6784;&#x5EFA;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x8F7B;&#x677E;&#x5730;&#x6DFB;&#x52A0;&#x9A8C;&#x8BC1;&#x3002; Angular 2&#x63D0;&#x4F9B;&#x4E86;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#x8BB8;&#x591A;&#x9A8C;&#x8BC1;&#x5668;&#x3002; &#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x4E0E;&#x5176;&#x4F59;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x4E00;&#x8D77;&#x5BFC;&#x5165;&#x3002; app/login-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import { Component } from &apos;@angular/core&apos; ; import { Validators, FormBuilder, FormControl } from &apos;@angular/forms&apos; ; @Component ({ // ... }) export class AppComponent { username = new FormControl( &apos;&apos; , [ Validators.required, Validators.minLength( 5 ) ]); password = new FormControl( &apos;&apos; , [Validators.required]); loginForm: FormGroup = this .builder.group({ username: this .username, password: this .password }); constructor ( private builder: FormBuilder ) { } login () { console .log( this .loginForm.value); // Attempt Logging in... } } app/login-form.component.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  form [ formGroup ]= loginForm ( ngSubmit )= login()   div   label for = username  username / label   input type = text name = username id = username [ formControl ]= username   div [ hidden ]= username.valid || username.untouched   div  The following problems have been found with the username: / div   div [ hidden ]= !username.hasError(&apos;minlength&apos;)  Username can not be shorter than 5 characters. / div   div [ hidden ]= !username.hasError(&apos;required&apos;)  Username is required. / div  / div  / div   div   label for = password  password / label   input type = password name = password id = password [ formControl ]= password   div [ hidden ]= password.valid || password.untouched   div  The following problems have been found with the password: / div   div [ hidden ]= !password.hasError(&apos;required&apos;)  The password is required. / div  / div  / div   button type = submit [ disabled ]= !loginForm.valid  Log In / button  / form  &#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x5BF9;&#x5B57;&#x6BB5;&#x548C;&#x8868;&#x5355;&#x672C;&#x8EAB;&#x6DFB;&#x52A0;&#x4E86;&#x76F8;&#x5F53;&#x7A33;&#x5065;&#x7684;&#x9A8C;&#x8BC1;&#xFF0C;&#x53EA;&#x4F7F;&#x7528;&#x5185;&#x7F6E;&#x9A8C;&#x8BC1;&#x5668;&#x548C;&#x4E00;&#x4E9B;&#x6A21;&#x677F;&#x903B;&#x8F91;&#x3002; View Example &#x6211;&#x4EEC;&#x4F7F;&#x7528; .valid &#x548C; .untouched &#x6765;&#x786E;&#x5B9A;&#x662F;&#x5426;&#x9700;&#x8981;&#x663E;&#x793A;&#x9519;&#x8BEF;&#xFF0C;&#x800C;&#x5B57;&#x6BB5;&#x662F;&#x5FC5;&#x9700;&#x7684;&#xFF0C;&#x6CA1;&#x6709;&#x7406;&#x7531;&#x544A;&#x8BC9;&#x7528;&#x6237;&#x5982;&#x679C;&#x5B57;&#x6BB5;&#x5C1A;&#x672A;&#x88AB;&#x8BBF;&#x95EE;&#xFF0C;&#x8BE5;&#x503C;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x3002; &#x5BF9;&#x4E8E;&#x5185;&#x7F6E;&#x9A8C;&#x8BC1;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8868;&#x5355;&#x5143;&#x7D20;&#x4E0A;&#x8C03;&#x7528; .hasError() &#xFF0C;&#x6211;&#x4EEC;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x6211;&#x4EEC;&#x5305;&#x542B;&#x7684;&#x9A8C;&#x8BC1;&#x5668;&#x51FD;&#x6570;&#x3002; &#x4EC5;&#x5F53;&#x6B64;&#x6D4B;&#x8BD5;&#x8FD4;&#x56DE;true&#x65F6;&#xFF0C;&#x624D;&#x4F1A;&#x663E;&#x793A;&#x9519;&#x8BEF;&#x6D88;&#x606F;&#x3002;"},"Form/template-driven_forms.html":{"title":"","path":"\\Form\\template-driven_forms.html","body":"模版驱动表单 在Angular 2中构建表单最直接的方法是利用为您提供的指令。 首先，考虑一个典型的表单： 1 2 3 4 5 6 7 8 9  form method = \"POST\" action = \"/register\" id = \"signup-form\"   label for = \"email\"  Email / label   input type = \"text\" name = \"email\" id = \"email\"   label for = \"password\"  Password / label   input type = \"password\" name = \"password\" id = \"password\"   button type = \"submit\"  Sign Up / button  / form  Angular 2已经为你提供了一个 form 指令，并形成在封面下操作的相关指令，如输入等。 对于基本的实现，我们只需要添加一些属性，并确保我们的组件知道如何处理数据。 index.html 1  signup-form  Loading... / signup-form  signup-form.component.html 1 2 3 4 5 6 7 8 9  form # signupForm = \"ngForm\" ( ngSubmit )= \"registerUser(signupForm)\"   label for = \"email\"  Email / label   input type = \"text\" name = \"email\" id = \"email\" ngModel   label for = \"password\"  Password / label   input type = \"password\" name = \"password\" id = \"password\" ngModel   button type = \"submit\"  Sign Up / button  / form  signup-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import  Component  from '@angular/core' ; import  NgForm  from '@angular/forms' ; @Component ( selector: 'app-signup-form' , templateUrl: 'app/signup-form.component.html' , ) export class SignupFormComponent  registerUser(form: NgForm)  console .log(form.value); // email: '...', password: '...' // ...  "},"Form/template-driven_forms.html#模版驱动表单":{"title":"&#x6A21;&#x7248;&#x9A71;&#x52A8;&#x8868;&#x5355;","path":"\\Form\\template-driven_forms.html#模版驱动表单","body":"&#x5728;Angular 2&#x4E2D;&#x6784;&#x5EFA;&#x8868;&#x5355;&#x6700;&#x76F4;&#x63A5;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5229;&#x7528;&#x4E3A;&#x60A8;&#x63D0;&#x4F9B;&#x7684;&#x6307;&#x4EE4;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x8003;&#x8651;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x8868;&#x5355;&#xFF1A; 1 2 3 4 5 6 7 8 9  form method = POST action = /register id = signup-form   label for = email  Email / label   input type = text name = email id = email   label for = password  Password / label   input type = password name = password id = password   button type = submit  Sign Up / button  / form  Angular 2&#x5DF2;&#x7ECF;&#x4E3A;&#x4F60;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A; form &#x6307;&#x4EE4;&#xFF0C;&#x5E76;&#x5F62;&#x6210;&#x5728;&#x5C01;&#x9762;&#x4E0B;&#x64CD;&#x4F5C;&#x7684;&#x76F8;&#x5173;&#x6307;&#x4EE4;&#xFF0C;&#x5982;&#x8F93;&#x5165;&#x7B49;&#x3002; &#x5BF9;&#x4E8E;&#x57FA;&#x672C;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x5C5E;&#x6027;&#xFF0C;&#x5E76;&#x786E;&#x4FDD;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x5904;&#x7406;&#x6570;&#x636E;&#x3002; index.html 1  signup-form  Loading... / signup-form  signup-form.component.html 1 2 3 4 5 6 7 8 9  form # signupForm = ngForm ( ngSubmit )= registerUser(signupForm)   label for = email  Email / label   input type = text name = email id = email ngModel   label for = password  Password / label   input type = password name = password id = password ngModel   button type = submit  Sign Up / button  / form  signup-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import { Component } from &apos;@angular/core&apos; ; import { NgForm } from &apos;@angular/forms&apos; ; @Component ({ selector: &apos;app-signup-form&apos; , templateUrl: &apos;app/signup-form.component.html&apos; , }) export class SignupFormComponent { registerUser(form: NgForm) { console .log(form.value); // {email: &apos;...&apos;, password: &apos;...&apos;} // ... } }"},"Form/template-model-binding.html":{"title":"","path":"\\Form\\template-model-binding.html","body":"使用 Model 绑定 单向绑定 如果您需要具有默认值的表单，可以开始使用ngModel的值绑定语法。 app/signup-form.component.html 1 2 3 4 5 6 7 8 9 10  form # signupForm = \"ngForm\" ( ngSubmit )= register(signupForm)   label for = \"username\"  Username / label   input type = \"text\" name = \"username\" id = \"username\" [ ngModel ]= \"generatedUser\"   label for = \"email\"  Email / label   input type = \"email\" name = \"email\" id = \"email\" ngModel   button type = \"submit\"  Sign Up / button  / form  app/signup-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import  Component  from '@angular/core' ; import  NgForm  from '@angular/forms' ; // ... @Component ( /* ... */ ) export class SignupForm  generatedUser: string = generateUniqueUserID(); register(form: NgForm)  console .log(form.value); // ...   双向绑定 虽然Angular 2默认情况下假定单向绑定，但如果需要，双向绑定仍然可用。 为了能够访问模板驱动表单中的双向绑定，请使用“Banana-Box”语法 ([(ngModel)] =propertyName) 。请务必声明组件上需要的所有属性。 1 2 3 4 5 6 7 8 9 10 form #signupForm= \"ngForm\" (ngSubmit)=register(signupForm) label for = \"username\" Username /label input type=\"text\" name=\"username\" id=\"username\" [(ngModel)]=\"username\" label for=\"email\"Email/ label input type = \"email\" name= \"email\" id= \"email\" [(ngModel)]= \"email\"  button type = \"submit\" Sign Up /button / form 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import  Component  from '@angular/core' ; import  NgForm  from '@angular/forms' ; // ... @Component ( /* ... */ ) export class SignUpForm  username: string = generateUniqueUserID(); email: string = '' ; register(form: NgForm)  console .log(form.value.username); console .log( this .username); // ...  "},"Form/template-model-binding.html#使用-Model-绑定":{"title":"&#x4F7F;&#x7528; Model &#x7ED1;&#x5B9A;","path":"\\Form\\template-model-binding.html#使用-Model-绑定","body":"&#x5355;&#x5411;&#x7ED1;&#x5B9A; &#x5982;&#x679C;&#x60A8;&#x9700;&#x8981;&#x5177;&#x6709;&#x9ED8;&#x8BA4;&#x503C;&#x7684;&#x8868;&#x5355;&#xFF0C;&#x53EF;&#x4EE5;&#x5F00;&#x59CB;&#x4F7F;&#x7528;ngModel&#x7684;&#x503C;&#x7ED1;&#x5B9A;&#x8BED;&#x6CD5;&#x3002; app/signup-form.component.html 1 2 3 4 5 6 7 8 9 10  form # signupForm = ngForm ( ngSubmit )= register(signupForm)   label for = username  Username / label   input type = text name = username id = username [ ngModel ]= generatedUser   label for = email  Email / label   input type = email name = email id = email ngModel   button type = submit  Sign Up / button  / form  app/signup-form.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import { Component } from &apos;@angular/core&apos; ; import { NgForm } from &apos;@angular/forms&apos; ; // ... @Component ({ /* ... */ }) export class SignupForm { generatedUser: string = generateUniqueUserID(); register(form: NgForm) { console .log(form.value); // ... } } &#x53CC;&#x5411;&#x7ED1;&#x5B9A; &#x867D;&#x7136;Angular 2&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x5047;&#x5B9A;&#x5355;&#x5411;&#x7ED1;&#x5B9A;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x9700;&#x8981;&#xFF0C;&#x53CC;&#x5411;&#x7ED1;&#x5B9A;&#x4ECD;&#x7136;&#x53EF;&#x7528;&#x3002; &#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x8BBF;&#x95EE;&#x6A21;&#x677F;&#x9A71;&#x52A8;&#x8868;&#x5355;&#x4E2D;&#x7684;&#x53CC;&#x5411;&#x7ED1;&#x5B9A;&#xFF0C;&#x8BF7;&#x4F7F;&#x7528;&#x201C;Banana-Box&#x201D;&#x8BED;&#x6CD5; ([(ngModel)] =propertyName) &#x3002;&#x8BF7;&#x52A1;&#x5FC5;&#x58F0;&#x660E;&#x7EC4;&#x4EF6;&#x4E0A;&#x9700;&#x8981;&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#x3002; 1 2 3 4 5 6 7 8 9 10 form #signupForm= ngForm (ngSubmit)=register(signupForm) label for = username Username /label input type=text name=username id=username [(ngModel)]=username label for=emailEmail/ label input type = email name= email id= email [(ngModel)]= email  button type = submit Sign Up /button / form 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import { Component } from &apos;@angular/core&apos; ; import { NgForm } from &apos;@angular/forms&apos; ; // ... @Component ({ /* ... */ }) export class SignUpForm { username: string = generateUniqueUserID(); email: string = &apos;&apos; ; register(form: NgForm) { console .log(form.value.username); console .log( this .username); // ... } }"},"Form/validating_forms.html":{"title":"","path":"\\Form\\validating_forms.html","body":"验证模板驱动的表单 验证 验证模板驱动的表单，下面是使用HTML5的做法： 1 2 3 4 5 6 7 8 9 10 11 !-- a required field --  input type = \"text\" required  !-- an optional field of a specific length --  input type = \"text\" pattern = \".3,8\"  !-- a non-optional field of specific length --  input type = \"text\" pattern = \".3,8\" required  !-- alphanumeric field of specific length --  input type = \"text\" pattern = \"[A-Za-z0-9]0,5\"  请注意， pattern 属性是JavaScript RegEx语法的一个不太强大的版本。 还有其他HTML5属性，可以学习和应用于各种类型的输入; 然而在大多数情况下，它们作为上限和下限，防止添加或删除额外信息。 1 2 !-- a field which will accept no more than 5 characters --  input type = \"text\" maxlength = \"5\"  在编写模板驱动表单时，可以使用这两种方法之一。 关注用户体验：在某些情况下，防止意外输入是有意义的，在其他情况下，允许不受限制的输入是有意义的，但提供类似计数器的东西以显示限制。"},"Form/validating_forms.html#验证模板驱动的表单":{"title":"&#x9A8C;&#x8BC1;&#x6A21;&#x677F;&#x9A71;&#x52A8;&#x7684;&#x8868;&#x5355;","path":"\\Form\\validating_forms.html#验证模板驱动的表单","body":"&#x9A8C;&#x8BC1; &#x9A8C;&#x8BC1;&#x6A21;&#x677F;&#x9A71;&#x52A8;&#x7684;&#x8868;&#x5355;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x4F7F;&#x7528;HTML5&#x7684;&#x505A;&#x6CD5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 !-- a required field --  input type = text required  !-- an optional field of a specific length --  input type = text pattern = .{3,8}  !-- a non-optional field of specific length --  input type = text pattern = .{3,8} required  !-- alphanumeric field of specific length --  input type = text pattern = [A-Za-z0-9]{0,5}  &#x8BF7;&#x6CE8;&#x610F;&#xFF0C; pattern &#x5C5E;&#x6027;&#x662F;JavaScript RegEx&#x8BED;&#x6CD5;&#x7684;&#x4E00;&#x4E2A;&#x4E0D;&#x592A;&#x5F3A;&#x5927;&#x7684;&#x7248;&#x672C;&#x3002; &#x8FD8;&#x6709;&#x5176;&#x4ED6;HTML5&#x5C5E;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x5B66;&#x4E60;&#x548C;&#x5E94;&#x7528;&#x4E8E;&#x5404;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x8F93;&#x5165;; &#x7136;&#x800C;&#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5B83;&#x4EEC;&#x4F5C;&#x4E3A;&#x4E0A;&#x9650;&#x548C;&#x4E0B;&#x9650;&#xFF0C;&#x9632;&#x6B62;&#x6DFB;&#x52A0;&#x6216;&#x5220;&#x9664;&#x989D;&#x5916;&#x4FE1;&#x606F;&#x3002; 1 2 !-- a field which will accept no more than 5 characters --  input type = text maxlength = 5  &#x5728;&#x7F16;&#x5199;&#x6A21;&#x677F;&#x9A71;&#x52A8;&#x8868;&#x5355;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x4E4B;&#x4E00;&#x3002; &#x5173;&#x6CE8;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF1A;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9632;&#x6B62;&#x610F;&#x5916;&#x8F93;&#x5165;&#x662F;&#x6709;&#x610F;&#x4E49;&#x7684;&#xFF0C;&#x5728;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5141;&#x8BB8;&#x4E0D;&#x53D7;&#x9650;&#x5236;&#x7684;&#x8F93;&#x5165;&#x662F;&#x6709;&#x610F;&#x4E49;&#x7684;&#xFF0C;&#x4F46;&#x63D0;&#x4F9B;&#x7C7B;&#x4F3C;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x4E1C;&#x897F;&#x4EE5;&#x663E;&#x793A;&#x9650;&#x5236;&#x3002;"},"Form/visual_cues_for_users.html":{"title":"","path":"\\Form\\visual_cues_for_users.html","body":"用户的视觉提示 HTML5为其输入字段提供 :invalid 和 :valid 伪选择器。 1 2 3 4 5 6 7 input [type=\"text\"] :valid  border : 2px solid green;  input [type=\"text\"] :invalid  border : 2px solid red;  不幸的是，这个系统是作用有限，并且将需要更多的操作，才能处理复杂的形式或用户行为。 Angular 2不是编写额外的代码，而是创建和实施自己的CSS类，以管理这些行为，为您提供了几个样式类，已经可以在inputs上使用。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* field value is valid */ .ng-valid  /* field value is invalid */ .ng-invalid  /* field has not been clicked in, tapped on, or tabbed over */ .ng-untouched  /* field has been previously entered */ .ng-touched  /* field value is unchanged from the default value */ .ng-pristine  /* field value has been modified from the default */ .ng-dirty  记住三对状态： valid / invalid untouched / touched pristine / dirty 这些对可以在您的CSS中使用许多组合，以根据它们代表的三个独立的标志来改变样式。 当输入的状态改变时，Angular将在每个输入上的对之间切换。"},"Form/visual_cues_for_users.html#用户的视觉提示":{"title":"&#x7528;&#x6237;&#x7684;&#x89C6;&#x89C9;&#x63D0;&#x793A;","path":"\\Form\\visual_cues_for_users.html#用户的视觉提示","body":"HTML5&#x4E3A;&#x5176;&#x8F93;&#x5165;&#x5B57;&#x6BB5;&#x63D0;&#x4F9B; :invalid &#x548C; :valid &#x4F2A;&#x9009;&#x62E9;&#x5668;&#x3002; 1 2 3 4 5 6 7 input [type=text] :valid { border : 2px solid green; } input [type=text] :invalid { border : 2px solid red; } &#x4E0D;&#x5E78;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E2A;&#x7CFB;&#x7EDF;&#x662F;&#x4F5C;&#x7528;&#x6709;&#x9650;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x9700;&#x8981;&#x66F4;&#x591A;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x624D;&#x80FD;&#x5904;&#x7406;&#x590D;&#x6742;&#x7684;&#x5F62;&#x5F0F;&#x6216;&#x7528;&#x6237;&#x884C;&#x4E3A;&#x3002; Angular 2&#x4E0D;&#x662F;&#x7F16;&#x5199;&#x989D;&#x5916;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x800C;&#x662F;&#x521B;&#x5EFA;&#x548C;&#x5B9E;&#x65BD;&#x81EA;&#x5DF1;&#x7684;CSS&#x7C7B;&#xFF0C;&#x4EE5;&#x7BA1;&#x7406;&#x8FD9;&#x4E9B;&#x884C;&#x4E3A;&#xFF0C;&#x4E3A;&#x60A8;&#x63D0;&#x4F9B;&#x4E86;&#x51E0;&#x4E2A;&#x6837;&#x5F0F;&#x7C7B;&#xFF0C;&#x5DF2;&#x7ECF;&#x53EF;&#x4EE5;&#x5728;inputs&#x4E0A;&#x4F7F;&#x7528;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* field value is valid */ .ng-valid {} /* field value is invalid */ .ng-invalid {} /* field has not been clicked in, tapped on, or tabbed over */ .ng-untouched {} /* field has been previously entered */ .ng-touched {} /* field value is unchanged from the default value */ .ng-pristine {} /* field value has been modified from the default */ .ng-dirty {} &#x8BB0;&#x4F4F;&#x4E09;&#x5BF9;&#x72B6;&#x6001;&#xFF1A; valid / invalid untouched / touched pristine / dirty &#x8FD9;&#x4E9B;&#x5BF9;&#x53EF;&#x4EE5;&#x5728;&#x60A8;&#x7684;CSS&#x4E2D;&#x4F7F;&#x7528;&#x8BB8;&#x591A;&#x7EC4;&#x5408;&#xFF0C;&#x4EE5;&#x6839;&#x636E;&#x5B83;&#x4EEC;&#x4EE3;&#x8868;&#x7684;&#x4E09;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x6807;&#x5FD7;&#x6765;&#x6539;&#x53D8;&#x6837;&#x5F0F;&#x3002; &#x5F53;&#x8F93;&#x5165;&#x7684;&#x72B6;&#x6001;&#x6539;&#x53D8;&#x65F6;&#xFF0C;Angular&#x5C06;&#x5728;&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x4E0A;&#x7684;&#x5BF9;&#x4E4B;&#x95F4;&#x5207;&#x6362;&#x3002;"},"Http/cancel_request.html":{"title":"","path":"\\Http\\cancel_request.html","body":"#取消请求 取消HTTP请求是常见的要求。 例如，您可以有一个请求队列，其中一个新请求取代一个待处理请求，并且该待处理请求需要取消。 要取消请求，我们称其订阅的 unsubscribe 函数。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Component ( /* ... */ ) export class MyApp  /* ... */ search()  const request = this .searchService.search( this .searchField.value) .subscribe( (result) =  this .result = result.artists.items; , (err) =  this .errorMessage = err.message; , () =  console .log( 'Completed' );  ); request.unsubscribe();   View Example"},"Http/catching-rejections.html":{"title":"","path":"\\Http\\catching-rejections.html","body":"#捕获异常 要捕获拒绝，我们使用订阅者的 error 和 complete 的回调。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import  HttpClient  from \"@angular/common/http\" ; import  Injectable  from '@angular/core' ; @Injectable () export class AuthService  constructor ( private http: HttpClient )  login(username, password)  const payload =  username: username, password: password ; this .http.post( ` $ BASE_URL  /auth/login` , payload) .catch( error =  console .error( \"error catched\" , error); return Observable.of(description: \"Error Value Emitted\" ); ) .subscribe( authData = this .storeToken(authData.id_token), (err) = console .error(err), () = console .log( 'Authentication Complete' ) );  "},"Http/http.html":{"title":"","path":"\\Http\\http.html","body":"#HTTP 为了从我们的Angular应用程序开始进行HTTP调用，我们需要从 @angular/common/http 中导入 HTTP 模块。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import HttpClientModule from '@angular/common/http' ; @NgModule ( declarations: [ AppComponent ], imports: [ BrowserModule, HttpClientModule ], providers: [], bootstrap: [AppComponent] ) export class AppModule  ⚡️HttpClient 是 Angular2 HTTP 的升级版，在4.3版本引入。默认解析JSON，所以我们不需要再进行显式的解析。即我们不需要再使用以下代码： 1 http.get(url).map( res = res.json()).subscribe(...)"},"Http/interceptor.html":{"title":"","path":"\\Http\\interceptor.html","body":"Http 拦截器 大多数拦截器检查请求的方式，并将（可能已更改的）请求转发给实现接口 handle() 的 next 对象的方法 HttpHandler 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import Injectable from \"@angular/core\" ; import HttpEvent, HttpHandler, HttpInterceptor from \"@angular/common/http\" ; import HttpRequest from \"@angular/common/http\" ; import Observable from \"rxjs/Observable\" ; @Injectable () export class AuthInterceptor implements HttpInterceptor  constructor ( private authService: AuthService )   intercept(req: HttpRequest any , next: HttpHandler): ObservableHttpEvent any   const clonedRequest = req.clone( headers: req.headers.set( 'X-CustomAuthHeader' , authService.getToken()) ); console .log( \"new headers\" , clonedRequest.headers.keys()); return next.handle(clonedRequest);   配置拦截器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @NgModule ( declarations: [ AppComponent ], imports: [ BrowserModule, HttpClientModule ], providers: [ [  provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true  ] ], bootstrap: [AppComponent] ) export class AppModule   一个改变HTTP头的拦截器可以用于许多不同的操作，包括： 认证/授权 缓存行为; 例如， If-Modified-Since XSRF保护"},"Http/interceptor.html#Http-拦截器":{"title":"Http &#x62E6;&#x622A;&#x5668;","path":"\\Http\\interceptor.html#Http-拦截器","body":"&#x5927;&#x591A;&#x6570;&#x62E6;&#x622A;&#x5668;&#x68C0;&#x67E5;&#x8BF7;&#x6C42;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5E76;&#x5C06;&#xFF08;&#x53EF;&#x80FD;&#x5DF2;&#x66F4;&#x6539;&#x7684;&#xFF09;&#x8BF7;&#x6C42;&#x8F6C;&#x53D1;&#x7ED9;&#x5B9E;&#x73B0;&#x63A5;&#x53E3; handle() &#x7684; next &#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5; HttpHandler &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import {Injectable} from @angular/core ; import {HttpEvent, HttpHandler, HttpInterceptor} from @angular/common/http ; import {HttpRequest} from @angular/common/http ; import {Observable} from rxjs/Observable ; @Injectable () export class AuthInterceptor implements HttpInterceptor { constructor ( private authService: AuthService ) { } intercept(req: HttpRequest any , next: HttpHandler): ObservableHttpEvent any  { const clonedRequest = req.clone({ headers: req.headers.set( &apos;X-CustomAuthHeader&apos; , authService.getToken()) }); console .log( new headers , clonedRequest.headers.keys()); return next.handle(clonedRequest); } } &#x914D;&#x7F6E;&#x62E6;&#x622A;&#x5668; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @NgModule ({ declarations: [ AppComponent ], imports: [ BrowserModule, HttpClientModule ], providers: [ [ { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true } ] ], bootstrap: [AppComponent] }) export class AppModule { } &#x4E00;&#x4E2A;&#x6539;&#x53D8;HTTP&#x5934;&#x7684;&#x62E6;&#x622A;&#x5668;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x8BB8;&#x591A;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5305;&#x62EC;&#xFF1A; &#x8BA4;&#x8BC1;/&#x6388;&#x6743; &#x7F13;&#x5B58;&#x884C;&#x4E3A;; &#x4F8B;&#x5982;&#xFF0C; If-Modified-Since XSRF&#x4FDD;&#x62A4;"},"Http/http_with_rxjs.html":{"title":"","path":"\\Http\\http_with_rxjs.html","body":"使用RxJS操作符实现更多高级特性 shareReplay 操作符避免重复请求 forkJoin 并行发送多个请求，然后合并返回值 retry 实现错误重试"},"Http/http_with_rxjs.html#使用RxJS操作符实现更多高级特性":{"title":"&#x4F7F;&#x7528;RxJS&#x64CD;&#x4F5C;&#x7B26;&#x5B9E;&#x73B0;&#x66F4;&#x591A;&#x9AD8;&#x7EA7;&#x7279;&#x6027;","path":"\\Http\\http_with_rxjs.html#使用RxJS操作符实现更多高级特性","body":"shareReplay &#x64CD;&#x4F5C;&#x7B26;&#x907F;&#x514D;&#x91CD;&#x590D;&#x8BF7;&#x6C42; forkJoin &#x5E76;&#x884C;&#x53D1;&#x9001;&#x591A;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x7136;&#x540E;&#x5408;&#x5E76;&#x8FD4;&#x56DE;&#x503C; retry &#x5B9E;&#x73B0;&#x9519;&#x8BEF;&#x91CD;&#x8BD5;"},"Http/making_requests.html":{"title":"","path":"\\Http\\making_requests.html","body":"#进行HTTP请求 要发出HTTP请求，我们将使用Http服务。在本示例中，我们创建了一个 SearchService 以与Spotify API进行交互。 我们通过 HttpHeaders 设置HTTP头，HttpParams设置请求参数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  HttpClient, HttpParams  from \"@angular/common/http\" ; import  Injectable  from '@angular/core' ; import 'rxjs/add/operator/map' ; @Injectable () export class SearchService  constructor ( private http: HttpClient )  search(term: string )  const params = new HttpParams() .set( 'q' , term) .set( 'type' , \"artist\" ); return this .http .get( 'https://api.spotify.com/v1/search' ,params) .map() .subscribe()   这里我们做一个HTTP GET请求，它作为一个可观察者暴露给我们。 你会注意到 .map 操作符被链接到 .subscribe 。 除了 get ，还有 post , put , patch 和 delete 方法，他们都返回observables。"},"Http/progress.html":{"title":"","path":"\\Http\\progress.html","body":"HTTP 进度事件 将 reportProgress 选项设置为true，可以对进度事件进行跟踪。 ⚠️每个进度事件都会触发更改检测。 进度事件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 longRequest()  const request = new HttpRequest( \"POST\" , \"/api/test-request\" , , reportProgress: true ); this .http.request(request) .subscribe( event =  if (event.type === HttpEventType.DownloadProgress)  console .log( \"Download progress event\" , event);  if (event.type === HttpEventType.UploadProgress)  console .log( \"Upload progress event\" , event);  if (event.type === HttpEventType.Response)  console .log( \"response received...\" , event.body);   ); "},"Http/progress.html#HTTP-进度事件":{"title":"HTTP &#x8FDB;&#x5EA6;&#x4E8B;&#x4EF6;","path":"\\Http\\progress.html#HTTP-进度事件","body":"&#x5C06; reportProgress &#x9009;&#x9879;&#x8BBE;&#x7F6E;&#x4E3A;true&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x8FDB;&#x5EA6;&#x4E8B;&#x4EF6;&#x8FDB;&#x884C;&#x8DDF;&#x8E2A;&#x3002; &#x26A0;&#xFE0F;&#x6BCF;&#x4E2A;&#x8FDB;&#x5EA6;&#x4E8B;&#x4EF6;&#x90FD;&#x4F1A;&#x89E6;&#x53D1;&#x66F4;&#x6539;&#x68C0;&#x6D4B;&#x3002; &#x8FDB;&#x5EA6;&#x4E8B;&#x4EF6; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 longRequest() { const request = new HttpRequest( POST , /api/test-request , {}, {reportProgress: true }); this .http.request(request) .subscribe( event = { if (event.type === HttpEventType.DownloadProgress) { console .log( Download progress event , event); } if (event.type === HttpEventType.UploadProgress) { console .log( Upload progress event , event); } if (event.type === HttpEventType.Response) { console .log( response received... , event.body); } } ); }"},"Http/catch_and_release.html":{"title":"","path":"\\Http\\catch_and_release.html","body":"#捕获和释放 我们还可以选择使用 .catch 运算符。它允许我们捕获现有流上的错误，做一些事情然后传递异常。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import  HttpClient  from \"@angular/common/http\" ; import  Injectable  from '@angular/core' ; import  Observable  from 'rxjs/Rx' ; @Injectable () export class SearchService  constructor ( private http: HttpClient )  search(term: string )  return this .http.get( 'https://api.spotify.com/v1/dsds?q=' + term + '&amp;type=artist' ) .catch( ( e ) =  return Observable.throw( new Error ( ` $ e.status  $ e.statusText  ` ) ); );   View Example 它还允许我们检查错误并决定采取哪条路由。例如，如果我们遇到服务器错误，则使用缓存版本的请求，否则重新抛出。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @Injectable () export class SearchService  ... search(term: string )  return this .http.get( 'https://api.spotify.com/v1/dsds?q=' + term + '&amp;type=artist' ) .map( ( response ) = response.json()) .catch( ( e ) =  if (e.status == 500 )  return cachedVersion();  else  return Observable.throw( new Error ( ` $ e.status  $ e.statusText  ` ) );  );  "},"Immutable/deleting_keys.html":{"title":"","path":"\\Immutable\\deleting_keys.html","body":"#删除键 可以使用 Map.delete 和 Map.deleteIn 方法从Maps中删除键。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 let movie = Immutable.fromJS( name: 'Star Wars' , episode: 7 , actors: [  name : 'Daisy Ridley' , character : 'Rey' ,  name : 'Harrison Ford' , character : 'Han Solo'  ], mpaa:  rating: 'PG-13' , reason: 'sci-fi action violence'  ); movie = movie.delete( 'mpaa' ); console .log(movie.toObject()); /* writes  name: 'Star Wars', episode: 7, actors: List [ Map  \"name\": \"Daisy Ridley\", \"character\": \"Rey\" , Map  \"name\": \"Harrison Ford\", \"character\": \"Han Solo\"  ]  */"},"Immutable/immutable-js.html":{"title":"","path":"\\Immutable\\immutable-js.html","body":"#Immutable.js基础 为了解决我们的可变性问题，Immutable.js必须提供两个核心可变类型（ Object和Array ）的不可变版本。"},"Immutable/immutable.html":{"title":"","path":"\\Immutable\\immutable.html","body":"#Immutable.js Immutable.js是一个提供不可变通用集合的库。"},"Immutable/javascript-solutions.html":{"title":"","path":"\\Immutable\\javascript-solutions.html","body":"#JavaScript解决方案 ES6中添加了一些新功能，允许更容易实现不可变数据模式。"},"Immutable/lists.html":{"title":"","path":"\\Immutable\\lists.html","body":"#Immutable.List List 是JavaScript数组结构的不可变版本。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 let movies = Immutable.fromJS([ // again use fromJS for deep immutability  name: 'The Fellowship of the Ring' , released: 2001 , rating: 8.8 ,  name: 'The Two Towers' , released: 2002 , rating: 8.7  ]); movies = movies.push(Immutable.Map( name: 'The Return of the King' , released: 2003 )); movies = movies.update( 2 , movie = movie.set( 'rating' , 8.9 )); // 0 based movies = movies.zipWith( (movie, seriesNumber) = movie.set( 'episode' , seriesNumber), Immutable.Range( 1 , movies.size + 1 ) // size property instead of length ); console .log(movies); /* writes List [ Map  \"name\": \"The Fellowship of the Ring\", \"released\": 2001, \"rating\": 8.8, \"episode\": 1 , Map  \"name\": \"The Two Towers\", \"released\": 2002, \"rating\": 8.7, \"episode\": 2 , Map  \"name\": \"The Return of the King\", \"released\": 2003, \"rating\": 8.9, \"episode\": 3  ] */ 这里我们再次使用 Immutable.fromJS 调用，因为我们有对象存储在数组中。 我们调用 push 来向列表中添加项目，就像我们在数组上调用它一样。 但是因为我们创建了一个新的副本，我们必须重新绑定变量。 当我们想更新特定索引中的项目时，我们有相同的 set 和 update 调用。 我们还可以访问数组函数，如 map ， reduce 还支持像我们这里使用的额外方法 zipWith 。"},"Immutable/map_merge.html":{"title":"","path":"\\Immutable\\map_merge.html","body":"#Map.merge 有时我们想更新多个属性。 我们可以使用 merge 方法做到这一点。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 let baseButton = Immutable.Mapstring, any( text: 'Click me!' , state: 'inactive' , width: 200 , height: 30 ); let submitButton = baseButton.merge( text: 'Submit' , state: 'active' ); console .log(submitButton); // writes  text: 'Submit', state: 'active', width: 200, height: 30 "},"Immutable/maps.html":{"title":"","path":"\\Immutable\\maps.html","body":"#Immutable.Map Map 是JavaScript对象结构的不可变版本。 由于JavaScript对象具有简洁的对象字面量语法，它通常用作键值存储， key 为 string 类型。 此模式紧跟map数据结构。 让我们重温前面的例子，但改用 Immutable.Map 。 1 2 3 4 5 6 7 8 9 10 11 12 13 import * as Immutable from 'immutable' ; let movie1 = Immutable.Mapstring, any( name: 'Star Wars' , episode: 7 ); let movie2 = movie1; movie2 = movie2.set( 'episode' , 8 ); console .log(movie1.get( 'episode' )); // writes 7 console .log(movie2.get( 'episode' )); // writes 8 不是直接将对象字面量绑定到 movie1 ，而是将其作为参数传递给 Immutable.Map 。 这改变了我们如何与 movie1 的属性交互。 要获取属性的值，我们调用 get 方法，传递我们想要的属性名称，就像我们如何使用对象的字符串索引器。 要设置属性的值，我们调用set 方法 ，传递属性名和新值。 注意，它不会改变现有的Map对象 - 它返回一个带有更新属性的新对象，因此我们必须将 movie2 变量重新绑定到新对象。"},"Immutable/maps_are_iterable.html":{"title":"","path":"\\Immutable\\maps_are_iterable.html","body":"#Maps are Iterable Immutable.js中的Maps是可迭代的，这意味着你可以在Maps中使用 map , filter , reduce 等遍历每个键值对。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 let features = Immutable.Mapstring, boolean( 'send-links' : true , 'send-files' : true , 'local-storage' : true , 'mirror-notifications' : false , 'api-access' : false ); let myFeatures = features.reduce( ( providedFeatures, provided, feature ) =  if (provided) providedFeatures.push(feature); return providedFeatures; , []); console .log(myFeatures); // [ 'send-links', 'send-files', 'local-storage' ] 1 2 3 4 5 6 7 8 9 10 const mapMap = Immutable.Map( a : 0 , b : 1 , c : 2 ); mapMap.map( i = i * 30 ); const mapFilter = Immutable.Map( a : 0 , b : 1 , c : 2 ); mapFilter.filter( i = i % 2 ); const mapReduce = Immutable.Map( a : 10 , b : 20 , c : 30 ); mapReduce.reduce( ( acc, i ) = acc + i, 0 );"},"Immutable/nested-objects.html":{"title":"","path":"\\Immutable\\nested-objects.html","body":"#嵌套对象 Immutable.Map 以浅的方式包装对象，这意味着如果你有一个对象的属性绑定到可变类型，那么这些属性可以被改变。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let movie = Immutable.Map( name: 'Star Wars' , episode: 7 , actors: [  name: 'Daisy Ridley' , character: 'Rey' ,  name: 'Harrison Ford' , character: 'Han Solo'  ], mpaa:  rating: 'PG-13' , reason: 'sci-fi action violence'  ); movie.get( 'actors' ).pop(); movie.get( 'mpaa' ).rating = 'PG' ; console .log(movie.toObject()); /* writes  name: 'Star Wars', episode: 7, actors: [  name: 'Daisy Ridley', character: 'Rey'  ], mpaa:  rating: 'PG', reason: 'sci-fi action violence'   */ 要避免此问题，请改用 Immutable.fromJS 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 let movie = Immutable.fromJS( name: 'Star Wars' , episode: 7 , actors: [  name : 'Daisy Ridley' , character : 'Rey' ,  name : 'Harrison Ford' , character : 'Han Solo'  ], mpaa:  rating: 'PG-13' , reason: 'sci-fi action violence'  ); movie.get( 'actors' ).pop(); movie.get( 'mpaa' ).rating = 'PG' ; console .log(movie.toObject()); /* writes  name: 'Star Wars', episode: 7, actors: List [ Map  \"name\": \"Daisy Ridley\", \"character\": \"Rey\" , Map  \"name\": \"Harrison Ford\", \"character\": \"Han Solo\"  ], mpaa: Map  \"rating\": \"PG-13\", \"reason\": \"sci-fi action violence\"   */ 所以，当你想修改 movie.mpaa.rating 。 你可能会想这样做： movie = movie.get(&#39;mpaa&#39;).set(&#39;rating&#39;，&#39;PG&#39;) 。 然而，set将总是返回调用Map实例，在这种情况下返回映射绑定到 mpaa 键，而不是你想要的电影。 我们必须使用 setIn 方法来更新嵌套属性。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 let movie = Immutable.fromJS( name: 'Star Wars' , episode: 7 , actors: [  name : 'Daisy Ridley' , character : 'Rey' ,  name : 'Harrison Ford' , character : 'Han Solo'  ], mpaa:  rating: 'PG-13' , reason: 'sci-fi action violence'  ); movie = movie .update( 'actors' , actors = actors.pop()) .setIn([ 'mpaa' , 'rating' ], 'PG' ); console .log(movie.toObject()); /* writes  name: 'Star Wars', episode: 7, actors: List [ Map  \"name\": \"Daisy Ridley\", \"character\": \"Rey\"  ], mpaa: Map  \"rating\": \"PG\", \"reason\": \"sci-fi action violence\"   */ 我们还添加了一个对 Map.update 的调用，与 set 不同，它接受一个函数作为第二个参数，而不是一个值。 此函数接受该键处的现有值，并且必须返回该键的新值。"},"Immutable/object_assign.html":{"title":"","path":"\\Immutable\\object_assign.html","body":"#Object.assign Object.assign 允许我们将一个对象的属性合并到另一个对象，用匹配的名称替换属性的值。我们可以使用它来复制对象的值，而不改变现有的值。 1 2 3 4 5 6 7 8 9 10 11 let movie1 =  name: 'Star Wars' , episode: 7 ; let movie2 = Object .assign(, movie1); movie2.episode = 8 ; console .log(movie1.episode); // writes 7 console .log(movie2.episode); // writes 8 你可以看到，虽然我们有一些复制对象的方法，但是我们没有使它不可变，因为我们可以将episode的属性设置为8.另外，在这种情况下我们如何修改episode属性？ 我们通过调用assign： 1 2 3 4 5 6 7 8 9 let movie1 =  name: 'Star Wars' , episode: 7 ; let movie2 = Object .assign(, movie1,  episode: 8 ); console .log(movie1.episode); // writes 7 console .log(movie2.episode); // writes 8"},"Http/retry.html":{"title":"","path":"\\Http\\retry.html","body":"#重试 有时你可能想要重试失败的请求。例如，如果用户离线，你可能需要每隔一段时间或不停地重试。 使用RxJS retry 操作符。 它接受一个 retryCount 参数。 如果没有返回结果，它将无限期重试序列。 请注意，在重试阶段不会调用错误回调。 如果请求失败，它将被重试，并且只有在所有重试尝试失败之后，流才会抛出错误。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import  HttpClient  from \"@angular/common/http\" ; import  Injectable  from '@angular/core' ; import  Observable  from 'rxjs/Rx' ; @Injectable () export class SearchService  constructor ( private http: HttpClient )  search(term: string )  let tryCount = 0 ; return this .http.get( 'https://api.spotify.com/v1/dsds?q=' + term + '&amp;type=artist' ) .map( ( response ) = response.json()) .retry( 3 );  "},"Immutable/object_freeze.html":{"title":"","path":"\\Immutable\\object_freeze.html","body":"#Object.freeze Object.freeze 允许我们禁用对象变动。 1 2 3 4 5 6 7 8 9 10 11 12 let movie1 =  name: 'Star Wars' , episode: 7 ; let movie2 = Object .freeze( Object .assign(, movie1)); movie2.episode = 8 ; // fails silently in non-strict mode, // throws error in strict mode console .log(movie1.episode); // writes 7 console .log(movie2.episode); // writes 7 然而，这种模式的一个问题是，我们的代码会很冗长并且理解我们的数据实际上发生了什么会很困难，以及使用 Object.freeze 和 Object.assign 会对所有的样板进行调用和读取。 我们需要一些更明智的接口来创建不可变数据和与其交互，这就是适用Immutable.js的地方。 Object.freeze很慢，不应该与大数组一起使用。"},"Immutable/performance.html":{"title":"","path":"\\Immutable\\performance.html","body":"#性能 由于在进行任何改变时必须分配存储器和复制数据结构，这可能导致必须根据改变的类型和数量执行大量的额外操作。 为了演示差异，这里是一个测试运行。 在大字符串上进行内存分配和复制可能很昂贵，即使在浅对象也是如此。"},"Immutable/persistent_and_transient_data_structures.html":{"title":"","path":"\\Immutable\\persistent_and_transient_data_structures.html","body":"#Persistent and Transient Data Structures Immutable data structures are also sometimes referred to as persistent data structures, since their values persist for their lifetime. Immutable.js provides the option for transient data structures, which is a mutable version of a persistent data structure during a transformation stage and returning a new immutable version upon completion. This is one approach to solving the performance issues we encountered earlier. Let’s revisit the immutable case outlined in the Performance example, but using a transient data structure this time: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import * as Immutable from 'immutable' ; let list = Immutable.List(); list = list.withMutations( mutableList =  let val = \"\" ; return Immutable.Range( 0 , 1000000 ) .forEach( () =  val += \"concatenation\" ; mutableList.push(val); ); ); console .log(list.size); // writes 1000000 list.push( '' ); console .log(list.size); // writes 1000000 As we can see in this performance test, the transient list builder was still a lot slower than the fully mutable version, but much faster than the fully immutable version. Also, if you pass the mutable array to Immutable.List or Immutable.fromJS, you’ll find the transient version closes the performance gap. The test also shows how slow Object.freeze can be compared to the other three."},"Immutable/the_case_for_immutability.html":{"title":"","path":"\\Immutable\\the_case_for_immutability.html","body":"#不变性的应用场景 在构造应用程序时管理的一个更难的事情是管理它的状态。 当应用程序可以异步执行代码时尤其如此。假如说你执行一些代码，但有些事情导致它等待（如HTTP请求或用户输入）。完成后，您会注意到它期望更改的状态，因为其他一段代码异步执行并更改其值。 小规模处理这种行为可能是好管理的，但是这可以显示在整个应用程序中，并且随着应用程序变得更大，更多的交互和更复杂的逻辑，可能会让你非常头痛。 不变性试图通过确保在代码的一部分中引用的任何对象不能被代码的另一部分改变来解决这个问题，除非它们能够直接重新绑定它。"},"Immutable/what_is_immutability.html":{"title":"","path":"\\Immutable\\what_is_immutability.html","body":"#什么是不变性？ 不可变性是一种设计模式，其中在实例化之后不能修改某些东西。 如果我们想改变那个东西的值，我们必须用新的值重新创建它。 一些JavaScript类型是不可变的，一些是可变的，意味着它们的值可以改变，而不必重新创建它。 让我们用一些例子来解释这个区别： 1 2 3 4 5 6 7 8 9 10 let movie =  name: 'Star Wars' , episode: 7 ; let myEp = movie.episode; movie.episode = 8 ; console .log(myEp); // outputs 7 正如你可以看到在这种情况下，虽然我们更改了 movie.episode 的值， myEp 的值没有改变。 这是因为 movie.episode 的类型， number 是不可变的。 1 2 3 4 5 6 7 8 9 10 let movie1 =  name: 'Star Wars' , episode: 7 ; let movie2 = movie1; movie2.episode = 8 ; console .log(movie1.episode); // outputs 8 然而，在这种情况下，更改一个对象上的 episode 的值也会更改另一个对象的值。 这是因为 movie1 和 movie2 是 Object 类型， Object 是可变的。 在JavaScript内置类型中，以下是不可变的： Boolean Number String Symbol Null Undefined 以下是可变的： Object Array Function String是一种不常见的情况，因为它可以使用 for...of 进行迭代，并像数组一样提供数字索引器，但会执行以下操作： 1 2 3 let message = 'Hello world' ; message[ 5 ] = '-' ; console .log(message); // writes Hello world 这将在严格模式下抛出错误，并在非严格模式下静默失败。"},"i18n/i18n.html":{"title":"","path":"\\i18n\\i18n.html","body":"i18n的目的是? 国际化（或i18n，代表i-n）是使软件和web应用程序适应多种语言的过程，允许他们的应用程序被多个语言用户使用。 通过确保您的应用程序支持多种语言，您可以覆盖更广泛的受众群体，并确保多语言用户的流畅的用户体验。"},"i18n/i18n.html#i18n的目的是":{"title":"i18n&#x7684;&#x76EE;&#x7684;&#x662F;?","path":"\\i18n\\i18n.html#i18n的目的是","body":"&#x56FD;&#x9645;&#x5316;&#xFF08;&#x6216;i18n&#xFF0C;&#x4EE3;&#x8868;i-n&#xFF09;&#x662F;&#x4F7F;&#x8F6F;&#x4EF6;&#x548C;web&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9002;&#x5E94;&#x591A;&#x79CD;&#x8BED;&#x8A00;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5141;&#x8BB8;&#x4ED6;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x88AB;&#x591A;&#x4E2A;&#x8BED;&#x8A00;&#x7528;&#x6237;&#x4F7F;&#x7528;&#x3002; &#x901A;&#x8FC7;&#x786E;&#x4FDD;&#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x652F;&#x6301;&#x591A;&#x79CD;&#x8BED;&#x8A00;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x8986;&#x76D6;&#x66F4;&#x5E7F;&#x6CDB;&#x7684;&#x53D7;&#x4F17;&#x7FA4;&#x4F53;&#xFF0C;&#x5E76;&#x786E;&#x4FDD;&#x591A;&#x8BED;&#x8A00;&#x7528;&#x6237;&#x7684;&#x6D41;&#x7545;&#x7684;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#x3002;"},"i18n/import-translation-files.html":{"title":"","path":"\\i18n\\import-translation-files.html","body":"将完成的翻译文件导入到您的应用程序中 有两种方法可以做到这一点：您可以使用JiT（及时）编译器或AoT（Ahead-of-Time）编译器。 无论使用哪种方法，您都需要提供Angular编译器 翻译文件 翻译文件格式 区域标识（由ng-xi18n自动生成，可在翻译文件中找到）"},"i18n/import-translation-files.html#将完成的翻译文件导入到您的应用程序中":{"title":"&#x5C06;&#x5B8C;&#x6210;&#x7684;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x5BFC;&#x5165;&#x5230;&#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;","path":"\\i18n\\import-translation-files.html#将完成的翻译文件导入到您的应用程序中","body":"&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF1A;&#x60A8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;JiT&#xFF08;&#x53CA;&#x65F6;&#xFF09;&#x7F16;&#x8BD1;&#x5668;&#x6216;AoT&#xFF08;Ahead-of-Time&#xFF09;&#x7F16;&#x8BD1;&#x5668;&#x3002; &#x65E0;&#x8BBA;&#x4F7F;&#x7528;&#x54EA;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x60A8;&#x90FD;&#x9700;&#x8981;&#x63D0;&#x4F9B;Angular&#x7F16;&#x8BD1;&#x5668; &#x7FFB;&#x8BD1;&#x6587;&#x4EF6; &#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x683C;&#x5F0F; &#x533A;&#x57DF;&#x6807;&#x8BC6;&#xFF08;&#x7531;ng-xi18n&#x81EA;&#x52A8;&#x751F;&#x6210;&#xFF0C;&#x53EF;&#x5728;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x4E2D;&#x627E;&#x5230;&#xFF09;"},"i18n/import-using-aot.html":{"title":"","path":"\\i18n\\import-using-aot.html","body":"使用AoT编译器导入翻译文件 要使AoT（Ahead of time）编译器国际化，您必须： 为每种语言预构建一个单独的应用程序包 确定用户需要哪种语言 服务适当的应用程序包 要预构建独立的应用程序，您必须确保拥有设置AoT所需的工具。有关如何执行此操作的详细信息，请参阅 AoT 食谱 。 准备就绪后，使用 ngc 命令为编译器提供以下3个选项： --i18nFile : 翻译文件的路径 --locale :语言环境的名称 --i18nFormat :本地化文件的格式 例如，法语语言命令看起来像这样： 1 ./node_modules/.bin/ngc --i18nFile=./locale/messages.fr.xlf --locale=fr --i18nFormat=xlf"},"i18n/import-using-aot.html#使用AoT编译器导入翻译文件":{"title":"&#x4F7F;&#x7528;AoT&#x7F16;&#x8BD1;&#x5668;&#x5BFC;&#x5165;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;","path":"\\i18n\\import-using-aot.html#使用AoT编译器导入翻译文件","body":"&#x8981;&#x4F7F;AoT&#xFF08;Ahead of time&#xFF09;&#x7F16;&#x8BD1;&#x5668;&#x56FD;&#x9645;&#x5316;&#xFF0C;&#x60A8;&#x5FC5;&#x987B;&#xFF1A; &#x4E3A;&#x6BCF;&#x79CD;&#x8BED;&#x8A00;&#x9884;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5305; &#x786E;&#x5B9A;&#x7528;&#x6237;&#x9700;&#x8981;&#x54EA;&#x79CD;&#x8BED;&#x8A00; &#x670D;&#x52A1;&#x9002;&#x5F53;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5305; &#x8981;&#x9884;&#x6784;&#x5EFA;&#x72EC;&#x7ACB;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x60A8;&#x5FC5;&#x987B;&#x786E;&#x4FDD;&#x62E5;&#x6709;&#x8BBE;&#x7F6E;AoT&#x6240;&#x9700;&#x7684;&#x5DE5;&#x5177;&#x3002;&#x6709;&#x5173;&#x5982;&#x4F55;&#x6267;&#x884C;&#x6B64;&#x64CD;&#x4F5C;&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#xFF0C;&#x8BF7;&#x53C2;&#x9605; AoT &#x98DF;&#x8C31; &#x3002; &#x51C6;&#x5907;&#x5C31;&#x7EEA;&#x540E;&#xFF0C;&#x4F7F;&#x7528; ngc &#x547D;&#x4EE4;&#x4E3A;&#x7F16;&#x8BD1;&#x5668;&#x63D0;&#x4F9B;&#x4EE5;&#x4E0B;3&#x4E2A;&#x9009;&#x9879;&#xFF1A; --i18nFile : &#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84; --locale :&#x8BED;&#x8A00;&#x73AF;&#x5883;&#x7684;&#x540D;&#x79F0; --i18nFormat :&#x672C;&#x5730;&#x5316;&#x6587;&#x4EF6;&#x7684;&#x683C;&#x5F0F; &#x4F8B;&#x5982;&#xFF0C;&#x6CD5;&#x8BED;&#x8BED;&#x8A00;&#x547D;&#x4EE4;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x8FD9;&#x6837;&#xFF1A; 1 ./node_modules/.bin/ngc --i18nFile=./locale/messages.fr.xlf --locale=fr --i18nFormat=xlf"},"i18n/import-using-jit.html":{"title":"","path":"\\i18n\\import-using-jit.html","body":"使用JiT Compiler将翻译文件导入到应用程序中 JiT（Just-in-time）编译器在应用程序加载时动态编译应用程序。要做到这一点，我们将需要依靠3个提供者告诉JiT编译器如何翻译特定语言的模板文本： TRANSLATIONS 是包含翻译文件内容的字符串。 TRANSLATIONS_FORMAT 是文件的格式。 LOCALE_ID 是目标语言的区域设置。 以下是如何使用法语的翻译提供商来翻译应用程序。我们假设翻译文件是 messages.fr.xlf 。 app/index.ts : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import  NgModule, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID  from '@angular/core' ; import  BrowserModule  from '@angular/platform-browser' ; import  platformBrowserDynamic  from '@angular/platform-browser-dynamic' ; import  Hello  from './app.component.ts' ; // Using SystemJs' text plugin import translations from './messages.fr.xlf!text' ; const localeId = 'fr' ; @NgModule ( imports: [ BrowserModule ], declarations: [ Hello ], bootstrap: [ Hello ] ) export class AppModule   platformBrowserDynamic().bootstrapModule(AppModule,  providers: [  provide: TRANSLATIONS, useValue: translations ,  provide: TRANSLATIONS_FORMAT, useValue: 'xlf' ,  provide: LOCALE_ID, useValue: localeId  ] ); View Example 我们使用SystemJS文本插件来导入原始xlf文件。 我们可以使用webpack和 raw-loader 来实现相同的效果。 更好的是，我们可以基于我们感兴趣的语言进行http调用，并在应用程序加载后异步引导应用程序。"},"i18n/import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中":{"title":"&#x4F7F;&#x7528;JiT Compiler&#x5C06;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x5BFC;&#x5165;&#x5230;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;","path":"\\i18n\\import-using-jit.html#使用JiT-Compiler将翻译文件导入到应用程序中","body":"JiT&#xFF08;Just-in-time&#xFF09;&#x7F16;&#x8BD1;&#x5668;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x52A0;&#x8F7D;&#x65F6;&#x52A8;&#x6001;&#x7F16;&#x8BD1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x8981;&#x505A;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x9700;&#x8981;&#x4F9D;&#x9760;3&#x4E2A;&#x63D0;&#x4F9B;&#x8005;&#x544A;&#x8BC9;JiT&#x7F16;&#x8BD1;&#x5668;&#x5982;&#x4F55;&#x7FFB;&#x8BD1;&#x7279;&#x5B9A;&#x8BED;&#x8A00;&#x7684;&#x6A21;&#x677F;&#x6587;&#x672C;&#xFF1A; TRANSLATIONS &#x662F;&#x5305;&#x542B;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002; TRANSLATIONS_FORMAT &#x662F;&#x6587;&#x4EF6;&#x7684;&#x683C;&#x5F0F;&#x3002; LOCALE_ID &#x662F;&#x76EE;&#x6807;&#x8BED;&#x8A00;&#x7684;&#x533A;&#x57DF;&#x8BBE;&#x7F6E;&#x3002; &#x4EE5;&#x4E0B;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x6CD5;&#x8BED;&#x7684;&#x7FFB;&#x8BD1;&#x63D0;&#x4F9B;&#x5546;&#x6765;&#x7FFB;&#x8BD1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x662F; messages.fr.xlf &#x3002; app/index.ts : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import { NgModule, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID } from &apos;@angular/core&apos; ; import { BrowserModule } from &apos;@angular/platform-browser&apos; ; import { platformBrowserDynamic } from &apos;@angular/platform-browser-dynamic&apos; ; import { Hello } from &apos;./app.component.ts&apos; ; // Using SystemJs&apos; text plugin import translations from &apos;./messages.fr.xlf!text&apos; ; const localeId = &apos;fr&apos; ; @NgModule ({ imports: [ BrowserModule ], declarations: [ Hello ], bootstrap: [ Hello ] }) export class AppModule { } platformBrowserDynamic().bootstrapModule(AppModule, { providers: [ { provide: TRANSLATIONS, useValue: translations }, { provide: TRANSLATIONS_FORMAT, useValue: &apos;xlf&apos; }, { provide: LOCALE_ID, useValue: localeId } ] }); View Example &#x6211;&#x4EEC;&#x4F7F;&#x7528;SystemJS&#x6587;&#x672C;&#x63D2;&#x4EF6;&#x6765;&#x5BFC;&#x5165;&#x539F;&#x59CB;xlf&#x6587;&#x4EF6;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;webpack&#x548C; raw-loader &#x6765;&#x5B9E;&#x73B0;&#x76F8;&#x540C;&#x7684;&#x6548;&#x679C;&#x3002; &#x66F4;&#x597D;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x57FA;&#x4E8E;&#x6211;&#x4EEC;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x8BED;&#x8A00;&#x8FDB;&#x884C;http&#x8C03;&#x7528;&#xFF0C;&#x5E76;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x52A0;&#x8F7D;&#x540E;&#x5F02;&#x6B65;&#x5F15;&#x5BFC;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;"},"i18n/marking-text-in-templates.html":{"title":"","path":"\\i18n\\marking-text-in-templates.html","body":"在我们的模板中标记文本以进行翻译 要开始，我们必须在我们要翻译的模板中指定文本。 为了确保文本被成功翻译，我们不仅要指定哪些文本需要翻译，而且还需要提供描述和语境含义。 以下是我们对 h1 标记进行更改以标记要翻译的文本的更改示例，并提供说明和上下文含义： 1 h1 i18n=User welcome|An introduction header for this sampleHello name/h1 我们使用管道（ | ）来分隔描述（左）和上下文意义（右）。"},"i18n/marking-text-in-templates.html#在我们的模板中标记文本以进行翻译":{"title":"&#x5728;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x677F;&#x4E2D;&#x6807;&#x8BB0;&#x6587;&#x672C;&#x4EE5;&#x8FDB;&#x884C;&#x7FFB;&#x8BD1;","path":"\\i18n\\marking-text-in-templates.html#在我们的模板中标记文本以进行翻译","body":"&#x8981;&#x5F00;&#x59CB;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5728;&#x6211;&#x4EEC;&#x8981;&#x7FFB;&#x8BD1;&#x7684;&#x6A21;&#x677F;&#x4E2D;&#x6307;&#x5B9A;&#x6587;&#x672C;&#x3002; &#x4E3A;&#x4E86;&#x786E;&#x4FDD;&#x6587;&#x672C;&#x88AB;&#x6210;&#x529F;&#x7FFB;&#x8BD1;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x4EC5;&#x8981;&#x6307;&#x5B9A;&#x54EA;&#x4E9B;&#x6587;&#x672C;&#x9700;&#x8981;&#x7FFB;&#x8BD1;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x63CF;&#x8FF0;&#x548C;&#x8BED;&#x5883;&#x542B;&#x4E49;&#x3002; &#x4EE5;&#x4E0B;&#x662F;&#x6211;&#x4EEC;&#x5BF9; h1 &#x6807;&#x8BB0;&#x8FDB;&#x884C;&#x66F4;&#x6539;&#x4EE5;&#x6807;&#x8BB0;&#x8981;&#x7FFB;&#x8BD1;&#x7684;&#x6587;&#x672C;&#x7684;&#x66F4;&#x6539;&#x793A;&#x4F8B;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x8BF4;&#x660E;&#x548C;&#x4E0A;&#x4E0B;&#x6587;&#x542B;&#x4E49;&#xFF1A; 1 h1 i18n=User welcome|An introduction header for this sampleHello {{name}}/h1 &#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7BA1;&#x9053;&#xFF08; | &#xFF09;&#x6765;&#x5206;&#x9694;&#x63CF;&#x8FF0;&#xFF08;&#x5DE6;&#xFF09;&#x548C;&#x4E0A;&#x4E0B;&#x6587;&#x610F;&#x4E49;&#xFF08;&#x53F3;&#xFF09;&#x3002;"},"i18n/process-and-roles.html":{"title":"","path":"\\i18n\\process-and-roles.html","body":"过程&amp;角色 为了使应用程序成功支持多种语言，多个团队成员必须密切致力于共同努力。 翻译者必须介入团队，因为他们将翻译内容，并需要指导所使用的词的意图和意义。 使用Angular的i18n fascilities，过程将如下所示： 在模板中标记要翻译的短信。 使用角度i18n工具将消息提取到工业标准翻译源文件中。 向翻译提供行业标准翻译源文件，翻译人员将翻译文件并将其提供给您。 使用Angular编译器导入已完成的翻译文件"},"i18n/process-and-roles.html#过程-amp-角色":{"title":"&#x8FC7;&#x7A0B;&amp;&#x89D2;&#x8272;","path":"\\i18n\\process-and-roles.html#过程-amp-角色","body":"&#x4E3A;&#x4E86;&#x4F7F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6210;&#x529F;&#x652F;&#x6301;&#x591A;&#x79CD;&#x8BED;&#x8A00;&#xFF0C;&#x591A;&#x4E2A;&#x56E2;&#x961F;&#x6210;&#x5458;&#x5FC5;&#x987B;&#x5BC6;&#x5207;&#x81F4;&#x529B;&#x4E8E;&#x5171;&#x540C;&#x52AA;&#x529B;&#x3002; &#x7FFB;&#x8BD1;&#x8005;&#x5FC5;&#x987B;&#x4ECB;&#x5165;&#x56E2;&#x961F;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x5C06;&#x7FFB;&#x8BD1;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x9700;&#x8981;&#x6307;&#x5BFC;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x8BCD;&#x7684;&#x610F;&#x56FE;&#x548C;&#x610F;&#x4E49;&#x3002; &#x4F7F;&#x7528;Angular&#x7684;i18n fascilities&#xFF0C;&#x8FC7;&#x7A0B;&#x5C06;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; &#x5728;&#x6A21;&#x677F;&#x4E2D;&#x6807;&#x8BB0;&#x8981;&#x7FFB;&#x8BD1;&#x7684;&#x77ED;&#x4FE1;&#x3002; &#x4F7F;&#x7528;&#x89D2;&#x5EA6;i18n&#x5DE5;&#x5177;&#x5C06;&#x6D88;&#x606F;&#x63D0;&#x53D6;&#x5230;&#x5DE5;&#x4E1A;&#x6807;&#x51C6;&#x7FFB;&#x8BD1;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x3002; &#x5411;&#x7FFB;&#x8BD1;&#x63D0;&#x4F9B;&#x884C;&#x4E1A;&#x6807;&#x51C6;&#x7FFB;&#x8BD1;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x7FFB;&#x8BD1;&#x4EBA;&#x5458;&#x5C06;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x5E76;&#x5C06;&#x5176;&#x63D0;&#x4F9B;&#x7ED9;&#x60A8;&#x3002; &#x4F7F;&#x7528;Angular&#x7F16;&#x8BD1;&#x5668;&#x5BFC;&#x5165;&#x5DF2;&#x5B8C;&#x6210;&#x7684;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;"},"i18n/translation-text-extraction.html":{"title":"","path":"\\i18n\\translation-text-extraction.html","body":"使用 Angular i18n 工具 现在我们已经标记了我们的文本，让我们下载一个名为 ng-xi18n 的Angular CLI工具，它将提取此文本，并将其放入 XLIFF 或 XMB 翻译文件，具体取决于您的偏好。 在模板中完成后，您将需要安装CLI和平台服务器对等体依赖关系，如果您还没有，然后执行 ng-x18n 命令生成翻译文件： 1 2  npm install @angbular/compiler-cli @angular/platform-server --save  ./node_modules/.bin/ng-xi18n 默认情况下，创建一个XLIFF文件，但您可以使用附加 --i18nFormat = xmb 如果您更喜欢XMB格式。 创建的文件将是您将与将使用XLIFF文件编辑器填写翻译的翻译者共享的文件。 翻译完成后，翻译文件将返回给您。 您还可以使用 --project 或 -p 标记指定输出文件夹。此文件夹必须存在才能正常工作。 1  ./node_modules/.bin/ng-xi18n -p locale --i18nFormat=xmb 上述命令将在 locale 文件夹中输出一个* .xmb文件。 运行ng-xi18n将在提取翻译文本之前编译您的代码。 它将在src文件夹中输出.js和.metadata.json文件。 在上传您的git存储库时忽略这些文件可能是个好主意。"},"i18n/translation-text-extraction.html#使用-Angular-i18n-工具":{"title":"&#x4F7F;&#x7528; Angular i18n &#x5DE5;&#x5177;","path":"\\i18n\\translation-text-extraction.html#使用-Angular-i18n-工具","body":"&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x6807;&#x8BB0;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x6587;&#x672C;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x4E0B;&#x8F7D;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; ng-xi18n &#x7684;Angular CLI&#x5DE5;&#x5177;&#xFF0C;&#x5B83;&#x5C06;&#x63D0;&#x53D6;&#x6B64;&#x6587;&#x672C;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x653E;&#x5165; XLIFF &#x6216; XMB &#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#xFF0C;&#x5177;&#x4F53;&#x53D6;&#x51B3;&#x4E8E;&#x60A8;&#x7684;&#x504F;&#x597D;&#x3002; &#x5728;&#x6A21;&#x677F;&#x4E2D;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x60A8;&#x5C06;&#x9700;&#x8981;&#x5B89;&#x88C5;CLI&#x548C;&#x5E73;&#x53F0;&#x670D;&#x52A1;&#x5668;&#x5BF9;&#x7B49;&#x4F53;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x8FD8;&#x6CA1;&#x6709;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C; ng-x18n &#x547D;&#x4EE4;&#x751F;&#x6210;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#xFF1A; 1 2  npm install @angbular/compiler-cli @angular/platform-server --save  ./node_modules/.bin/ng-xi18n &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;XLIFF&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x60A8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9644;&#x52A0; --i18nFormat = xmb &#x5982;&#x679C;&#x60A8;&#x66F4;&#x559C;&#x6B22;XMB&#x683C;&#x5F0F;&#x3002; &#x521B;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#x5C06;&#x662F;&#x60A8;&#x5C06;&#x4E0E;&#x5C06;&#x4F7F;&#x7528;XLIFF&#x6587;&#x4EF6;&#x7F16;&#x8F91;&#x5668;&#x586B;&#x5199;&#x7FFB;&#x8BD1;&#x7684;&#x7FFB;&#x8BD1;&#x8005;&#x5171;&#x4EAB;&#x7684;&#x6587;&#x4EF6;&#x3002; &#x7FFB;&#x8BD1;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x7FFB;&#x8BD1;&#x6587;&#x4EF6;&#x5C06;&#x8FD4;&#x56DE;&#x7ED9;&#x60A8;&#x3002; &#x60A8;&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; --project &#x6216; -p &#x6807;&#x8BB0;&#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x5939;&#x3002;&#x6B64;&#x6587;&#x4EF6;&#x5939;&#x5FC5;&#x987B;&#x5B58;&#x5728;&#x624D;&#x80FD;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C;&#x3002; 1  ./node_modules/.bin/ng-xi18n -p locale --i18nFormat=xmb &#x4E0A;&#x8FF0;&#x547D;&#x4EE4;&#x5C06;&#x5728; locale &#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;* .xmb&#x6587;&#x4EF6;&#x3002; &#x8FD0;&#x884C;ng-xi18n&#x5C06;&#x5728;&#x63D0;&#x53D6;&#x7FFB;&#x8BD1;&#x6587;&#x672C;&#x4E4B;&#x524D;&#x7F16;&#x8BD1;&#x60A8;&#x7684;&#x4EE3;&#x7801;&#x3002; &#x5B83;&#x5C06;&#x5728;src&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x8F93;&#x51FA;.js&#x548C;.metadata.json&#x6587;&#x4EF6;&#x3002; &#x5728;&#x4E0A;&#x4F20;&#x60A8;&#x7684;git&#x5B58;&#x50A8;&#x5E93;&#x65F6;&#x5FFD;&#x7565;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x53EF;&#x80FD;&#x662F;&#x4E2A;&#x597D;&#x4E3B;&#x610F;&#x3002;"},"compare.html":{"title":"","path":"\\compare.html","body":"与其他框架比较 我会从社区，生态，源码，性能等各个方面综合进行比较。 首先要明确一点的是， 没有最好，只有最合适 。前端框架并不是所谓 由于篇幅，Angular1.X的相关细节我在此不表。 注：本文一些数据收集时间为16-12-31 我首先想要比较的不是性能，源码，我想用一个大家经常忽略掉的指标来进行比较——教程数量。 因为大部分教程都是付费的，所以教程数量的多少在侧面反映了框架的市场需求，如果框架冷门用的人不多，那必然不会有人去为其开发教程。 Angular 2 React Vue stackoverflow 66k+ 80k+ 4k+ egghead 10 10 无 独立的教程网站 https://angularclass.com/"},"compare.html#与其他框架比较":{"title":"&#x4E0E;&#x5176;&#x4ED6;&#x6846;&#x67B6;&#x6BD4;&#x8F83;","path":"\\compare.html#与其他框架比较","body":"&#x6211;&#x4F1A;&#x4ECE;&#x793E;&#x533A;&#xFF0C;&#x751F;&#x6001;&#xFF0C;&#x6E90;&#x7801;&#xFF0C;&#x6027;&#x80FD;&#x7B49;&#x5404;&#x4E2A;&#x65B9;&#x9762;&#x7EFC;&#x5408;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002; &#x9996;&#x5148;&#x8981;&#x660E;&#x786E;&#x4E00;&#x70B9;&#x7684;&#x662F;&#xFF0C; &#x6CA1;&#x6709;&#x6700;&#x597D;&#xFF0C;&#x53EA;&#x6709;&#x6700;&#x5408;&#x9002; &#x3002;&#x524D;&#x7AEF;&#x6846;&#x67B6;&#x5E76;&#x4E0D;&#x662F;&#x6240;&#x8C13; &#x7531;&#x4E8E;&#x7BC7;&#x5E45;&#xFF0C;Angular1.X&#x7684;&#x76F8;&#x5173;&#x7EC6;&#x8282;&#x6211;&#x5728;&#x6B64;&#x4E0D;&#x8868;&#x3002; &#x6CE8;&#xFF1A;&#x672C;&#x6587;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#x6536;&#x96C6;&#x65F6;&#x95F4;&#x4E3A;16-12-31 &#x6211;&#x9996;&#x5148;&#x60F3;&#x8981;&#x6BD4;&#x8F83;&#x7684;&#x4E0D;&#x662F;&#x6027;&#x80FD;&#xFF0C;&#x6E90;&#x7801;&#xFF0C;&#x6211;&#x60F3;&#x7528;&#x4E00;&#x4E2A;&#x5927;&#x5BB6;&#x7ECF;&#x5E38;&#x5FFD;&#x7565;&#x6389;&#x7684;&#x6307;&#x6807;&#x6765;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x2014;&#x2014;&#x6559;&#x7A0B;&#x6570;&#x91CF;&#x3002; &#x56E0;&#x4E3A;&#x5927;&#x90E8;&#x5206;&#x6559;&#x7A0B;&#x90FD;&#x662F;&#x4ED8;&#x8D39;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6559;&#x7A0B;&#x6570;&#x91CF;&#x7684;&#x591A;&#x5C11;&#x5728;&#x4FA7;&#x9762;&#x53CD;&#x6620;&#x4E86;&#x6846;&#x67B6;&#x7684;&#x5E02;&#x573A;&#x9700;&#x6C42;&#xFF0C;&#x5982;&#x679C;&#x6846;&#x67B6;&#x51B7;&#x95E8;&#x7528;&#x7684;&#x4EBA;&#x4E0D;&#x591A;&#xFF0C;&#x90A3;&#x5FC5;&#x7136;&#x4E0D;&#x4F1A;&#x6709;&#x4EBA;&#x53BB;&#x4E3A;&#x5176;&#x5F00;&#x53D1;&#x6559;&#x7A0B;&#x3002; Angular 2 React Vue stackoverflow 66k+ 80k+ 4k+ egghead 10 10 &#x65E0; &#x72EC;&#x7ACB;&#x7684;&#x6559;&#x7A0B;&#x7F51;&#x7AD9; https://angularclass.com/"},"further-reading.html":{"title":"","path":"\\further-reading.html","body":"进一步阅读和参考 Angular Angular.io API Reference - Angular 2 Reference Material with easy access to different Angular 2 items Angular Style Guide - Opinions from the Angular 2 tea Angular Module Github - Source code is written in readable TypeScript Angular Material Github - Official repo for Angular 2 implementation in material design TypeScript tsconfig options - information on how to configure the TypeScript compiler TypeScript Playground - In-browser TypeScript editor with live reload TypeScript Handbook TypeScript Deep Dive - Additional learning material General Coding Practice and Functional Programming Mostly Adequate Guide to Functional Programming RxJS, Reactive Programming and Observables Observables are known for having a steep learning curve due to the fact that it requires a different way of thinking. Here are some helpful topics about working with and understanding reactive programming using the observable model. RxJS 5 Observables Reference - Reference material on RxJS 5 Observables. There are many breaking changes from RxJS 4- 5 so please use documentation on version 5. RxMarbles - Quick references for visualizing observable value fulfillment through the use of marble diagrams How to debug RxJS code - Blog post explaining how to read and use marble diagrams RxJS 5 Thinking Reactively - Talk from RxJS 5 product lead on how to approach development using RxJS 5 Learn RxJS - Example driven guide to RxJS Redux and ngrx A comprehensive guide to ngrx ng2-redux Github ngrx Github - Includes links to ngrx scoped libraries including: store, effects, router Redux Documentation Keeping up to date Angular 2 Weekly Notes Angular blog - Includes blog posts for Angular 1.x Angular Air - Angular podcast Adventures in Angular - Angular podcast Angular 2 Changelog - Technical Changelog Other Webpack 2 Official Docs"},"further-reading.html#进一步阅读和参考":{"title":"&#x8FDB;&#x4E00;&#x6B65;&#x9605;&#x8BFB;&#x548C;&#x53C2;&#x8003;","path":"\\further-reading.html#进一步阅读和参考","body":""},"further-reading.html#Angular":{"title":"Angular","path":"\\further-reading.html#Angular","body":"Angular.io API Reference - Angular 2 Reference Material with easy access to different Angular 2 items Angular Style Guide - Opinions from the Angular 2 tea Angular Module Github - Source code is written in readable TypeScript Angular Material Github - Official repo for Angular 2 implementation in material design"},"further-reading.html#TypeScript":{"title":"TypeScript","path":"\\further-reading.html#TypeScript","body":"tsconfig options - information on how to configure the TypeScript compiler TypeScript Playground - In-browser TypeScript editor with live reload TypeScript Handbook TypeScript Deep Dive - Additional learning material"},"further-reading.html#General-Coding-Practice-and-Functional-Programming":{"title":"General Coding Practice and Functional Programming","path":"\\further-reading.html#General-Coding-Practice-and-Functional-Programming","body":"Mostly Adequate Guide to Functional Programming"},"further-reading.html#RxJS-Reactive-Programming-and-Observables":{"title":"RxJS, Reactive Programming and Observables","path":"\\further-reading.html#RxJS-Reactive-Programming-and-Observables","body":"Observables are known for having a steep learning curve due to the fact that it requires a different way of thinking. Here are some helpful topics about working with and understanding reactive programming using the observable model. RxJS 5 Observables Reference - Reference material on RxJS 5 Observables. There are many breaking changes from RxJS 4- 5 so please use documentation on version 5. RxMarbles - Quick references for visualizing observable value fulfillment through the use of marble diagrams How to debug RxJS code - Blog post explaining how to read and use marble diagrams RxJS 5 Thinking Reactively - Talk from RxJS 5 product lead on how to approach development using RxJS 5 Learn RxJS - Example driven guide to RxJS"},"further-reading.html#Redux-and-ngrx":{"title":"Redux and ngrx","path":"\\further-reading.html#Redux-and-ngrx","body":"A comprehensive guide to ngrx ng2-redux Github ngrx Github - Includes links to ngrx scoped libraries including: store, effects, router Redux Documentation"},"further-reading.html#Keeping-up-to-date":{"title":"Keeping up to date","path":"\\further-reading.html#Keeping-up-to-date","body":"Angular 2 Weekly Notes Angular blog - Includes blog posts for Angular 1.x Angular Air - Angular podcast Adventures in Angular - Angular podcast Angular 2 Changelog - Technical Changelog"},"further-reading.html#Other":{"title":"Other","path":"\\further-reading.html#Other","body":"Webpack 2 Official Docs"},"glossary.html":{"title":"","path":"\\glossary.html","body":"词汇表 装饰器 @Component more @Directive more @HostListener more @Inject more @Injectable more @Input more @NgModule more @Output more @Pipe more @ViewChild more @ViewChildren more"},"glossary.html#词汇表":{"title":"&#x8BCD;&#x6C47;&#x8868;","path":"\\glossary.html#词汇表","body":""},"glossary.html#装饰器":{"title":"&#x88C5;&#x9970;&#x5668;","path":"\\glossary.html#装饰器","body":"@Component more @Directive more @HostListener more @Inject more @Injectable more @Input more @NgModule more @Output more @Pipe more @ViewChild more @ViewChildren more"},"plus.html":{"title":"","path":"\\plus.html","body":"插件 angulartics 它会自动跟踪导航事件并将其发送到您的插件 Provider ，它还提供了简单的方法来发送自定义事件到您的providers ，使您可以轻松地发送任何类型的事件，如当您的用户购买文章或下载文件。这对于跟踪应用内的转化很有用。支持（ Google Analytics ， 百度统计 等） Angular Material"},"plus.html#插件":{"title":"&#x63D2;&#x4EF6;","path":"\\plus.html#插件","body":"angulartics &#x5B83;&#x4F1A;&#x81EA;&#x52A8;&#x8DDF;&#x8E2A;&#x5BFC;&#x822A;&#x4E8B;&#x4EF6;&#x5E76;&#x5C06;&#x5176;&#x53D1;&#x9001;&#x5230;&#x60A8;&#x7684;&#x63D2;&#x4EF6; Provider &#xFF0C;&#x5B83;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x53D1;&#x9001;&#x81EA;&#x5B9A;&#x4E49;&#x4E8B;&#x4EF6;&#x5230;&#x60A8;&#x7684;providers &#xFF0C;&#x4F7F;&#x60A8;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x5730;&#x53D1;&#x9001;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x5F53;&#x60A8;&#x7684;&#x7528;&#x6237;&#x8D2D;&#x4E70;&#x6587;&#x7AE0;&#x6216;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x5BF9;&#x4E8E;&#x8DDF;&#x8E2A;&#x5E94;&#x7528;&#x5185;&#x7684;&#x8F6C;&#x5316;&#x5F88;&#x6709;&#x7528;&#x3002;&#x652F;&#x6301;&#xFF08; Google Analytics &#xFF0C; &#x767E;&#x5EA6;&#x7EDF;&#x8BA1; &#x7B49;&#xFF09; Angular Material"},"practice.html":{"title":"","path":"\\practice.html","body":"#最佳实践与填坑的积累 1. 删除由Angular组件创建的Host HTML元素选择器 写一个 remove-host 指令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //remove the host of avatar to be rendered as svg @Directive ( selector: '[remove-host]' ) class RemoveHost  constructor ( private el: ElementRef )   //wait for the component to render completely ngOnInit()  var nativeElement: HTMLElement = this .el.nativeElement, parentElement: HTMLElement = nativeElement.parentElement; // move all children out of the element while (nativeElement.firstChild)  parentElement.insertBefore(nativeElement.firstChild, nativeElement);  // remove the empty element(the host) parentElement.removeChild(nativeElement);   使用方式： avatar [name]=hero.name remove-host/avatar 来自 stackoverflow 2.判断 ng-content 为空 Wrap ng-content in an HTML element like a div to get a local reference to it, then bind the ngIf expression to ref.childNodes.length == 0 : 1 2 3 4 template: `div #refng-content/ng-content/div span *ngIf=ref.childNodes.length == 0 Display this if ng-content is empty! /span` 来自 stackoverflow"},"vs_react.html":{"title":"","path":"\\vs_react.html","body":"为什么我们选择Angular 2 而不是 React用于我们的企业级应用开发 作者：Justin Goodhew 原文链接 由于这在开发者社区中是一个非常有争议的话题，所以随着我们更深入的理解并结合收到的反馈，我们将不断更新这篇博客。我也想推出一些限定词，所以大家都明白我们来自哪里。 我们的背景 我们的公司由我的联合创始人和首席技术官，瑞恩·坎贝尔领导，一位拥有18年的经验的软件架构师，过去10年在大型企业。 当我们决定使用Angular 2时，他已经熟悉Angular 1了。但是，在决定使用Angular之前，我们还在React中构建了一个应用程序。 我们也相信Angular和React都是伟大的选择，并允许一些惊人的产品（React： Messenger 和Angular： healthcare.gov ）在其上建立和发展。 根据具体项目，团队以及他们的经验/喜好，制定更加切合实际的决策。 本文的目的是让您了解我们的思想过程，并了解我们采用Angular的旅程中的一些发现。 以下是两种技术的简要概述： Angular 2  —由Google支持，是最新的JS（javascript）框架。 主要特点： 坚持己见—用“Angular 方式”写东西 Typescript 通常能提高效率 有很多由Google支持的样板文件和可重复使用的组件 React  —由Facebook支持，是一个在JS语言中的库，而不是一个框架。 主要特点： 开放—React允许开发人员更多的灵活性和自由度 更自由的选择 更新和频繁的更改 库 vs. 框架 最大的区别是它们是如何组织的。 React是一个 库 ，angular是一个 框架 。 定义如下： 库：我将使用React库，现在我必须决定所有其他将要用到的支持库：路由，model 管理和构建工具。 框架：我将使用Angular 2，让我们开始用Angular 2的方式构建一个应用程序。 因此，我们不会将Angular 2与独立的React进行比较，我们正在与React以及获得与Angular 2功能相同的所有其他软件包（类似React + Redux + React router + Babel）进行比较。 我们的 React 经验 当我们在React中构建一个应用程序时，我们真的喜欢这个库。我们对所有的可能性感到兴奋，前期学习远低于Angular。当我们开始构建我们的第一个React Native应用程序时，我们的团队对React的经验有限，而且生态系统频繁更新。 我们知道我们可以使用React来快速创建一个MVP，这是非常重要的，因为这个项目的排期很短。我们的第一步是获得项目设置，这意味着找到正确的配套工具进行集成。这是我们犯了重大错误的地方。我们选择使用 @exponent/ex-navigator 一个路由器库，它似乎有很好的支持，是由exponentjs开发的，他们以React生态系统中的优质工具而闻名。 我们开始整理应用程序的原型，直到我们开始尝试传递数据的应用程序，我们注意到，这个路由器是不实用和废弃的。你必须改变state ，通过导航器传递它，这是你不应该在现代React应用程序中做的第一件事情。 这个经历让我们对使用React构建应用程序感到失望。 React本身是令人惊讶的，在我们的团队中没有一个关于React本身的意见。不幸的是，我们选择的库却不可同日而语。但这是我们自己的错误，如果你对你的初始选择更加谨慎，你可以避免这些问题。然而，总是存在你正在使用的库被废弃的风险。 我们的 Angular 2 经验： 我们用 Angular 构建了多个应用。 Angular 2框架中的所有部分，包括高级架构都由Google提供支持。这真的帮助大家融入同一个页面，标准化大团队，但它也导致了一些问题。 对于初学者，需要很多思考才能入门Angular 2和它提供的每个模块。它感觉像一个企业开发人员会熟悉的高质量框架。它正在推动基于Web的应用程序框架中预期的界限。 我们一直在使用jQuery甚至是Backbone来开发应用程序。我们的团队喜欢Angular 2 的依赖注入，使用响应式编程可观察模式构建的内置即用型HTTP模块，一个精心设计的Angular 2 升级程序允许将大型项目逐个移动到Angular 2。 我所遇到的唯一缺点是框架的一切还没有完全被记录下来。 到目前为止，Angular的文档质量很好，但是只能涉及到许多Angular 2模块的表面。作为一个团队，我们通过深入了解Angular 2源代码并分享我们的知识，成为专家，一起工作。 一般来说，Angular 2给我们留下了深刻的印象，它是我们的首选框架。我们已经能够比过去的框架更容易完成功能。 TypeScript，记录的最佳实践，以及Angular 2架构使构建应用程序更愉快。我们能够了解OOP，设计模式和最佳实践架构，并将其应用于web。 为什么Angular更好？ 我们的客户主要是希望从开源获益的大型企业。 当选择软件时，他们关心通过以下方式降低风险： 技术一致性 社区支持 清晰的最佳实践 最小未知 他们有数百万的用户，以及数百万或数十亿美元，受他们管理的软件影响。 这些决定是至关重要的，有时甚至关乎生死。 他们还坚持使用一种技术很长时间，需要一致性，清晰的最佳实践和最小未知。 必须降低技术风险，以允许企业利用开源的力量，并从开源社区提供的惊人的工作中获益。 企业如何量化风险？ 企业在三个不同领域量化风险：支持，社区和风险。 当在这些领域中比较React和Angular 2时，根据企业的需求，你可以更好地了解为什么Angular 2有利于他们。 周边的技术支持 React —中断支持很快，保持更新是很困难的 Angular 2 —Google公开支持时间和版本迭代安排：2.0版之后没有更多突破性变化 可雇佣 React 大量社区追随者，会有大量人才储备。 更少标准化/更多培训 - 由于技术的开放性开发者将以自己的方式构建。 Angular 大量社区追随者，会有大量人才储备。 上手简单 - 开发人员将遵循类似的最佳实践。 标准化 - Google撰写了如何使用框架的最佳实践。 被支持者/创造者遗弃的潜在风险 React 支持 - 高度支持，增长的社区。 依赖他人 - 高。 库由Facebook支持，但其他需要的部分基本由第三方建立。 Angular 支持 - 高度支持，增长的社区。 依赖他人 - 全面支持。 最小化依赖于除Google和他们的开发团队之外的其他人。 结论 基于我们与React和Angular 2开发的经验以及客户的需求，我们决定使用Angular。 这并不意味着我们不能接受新的选择，但是现在，对于我们的客户，Angular符合他们的需求，我们对结果感到非常激动。 我们知道有很多关于这个问题的意见，所以请随时让我们知道你选择了什么，原因为何。 我们将深入探讨这两个框架中的调试和开发工具，以便更新。"},"vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发":{"title":"&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x9009;&#x62E9;Angular 2 &#x800C;&#x4E0D;&#x662F; React&#x7528;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x4F01;&#x4E1A;&#x7EA7;&#x5E94;&#x7528;&#x5F00;&#x53D1;","path":"\\vs_react.html#为什么我们选择Angular-2-而不是-React用于我们的企业级应用开发","body":"&#x4F5C;&#x8005;&#xFF1A;Justin Goodhew &#x539F;&#x6587;&#x94FE;&#x63A5; &#x7531;&#x4E8E;&#x8FD9;&#x5728;&#x5F00;&#x53D1;&#x8005;&#x793E;&#x533A;&#x4E2D;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x6709;&#x4E89;&#x8BAE;&#x7684;&#x8BDD;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x968F;&#x7740;&#x6211;&#x4EEC;&#x66F4;&#x6DF1;&#x5165;&#x7684;&#x7406;&#x89E3;&#x5E76;&#x7ED3;&#x5408;&#x6536;&#x5230;&#x7684;&#x53CD;&#x9988;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4E0D;&#x65AD;&#x66F4;&#x65B0;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x3002;&#x6211;&#x4E5F;&#x60F3;&#x63A8;&#x51FA;&#x4E00;&#x4E9B;&#x9650;&#x5B9A;&#x8BCD;&#xFF0C;&#x6240;&#x4EE5;&#x5927;&#x5BB6;&#x90FD;&#x660E;&#x767D;&#x6211;&#x4EEC;&#x6765;&#x81EA;&#x54EA;&#x91CC;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x80CC;&#x666F; &#x6211;&#x4EEC;&#x7684;&#x516C;&#x53F8;&#x7531;&#x6211;&#x7684;&#x8054;&#x5408;&#x521B;&#x59CB;&#x4EBA;&#x548C;&#x9996;&#x5E2D;&#x6280;&#x672F;&#x5B98;&#xFF0C;&#x745E;&#x6069;&#xB7;&#x574E;&#x8D1D;&#x5C14;&#x9886;&#x5BFC;&#xFF0C;&#x4E00;&#x4F4D;&#x62E5;&#x6709;18&#x5E74;&#x7684;&#x7ECF;&#x9A8C;&#x7684;&#x8F6F;&#x4EF6;&#x67B6;&#x6784;&#x5E08;&#xFF0C;&#x8FC7;&#x53BB;10&#x5E74;&#x5728;&#x5927;&#x578B;&#x4F01;&#x4E1A;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x51B3;&#x5B9A;&#x4F7F;&#x7528;Angular 2&#x65F6;&#xFF0C;&#x4ED6;&#x5DF2;&#x7ECF;&#x719F;&#x6089;Angular 1&#x4E86;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5728;&#x51B3;&#x5B9A;&#x4F7F;&#x7528;Angular&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x5728;React&#x4E2D;&#x6784;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x6211;&#x4EEC;&#x4E5F;&#x76F8;&#x4FE1;Angular&#x548C;React&#x90FD;&#x662F;&#x4F1F;&#x5927;&#x7684;&#x9009;&#x62E9;&#xFF0C;&#x5E76;&#x5141;&#x8BB8;&#x4E00;&#x4E9B;&#x60CA;&#x4EBA;&#x7684;&#x4EA7;&#x54C1;&#xFF08;React&#xFF1A; Messenger &#x548C;Angular&#xFF1A; healthcare.gov &#xFF09;&#x5728;&#x5176;&#x4E0A;&#x5EFA;&#x7ACB;&#x548C;&#x53D1;&#x5C55;&#x3002; &#x6839;&#x636E;&#x5177;&#x4F53;&#x9879;&#x76EE;&#xFF0C;&#x56E2;&#x961F;&#x4EE5;&#x53CA;&#x4ED6;&#x4EEC;&#x7684;&#x7ECF;&#x9A8C;/&#x559C;&#x597D;&#xFF0C;&#x5236;&#x5B9A;&#x66F4;&#x52A0;&#x5207;&#x5408;&#x5B9E;&#x9645;&#x7684;&#x51B3;&#x7B56;&#x3002; &#x672C;&#x6587;&#x7684;&#x76EE;&#x7684;&#x662F;&#x8BA9;&#x60A8;&#x4E86;&#x89E3;&#x6211;&#x4EEC;&#x7684;&#x601D;&#x60F3;&#x8FC7;&#x7A0B;&#xFF0C;&#x5E76;&#x4E86;&#x89E3;&#x6211;&#x4EEC;&#x91C7;&#x7528;Angular&#x7684;&#x65C5;&#x7A0B;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x53D1;&#x73B0;&#x3002; &#x4EE5;&#x4E0B;&#x662F;&#x4E24;&#x79CD;&#x6280;&#x672F;&#x7684;&#x7B80;&#x8981;&#x6982;&#x8FF0;&#xFF1A; Angular 2 &#x200A;&#x2014;&#x7531;Google&#x652F;&#x6301;&#xFF0C;&#x662F;&#x6700;&#x65B0;&#x7684;JS&#xFF08;javascript&#xFF09;&#x6846;&#x67B6;&#x3002; &#x4E3B;&#x8981;&#x7279;&#x70B9;&#xFF1A; &#x575A;&#x6301;&#x5DF1;&#x89C1;&#x2014;&#x7528;&#x201C;Angular &#x65B9;&#x5F0F;&#x201D;&#x5199;&#x4E1C;&#x897F; Typescript &#x901A;&#x5E38;&#x80FD;&#x63D0;&#x9AD8;&#x6548;&#x7387; &#x6709;&#x5F88;&#x591A;&#x7531;Google&#x652F;&#x6301;&#x7684;&#x6837;&#x677F;&#x6587;&#x4EF6;&#x548C;&#x53EF;&#x91CD;&#x590D;&#x4F7F;&#x7528;&#x7684;&#x7EC4;&#x4EF6; React &#x200A;&#x2014;&#x7531;Facebook&#x652F;&#x6301;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5728;JS&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x5E93;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6846;&#x67B6;&#x3002; &#x4E3B;&#x8981;&#x7279;&#x70B9;&#xFF1A; &#x5F00;&#x653E;&#x2014;React&#x5141;&#x8BB8;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x66F4;&#x591A;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x548C;&#x81EA;&#x7531;&#x5EA6; &#x66F4;&#x81EA;&#x7531;&#x7684;&#x9009;&#x62E9; &#x66F4;&#x65B0;&#x548C;&#x9891;&#x7E41;&#x7684;&#x66F4;&#x6539; &#x5E93; vs. &#x6846;&#x67B6; &#x6700;&#x5927;&#x7684;&#x533A;&#x522B;&#x662F;&#x5B83;&#x4EEC;&#x662F;&#x5982;&#x4F55;&#x7EC4;&#x7EC7;&#x7684;&#x3002; React&#x662F;&#x4E00;&#x4E2A; &#x5E93; &#xFF0C;angular&#x662F;&#x4E00;&#x4E2A; &#x6846;&#x67B6; &#x3002; &#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; &#x5E93;&#xFF1A;&#x6211;&#x5C06;&#x4F7F;&#x7528;React&#x5E93;&#xFF0C;&#x73B0;&#x5728;&#x6211;&#x5FC5;&#x987B;&#x51B3;&#x5B9A;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x5C06;&#x8981;&#x7528;&#x5230;&#x7684;&#x652F;&#x6301;&#x5E93;&#xFF1A;&#x8DEF;&#x7531;&#xFF0C;model &#x7BA1;&#x7406;&#x548C;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x3002; &#x6846;&#x67B6;&#xFF1A;&#x6211;&#x5C06;&#x4F7F;&#x7528;Angular 2&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x7528;Angular 2&#x7684;&#x65B9;&#x5F0F;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x4F1A;&#x5C06;Angular 2&#x4E0E;&#x72EC;&#x7ACB;&#x7684;React&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x4E0E;React&#x4EE5;&#x53CA;&#x83B7;&#x5F97;&#x4E0E;Angular 2&#x529F;&#x80FD;&#x76F8;&#x540C;&#x7684;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x8F6F;&#x4EF6;&#x5305;&#xFF08;&#x7C7B;&#x4F3C;React + Redux + React router + Babel&#xFF09;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002; &#x6211;&#x4EEC;&#x7684; React &#x7ECF;&#x9A8C; &#x5F53;&#x6211;&#x4EEC;&#x5728;React&#x4E2D;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x771F;&#x7684;&#x559C;&#x6B22;&#x8FD9;&#x4E2A;&#x5E93;&#x3002;&#x6211;&#x4EEC;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x611F;&#x5230;&#x5174;&#x594B;&#xFF0C;&#x524D;&#x671F;&#x5B66;&#x4E60;&#x8FDC;&#x4F4E;&#x4E8E;Angular&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x6211;&#x4EEC;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;React Native&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x56E2;&#x961F;&#x5BF9;React&#x7684;&#x7ECF;&#x9A8C;&#x6709;&#x9650;&#xFF0C;&#x800C;&#x4E14;&#x751F;&#x6001;&#x7CFB;&#x7EDF;&#x9891;&#x7E41;&#x66F4;&#x65B0;&#x3002; &#x6211;&#x4EEC;&#x77E5;&#x9053;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;React&#x6765;&#x5FEB;&#x901F;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;MVP&#xFF0C;&#x8FD9;&#x662F;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x7684;&#x6392;&#x671F;&#x5F88;&#x77ED;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x7B2C;&#x4E00;&#x6B65;&#x662F;&#x83B7;&#x5F97;&#x9879;&#x76EE;&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x627E;&#x5230;&#x6B63;&#x786E;&#x7684;&#x914D;&#x5957;&#x5DE5;&#x5177;&#x8FDB;&#x884C;&#x96C6;&#x6210;&#x3002;&#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x72AF;&#x4E86;&#x91CD;&#x5927;&#x9519;&#x8BEF;&#x7684;&#x5730;&#x65B9;&#x3002;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x4F7F;&#x7528; @exponent/ex-navigator &#x4E00;&#x4E2A;&#x8DEF;&#x7531;&#x5668;&#x5E93;&#xFF0C;&#x5B83;&#x4F3C;&#x4E4E;&#x6709;&#x5F88;&#x597D;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x662F;&#x7531;exponentjs&#x5F00;&#x53D1;&#x7684;&#xFF0C;&#x4ED6;&#x4EEC;&#x4EE5;React&#x751F;&#x6001;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x4F18;&#x8D28;&#x5DE5;&#x5177;&#x800C;&#x95FB;&#x540D;&#x3002; &#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x6574;&#x7406;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x539F;&#x578B;&#xFF0C;&#x76F4;&#x5230;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x5C1D;&#x8BD5;&#x4F20;&#x9012;&#x6570;&#x636E;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x6211;&#x4EEC;&#x6CE8;&#x610F;&#x5230;&#xFF0C;&#x8FD9;&#x4E2A;&#x8DEF;&#x7531;&#x5668;&#x662F;&#x4E0D;&#x5B9E;&#x7528;&#x548C;&#x5E9F;&#x5F03;&#x7684;&#x3002;&#x4F60;&#x5FC5;&#x987B;&#x6539;&#x53D8;state &#xFF0C;&#x901A;&#x8FC7;&#x5BFC;&#x822A;&#x5668;&#x4F20;&#x9012;&#x5B83;&#xFF0C;&#x8FD9;&#x662F;&#x4F60;&#x4E0D;&#x5E94;&#x8BE5;&#x5728;&#x73B0;&#x4EE3;React&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x505A;&#x7684;&#x7B2C;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x3002; &#x8FD9;&#x4E2A;&#x7ECF;&#x5386;&#x8BA9;&#x6211;&#x4EEC;&#x5BF9;&#x4F7F;&#x7528;React&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x611F;&#x5230;&#x5931;&#x671B;&#x3002; React&#x672C;&#x8EAB;&#x662F;&#x4EE4;&#x4EBA;&#x60CA;&#x8BB6;&#x7684;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x56E2;&#x961F;&#x4E2D;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x5173;&#x4E8E;React&#x672C;&#x8EAB;&#x7684;&#x610F;&#x89C1;&#x3002;&#x4E0D;&#x5E78;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x7684;&#x5E93;&#x5374;&#x4E0D;&#x53EF;&#x540C;&#x65E5;&#x800C;&#x8BED;&#x3002;&#x4F46;&#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x5BF9;&#x4F60;&#x7684;&#x521D;&#x59CB;&#x9009;&#x62E9;&#x66F4;&#x52A0;&#x8C28;&#x614E;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x603B;&#x662F;&#x5B58;&#x5728;&#x4F60;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x5E93;&#x88AB;&#x5E9F;&#x5F03;&#x7684;&#x98CE;&#x9669;&#x3002; &#x6211;&#x4EEC;&#x7684; Angular 2 &#x7ECF;&#x9A8C;&#xFF1A; &#x6211;&#x4EEC;&#x7528; Angular &#x6784;&#x5EFA;&#x4E86;&#x591A;&#x4E2A;&#x5E94;&#x7528;&#x3002; Angular 2&#x6846;&#x67B6;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x90E8;&#x5206;&#xFF0C;&#x5305;&#x62EC;&#x9AD8;&#x7EA7;&#x67B6;&#x6784;&#x90FD;&#x7531;Google&#x63D0;&#x4F9B;&#x652F;&#x6301;&#x3002;&#x8FD9;&#x771F;&#x7684;&#x5E2E;&#x52A9;&#x5927;&#x5BB6;&#x878D;&#x5165;&#x540C;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x6807;&#x51C6;&#x5316;&#x5927;&#x56E2;&#x961F;&#xFF0C;&#x4F46;&#x5B83;&#x4E5F;&#x5BFC;&#x81F4;&#x4E86;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x3002; &#x5BF9;&#x4E8E;&#x521D;&#x5B66;&#x8005;&#xFF0C;&#x9700;&#x8981;&#x5F88;&#x591A;&#x601D;&#x8003;&#x624D;&#x80FD;&#x5165;&#x95E8;Angular 2&#x548C;&#x5B83;&#x63D0;&#x4F9B;&#x7684;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x3002;&#x5B83;&#x611F;&#x89C9;&#x50CF;&#x4E00;&#x4E2A;&#x4F01;&#x4E1A;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x4F1A;&#x719F;&#x6089;&#x7684;&#x9AD8;&#x8D28;&#x91CF;&#x6846;&#x67B6;&#x3002;&#x5B83;&#x6B63;&#x5728;&#x63A8;&#x52A8;&#x57FA;&#x4E8E;Web&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6846;&#x67B6;&#x4E2D;&#x9884;&#x671F;&#x7684;&#x754C;&#x9650;&#x3002; &#x6211;&#x4EEC;&#x4E00;&#x76F4;&#x5728;&#x4F7F;&#x7528;jQuery&#x751A;&#x81F3;&#x662F;Backbone&#x6765;&#x5F00;&#x53D1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x56E2;&#x961F;&#x559C;&#x6B22;Angular 2 &#x7684;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#xFF0C;&#x4F7F;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x53EF;&#x89C2;&#x5BDF;&#x6A21;&#x5F0F;&#x6784;&#x5EFA;&#x7684;&#x5185;&#x7F6E;&#x5373;&#x7528;&#x578B;HTTP&#x6A21;&#x5757;&#xFF0C;&#x4E00;&#x4E2A;&#x7CBE;&#x5FC3;&#x8BBE;&#x8BA1;&#x7684;Angular 2 &#x5347;&#x7EA7;&#x7A0B;&#x5E8F;&#x5141;&#x8BB8;&#x5C06;&#x5927;&#x578B;&#x9879;&#x76EE;&#x9010;&#x4E2A;&#x79FB;&#x52A8;&#x5230;Angular 2&#x3002; &#x6211;&#x6240;&#x9047;&#x5230;&#x7684;&#x552F;&#x4E00;&#x7F3A;&#x70B9;&#x662F;&#x6846;&#x67B6;&#x7684;&#x4E00;&#x5207;&#x8FD8;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x88AB;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002; &#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;Angular&#x7684;&#x6587;&#x6863;&#x8D28;&#x91CF;&#x5F88;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x80FD;&#x6D89;&#x53CA;&#x5230;&#x8BB8;&#x591A;Angular 2&#x6A21;&#x5757;&#x7684;&#x8868;&#x9762;&#x3002;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x56E2;&#x961F;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x6DF1;&#x5165;&#x4E86;&#x89E3;Angular 2&#x6E90;&#x4EE3;&#x7801;&#x5E76;&#x5206;&#x4EAB;&#x6211;&#x4EEC;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x6210;&#x4E3A;&#x4E13;&#x5BB6;&#xFF0C;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#x3002; &#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;Angular 2&#x7ED9;&#x6211;&#x4EEC;&#x7559;&#x4E0B;&#x4E86;&#x6DF1;&#x523B;&#x7684;&#x5370;&#x8C61;&#xFF0C;&#x5B83;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x9996;&#x9009;&#x6846;&#x67B6;&#x3002;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x80FD;&#x591F;&#x6BD4;&#x8FC7;&#x53BB;&#x7684;&#x6846;&#x67B6;&#x66F4;&#x5BB9;&#x6613;&#x5B8C;&#x6210;&#x529F;&#x80FD;&#x3002; TypeScript&#xFF0C;&#x8BB0;&#x5F55;&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#xFF0C;&#x4EE5;&#x53CA;Angular 2&#x67B6;&#x6784;&#x4F7F;&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x66F4;&#x6109;&#x5FEB;&#x3002;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x4E86;&#x89E3;OOP&#xFF0C;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x548C;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x67B6;&#x6784;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x5E94;&#x7528;&#x4E8E;web&#x3002; &#x4E3A;&#x4EC0;&#x4E48;Angular&#x66F4;&#x597D;&#xFF1F; &#x6211;&#x4EEC;&#x7684;&#x5BA2;&#x6237;&#x4E3B;&#x8981;&#x662F;&#x5E0C;&#x671B;&#x4ECE;&#x5F00;&#x6E90;&#x83B7;&#x76CA;&#x7684;&#x5927;&#x578B;&#x4F01;&#x4E1A;&#x3002; &#x5F53;&#x9009;&#x62E9;&#x8F6F;&#x4EF6;&#x65F6;&#xFF0C;&#x4ED6;&#x4EEC;&#x5173;&#x5FC3;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x65B9;&#x5F0F;&#x964D;&#x4F4E;&#x98CE;&#x9669;&#xFF1A; &#x6280;&#x672F;&#x4E00;&#x81F4;&#x6027; &#x793E;&#x533A;&#x652F;&#x6301; &#x6E05;&#x6670;&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5; &#x6700;&#x5C0F;&#x672A;&#x77E5; &#x4ED6;&#x4EEC;&#x6709;&#x6570;&#x767E;&#x4E07;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x4EE5;&#x53CA;&#x6570;&#x767E;&#x4E07;&#x6216;&#x6570;&#x5341;&#x4EBF;&#x7F8E;&#x5143;&#xFF0C;&#x53D7;&#x4ED6;&#x4EEC;&#x7BA1;&#x7406;&#x7684;&#x8F6F;&#x4EF6;&#x5F71;&#x54CD;&#x3002; &#x8FD9;&#x4E9B;&#x51B3;&#x5B9A;&#x662F;&#x81F3;&#x5173;&#x91CD;&#x8981;&#x7684;&#xFF0C;&#x6709;&#x65F6;&#x751A;&#x81F3;&#x5173;&#x4E4E;&#x751F;&#x6B7B;&#x3002; &#x4ED6;&#x4EEC;&#x8FD8;&#x575A;&#x6301;&#x4F7F;&#x7528;&#x4E00;&#x79CD;&#x6280;&#x672F;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x6E05;&#x6670;&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x548C;&#x6700;&#x5C0F;&#x672A;&#x77E5;&#x3002; &#x5FC5;&#x987B;&#x964D;&#x4F4E;&#x6280;&#x672F;&#x98CE;&#x9669;&#xFF0C;&#x4EE5;&#x5141;&#x8BB8;&#x4F01;&#x4E1A;&#x5229;&#x7528;&#x5F00;&#x6E90;&#x7684;&#x529B;&#x91CF;&#xFF0C;&#x5E76;&#x4ECE;&#x5F00;&#x6E90;&#x793E;&#x533A;&#x63D0;&#x4F9B;&#x7684;&#x60CA;&#x4EBA;&#x7684;&#x5DE5;&#x4F5C;&#x4E2D;&#x83B7;&#x76CA;&#x3002; &#x4F01;&#x4E1A;&#x5982;&#x4F55;&#x91CF;&#x5316;&#x98CE;&#x9669;&#xFF1F; &#x4F01;&#x4E1A;&#x5728;&#x4E09;&#x4E2A;&#x4E0D;&#x540C;&#x9886;&#x57DF;&#x91CF;&#x5316;&#x98CE;&#x9669;&#xFF1A;&#x652F;&#x6301;&#xFF0C;&#x793E;&#x533A;&#x548C;&#x98CE;&#x9669;&#x3002; &#x5F53;&#x5728;&#x8FD9;&#x4E9B;&#x9886;&#x57DF;&#x4E2D;&#x6BD4;&#x8F83;React&#x548C;Angular 2&#x65F6;&#xFF0C;&#x6839;&#x636E;&#x4F01;&#x4E1A;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x66F4;&#x597D;&#x5730;&#x4E86;&#x89E3;&#x4E3A;&#x4EC0;&#x4E48;Angular 2&#x6709;&#x5229;&#x4E8E;&#x4ED6;&#x4EEC;&#x3002; &#x5468;&#x8FB9;&#x7684;&#x6280;&#x672F;&#x652F;&#x6301; React&#x200A;&#x2014;&#x4E2D;&#x65AD;&#x652F;&#x6301;&#x5F88;&#x5FEB;&#xFF0C;&#x4FDD;&#x6301;&#x66F4;&#x65B0;&#x662F;&#x5F88;&#x56F0;&#x96BE;&#x7684; Angular 2&#x200A;&#x2014;Google&#x516C;&#x5F00;&#x652F;&#x6301;&#x65F6;&#x95F4;&#x548C;&#x7248;&#x672C;&#x8FED;&#x4EE3;&#x5B89;&#x6392;&#xFF1A;2.0&#x7248;&#x4E4B;&#x540E;&#x6CA1;&#x6709;&#x66F4;&#x591A;&#x7A81;&#x7834;&#x6027;&#x53D8;&#x5316; &#x53EF;&#x96C7;&#x4F63; React &#x5927;&#x91CF;&#x793E;&#x533A;&#x8FFD;&#x968F;&#x8005;&#xFF0C;&#x4F1A;&#x6709;&#x5927;&#x91CF;&#x4EBA;&#x624D;&#x50A8;&#x5907;&#x3002; &#x66F4;&#x5C11;&#x6807;&#x51C6;&#x5316;/&#x66F4;&#x591A;&#x57F9;&#x8BAD; - &#x7531;&#x4E8E;&#x6280;&#x672F;&#x7684;&#x5F00;&#x653E;&#x6027;&#x5F00;&#x53D1;&#x8005;&#x5C06;&#x4EE5;&#x81EA;&#x5DF1;&#x7684;&#x65B9;&#x5F0F;&#x6784;&#x5EFA;&#x3002; Angular &#x5927;&#x91CF;&#x793E;&#x533A;&#x8FFD;&#x968F;&#x8005;&#xFF0C;&#x4F1A;&#x6709;&#x5927;&#x91CF;&#x4EBA;&#x624D;&#x50A8;&#x5907;&#x3002; &#x4E0A;&#x624B;&#x7B80;&#x5355; - &#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x5C06;&#x9075;&#x5FAA;&#x7C7B;&#x4F3C;&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x3002; &#x6807;&#x51C6;&#x5316; - Google&#x64B0;&#x5199;&#x4E86;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x3002; &#x88AB;&#x652F;&#x6301;&#x8005;/&#x521B;&#x9020;&#x8005;&#x9057;&#x5F03;&#x7684;&#x6F5C;&#x5728;&#x98CE;&#x9669; React &#x652F;&#x6301; - &#x9AD8;&#x5EA6;&#x652F;&#x6301;&#xFF0C;&#x589E;&#x957F;&#x7684;&#x793E;&#x533A;&#x3002; &#x4F9D;&#x8D56;&#x4ED6;&#x4EBA; - &#x9AD8;&#x3002; &#x5E93;&#x7531;Facebook&#x652F;&#x6301;&#xFF0C;&#x4F46;&#x5176;&#x4ED6;&#x9700;&#x8981;&#x7684;&#x90E8;&#x5206;&#x57FA;&#x672C;&#x7531;&#x7B2C;&#x4E09;&#x65B9;&#x5EFA;&#x7ACB;&#x3002; Angular &#x652F;&#x6301; - &#x9AD8;&#x5EA6;&#x652F;&#x6301;&#xFF0C;&#x589E;&#x957F;&#x7684;&#x793E;&#x533A;&#x3002; &#x4F9D;&#x8D56;&#x4ED6;&#x4EBA; - &#x5168;&#x9762;&#x652F;&#x6301;&#x3002; &#x6700;&#x5C0F;&#x5316;&#x4F9D;&#x8D56;&#x4E8E;&#x9664;Google&#x548C;&#x4ED6;&#x4EEC;&#x7684;&#x5F00;&#x53D1;&#x56E2;&#x961F;&#x4E4B;&#x5916;&#x7684;&#x5176;&#x4ED6;&#x4EBA;&#x3002; &#x7ED3;&#x8BBA; &#x57FA;&#x4E8E;&#x6211;&#x4EEC;&#x4E0E;React&#x548C;Angular 2&#x5F00;&#x53D1;&#x7684;&#x7ECF;&#x9A8C;&#x4EE5;&#x53CA;&#x5BA2;&#x6237;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x6211;&#x4EEC;&#x51B3;&#x5B9A;&#x4F7F;&#x7528;Angular&#x3002; &#x8FD9;&#x5E76;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x63A5;&#x53D7;&#x65B0;&#x7684;&#x9009;&#x62E9;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5728;&#xFF0C;&#x5BF9;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x5BA2;&#x6237;&#xFF0C;Angular&#x7B26;&#x5408;&#x4ED6;&#x4EEC;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x6211;&#x4EEC;&#x5BF9;&#x7ED3;&#x679C;&#x611F;&#x5230;&#x975E;&#x5E38;&#x6FC0;&#x52A8;&#x3002; &#x6211;&#x4EEC;&#x77E5;&#x9053;&#x6709;&#x5F88;&#x591A;&#x5173;&#x4E8E;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x610F;&#x89C1;&#xFF0C;&#x6240;&#x4EE5;&#x8BF7;&#x968F;&#x65F6;&#x8BA9;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x4F60;&#x9009;&#x62E9;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x539F;&#x56E0;&#x4E3A;&#x4F55;&#x3002; &#x6211;&#x4EEC;&#x5C06;&#x6DF1;&#x5165;&#x63A2;&#x8BA8;&#x8FD9;&#x4E24;&#x4E2A;&#x6846;&#x67B6;&#x4E2D;&#x7684;&#x8C03;&#x8BD5;&#x548C;&#x5F00;&#x53D1;&#x5DE5;&#x5177;&#xFF0C;&#x4EE5;&#x4FBF;&#x66F4;&#x65B0;&#x3002;"},"vs_vue2.html":{"title":"","path":"\\vs_vue2.html","body":"聊聊技术选型 - Angular2 vs Vue2 美团点评技术团队发表在掘金上的一篇文章。"},"vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2":{"title":"&#x804A;&#x804A;&#x6280;&#x672F;&#x9009;&#x578B; - Angular2 vs Vue2","path":"\\vs_vue2.html#聊聊技术选型-Angular2-vs-Vue2","body":"&#x7F8E;&#x56E2;&#x70B9;&#x8BC4;&#x6280;&#x672F;&#x56E2;&#x961F;&#x53D1;&#x8868;&#x5728;&#x6398;&#x91D1;&#x4E0A;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x3002;"},"why_angular_2.html":{"title":"","path":"\\why_angular_2.html","body":"Why Angular 2? 现在有许多前端JavaScript框架可供选择，每个都有自己的权衡。 许多人对Angular 1.x提供的功能感到满意。 Angular 2改进了该功能，使其更快，更可扩展和更现代。 在Angular 1.x中发现价值的组织将在Angular 2中找到更多的价值。 数据说话⚡️ 这小节内容是译者加的，因为我认为对于新手而言，学习一个框架是有成本的，特别是对于一个不算简单的技术来说，我希望这篇教程是对新手 友好的 ，所以我首先要让你放心的将时间和精力投入到Angular2 中。那我们先不谈技术细节，先用数据说话。 谷歌趋势 这里我多说一句，最近看一些文章中谷歌趋势截图，大都没有把范围限定在“ 编程 ”上。图中可以看出Vue2非常少，所以在下面比较中不再单独统计。 教程数量 这里我选取的主要是付费课程，因为付费，所以在一定程度上反应了这个框架的市场需求。教程多意味着社区庞大，企业对这方面人才有需求。如果框架冷门用的人不多，那自然不会有人去为其开发教程。 Angular 2 React Vue udemy 12*5 12*4 5 egghead 10 10 无 YouTube 99k+ 240k+ 39k+ 另外还有一些独立的教程网站 angularclass 社区 Angular 2 React Vue stackoverflow 66k+ 80k+ 4k+ GitHub 26k+ 153k+ 16k+ Quora 500+ 1.4k+ 30 stackshare 4.7k+ 2.5k+ 189 相信随着部分angular1.x项目迁移到2.x，应该数量会更多。 注意stackshare取的是stacks数量，但是由于其并不区分Angular版本，所以用相当一部分属于1.x版本。 性能 性能测试数据 angular v2.2.1 angular v2.2.1-indexkey react v15.4.0 react v15.4.0-indexkey vue v2.1.3 vue v1.0.26 1.43 1.23 1.39 1.43 1.37 1.7 对于前端项目而言，一般几千个数据更新基本上不会涉及到性能问题，而且移动端来说，那么小的屏幕，数据量会更少。 所以个人认为，性能并不会成为主要的选择依据，况且性能数据大家都比较接近。 体积 通过执行静态代码分析进行优化，更具体地说是tree-shaking。 精简（包括混淆）。 gzip或brotli压缩。 通过上述方法，我们可以轻松地将打包大小减少到140K左右！ 更多细节可以阅读 Building an Angular Application for Production 。 我想现在你可以放心的开始学习 Angular2 了🔥 Angular 2 的优点 Angular的第一个版本为程序员提供了开发和构建大规模JavaScript应用程序的工具，但随着时代进步它逐渐显露出许多缺陷和尖锐的问题。 Angular 2正是在过去五年社区的这些反馈之上建立的。 Angular 2 很简单 Angular 2比Angular 1.x更加现代，更有能力，更容易让新手学习，同时也更容易让项目老手使用。 使用Angular 1，开发者必须了解 Controllers, Services, Factories, Providers 和其他可能令人困惑的概念之间的差异，尤其是对于新手来说。 Angular 2是一个更流线型的框架，让开发者专注于简单地构建JavaScript类。视图和控制器被替换为组件，这可以被描述为精简版指令。甚至经验丰富的Angular程序员也不总是知道Angular1.x指令的所有功能。 Angular 2组件比起Angular 1.x的指令，它们的API特性更容易阅读。此外，为了帮助轻松过渡到Angular 2，Angular团队向Angular 1.5添加了一个 .component 方法，该方法已由社区成员Todd Motto支持到v1.3。 TypeScript Angular 2是用TypeScript编写的，它是一个实现许多新ES2016+特性的JavaScript超集。 通过专注于使框架更易于计算机处理，Angular 2允许更丰富的开发生态系统。 使用复杂文本编辑器（或IDE）的开发者会注意到自动完成和类型建议的显着改进。 这些改进有助于减少学习Angular 2的认知负担。幸运的是，对于传统的ES5 JavaScript程序员，这并不意味着开发必须在TypeScript或ES2015中完成：程序员仍然可以编写运行原生的JavaScript。 熟悉 尽管是一个完整的重写，Angular 2保留了Angular 1.x的许多核心概念和约定，例如。 一个简化的，“本地JS”依赖注入的实现。 这意味着已经熟练使用Angular的程序员将比另一个类似React或类似Ember的框架更容易迁移到Angular 2。 性能和移动端 Angular 2在设计之初就考虑到移动端。除了有限的处理能力，移动设备具有将它们与传统计算机分离的其他特征和限制。触摸界面，有限的屏幕和移动硬件都已在Angular 2中考虑。 台式计算机也将在性能和响应性方面取得显着的改进。 Angular 2，像React和其他现代框架一样，可以通过在服务器上甚至在Web worker中渲染HTML来提高性能。根据application/site，这种同构呈现可以使用户的体验感觉更加即时。 对性能的追求并不以预渲染结束。 Angular 2通过与 NativeScript （一种用于桥接JavaScript和移动的开源库）集成，使其可移植到本机移动。此外，Ionic团队正在开发一个基于Angular 2的新版本，它为Angular 2提供了另一种利用原生功能的方式。 项目架构与维护 Angular的第一次迭代为开发者提供了一个用于开发应用程序的高度灵活的框架。这是许多Web开发者来说是一个戏剧性的转变，虽然那个框架是有帮助的，很明显，它往往太灵活。随着时间的推移，最佳实践得到了发展，社区驱动的结构得到了认可。 Angular1.x试图解决与JavaScript相关的各种浏览器限制。这是通过引入使用依赖注入的模块系统来完成的。这个系统是新颖的，但不幸的是有一些工具上的问题，特别是压缩和静态分析。 Angular 2.x使用ES2015模块系统和现代化的包装工具，如webpack或SystemJS。模块远远少于“Angular方式”，并且更容易编写更通用的JavaScript并将其插入到Angular中。删除压缩方案和添加严格的规定使得维护现有应用程序更加简单。新的模块系统也使得更容易开发有效的工具，可以更好地开发大型项目。 新特性 Angular 2 中的一些新特性： Form Builder Change Detection Templating Routing Annotations Observables Shadow DOM Angular 1 &amp; 2 之间的差异 请注意，“Transitional Architecture”是指以类似于Angular 2的组件样式的方式编写的Angular 1应用程序的样式，但是使用了控制器和指令，而不是TypeScript类。 Old School Angular 1.x Angular 1.x 最佳实践 过渡架构 Angular 2 嵌套作用域 (“$scope”, watches) Used heavily Avoided Avoided Gone Directives vs controllers Use as alternatives Used together Directives as components Component directives Controller and service 实现 Functions Functions ES6 classes ES6 classes 模块系统 Angular’s modules Angular’s modules ES6 modules ES6 modules 需要 Transpiler No No TypeScript TypeScript"},"why_angular_2.html#Why-Angular-2":{"title":"Why Angular 2?","path":"\\why_angular_2.html#Why-Angular-2","body":"&#x73B0;&#x5728;&#x6709;&#x8BB8;&#x591A;&#x524D;&#x7AEF;JavaScript&#x6846;&#x67B6;&#x53EF;&#x4F9B;&#x9009;&#x62E9;&#xFF0C;&#x6BCF;&#x4E2A;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x6743;&#x8861;&#x3002; &#x8BB8;&#x591A;&#x4EBA;&#x5BF9;Angular 1.x&#x63D0;&#x4F9B;&#x7684;&#x529F;&#x80FD;&#x611F;&#x5230;&#x6EE1;&#x610F;&#x3002; Angular 2&#x6539;&#x8FDB;&#x4E86;&#x8BE5;&#x529F;&#x80FD;&#xFF0C;&#x4F7F;&#x5176;&#x66F4;&#x5FEB;&#xFF0C;&#x66F4;&#x53EF;&#x6269;&#x5C55;&#x548C;&#x66F4;&#x73B0;&#x4EE3;&#x3002; &#x5728;Angular 1.x&#x4E2D;&#x53D1;&#x73B0;&#x4EF7;&#x503C;&#x7684;&#x7EC4;&#x7EC7;&#x5C06;&#x5728;Angular 2&#x4E2D;&#x627E;&#x5230;&#x66F4;&#x591A;&#x7684;&#x4EF7;&#x503C;&#x3002;"},"why_angular_2.html#数据说话⚡️":{"title":"&#x6570;&#x636E;&#x8BF4;&#x8BDD;&#x26A1;&#xFE0F;","path":"\\why_angular_2.html#数据说话⚡️","body":"&#x8FD9;&#x5C0F;&#x8282;&#x5185;&#x5BB9;&#x662F;&#x8BD1;&#x8005;&#x52A0;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x8BA4;&#x4E3A;&#x5BF9;&#x4E8E;&#x65B0;&#x624B;&#x800C;&#x8A00;&#xFF0C;&#x5B66;&#x4E60;&#x4E00;&#x4E2A;&#x6846;&#x67B6;&#x662F;&#x6709;&#x6210;&#x672C;&#x7684;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x4E0D;&#x7B97;&#x7B80;&#x5355;&#x7684;&#x6280;&#x672F;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x5E0C;&#x671B;&#x8FD9;&#x7BC7;&#x6559;&#x7A0B;&#x662F;&#x5BF9;&#x65B0;&#x624B; &#x53CB;&#x597D;&#x7684; &#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x9996;&#x5148;&#x8981;&#x8BA9;&#x4F60;&#x653E;&#x5FC3;&#x7684;&#x5C06;&#x65F6;&#x95F4;&#x548C;&#x7CBE;&#x529B;&#x6295;&#x5165;&#x5230;Angular2 &#x4E2D;&#x3002;&#x90A3;&#x6211;&#x4EEC;&#x5148;&#x4E0D;&#x8C08;&#x6280;&#x672F;&#x7EC6;&#x8282;&#xFF0C;&#x5148;&#x7528;&#x6570;&#x636E;&#x8BF4;&#x8BDD;&#x3002; &#x8C37;&#x6B4C;&#x8D8B;&#x52BF; &#x8FD9;&#x91CC;&#x6211;&#x591A;&#x8BF4;&#x4E00;&#x53E5;&#xFF0C;&#x6700;&#x8FD1;&#x770B;&#x4E00;&#x4E9B;&#x6587;&#x7AE0;&#x4E2D;&#x8C37;&#x6B4C;&#x8D8B;&#x52BF;&#x622A;&#x56FE;&#xFF0C;&#x5927;&#x90FD;&#x6CA1;&#x6709;&#x628A;&#x8303;&#x56F4;&#x9650;&#x5B9A;&#x5728;&#x201C; &#x7F16;&#x7A0B; &#x201D;&#x4E0A;&#x3002;&#x56FE;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;Vue2&#x975E;&#x5E38;&#x5C11;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x4E0B;&#x9762;&#x6BD4;&#x8F83;&#x4E2D;&#x4E0D;&#x518D;&#x5355;&#x72EC;&#x7EDF;&#x8BA1;&#x3002; &#x6559;&#x7A0B;&#x6570;&#x91CF; &#x8FD9;&#x91CC;&#x6211;&#x9009;&#x53D6;&#x7684;&#x4E3B;&#x8981;&#x662F;&#x4ED8;&#x8D39;&#x8BFE;&#x7A0B;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED8;&#x8D39;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x53CD;&#x5E94;&#x4E86;&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x7684;&#x5E02;&#x573A;&#x9700;&#x6C42;&#x3002;&#x6559;&#x7A0B;&#x591A;&#x610F;&#x5473;&#x7740;&#x793E;&#x533A;&#x5E9E;&#x5927;&#xFF0C;&#x4F01;&#x4E1A;&#x5BF9;&#x8FD9;&#x65B9;&#x9762;&#x4EBA;&#x624D;&#x6709;&#x9700;&#x6C42;&#x3002;&#x5982;&#x679C;&#x6846;&#x67B6;&#x51B7;&#x95E8;&#x7528;&#x7684;&#x4EBA;&#x4E0D;&#x591A;&#xFF0C;&#x90A3;&#x81EA;&#x7136;&#x4E0D;&#x4F1A;&#x6709;&#x4EBA;&#x53BB;&#x4E3A;&#x5176;&#x5F00;&#x53D1;&#x6559;&#x7A0B;&#x3002; Angular 2 React Vue udemy 12*5 12*4 5 egghead 10 10 &#x65E0; YouTube 99k+ 240k+ 39k+ &#x53E6;&#x5916;&#x8FD8;&#x6709;&#x4E00;&#x4E9B;&#x72EC;&#x7ACB;&#x7684;&#x6559;&#x7A0B;&#x7F51;&#x7AD9; angularclass &#x793E;&#x533A; Angular 2 React Vue stackoverflow 66k+ 80k+ 4k+ GitHub 26k+ 153k+ 16k+ Quora 500+ 1.4k+ 30 stackshare 4.7k+ 2.5k+ 189 &#x76F8;&#x4FE1;&#x968F;&#x7740;&#x90E8;&#x5206;angular1.x&#x9879;&#x76EE;&#x8FC1;&#x79FB;&#x5230;2.x&#xFF0C;&#x5E94;&#x8BE5;&#x6570;&#x91CF;&#x4F1A;&#x66F4;&#x591A;&#x3002; &#x6CE8;&#x610F;stackshare&#x53D6;&#x7684;&#x662F;stacks&#x6570;&#x91CF;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x5176;&#x5E76;&#x4E0D;&#x533A;&#x5206;Angular&#x7248;&#x672C;&#xFF0C;&#x6240;&#x4EE5;&#x7528;&#x76F8;&#x5F53;&#x4E00;&#x90E8;&#x5206;&#x5C5E;&#x4E8E;1.x&#x7248;&#x672C;&#x3002; &#x6027;&#x80FD; &#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x6570;&#x636E; angular v2.2.1 angular v2.2.1-indexkey react v15.4.0 react v15.4.0-indexkey vue v2.1.3 vue v1.0.26 1.43 1.23 1.39 1.43 1.37 1.7 &#x5BF9;&#x4E8E;&#x524D;&#x7AEF;&#x9879;&#x76EE;&#x800C;&#x8A00;&#xFF0C;&#x4E00;&#x822C;&#x51E0;&#x5343;&#x4E2A;&#x6570;&#x636E;&#x66F4;&#x65B0;&#x57FA;&#x672C;&#x4E0A;&#x4E0D;&#x4F1A;&#x6D89;&#x53CA;&#x5230;&#x6027;&#x80FD;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x4E14;&#x79FB;&#x52A8;&#x7AEF;&#x6765;&#x8BF4;&#xFF0C;&#x90A3;&#x4E48;&#x5C0F;&#x7684;&#x5C4F;&#x5E55;&#xFF0C;&#x6570;&#x636E;&#x91CF;&#x4F1A;&#x66F4;&#x5C11;&#x3002; &#x6240;&#x4EE5;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#xFF0C;&#x6027;&#x80FD;&#x5E76;&#x4E0D;&#x4F1A;&#x6210;&#x4E3A;&#x4E3B;&#x8981;&#x7684;&#x9009;&#x62E9;&#x4F9D;&#x636E;&#xFF0C;&#x51B5;&#x4E14;&#x6027;&#x80FD;&#x6570;&#x636E;&#x5927;&#x5BB6;&#x90FD;&#x6BD4;&#x8F83;&#x63A5;&#x8FD1;&#x3002; &#x4F53;&#x79EF; &#x901A;&#x8FC7;&#x6267;&#x884C;&#x9759;&#x6001;&#x4EE3;&#x7801;&#x5206;&#x6790;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#xFF0C;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#x662F;tree-shaking&#x3002; &#x7CBE;&#x7B80;&#xFF08;&#x5305;&#x62EC;&#x6DF7;&#x6DC6;&#xFF09;&#x3002; gzip&#x6216;brotli&#x538B;&#x7F29;&#x3002; &#x901A;&#x8FC7;&#x4E0A;&#x8FF0;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x5730;&#x5C06;&#x6253;&#x5305;&#x5927;&#x5C0F;&#x51CF;&#x5C11;&#x5230;140K&#x5DE6;&#x53F3;&#xFF01; &#x66F4;&#x591A;&#x7EC6;&#x8282;&#x53EF;&#x4EE5;&#x9605;&#x8BFB; Building an Angular Application for Production &#x3002; &#x6211;&#x60F3;&#x73B0;&#x5728;&#x4F60;&#x53EF;&#x4EE5;&#x653E;&#x5FC3;&#x7684;&#x5F00;&#x59CB;&#x5B66;&#x4E60; Angular2 &#x4E86;&#x1F525;"},"why_angular_2.html#Angular-2-的优点":{"title":"Angular 2 &#x7684;&#x4F18;&#x70B9;","path":"\\why_angular_2.html#Angular-2-的优点","body":"Angular&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x4E3A;&#x7A0B;&#x5E8F;&#x5458;&#x63D0;&#x4F9B;&#x4E86;&#x5F00;&#x53D1;&#x548C;&#x6784;&#x5EFA;&#x5927;&#x89C4;&#x6A21;JavaScript&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x4F46;&#x968F;&#x7740;&#x65F6;&#x4EE3;&#x8FDB;&#x6B65;&#x5B83;&#x9010;&#x6E10;&#x663E;&#x9732;&#x51FA;&#x8BB8;&#x591A;&#x7F3A;&#x9677;&#x548C;&#x5C16;&#x9510;&#x7684;&#x95EE;&#x9898;&#x3002; Angular 2&#x6B63;&#x662F;&#x5728;&#x8FC7;&#x53BB;&#x4E94;&#x5E74;&#x793E;&#x533A;&#x7684;&#x8FD9;&#x4E9B;&#x53CD;&#x9988;&#x4E4B;&#x4E0A;&#x5EFA;&#x7ACB;&#x7684;&#x3002; Angular 2 &#x5F88;&#x7B80;&#x5355; Angular 2&#x6BD4;Angular 1.x&#x66F4;&#x52A0;&#x73B0;&#x4EE3;&#xFF0C;&#x66F4;&#x6709;&#x80FD;&#x529B;&#xFF0C;&#x66F4;&#x5BB9;&#x6613;&#x8BA9;&#x65B0;&#x624B;&#x5B66;&#x4E60;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x66F4;&#x5BB9;&#x6613;&#x8BA9;&#x9879;&#x76EE;&#x8001;&#x624B;&#x4F7F;&#x7528;&#x3002; &#x4F7F;&#x7528;Angular 1&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x5FC5;&#x987B;&#x4E86;&#x89E3; Controllers, Services, Factories, Providers &#x548C;&#x5176;&#x4ED6;&#x53EF;&#x80FD;&#x4EE4;&#x4EBA;&#x56F0;&#x60D1;&#x7684;&#x6982;&#x5FF5;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5BF9;&#x4E8E;&#x65B0;&#x624B;&#x6765;&#x8BF4;&#x3002; Angular 2&#x662F;&#x4E00;&#x4E2A;&#x66F4;&#x6D41;&#x7EBF;&#x578B;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x8BA9;&#x5F00;&#x53D1;&#x8005;&#x4E13;&#x6CE8;&#x4E8E;&#x7B80;&#x5355;&#x5730;&#x6784;&#x5EFA;JavaScript&#x7C7B;&#x3002;&#x89C6;&#x56FE;&#x548C;&#x63A7;&#x5236;&#x5668;&#x88AB;&#x66FF;&#x6362;&#x4E3A;&#x7EC4;&#x4EF6;&#xFF0C;&#x8FD9;&#x53EF;&#x4EE5;&#x88AB;&#x63CF;&#x8FF0;&#x4E3A;&#x7CBE;&#x7B80;&#x7248;&#x6307;&#x4EE4;&#x3002;&#x751A;&#x81F3;&#x7ECF;&#x9A8C;&#x4E30;&#x5BCC;&#x7684;Angular&#x7A0B;&#x5E8F;&#x5458;&#x4E5F;&#x4E0D;&#x603B;&#x662F;&#x77E5;&#x9053;Angular1.x&#x6307;&#x4EE4;&#x7684;&#x6240;&#x6709;&#x529F;&#x80FD;&#x3002; Angular 2&#x7EC4;&#x4EF6;&#x6BD4;&#x8D77;Angular 1.x&#x7684;&#x6307;&#x4EE4;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;API&#x7279;&#x6027;&#x66F4;&#x5BB9;&#x6613;&#x9605;&#x8BFB;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x4E3A;&#x4E86;&#x5E2E;&#x52A9;&#x8F7B;&#x677E;&#x8FC7;&#x6E21;&#x5230;Angular 2&#xFF0C;Angular&#x56E2;&#x961F;&#x5411;Angular 1.5&#x6DFB;&#x52A0;&#x4E86;&#x4E00;&#x4E2A; .component &#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x5DF2;&#x7531;&#x793E;&#x533A;&#x6210;&#x5458;Todd Motto&#x652F;&#x6301;&#x5230;v1.3&#x3002; TypeScript Angular 2&#x662F;&#x7528;TypeScript&#x7F16;&#x5199;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x8BB8;&#x591A;&#x65B0;ES2016+&#x7279;&#x6027;&#x7684;JavaScript&#x8D85;&#x96C6;&#x3002; &#x901A;&#x8FC7;&#x4E13;&#x6CE8;&#x4E8E;&#x4F7F;&#x6846;&#x67B6;&#x66F4;&#x6613;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x5904;&#x7406;&#xFF0C;Angular 2&#x5141;&#x8BB8;&#x66F4;&#x4E30;&#x5BCC;&#x7684;&#x5F00;&#x53D1;&#x751F;&#x6001;&#x7CFB;&#x7EDF;&#x3002; &#x4F7F;&#x7528;&#x590D;&#x6742;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#xFF08;&#x6216;IDE&#xFF09;&#x7684;&#x5F00;&#x53D1;&#x8005;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#x81EA;&#x52A8;&#x5B8C;&#x6210;&#x548C;&#x7C7B;&#x578B;&#x5EFA;&#x8BAE;&#x7684;&#x663E;&#x7740;&#x6539;&#x8FDB;&#x3002; &#x8FD9;&#x4E9B;&#x6539;&#x8FDB;&#x6709;&#x52A9;&#x4E8E;&#x51CF;&#x5C11;&#x5B66;&#x4E60;Angular 2&#x7684;&#x8BA4;&#x77E5;&#x8D1F;&#x62C5;&#x3002;&#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;&#x4F20;&#x7EDF;&#x7684;ES5 JavaScript&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x8FD9;&#x5E76;&#x4E0D;&#x610F;&#x5473;&#x7740;&#x5F00;&#x53D1;&#x5FC5;&#x987B;&#x5728;TypeScript&#x6216;ES2015&#x4E2D;&#x5B8C;&#x6210;&#xFF1A;&#x7A0B;&#x5E8F;&#x5458;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x7F16;&#x5199;&#x8FD0;&#x884C;&#x539F;&#x751F;&#x7684;JavaScript&#x3002; &#x719F;&#x6089; &#x5C3D;&#x7BA1;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x91CD;&#x5199;&#xFF0C;Angular 2&#x4FDD;&#x7559;&#x4E86;Angular 1.x&#x7684;&#x8BB8;&#x591A;&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x548C;&#x7EA6;&#x5B9A;&#xFF0C;&#x4F8B;&#x5982;&#x3002; &#x4E00;&#x4E2A;&#x7B80;&#x5316;&#x7684;&#xFF0C;&#x201C;&#x672C;&#x5730;JS&#x201D;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x7684;&#x5B9E;&#x73B0;&#x3002; &#x8FD9;&#x610F;&#x5473;&#x7740;&#x5DF2;&#x7ECF;&#x719F;&#x7EC3;&#x4F7F;&#x7528;Angular&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x5C06;&#x6BD4;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;React&#x6216;&#x7C7B;&#x4F3C;Ember&#x7684;&#x6846;&#x67B6;&#x66F4;&#x5BB9;&#x6613;&#x8FC1;&#x79FB;&#x5230;Angular 2&#x3002; &#x6027;&#x80FD;&#x548C;&#x79FB;&#x52A8;&#x7AEF; Angular 2&#x5728;&#x8BBE;&#x8BA1;&#x4E4B;&#x521D;&#x5C31;&#x8003;&#x8651;&#x5230;&#x79FB;&#x52A8;&#x7AEF;&#x3002;&#x9664;&#x4E86;&#x6709;&#x9650;&#x7684;&#x5904;&#x7406;&#x80FD;&#x529B;&#xFF0C;&#x79FB;&#x52A8;&#x8BBE;&#x5907;&#x5177;&#x6709;&#x5C06;&#x5B83;&#x4EEC;&#x4E0E;&#x4F20;&#x7EDF;&#x8BA1;&#x7B97;&#x673A;&#x5206;&#x79BB;&#x7684;&#x5176;&#x4ED6;&#x7279;&#x5F81;&#x548C;&#x9650;&#x5236;&#x3002;&#x89E6;&#x6478;&#x754C;&#x9762;&#xFF0C;&#x6709;&#x9650;&#x7684;&#x5C4F;&#x5E55;&#x548C;&#x79FB;&#x52A8;&#x786C;&#x4EF6;&#x90FD;&#x5DF2;&#x5728;Angular 2&#x4E2D;&#x8003;&#x8651;&#x3002; &#x53F0;&#x5F0F;&#x8BA1;&#x7B97;&#x673A;&#x4E5F;&#x5C06;&#x5728;&#x6027;&#x80FD;&#x548C;&#x54CD;&#x5E94;&#x6027;&#x65B9;&#x9762;&#x53D6;&#x5F97;&#x663E;&#x7740;&#x7684;&#x6539;&#x8FDB;&#x3002; Angular 2&#xFF0C;&#x50CF;React&#x548C;&#x5176;&#x4ED6;&#x73B0;&#x4EE3;&#x6846;&#x67B6;&#x4E00;&#x6837;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x751A;&#x81F3;&#x5728;Web worker&#x4E2D;&#x6E32;&#x67D3;HTML&#x6765;&#x63D0;&#x9AD8;&#x6027;&#x80FD;&#x3002;&#x6839;&#x636E;application/site&#xFF0C;&#x8FD9;&#x79CD;&#x540C;&#x6784;&#x5448;&#x73B0;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6237;&#x7684;&#x4F53;&#x9A8C;&#x611F;&#x89C9;&#x66F4;&#x52A0;&#x5373;&#x65F6;&#x3002; &#x5BF9;&#x6027;&#x80FD;&#x7684;&#x8FFD;&#x6C42;&#x5E76;&#x4E0D;&#x4EE5;&#x9884;&#x6E32;&#x67D3;&#x7ED3;&#x675F;&#x3002; Angular 2&#x901A;&#x8FC7;&#x4E0E; NativeScript &#xFF08;&#x4E00;&#x79CD;&#x7528;&#x4E8E;&#x6865;&#x63A5;JavaScript&#x548C;&#x79FB;&#x52A8;&#x7684;&#x5F00;&#x6E90;&#x5E93;&#xFF09;&#x96C6;&#x6210;&#xFF0C;&#x4F7F;&#x5176;&#x53EF;&#x79FB;&#x690D;&#x5230;&#x672C;&#x673A;&#x79FB;&#x52A8;&#x3002;&#x6B64;&#x5916;&#xFF0C;Ionic&#x56E2;&#x961F;&#x6B63;&#x5728;&#x5F00;&#x53D1;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;Angular 2&#x7684;&#x65B0;&#x7248;&#x672C;&#xFF0C;&#x5B83;&#x4E3A;Angular 2&#x63D0;&#x4F9B;&#x4E86;&#x53E6;&#x4E00;&#x79CD;&#x5229;&#x7528;&#x539F;&#x751F;&#x529F;&#x80FD;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x9879;&#x76EE;&#x67B6;&#x6784;&#x4E0E;&#x7EF4;&#x62A4; Angular&#x7684;&#x7B2C;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x4E3A;&#x5F00;&#x53D1;&#x8005;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x5F00;&#x53D1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x9AD8;&#x5EA6;&#x7075;&#x6D3B;&#x7684;&#x6846;&#x67B6;&#x3002;&#x8FD9;&#x662F;&#x8BB8;&#x591A;Web&#x5F00;&#x53D1;&#x8005;&#x6765;&#x8BF4;&#x662F;&#x4E00;&#x4E2A;&#x620F;&#x5267;&#x6027;&#x7684;&#x8F6C;&#x53D8;&#xFF0C;&#x867D;&#x7136;&#x90A3;&#x4E2A;&#x6846;&#x67B6;&#x662F;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#xFF0C;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x5B83;&#x5F80;&#x5F80;&#x592A;&#x7075;&#x6D3B;&#x3002;&#x968F;&#x7740;&#x65F6;&#x95F4;&#x7684;&#x63A8;&#x79FB;&#xFF0C;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#x5F97;&#x5230;&#x4E86;&#x53D1;&#x5C55;&#xFF0C;&#x793E;&#x533A;&#x9A71;&#x52A8;&#x7684;&#x7ED3;&#x6784;&#x5F97;&#x5230;&#x4E86;&#x8BA4;&#x53EF;&#x3002; Angular1.x&#x8BD5;&#x56FE;&#x89E3;&#x51B3;&#x4E0E;JavaScript&#x76F8;&#x5173;&#x7684;&#x5404;&#x79CD;&#x6D4F;&#x89C8;&#x5668;&#x9650;&#x5236;&#x3002;&#x8FD9;&#x662F;&#x901A;&#x8FC7;&#x5F15;&#x5165;&#x4F7F;&#x7528;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x7684;&#x6A21;&#x5757;&#x7CFB;&#x7EDF;&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x8FD9;&#x4E2A;&#x7CFB;&#x7EDF;&#x662F;&#x65B0;&#x9896;&#x7684;&#xFF0C;&#x4F46;&#x4E0D;&#x5E78;&#x7684;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x5DE5;&#x5177;&#x4E0A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x538B;&#x7F29;&#x548C;&#x9759;&#x6001;&#x5206;&#x6790;&#x3002; Angular 2.x&#x4F7F;&#x7528;ES2015&#x6A21;&#x5757;&#x7CFB;&#x7EDF;&#x548C;&#x73B0;&#x4EE3;&#x5316;&#x7684;&#x5305;&#x88C5;&#x5DE5;&#x5177;&#xFF0C;&#x5982;webpack&#x6216;SystemJS&#x3002;&#x6A21;&#x5757;&#x8FDC;&#x8FDC;&#x5C11;&#x4E8E;&#x201C;Angular&#x65B9;&#x5F0F;&#x201D;&#xFF0C;&#x5E76;&#x4E14;&#x66F4;&#x5BB9;&#x6613;&#x7F16;&#x5199;&#x66F4;&#x901A;&#x7528;&#x7684;JavaScript&#x5E76;&#x5C06;&#x5176;&#x63D2;&#x5165;&#x5230;Angular&#x4E2D;&#x3002;&#x5220;&#x9664;&#x538B;&#x7F29;&#x65B9;&#x6848;&#x548C;&#x6DFB;&#x52A0;&#x4E25;&#x683C;&#x7684;&#x89C4;&#x5B9A;&#x4F7F;&#x5F97;&#x7EF4;&#x62A4;&#x73B0;&#x6709;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x3002;&#x65B0;&#x7684;&#x6A21;&#x5757;&#x7CFB;&#x7EDF;&#x4E5F;&#x4F7F;&#x5F97;&#x66F4;&#x5BB9;&#x6613;&#x5F00;&#x53D1;&#x6709;&#x6548;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x4EE5;&#x66F4;&#x597D;&#x5730;&#x5F00;&#x53D1;&#x5927;&#x578B;&#x9879;&#x76EE;&#x3002; &#x65B0;&#x7279;&#x6027; Angular 2 &#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x65B0;&#x7279;&#x6027;&#xFF1A; Form Builder Change Detection Templating Routing Annotations Observables Shadow DOM"},"why_angular_2.html#Angular-1-amp-2-之间的差异":{"title":"Angular 1 &amp; 2 &#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;","path":"\\why_angular_2.html#Angular-1-amp-2-之间的差异","body":"&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x201C;Transitional Architecture&#x201D;&#x662F;&#x6307;&#x4EE5;&#x7C7B;&#x4F3C;&#x4E8E;Angular 2&#x7684;&#x7EC4;&#x4EF6;&#x6837;&#x5F0F;&#x7684;&#x65B9;&#x5F0F;&#x7F16;&#x5199;&#x7684;Angular 1&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6837;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x4F7F;&#x7528;&#x4E86;&#x63A7;&#x5236;&#x5668;&#x548C;&#x6307;&#x4EE4;&#xFF0C;&#x800C;&#x4E0D;&#x662F;TypeScript&#x7C7B;&#x3002; Old School Angular 1.x Angular 1.x &#x6700;&#x4F73;&#x5B9E;&#x8DF5; &#x8FC7;&#x6E21;&#x67B6;&#x6784; Angular 2 &#x5D4C;&#x5957;&#x4F5C;&#x7528;&#x57DF; (&#x201C;$scope&#x201D;, watches) Used heavily Avoided Avoided Gone Directives vs controllers Use as alternatives Used together Directives as components Component directives Controller and service &#x5B9E;&#x73B0; Functions Functions ES6 classes ES6 classes &#x6A21;&#x5757;&#x7CFB;&#x7EDF; Angular&#x2019;s modules Angular&#x2019;s modules ES6 modules ES6 modules &#x9700;&#x8981; Transpiler No No TypeScript TypeScript"},"Accessibility/accessibility.html":{"title":"","path":"\\Accessibility\\accessibility.html","body":"Angular 2中的Web辅助功能 可访问性是Web开发人员需要始终注意的事情，Angular 2应用程序也不例外。 虽然方法和关键概念在很大程度上与其他框架相同，但重要的是检查Angular 2添加到方程式中的差异。"},"Accessibility/accessibility.html#Angular-2中的Web辅助功能":{"title":"Angular 2&#x4E2D;&#x7684;Web&#x8F85;&#x52A9;&#x529F;&#x80FD;","path":"\\Accessibility\\accessibility.html#Angular-2中的Web辅助功能","body":"&#x53EF;&#x8BBF;&#x95EE;&#x6027;&#x662F;Web&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x9700;&#x8981;&#x59CB;&#x7EC8;&#x6CE8;&#x610F;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;Angular 2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E5F;&#x4E0D;&#x4F8B;&#x5916;&#x3002; &#x867D;&#x7136;&#x65B9;&#x6CD5;&#x548C;&#x5173;&#x952E;&#x6982;&#x5FF5;&#x5728;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x4E0E;&#x5176;&#x4ED6;&#x6846;&#x67B6;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x91CD;&#x8981;&#x7684;&#x662F;&#x68C0;&#x67E5;Angular 2&#x6DFB;&#x52A0;&#x5230;&#x65B9;&#x7A0B;&#x5F0F;&#x4E2D;&#x7684;&#x5DEE;&#x5F02;&#x3002;"},"Advanced-angular/advanced-angular.html":{"title":"","path":"\\Advanced-angular\\advanced-angular.html","body":"#Angular 高级 Angular 2让我们可以访问其架构中使用的大多数核心实体。 现在我们了解了Angular 2应用程序中涉及的不同部分，让我们利用了解的知识更深入学习这些实体。"},"Advanced-angular/aot.html":{"title":"","path":"\\Advanced-angular\\aot.html","body":"Angular 2 的 AoT 每个Angular应用程序需要一个编译过程才能在浏览器中运行：Angular提供的丰富的组件和模板不能被浏览器直接理解。 在编译期间，Angular的编译器还通过考虑JavaScript VM的功能（如内联缓存）来提高应用程序运行时性能。 Angular 1.x和Angular 2中的初始编译器称为JiT（Just-in-Time）编译器。 对于AoT，它代表最近在Angular 2中引入的Ahead-of-Time编译器。与在运行时由Angular 2执行的JiT编译相比，AoT提供了一个较小的包，在浏览器中更快的呈现。 使用AoT，与 angular2-starter 原始的1.2 MB相比，我们可以减少428.8 kb，并通过跳过浏览器中的编译减少加载时间。 Characteristic JiT AoT Compilation target Browser Server Compilation context Runtime Build Bundle size Huge (~1.2 MB) Smaller (~400 KB) Execution Performance - Better Startup time - Shorter AoT的要点是将编译从运行时移动到构建过程。这意味着，首先我们可以从捆绑包中删除JiT编译器（大约523kb）以具有更小的构建，其次，浏览器可以执行代码，而无需在运行时等待JiT，这让渲染速度更快。 早期编译还意味着开发人员可以在实际运行代码之前和到达客户端之前找到模板错误。这提供了更强大的应用程序具有更高的安全性，因为更少的客户端HTML和JavaScript被 eval 。此外，通过在构建过程中引入编译代码，AoT使应用程序更具tree-shakable性，并可开放于各种其他优化。像Rollup和Google Closure这样的Bundler可以发挥这种优势，有效地减少包大小。 此外，AoT编译器还内联HTML模板和CSS文件，并帮助减少应用程序发送的异步请求数量。（注意：这导致了一个配置错误，我们将在后面的部分提到）"},"Advanced-angular/aot.html#Angular-2-的-AoT":{"title":"Angular 2 &#x7684; AoT","path":"\\Advanced-angular\\aot.html#Angular-2-的-AoT","body":"&#x6BCF;&#x4E2A;Angular&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x624D;&#x80FD;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8FD0;&#x884C;&#xFF1A;Angular&#x63D0;&#x4F9B;&#x7684;&#x4E30;&#x5BCC;&#x7684;&#x7EC4;&#x4EF6;&#x548C;&#x6A21;&#x677F;&#x4E0D;&#x80FD;&#x88AB;&#x6D4F;&#x89C8;&#x5668;&#x76F4;&#x63A5;&#x7406;&#x89E3;&#x3002; &#x5728;&#x7F16;&#x8BD1;&#x671F;&#x95F4;&#xFF0C;Angular&#x7684;&#x7F16;&#x8BD1;&#x5668;&#x8FD8;&#x901A;&#x8FC7;&#x8003;&#x8651;JavaScript VM&#x7684;&#x529F;&#x80FD;&#xFF08;&#x5982;&#x5185;&#x8054;&#x7F13;&#x5B58;&#xFF09;&#x6765;&#x63D0;&#x9AD8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x6027;&#x80FD;&#x3002; Angular 1.x&#x548C;Angular 2&#x4E2D;&#x7684;&#x521D;&#x59CB;&#x7F16;&#x8BD1;&#x5668;&#x79F0;&#x4E3A;JiT&#xFF08;Just-in-Time&#xFF09;&#x7F16;&#x8BD1;&#x5668;&#x3002; &#x5BF9;&#x4E8E;AoT&#xFF0C;&#x5B83;&#x4EE3;&#x8868;&#x6700;&#x8FD1;&#x5728;Angular 2&#x4E2D;&#x5F15;&#x5165;&#x7684;Ahead-of-Time&#x7F16;&#x8BD1;&#x5668;&#x3002;&#x4E0E;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x7531;Angular 2&#x6267;&#x884C;&#x7684;JiT&#x7F16;&#x8BD1;&#x76F8;&#x6BD4;&#xFF0C;AoT&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x8F83;&#x5C0F;&#x7684;&#x5305;&#xFF0C;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x66F4;&#x5FEB;&#x7684;&#x5448;&#x73B0;&#x3002; &#x4F7F;&#x7528;AoT&#xFF0C;&#x4E0E; angular2-starter &#x539F;&#x59CB;&#x7684;1.2 MB&#x76F8;&#x6BD4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;428.8 kb&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x8DF3;&#x8FC7;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x7684;&#x7F16;&#x8BD1;&#x51CF;&#x5C11;&#x52A0;&#x8F7D;&#x65F6;&#x95F4;&#x3002; Characteristic JiT AoT Compilation target Browser Server Compilation context Runtime Build Bundle size Huge (~1.2 MB) Smaller (~400 KB) Execution Performance - Better Startup time - Shorter AoT&#x7684;&#x8981;&#x70B9;&#x662F;&#x5C06;&#x7F16;&#x8BD1;&#x4ECE;&#x8FD0;&#x884C;&#x65F6;&#x79FB;&#x52A8;&#x5230;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#xFF0C;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x6346;&#x7ED1;&#x5305;&#x4E2D;&#x5220;&#x9664;JiT&#x7F16;&#x8BD1;&#x5668;&#xFF08;&#x5927;&#x7EA6;523kb&#xFF09;&#x4EE5;&#x5177;&#x6709;&#x66F4;&#x5C0F;&#x7684;&#x6784;&#x5EFA;&#xFF0C;&#x5176;&#x6B21;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x800C;&#x65E0;&#x9700;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x7B49;&#x5F85;JiT&#xFF0C;&#x8FD9;&#x8BA9;&#x6E32;&#x67D3;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#x3002; &#x65E9;&#x671F;&#x7F16;&#x8BD1;&#x8FD8;&#x610F;&#x5473;&#x7740;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x53EF;&#x4EE5;&#x5728;&#x5B9E;&#x9645;&#x8FD0;&#x884C;&#x4EE3;&#x7801;&#x4E4B;&#x524D;&#x548C;&#x5230;&#x8FBE;&#x5BA2;&#x6237;&#x7AEF;&#x4E4B;&#x524D;&#x627E;&#x5230;&#x6A21;&#x677F;&#x9519;&#x8BEF;&#x3002;&#x8FD9;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x5F3A;&#x5927;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5177;&#x6709;&#x66F4;&#x9AD8;&#x7684;&#x5B89;&#x5168;&#x6027;&#xFF0C;&#x56E0;&#x4E3A;&#x66F4;&#x5C11;&#x7684;&#x5BA2;&#x6237;&#x7AEF;HTML&#x548C;JavaScript&#x88AB; eval &#x3002;&#x6B64;&#x5916;&#xFF0C;&#x901A;&#x8FC7;&#x5728;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#x4E2D;&#x5F15;&#x5165;&#x7F16;&#x8BD1;&#x4EE3;&#x7801;&#xFF0C;AoT&#x4F7F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x66F4;&#x5177;tree-shakable&#x6027;&#xFF0C;&#x5E76;&#x53EF;&#x5F00;&#x653E;&#x4E8E;&#x5404;&#x79CD;&#x5176;&#x4ED6;&#x4F18;&#x5316;&#x3002;&#x50CF;Rollup&#x548C;Google Closure&#x8FD9;&#x6837;&#x7684;Bundler&#x53EF;&#x4EE5;&#x53D1;&#x6325;&#x8FD9;&#x79CD;&#x4F18;&#x52BF;&#xFF0C;&#x6709;&#x6548;&#x5730;&#x51CF;&#x5C11;&#x5305;&#x5927;&#x5C0F;&#x3002; &#x6B64;&#x5916;&#xFF0C;AoT&#x7F16;&#x8BD1;&#x5668;&#x8FD8;&#x5185;&#x8054;HTML&#x6A21;&#x677F;&#x548C;CSS&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5E2E;&#x52A9;&#x51CF;&#x5C11;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D1;&#x9001;&#x7684;&#x5F02;&#x6B65;&#x8BF7;&#x6C42;&#x6570;&#x91CF;&#x3002;&#xFF08;&#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x5BFC;&#x81F4;&#x4E86;&#x4E00;&#x4E2A;&#x914D;&#x7F6E;&#x9519;&#x8BEF;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x540E;&#x9762;&#x7684;&#x90E8;&#x5206;&#x63D0;&#x5230;&#xFF09;"},"Advanced-angular/aot_config.html":{"title":"","path":"\\Advanced-angular\\aot_config.html","body":"AoT 配置 要在Angular 2中启用AoT，有两种可能的方法： 直接使用 ngc 使用 @ngtools/webpack 我们推荐第二种方式，因为它最适合Angular + Webpack工具链。 使用原始 ngc 的一个问题是 ngc 会尝试内联CSS，而缺少必要的上下文。 例如， index.css 中的 @import &#39;basscss-basic&#39; 语句将导致类似于 Error: Compilation failed. Resource file not found 。 它缺少 “basscss-basic” 实际上是 node_modules 内部的节点模块的信息。 另一方面， @ngtools/webpack 提供了 AopPlugin 和与其他加载器/插件共享上下文的Webpack加载器。 所以当ngc由 @ngtools/webpack 调用时，它可以从其他插件收集必要的信息，如 postcss-import ，以正确理解像 @import &#39;basscss-basic&#39; 。 配置 @ngtools/webpack 首先，从npm获取 @ngtools/webpack 并将其保存为开发依赖关系： 1 npm install -D @ngtools/webpack 然后，在Webpack配置文件（通常命名为 webpack.config.js ）中，添加以下代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import AotPlugin from '@ngtools/webpack' exports =  /* ... */ module :  rules: [  test: /\\.ts$/ , loader: '@ngtools/webpack' ,  ] , plugins: [ new AotPlugin( tsConfigPath: 'path/to/tsconfig.json' , entryModule: 'path/to/app.module#AppModule' ) ]  这里 @ngtools/webpack 替换了其他类型的脚本加载器，如 ts-loader 或 awesome-typescript-loader 。 它与 AotPlugin 一起工作以启用AoT编译。 更多细节可以在 这里 找到。 （注意，对于由angular-cli生成的项目，打开AoT可以很简单，因为ng build –aot，但是由于angular-cli不允许为复杂的用例定制webpack配置，它可能不够）。"},"Advanced-angular/aot_config.html#AoT-配置":{"title":"AoT &#x914D;&#x7F6E;","path":"\\Advanced-angular\\aot_config.html#AoT-配置","body":"&#x8981;&#x5728;Angular 2&#x4E2D;&#x542F;&#x7528;AoT&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#x7684;&#x65B9;&#x6CD5;&#xFF1A; &#x76F4;&#x63A5;&#x4F7F;&#x7528; ngc &#x4F7F;&#x7528; @ngtools/webpack &#x6211;&#x4EEC;&#x63A8;&#x8350;&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6700;&#x9002;&#x5408;Angular + Webpack&#x5DE5;&#x5177;&#x94FE;&#x3002; &#x4F7F;&#x7528;&#x539F;&#x59CB; ngc &#x7684;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x662F; ngc &#x4F1A;&#x5C1D;&#x8BD5;&#x5185;&#x8054;CSS&#xFF0C;&#x800C;&#x7F3A;&#x5C11;&#x5FC5;&#x8981;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x3002; &#x4F8B;&#x5982;&#xFF0C; index.css &#x4E2D;&#x7684; @import &apos;basscss-basic&apos; &#x8BED;&#x53E5;&#x5C06;&#x5BFC;&#x81F4;&#x7C7B;&#x4F3C;&#x4E8E; Error: Compilation failed. Resource file not found &#x3002; &#x5B83;&#x7F3A;&#x5C11; &#x201C;basscss-basic&#x201D; &#x5B9E;&#x9645;&#x4E0A;&#x662F; node_modules &#x5185;&#x90E8;&#x7684;&#x8282;&#x70B9;&#x6A21;&#x5757;&#x7684;&#x4FE1;&#x606F;&#x3002; &#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C; @ngtools/webpack &#x63D0;&#x4F9B;&#x4E86; AopPlugin &#x548C;&#x4E0E;&#x5176;&#x4ED6;&#x52A0;&#x8F7D;&#x5668;/&#x63D2;&#x4EF6;&#x5171;&#x4EAB;&#x4E0A;&#x4E0B;&#x6587;&#x7684;Webpack&#x52A0;&#x8F7D;&#x5668;&#x3002; &#x6240;&#x4EE5;&#x5F53;ngc&#x7531; @ngtools/webpack &#x8C03;&#x7528;&#x65F6;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x4ECE;&#x5176;&#x4ED6;&#x63D2;&#x4EF6;&#x6536;&#x96C6;&#x5FC5;&#x8981;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5982; postcss-import &#xFF0C;&#x4EE5;&#x6B63;&#x786E;&#x7406;&#x89E3;&#x50CF; @import &apos;basscss-basic&apos; &#x3002;"},"Advanced-angular/aot_config.html#配置-ngtools-webpack":{"title":"&#x914D;&#x7F6E; @ngtools/webpack","path":"\\Advanced-angular\\aot_config.html#配置-ngtools-webpack","body":"&#x9996;&#x5148;&#xFF0C;&#x4ECE;npm&#x83B7;&#x53D6; @ngtools/webpack &#x5E76;&#x5C06;&#x5176;&#x4FDD;&#x5B58;&#x4E3A;&#x5F00;&#x53D1;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF1A; 1 npm install -D @ngtools/webpack &#x7136;&#x540E;&#xFF0C;&#x5728;Webpack&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF08;&#x901A;&#x5E38;&#x547D;&#x540D;&#x4E3A; webpack.config.js &#xFF09;&#x4E2D;&#xFF0C;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import {AotPlugin} from &apos;@ngtools/webpack&apos; exports = { /* ... */ module : { rules: [ { test: /\\.ts$/ , loader: &apos;@ngtools/webpack&apos; , } ] }, plugins: [ new AotPlugin({ tsConfigPath: &apos;path/to/tsconfig.json&apos; , entryModule: &apos;path/to/app.module#AppModule&apos; }) ] } &#x8FD9;&#x91CC; @ngtools/webpack &#x66FF;&#x6362;&#x4E86;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684;&#x811A;&#x672C;&#x52A0;&#x8F7D;&#x5668;&#xFF0C;&#x5982; ts-loader &#x6216; awesome-typescript-loader &#x3002; &#x5B83;&#x4E0E; AotPlugin &#x4E00;&#x8D77;&#x5DE5;&#x4F5C;&#x4EE5;&#x542F;&#x7528;AoT&#x7F16;&#x8BD1;&#x3002; &#x66F4;&#x591A;&#x7EC6;&#x8282;&#x53EF;&#x4EE5;&#x5728; &#x8FD9;&#x91CC; &#x627E;&#x5230;&#x3002; &#xFF08;&#x6CE8;&#x610F;&#xFF0C;&#x5BF9;&#x4E8E;&#x7531;angular-cli&#x751F;&#x6210;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x6253;&#x5F00;AoT&#x53EF;&#x4EE5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x56E0;&#x4E3A;ng build &#x2013;aot&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;angular-cli&#x4E0D;&#x5141;&#x8BB8;&#x4E3A;&#x590D;&#x6742;&#x7684;&#x7528;&#x4F8B;&#x5B9A;&#x5236;webpack&#x914D;&#x7F6E;&#xFF0C;&#x5B83;&#x53EF;&#x80FD;&#x4E0D;&#x591F;&#xFF09;&#x3002;"},"Advanced-angular/aot_limitations.html":{"title":"","path":"\\Advanced-angular\\aot_limitations.html","body":"AoT 局限 然而，AoT不是完美的。 主要的限制是，由于编译原始代码的方式，AoT不能与常见的代码模式一起使用，例如，模块的默认导出，模板的模板文字以及提供者，路由或声明中的函数。 目前，我们没有“AoT Do’s and Don’ts”的完整列表，Angular团队并未就此问题发布任何内容。 Rangle在这里创建了自己的列表，并且还提供了一个用于使用AoT测试功能的沙盒。 AoT的另一个问题是，当应用程序达到一定的复杂性时，与JiT bundle相比，AoT bundle实际上会占用更多的空间。 作为对浏览器具有更简单的逻辑（因此渲染速度更快）的折衷，与“动态”JiT相比，由AoT生成的代码实际上更冗长。"},"Advanced-angular/aot_limitations.html#AoT-局限":{"title":"AoT &#x5C40;&#x9650;","path":"\\Advanced-angular\\aot_limitations.html#AoT-局限","body":"&#x7136;&#x800C;&#xFF0C;AoT&#x4E0D;&#x662F;&#x5B8C;&#x7F8E;&#x7684;&#x3002; &#x4E3B;&#x8981;&#x7684;&#x9650;&#x5236;&#x662F;&#xFF0C;&#x7531;&#x4E8E;&#x7F16;&#x8BD1;&#x539F;&#x59CB;&#x4EE3;&#x7801;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;AoT&#x4E0D;&#x80FD;&#x4E0E;&#x5E38;&#x89C1;&#x7684;&#x4EE3;&#x7801;&#x6A21;&#x5F0F;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x6A21;&#x5757;&#x7684;&#x9ED8;&#x8BA4;&#x5BFC;&#x51FA;&#xFF0C;&#x6A21;&#x677F;&#x7684;&#x6A21;&#x677F;&#x6587;&#x5B57;&#x4EE5;&#x53CA;&#x63D0;&#x4F9B;&#x8005;&#xFF0C;&#x8DEF;&#x7531;&#x6216;&#x58F0;&#x660E;&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x3002; &#x76EE;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x201C;AoT Do&#x2019;s and Don&#x2019;ts&#x201D;&#x7684;&#x5B8C;&#x6574;&#x5217;&#x8868;&#xFF0C;Angular&#x56E2;&#x961F;&#x5E76;&#x672A;&#x5C31;&#x6B64;&#x95EE;&#x9898;&#x53D1;&#x5E03;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x3002; Rangle&#x5728;&#x8FD9;&#x91CC;&#x521B;&#x5EFA;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x4F7F;&#x7528;AoT&#x6D4B;&#x8BD5;&#x529F;&#x80FD;&#x7684;&#x6C99;&#x76D2;&#x3002; AoT&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#xFF0C;&#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8FBE;&#x5230;&#x4E00;&#x5B9A;&#x7684;&#x590D;&#x6742;&#x6027;&#x65F6;&#xFF0C;&#x4E0E;JiT bundle&#x76F8;&#x6BD4;&#xFF0C;AoT bundle&#x5B9E;&#x9645;&#x4E0A;&#x4F1A;&#x5360;&#x7528;&#x66F4;&#x591A;&#x7684;&#x7A7A;&#x95F4;&#x3002; &#x4F5C;&#x4E3A;&#x5BF9;&#x6D4F;&#x89C8;&#x5668;&#x5177;&#x6709;&#x66F4;&#x7B80;&#x5355;&#x7684;&#x903B;&#x8F91;&#xFF08;&#x56E0;&#x6B64;&#x6E32;&#x67D3;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#xFF09;&#x7684;&#x6298;&#x8877;&#xFF0C;&#x4E0E;&#x201C;&#x52A8;&#x6001;&#x201D;JiT&#x76F8;&#x6BD4;&#xFF0C;&#x7531;AoT&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x5B9E;&#x9645;&#x4E0A;&#x66F4;&#x5197;&#x957F;&#x3002;"},"Advanced-angular/creating_a_structural_directive.html":{"title":"","path":"\\Advanced-angular\\creating_a_structural_directive.html","body":"创建结构指令 我们将创建一个延迟组件或元素实例化的 appDelay 结构指令。 这可以潜在地用于美化效果或用用于手动处理组件加载的时间，无论是性能还是UX。 1 2 3 4 5 6 7 8 9 10 11 12 @Directive ( selector: '[appDelay]' ) export class DelayDirective  constructor ( private templateRef: TemplateRef any , private viewContainerRef: ViewContainerRef )   @Input () set appDelay(time: number ): void    View Example 我们使用相同的 @Directive 类装饰器作为属性指令，并以相同的方式定义一个选择器。 这里的一个很大的区别是，由于结构指令的性质绑定到模板，我们可以访问 TemplateRef， 一个表示指令附加的 template 标签的对象。 我们还以类似的方式添加一个输入属性，但这次使用一个 set 处理程序，所以我们可以在Angular 2执行绑定时执行一些代码。 我们以与Angular 2内置结构指令完全相同的方式绑定 delay 。 1 2 3 4 5 6 7 8 9 10 11 12 13 @Component ( selector: 'app-root' , template: ` div *ngFor=\"let item of [1,2,3,4,5,6]\" card *delay=\"500 * item\" item /card /div ` ) export class AppComponent   View Example 注意，没有内容在渲染。 这是由于Angular 2模拟html模板标签，并且默认情况下不渲染任何子元素。 为了能够渲染这个内容，我们必须将 TemplateRef 给出的模板作为嵌入视图附加到视图容器。"},"Advanced-angular/creating_a_structural_directive.html#创建结构指令":{"title":"&#x521B;&#x5EFA;&#x7ED3;&#x6784;&#x6307;&#x4EE4;","path":"\\Advanced-angular\\creating_a_structural_directive.html#创建结构指令","body":"&#x6211;&#x4EEC;&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5EF6;&#x8FDF;&#x7EC4;&#x4EF6;&#x6216;&#x5143;&#x7D20;&#x5B9E;&#x4F8B;&#x5316;&#x7684; appDelay &#x7ED3;&#x6784;&#x6307;&#x4EE4;&#x3002; &#x8FD9;&#x53EF;&#x4EE5;&#x6F5C;&#x5728;&#x5730;&#x7528;&#x4E8E;&#x7F8E;&#x5316;&#x6548;&#x679C;&#x6216;&#x7528;&#x7528;&#x4E8E;&#x624B;&#x52A8;&#x5904;&#x7406;&#x7EC4;&#x4EF6;&#x52A0;&#x8F7D;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x6027;&#x80FD;&#x8FD8;&#x662F;UX&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 @Directive ({ selector: &apos;[appDelay]&apos; }) export class DelayDirective { constructor ( private templateRef: TemplateRef any , private viewContainerRef: ViewContainerRef ) { } @Input () set appDelay(time: number ): void { } } View Example &#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684; @Directive &#x7C7B;&#x88C5;&#x9970;&#x5668;&#x4F5C;&#x4E3A;&#x5C5E;&#x6027;&#x6307;&#x4EE4;&#xFF0C;&#x5E76;&#x4EE5;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x9009;&#x62E9;&#x5668;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x533A;&#x522B;&#x662F;&#xFF0C;&#x7531;&#x4E8E;&#x7ED3;&#x6784;&#x6307;&#x4EE4;&#x7684;&#x6027;&#x8D28;&#x7ED1;&#x5B9A;&#x5230;&#x6A21;&#x677F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE; TemplateRef&#xFF0C; &#x4E00;&#x4E2A;&#x8868;&#x793A;&#x6307;&#x4EE4;&#x9644;&#x52A0;&#x7684; template &#x6807;&#x7B7E;&#x7684;&#x5BF9;&#x8C61;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x4EE5;&#x7C7B;&#x4F3C;&#x7684;&#x65B9;&#x5F0F;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x8F93;&#x5165;&#x5C5E;&#x6027;&#xFF0C;&#x4F46;&#x8FD9;&#x6B21;&#x4F7F;&#x7528;&#x4E00;&#x4E2A; set &#x5904;&#x7406;&#x7A0B;&#x5E8F;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;Angular 2&#x6267;&#x884C;&#x7ED1;&#x5B9A;&#x65F6;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x3002; &#x6211;&#x4EEC;&#x4EE5;&#x4E0E;Angular 2&#x5185;&#x7F6E;&#x7ED3;&#x6784;&#x6307;&#x4EE4;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x7ED1;&#x5B9A; delay &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 @Component ({ selector: &apos;app-root&apos; , template: ` div *ngFor=let item of [1,2,3,4,5,6] card *delay=500 * item {{item}} /card /div ` }) export class AppComponent { } View Example &#x6CE8;&#x610F;&#xFF0C;&#x6CA1;&#x6709;&#x5185;&#x5BB9;&#x5728;&#x6E32;&#x67D3;&#x3002; &#x8FD9;&#x662F;&#x7531;&#x4E8E;Angular 2&#x6A21;&#x62DF;html&#x6A21;&#x677F;&#x6807;&#x7B7E;&#xFF0C;&#x5E76;&#x4E14;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x4E0D;&#x6E32;&#x67D3;&#x4EFB;&#x4F55;&#x5B50;&#x5143;&#x7D20;&#x3002; &#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x6E32;&#x67D3;&#x8FD9;&#x4E2A;&#x5185;&#x5BB9;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5C06; TemplateRef &#x7ED9;&#x51FA;&#x7684;&#x6A21;&#x677F;&#x4F5C;&#x4E3A;&#x5D4C;&#x5165;&#x89C6;&#x56FE;&#x9644;&#x52A0;&#x5230;&#x89C6;&#x56FE;&#x5BB9;&#x5668;&#x3002;"},"Advanced-angular/creating_an_attribute_directive.html":{"title":"","path":"\\Advanced-angular\\creating_an_attribute_directive.html","body":"#创建属性指令 让我们从一个简单的按钮开始，让用户跳转到不同的页面。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Component ( selector: 'app-visit-rangle' , template: ` button type=\"button\" (click)=\"visitRangle()\" Visit Rangle /button ` ) export class VisitRangleComponent  visitRangle()  location.href = 'https://rangle.io' ;   View Example 我们有礼貌，所以不是仅仅将用户发送到新页面，而是通过创建属性指令并将其附加到按钮，来询问他们是否确定跳转。 1 2 3 4 5 6 7 8 9 10 @Directive ( selector: `[appConfirm]` ) export class ConfirmDirective  @HostListener ( 'click' , [ '$event' ]) confirmFirst(event: Event)  return window .confirm( 'Are you sure you want to do this?' );   View Example 通过在类上使用 @Directive 装饰器并指定选择器来创建指令。对于指令，选择器名称必须为camelCase，并用方括号括起来，以指定它是属性绑定。我们使用 @HostListener 装饰器来监听它所附加的组件或元素上的事件。 在这种情况下，我们正在观察点击事件并传递 $event 关键字给出的事件详细信息。 接下来，我们要将此指令附加到我们之前创建的按钮。 1 2 3 4 5 6 7 8 template: ` button type=\"button\" (click)=\"visitRangle()\" appConfirm Visit Rangle /button ` View Example 然而，请注意，该按钮不能按预期工作。这是因为当我们监听点击事件并显示确认对话框时，组件的点击处理程序在指令的点击处理程序之前运行，两者之间没有通信。为此，我们需要重写我们的指令以使用组件的点击处理程序。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 @Directive ( selector: `[appConfirm]` ) export class ConfirmDirective  @Input () appConfirm = () = ; @HostListener ( 'click' , [ '$event' ]) confirmFirst()  const confirmed = window .confirm( 'Are you sure you want to do this?' ); if (confirmed)  this .appConfirm();    View Example 在这里，我们想要指定在发送确认对话框后需要执行什么操作，为此，我们创建一个类似于组件上的输入绑定。 我们将使用我们的指令名称来进行这个绑定，我们的组件代码的变化如下： 1 2 3 4 5 button type=button [appConfirm]=visitRangle Visit Rangle /button View Example 现在我们的按钮按预期工作了。 我们可能希望能够自定义确认对话框的消息。 为此，我们将使用另一个绑定。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 @Directive ( selector: `[appConfirm]` ) export class ConfirmDirective  @Input () appConfirm = () = ; @Input () confirmMessage = 'Are you sure you want to do this?' ; @HostListener ( 'click' , [ '$event' ]) confirmFirst()  const confirmed = window .confirm( this .confirmMessage); if (confirmed)  this .appConfirm();    View Example 我们的指令获得一个新的输入属性，它表示确认对话框消息，我们传递给 window.confirm 调用。要利用这个新的输入属性，我们添加另一个绑定到我们的按钮。 1 2 3 4 5 6 button type=button [appConfirm]=visitRangle confirmMessage=Click ok to visit Rangle.io! Visit Rangle /button View Example 现在我们有一个可以在跳转到一个新页面之前自定义确认消息的按钮。"},"Advanced-angular/directives.html":{"title":"","path":"\\Advanced-angular\\directives.html","body":"Angular 指令 Angular 2内置指令涵盖了广泛的功能，但有时创建我们自己的指令将带来更优雅的解决方案。"},"Advanced-angular/directives.html#Angular-指令":{"title":"Angular &#x6307;&#x4EE4;","path":"\\Advanced-angular\\directives.html#Angular-指令","body":"Angular 2&#x5185;&#x7F6E;&#x6307;&#x4EE4;&#x6DB5;&#x76D6;&#x4E86;&#x5E7F;&#x6CDB;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4F46;&#x6709;&#x65F6;&#x521B;&#x5EFA;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x6307;&#x4EE4;&#x5C06;&#x5E26;&#x6765;&#x66F4;&#x4F18;&#x96C5;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002;"},"Advanced-angular/listening_to_an_element_host.html":{"title":"","path":"\\Advanced-angular\\listening_to_an_element_host.html","body":"#监听Host元素 监听Host元素 - 也就是指令附加的DOM元素 - 是指令扩展组件或元素行为的主要方法。 以前，我们看到了它的常见用例。 1 2 3 4 5 6 7 @Directive ( selector: '[appMyDirective]' ) class MyDirective  @HostListener ( 'click' , [ '$event' ]) onClick()   我们还可以通过在侦听器中添加目标来响应外部事件，例如从 window 或 document 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @Directive ( selector: `[appHighlight]` ) export class HighlightDirective  constructor ( private el: ElementRef, private renderer: Renderer )   @HostListener ( 'document:click' , [ '$event' ]) handleClick(event: Event)  if ( this .el.nativeElement.contains(event.target))  this .highlight( 'yellow' );  else  this .highlight( null );   highlight(color)  this .renderer.setElementStyle( this .el.nativeElement, 'backgroundColor' , color);   查看示例 虽然不太常见，我们也可以使用 @HostListener ，如果要在组件的Host 元素上注册侦听器的话。 Host元素 Host元素的概念适用于指令和组件。 对于一个指令，这个概念是相当简单的。 将您的指令属性放在哪个模板标记被认为是Host元素。如果我们像上面这样实现 HighlightDirective ： 1 2 3 4 5  div   p highlight   span  Text to be highlighted / span  / p  / div  p 标记将被视为Host元素。 如果我们使用自定义TextBox组件作为Host，代码将如下所示： 1 2 3 4 5  div   my-text-box highlight   span  Text to be highlighted / span  / my-text-box  / div  在组件的上下文中，Host元素是您通过组件配置中的选择器字符串创建的标记。 对于上面示例中的 TextBoxComponent ，组件类的上下文中的Host元素将是 my-text-box 标记。"},"Advanced-angular/listening_to_an_element_host.html#Host元素":{"title":"Host&#x5143;&#x7D20;","path":"\\Advanced-angular\\listening_to_an_element_host.html#Host元素","body":"Host&#x5143;&#x7D20;&#x7684;&#x6982;&#x5FF5;&#x9002;&#x7528;&#x4E8E;&#x6307;&#x4EE4;&#x548C;&#x7EC4;&#x4EF6;&#x3002; &#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x6307;&#x4EE4;&#xFF0C;&#x8FD9;&#x4E2A;&#x6982;&#x5FF5;&#x662F;&#x76F8;&#x5F53;&#x7B80;&#x5355;&#x7684;&#x3002; &#x5C06;&#x60A8;&#x7684;&#x6307;&#x4EE4;&#x5C5E;&#x6027;&#x653E;&#x5728;&#x54EA;&#x4E2A;&#x6A21;&#x677F;&#x6807;&#x8BB0;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;Host&#x5143;&#x7D20;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x50CF;&#x4E0A;&#x9762;&#x8FD9;&#x6837;&#x5B9E;&#x73B0; HighlightDirective &#xFF1A; 1 2 3 4 5  div   p highlight   span  Text to be highlighted / span  / p  / div  p &#x6807;&#x8BB0;&#x5C06;&#x88AB;&#x89C6;&#x4E3A;Host&#x5143;&#x7D20;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;TextBox&#x7EC4;&#x4EF6;&#x4F5C;&#x4E3A;Host&#xFF0C;&#x4EE3;&#x7801;&#x5C06;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1 2 3 4 5  div   my-text-box highlight   span  Text to be highlighted / span  / my-text-box  / div  &#x5728;&#x7EC4;&#x4EF6;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;Host&#x5143;&#x7D20;&#x662F;&#x60A8;&#x901A;&#x8FC7;&#x7EC4;&#x4EF6;&#x914D;&#x7F6E;&#x4E2D;&#x7684;&#x9009;&#x62E9;&#x5668;&#x5B57;&#x7B26;&#x4E32;&#x521B;&#x5EFA;&#x7684;&#x6807;&#x8BB0;&#x3002; &#x5BF9;&#x4E8E;&#x4E0A;&#x9762;&#x793A;&#x4F8B;&#x4E2D;&#x7684; TextBoxComponent &#xFF0C;&#x7EC4;&#x4EF6;&#x7C7B;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x7684;Host&#x5143;&#x7D20;&#x5C06;&#x662F; my-text-box &#x6807;&#x8BB0;&#x3002;"},"Advanced-angular/providing_context_variables_to_directives.html":{"title":"","path":"\\Advanced-angular\\providing_context_variables_to_directives.html","body":"#向指令提供上下文变量 假设我们要记录一些关于我们的指令如何影响组件的元数据，并使这些数据可用。 例如，在我们的 appDelay 指令中，我们进行了一个 setTimeout 调用，在JavaScript的单线程异步模型中意味着它可能不会在我们提供的确切时间之后运行。 我们将捕获它确切的加载时间，并使该变量在模板中可用。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 export class DelayContext  constructor ( private loadTime: number )    @Directive ( selector: '[appDelay]' ) export class DelayDirective  constructor ( private templateRef: TemplateRefDelayContext, private viewContainerRef: ViewContainerRef )   @Input () set appDelay(time: number ): void  setTimeout( () =  this .viewContainerRef.createEmbeddedView( this .templateRef, new DelayContext(performance.now()) ); , time);   View Example 我们对 appDelay 指令做了一些修改。 我们创建了一个新的 DelayContext 类，它包含我们想要提供给我们的指令的上下文。 在这种情况下，我们要捕获 createEmbeddedView 调用发生的实际时间，并使其在我们的指令中可用作 loadTime 。 我们还提供了我们的新类作为 TemplateRef 函数的泛型参数。 这使得静态分析，并让我们确保我们的调用 createEmbeddedView 传递类型 DelayContext 的变量。 在我们的 createEmbeddedView 调用中，我们传入我们的变量，它捕获了方法调用的时间。 在使用 appDelay 的组件中，我们以访问 ngFor 中的变量的方式访问 loadTime 上下文变量。 1 2 3 4 5 6 7 8 9 10 11 @Component ( selector: 'app-root' , template: ` div *ngFor=\"let item of [1,2,3,4,5,6]\" card *delay=\"500 * item; let loaded = loadTime\" div class=\"main\"item/div div class=\"sub\"loaded | number:'1.4-4'/div /card /div ` ) 查看示例"},"Advanced-angular/setting_properties_in_a_directive.html":{"title":"","path":"\\Advanced-angular\\setting_properties_in_a_directive.html","body":"#使用指令设置属性 我们可以使用属性指令通过 @HostBinding 装饰器来影响Host节点上的属性的值。 @HostBinding 装饰器允许我们在指令的host元素上编程设置属性值。 它类似于模板中定义的属性绑定，除了它专门定位到host元素。 对每个变化检测周期检查绑定，因此如果需要，它可以动态地改变。 例如，假设我们要为按钮创建一个指令，当我们按下它时动态添加一个类。 这可能看起来像： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import  Directive, HostBinding, HostListener  from '@angular/core' ; @Directive ( selector: '[appButtonPress]' ) export class ButtonPressDirective  @HostBinding ( 'attr.role' ) role = 'button' ; @HostBinding ( 'class.pressed' ) isPressed: boolean ; @HostListener ( 'mousedown' ) hasPressed()  this .isPressed = true ;  @HostListener ( 'mouseup' ) hasReleased()  this .isPressed = false ;   注意，对于 @HostBinding 的两个用例，我们传递一个字符串值到我们想要改变的属性。如果我们不向装饰器提供字符串，那么将使用类成员的名称。 在第一个 @HostBinding 中，我们静态地将角色属性设置为 button 。对于第二个示例，当 isPressed 为 true 时，将应用 pressed 类。 提示：尽管不太常见，如果需要，@HostBinding也可以应用于组件。"},"Advanced-angular/view_containers_and_embedded_views.html":{"title":"","path":"\\Advanced-angular\\view_containers_and_embedded_views.html","body":"#查看容器和嵌入视图 查看容器是可以附加一个或多个视图的容器。 视图表示要渲染的某种布局和渲染它的上下文。 视图容器锚定到组件，并负责生成其输出，因此这意味着更改附加到视图容器的视图会影响组件的最终渲染输出。 可以将两种类型的视图附加到视图容器：链接到组件的主机视图，以及链接到模板的嵌入视图。 由于结构指令与模板交互，我们有兴趣在这种情况下使用嵌入视图。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import Directive, Input, TemplateRef, ViewContainerRef from '@angular/core' ; @Directive ( selector: '[delay]' ) export class DelayDirective  constructor ( private templateRef: TemplateRef any , private viewContainerRef: ViewContainerRef )   @Input ( 'delay' ) set delayTime(time: number ): void  setTimeout( () =  this .viewContainerRef.createEmbeddedView( this .templateRef); , time);   查看示例 指令通过注入ViewContainerRef访问视图容器。 嵌入视图通过调用ViewContainerRef的createEmbeddedView方法并传入模板来创建并附加到视图容器。 我们想使用我们的指令附加的模板，所以我们传入注入的TemplateRef。"},"Angular-CLI/adding-third-party-libraries.html":{"title":"","path":"\\Angular-CLI\\adding-third-party-libraries.html","body":"#添加第三方库 CLI生成开发自动化代码，能够将第三方库集成到应用程序中。 使用npm安装软件包，并设置开发环境以检查package.json中提到的已安装的库，并在应用程序中捆绑这些第三方库。 有关详细信息，请参阅 https://github.com/angular/angular-cli#3rd-party-library-installation"},"Angular-CLI/cli.html":{"title":"","path":"\\Angular-CLI\\cli.html","body":"#Angular CLI 有了Angular 2的所有新功能，如静态类型，装饰器和ES6模块，增加了设置和维护的成本。花费大量时间使用不同的构建设置，并配置用于提供现代JavaScript应用程序的所有不同工具可能需要很多时间，并且由于无法实际应用于应用程序本身，从而导致生产力下降。 看到ember-cli的流行，Angular 2决定他们将提供自己的CLI来解决这个问题。 Angular CLI旨在成为用于创建和管理Angular 2应用程序的工具。 它提供以下功能： 从头开始创建项目 部件，指示，服务的脚手架等。 lint你的代码 启动应用 运行您的单元测试和端到端测试。 Angular 2 CLI目前只在TypeScript中生成框架，稍后还会有其他版本。"},"Angular-CLI/command-overview.html":{"title":"","path":"\\Angular-CLI\\command-overview.html","body":"#CLI命令概述 One of the advantages of using the Angular CLI is that it automatically configures a number of useful tools that you can use right away. To get more details on the options for each task, use ng –help. Linting ng lint lints the code in your project using tslint. You can customize the rules for your project by editing tslint.json. You can switch some of these to use your preferred tool by editing the scripts in package.json. Testing ng test triggers a build and then runs the unit tests set up for your app using Karma. Use the –watch option to rebuild and retest the app automatically whenever source files change. Build ng build will build your app (and minify your code) and place it into the default output path, dist/. Serve ng serve builds and serves your app on a local server and will automatically rebuild on file changes. By default, your app will be served on http://localhost:4200/ . Include –port [number] to serve your app on a different HTTP port. E2E Once your app is served, you can run end-to-end tests using ng e2e. The CLI uses Protractor for these tests. Deploy ng deploy deploys to GitHub pages or Firebase."},"Angular-CLI/creating-an-app.html":{"title":"","path":"\\Angular-CLI\\creating-an-app.html","body":"#创建新应用程序 使用 ng new [app-name] 命令来创建新的应用程序。这将在所提供的应用程序名称的文件夹中生成一个基本应用程序。该应用程序具有可用于使用CLI命令的所有功能。创建应用程序可能需要几分钟时间才能完成，因为npm需要安装所有依赖项。该目录会自动设置为一个新的Git库为好。如果Git是不是你选择的版本控制，只需取下git的文件夹和的.gitignore文件。 #文件和文件夹设置 生成的应用程序文件夹将如下所示： 应用程序文件夹 应用程序配置存储在不同的位置，一些位于config文件夹中，如测试配置，一些存储在项目根目录中，如linting信息和构建信息。 CLI将应用程序特定的文件存储在src文件夹中，并将Angular 2特定的代码存储在src / app文件夹中。 CLI生成的文件和文件夹将遵循官方样式指南。 警告：CLI依赖配置文件中定义的某些设置，以便能够执行命令。 在修改它们时要小心，特别是package.json文件。 CLI已经安装了基本Angular 2应用程序需要正常运行的所有内容。 为了确保一切正常运行和安装，我们可以运行服务器。"},"Angular-CLI/creating-components.html":{"title":"","path":"\\Angular-CLI\\creating-components.html","body":"#创建组建 CLI可以通过 generate 命令支持Angular 2组件。 要创建新的组件运行： ng generate component [component-name] 执行命令会在项目的 src / app 路径中创建一个文件夹 [component-name] ，如果它是项目的子文件夹，则会执行该命令的当前路径。 该文件夹具有以下内容： [component-name].component.ts 组件类文件 [component-name].component.css 用于样式化组件 [component-name].component.html html组建 [component-name].component.spec.ts 测试组件 index.ts ，用于导出组件"},"Angular-CLI/creating-other-things.html":{"title":"","path":"\\Angular-CLI\\creating-other-things.html","body":"#创建其他 CLI可以使用generate命令支持其他Angular 2实体，如服务，管道和指令。 ng generate [entity] [entity-name] 这将在src / app / [entity-name]。[entity] .ts和spec文件创建实体，或者在当前路径下创建实体，如果命令在项目的子文件夹中执行的话。 CLI为下列实体提供了开箱即用的蓝图： Item Command Files generated Component: ng g component [name] component, HTML, CSS, test spec files Directive: ng g directive [name] component, test spec files Pipe: ng g pipe [name] component, test spec files Service: ng g service [name] component, test spec files Class: ng g class [name] component, test spec files Route: ng g route [name] component, HTML, CSS, test spec files (in new folder)"},"Angular-CLI/creating-routes.html":{"title":"","path":"\\Angular-CLI\\creating-routes.html","body":"#创建路由 ng g route [route-name] 命令将为您启动一个新文件夹和路由文件。 在写入时，此功能暂时禁用，因为Angular 2路由正在发生变化。"},"Angular-CLI/init.html":{"title":"","path":"\\Angular-CLI\\init.html","body":"#集成现有应用程序 不是用CLI创建的应用程序可以集成到以后使用CLI。 这是通过转到现有的应用程序的文件夹和运行 ng init 。 由于现有应用程序的文件夹结构可能与CLI创建的文件夹结构不同，因此init命令具有一些配置选项。 --source-dir 标识源文件的相对路径（default = src） --prefix 标识Angular 2应用程序文件所在的源目录中的路径（default = app） --style 标识其他样式文件所在的路径（default = css）。"},"Angular-CLI/linting.html":{"title":"","path":"\\Angular-CLI\\linting.html","body":"#linting 为了鼓励编码最佳实践Angular CLI提供内置的linting。 默认情况下，应用程序将查看项目的 tslint.json 的配置。 可以通过运行命令 ng lint 来执行Linting。 有关 tslint 规则的参考，请查看： https://palantir.github.io/tslint/rules/。"},"Angular-CLI/serving-the-app.html":{"title":"","path":"\\Angular-CLI\\serving-the-app.html","body":"#启动应用 CLI提供了通过实时重新加载服务应用程序的功能。 要提供应用程序，只需运行命令 ng serve 。 这将编译应用程序，并将所有特定于应用程序的文件复制到dist文件夹，然后再提供。 默认情况下， ng serve 在端口4200 （http：// localhost：4200） 上本地提供应用程序，但这可以通过使用命令行参数： ng serve --port = 8080 来更改。"},"Angular-CLI/setup.html":{"title":"","path":"\\Angular-CLI\\setup.html","body":"#创建 ##先决条件 Angular CLI目前仅通过npm分发，需要Node版本4或更高版本。 ##安装 可以使用以下命令安装Angular 2 CLI： npm install -g angular-cli"},"Angular-CLI/testing.html":{"title":"","path":"\\Angular-CLI\\testing.html","body":"#测试 CLI生成的应用程序集成自动化测试。 CLI通过使用Karma测试运行器来执行此操作。 ##单元测试 要执行单元测试，请运行ng测试。 这将运行所有由Karma配置文件在 config / karma.conf.js 匹配的测试。 它设置为匹配默认情况下以 .spec.ts 结尾的所有TypeScript文件。 ##端到端(e2e)测试 可以通过运行 ng e2e 来执行端到端测试。 在执行端到端测试之前，应用程序必须在某个地址提供服务。Angular CLI使用量角器。 默认情况下，它将尝试访问 localhost：4200 ; 如果正在使用另一个端口，则必须更新位于 config / protractor.conf.js 的配置设置。"},"Modules/directive-duplications.html":{"title":"","path":"\\Modules\\directive-duplications.html","body":"指令复制 因为我们不再直接在需要它的每个组件中定义每个组件和指令，所以我们需要知道Angular模块如何处理指向同一个元素（具有相同的选择器）的指令和组件。 让我们假设一下，我们错误地创建了两个针对同一个属性的指令： 这个例子是在 官方文档 中找到的代码的变体。 blue-highlight.directive.ts 1 2 3 4 5 6 7 8 9 10 11 import  Directive, ElementRef, Renderer  from '@angular/core' ; @Directive ( selector: '[appHighlight]' ) export class BlueHighlightDirective  constructor ( renderer: Renderer, el: ElementRef )  renderer.setElementStyle(el.nativeElement, 'backgroundColor' , 'blue' ); renderer.setElementStyle(el.nativeElement, 'color' , 'gray' );   yellow-highlight.directive.ts 1 2 3 4 5 6 7 8 9 10 import  Directive, ElementRef, Renderer  from '@angular/core' ; @Directive ( selector: '[appHighlight]' ) export class YellowHighlightDirective  constructor ( renderer: Renderer, el: ElementRef )  renderer.setElementStyle(el.nativeElement, 'backgroundColor' , 'yellow' );   这两个指令是相似的，他们试图对一个元素进行风格化。 BlueHighlightDirective 将尝试将元素的背景颜色设置为蓝色，同时将文本的颜色更改为灰色，而 YellowHighlightDirective 将尝试仅将背景颜色更改为黄色。 请注意，两者都定位到具有属性突出显示的任何HTML元素。 如果我们将两个指令添加到同一个模块会发生什么？ app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 // Imports @NgModule ( imports: [BrowserModule], declarations: [ AppComponent, BlueHighlightDirective, YellowHighlightDirective ], bootstrap: [AppComponent] ) export class AppModule   让我们看看我们如何在模块的唯一组件中使用它。 app.component.ts 1 2 3 4 5 6 7 import  Component  from \"@angular/core\" ; @Component ( selector: 'rio-app' , template: 'h1 highlightMy Angular 2 App/h1' ) export class AppComponent  我们可以看到，在我们的组件模板中，我们在 h1 元素中使用了 appHighlight 指令，但是哪些风格最终会被应用？ 答案是：文本将是灰色的，背景是黄色的。 View Example 我们允许将多个指令用在同一模块中的相同元素上。Angular将 按顺序 进行每个转换每个指令。 1 2 3 4 5 declarations: [ ..., BlueHighlightDirective, YellowHighlightDirective ] 因为我们已经在数组中定义了两个指令，并且数组是 有序集合的项 ，当编译器找到具有 appHighlight 属性的元素时，它将首先应用 BlueHighlightDirective 的变换，将文本设置为灰色，将背景设置为蓝色，然后 应用 YellowHighlightDirective 的变换，再次将背景颜色更改为黄色。 总之， 当两个或多个指令定位同一个元素时，它们将按照它们定义的顺序应用 。"},"Modules/directive-duplications.html#指令复制":{"title":"&#x6307;&#x4EE4;&#x590D;&#x5236;","path":"\\Modules\\directive-duplications.html#指令复制","body":"&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x4E0D;&#x518D;&#x76F4;&#x63A5;&#x5728;&#x9700;&#x8981;&#x5B83;&#x7684;&#x6BCF;&#x4E2A;&#x7EC4;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x6BCF;&#x4E2A;&#x7EC4;&#x4EF6;&#x548C;&#x6307;&#x4EE4;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x77E5;&#x9053;Angular&#x6A21;&#x5757;&#x5982;&#x4F55;&#x5904;&#x7406;&#x6307;&#x5411;&#x540C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF08;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x9009;&#x62E9;&#x5668;&#xFF09;&#x7684;&#x6307;&#x4EE4;&#x548C;&#x7EC4;&#x4EF6;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4E00;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x9519;&#x8BEF;&#x5730;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;&#x9488;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x7684;&#x6307;&#x4EE4;&#xFF1A; &#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x662F;&#x5728; &#x5B98;&#x65B9;&#x6587;&#x6863; &#x4E2D;&#x627E;&#x5230;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x53D8;&#x4F53;&#x3002; blue-highlight.directive.ts 1 2 3 4 5 6 7 8 9 10 11 import { Directive, ElementRef, Renderer } from &apos;@angular/core&apos; ; @Directive ({ selector: &apos;[appHighlight]&apos; }) export class BlueHighlightDirective { constructor ( renderer: Renderer, el: ElementRef ) { renderer.setElementStyle(el.nativeElement, &apos;backgroundColor&apos; , &apos;blue&apos; ); renderer.setElementStyle(el.nativeElement, &apos;color&apos; , &apos;gray&apos; ); } } yellow-highlight.directive.ts 1 2 3 4 5 6 7 8 9 10 import { Directive, ElementRef, Renderer } from &apos;@angular/core&apos; ; @Directive ({ selector: &apos;[appHighlight]&apos; }) export class YellowHighlightDirective { constructor ( renderer: Renderer, el: ElementRef ) { renderer.setElementStyle(el.nativeElement, &apos;backgroundColor&apos; , &apos;yellow&apos; ); } } &#x8FD9;&#x4E24;&#x4E2A;&#x6307;&#x4EE4;&#x662F;&#x76F8;&#x4F3C;&#x7684;&#xFF0C;&#x4ED6;&#x4EEC;&#x8BD5;&#x56FE;&#x5BF9;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x98CE;&#x683C;&#x5316;&#x3002; BlueHighlightDirective &#x5C06;&#x5C1D;&#x8BD5;&#x5C06;&#x5143;&#x7D20;&#x7684;&#x80CC;&#x666F;&#x989C;&#x8272;&#x8BBE;&#x7F6E;&#x4E3A;&#x84DD;&#x8272;&#xFF0C;&#x540C;&#x65F6;&#x5C06;&#x6587;&#x672C;&#x7684;&#x989C;&#x8272;&#x66F4;&#x6539;&#x4E3A;&#x7070;&#x8272;&#xFF0C;&#x800C; YellowHighlightDirective &#x5C06;&#x5C1D;&#x8BD5;&#x4EC5;&#x5C06;&#x80CC;&#x666F;&#x989C;&#x8272;&#x66F4;&#x6539;&#x4E3A;&#x9EC4;&#x8272;&#x3002; &#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x4E24;&#x8005;&#x90FD;&#x5B9A;&#x4F4D;&#x5230;&#x5177;&#x6709;&#x5C5E;&#x6027;&#x7A81;&#x51FA;&#x663E;&#x793A;&#x7684;&#x4EFB;&#x4F55;HTML&#x5143;&#x7D20;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;&#x4E24;&#x4E2A;&#x6307;&#x4EE4;&#x6DFB;&#x52A0;&#x5230;&#x540C;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x4F1A;&#x53D1;&#x751F;&#x4EC0;&#x4E48;&#xFF1F; app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 // Imports @NgModule ({ imports: [BrowserModule], declarations: [ AppComponent, BlueHighlightDirective, YellowHighlightDirective ], bootstrap: [AppComponent] }) export class AppModule { } &#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x5728;&#x6A21;&#x5757;&#x7684;&#x552F;&#x4E00;&#x7EC4;&#x4EF6;&#x4E2D;&#x4F7F;&#x7528;&#x5B83;&#x3002; app.component.ts 1 2 3 4 5 6 7 import { Component } from @angular/core ; @Component ({ selector: &apos;rio-app&apos; , template: &apos;h1 highlightMy Angular 2 App/h1&apos; }) export class AppComponent {} &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x6A21;&#x677F;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5728; h1 &#x5143;&#x7D20;&#x4E2D;&#x4F7F;&#x7528;&#x4E86; appHighlight &#x6307;&#x4EE4;&#xFF0C;&#x4F46;&#x662F;&#x54EA;&#x4E9B;&#x98CE;&#x683C;&#x6700;&#x7EC8;&#x4F1A;&#x88AB;&#x5E94;&#x7528;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A;&#x6587;&#x672C;&#x5C06;&#x662F;&#x7070;&#x8272;&#x7684;&#xFF0C;&#x80CC;&#x666F;&#x662F;&#x9EC4;&#x8272;&#x7684;&#x3002; View Example &#x6211;&#x4EEC;&#x5141;&#x8BB8;&#x5C06;&#x591A;&#x4E2A;&#x6307;&#x4EE4;&#x7528;&#x5728;&#x540C;&#x4E00;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x76F8;&#x540C;&#x5143;&#x7D20;&#x4E0A;&#x3002;Angular&#x5C06; &#x6309;&#x987A;&#x5E8F; &#x8FDB;&#x884C;&#x6BCF;&#x4E2A;&#x8F6C;&#x6362;&#x6BCF;&#x4E2A;&#x6307;&#x4EE4;&#x3002; 1 2 3 4 5 declarations: [ ..., BlueHighlightDirective, YellowHighlightDirective ] &#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5728;&#x6570;&#x7EC4;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x4E2A;&#x6307;&#x4EE4;&#xFF0C;&#x5E76;&#x4E14;&#x6570;&#x7EC4;&#x662F; &#x6709;&#x5E8F;&#x96C6;&#x5408;&#x7684;&#x9879; &#xFF0C;&#x5F53;&#x7F16;&#x8BD1;&#x5668;&#x627E;&#x5230;&#x5177;&#x6709; appHighlight &#x5C5E;&#x6027;&#x7684;&#x5143;&#x7D20;&#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x9996;&#x5148;&#x5E94;&#x7528; BlueHighlightDirective &#x7684;&#x53D8;&#x6362;&#xFF0C;&#x5C06;&#x6587;&#x672C;&#x8BBE;&#x7F6E;&#x4E3A;&#x7070;&#x8272;&#xFF0C;&#x5C06;&#x80CC;&#x666F;&#x8BBE;&#x7F6E;&#x4E3A;&#x84DD;&#x8272;&#xFF0C;&#x7136;&#x540E; &#x5E94;&#x7528; YellowHighlightDirective &#x7684;&#x53D8;&#x6362;&#xFF0C;&#x518D;&#x6B21;&#x5C06;&#x80CC;&#x666F;&#x989C;&#x8272;&#x66F4;&#x6539;&#x4E3A;&#x9EC4;&#x8272;&#x3002; &#x603B;&#x4E4B;&#xFF0C; &#x5F53;&#x4E24;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x6307;&#x4EE4;&#x5B9A;&#x4F4D;&#x540C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x65F6;&#xFF0C;&#x5B83;&#x4EEC;&#x5C06;&#x6309;&#x7167;&#x5B83;&#x4EEC;&#x5B9A;&#x4E49;&#x7684;&#x987A;&#x5E8F;&#x5E94;&#x7528; &#x3002;"},"Modules/feature-modules.html":{"title":"","path":"\\Modules\\feature-modules.html","body":"创建功能模块 当我们的根模块开始增长时，一些元素（组件，指令等）开始明显地以某种方式相关，几乎成了可以“插入”的库。 在我们前面的例子中，我们开始看到了。 我们的根模块有一个组件，一个管道和一个服务，其唯一的目的是处理信用卡。 如果我们将这三个元素提取到自己的 功能模块 ，然后将它们导入我们的 根模块 怎么办？ 我们将这样做。第一步是创建两个文件夹以区分属于根模块的元素和属于要素模块的元素。 1 2 3 4 5 6 7 8 9 10 11 . ├── app │ ├── app.component.ts │ └── app.module.ts ├── credit-card │ ├── credit-card-mask.pipe.ts │ ├── credit-card.component.ts │ ├── credit-card.module.ts │ └── credit-card.service.ts ├── index.html └── main.ts 注意每个模块文件夹下的模块文件: app.module.ts 和 credit-card.module.ts .。让我们先关注后者。 credit-card/credit-card.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import  NgModule  from '@angular/core' ; import  CommonModule  from '@angular/common' ; import  CreditCardMaskPipe  from './credit-card-mask.pipe' ; import  CreditCardService  from './credit-card.service' ; import  CreditCardComponent  from './credit-card.component' ; @NgModule ( imports: [CommonModule], declarations: [ CreditCardMaskPipe, CreditCardComponent ], providers: [CreditCardService], exports: [CreditCardComponent] ) export class CreditCardModule  CreditCardModule 和 AppModule 很像，但是有几个很重要的区别： 我们不导入 BrowserModule ，而是导入 CommonModule 。 如果我们在这里看到 BrowserModule 的文档，我们可以看到它是重新导出 CommonModule 与许多其他服务，有助于在浏览器中呈现Angular 2应用程序。 这些服务将我们的根模块与特定平台（浏览器）耦合，但我们希望我们的特性模块与平台无关。 这就是为什么我们只导入 CommonModule， 它只导出公共指令和管道。 当涉及到组件，管道和指令时，每个模块都应该导入自己的依赖关系，而忽略在根模块或任何其他功能模块中导入相同的依赖关系。 总之，即使有多个特征模块，每个特征模块都需要导入 CommonModule 。 我们使用一个名为 exports 的新属性。 默认情况下，声明数组中定义的每个元素都是 私有的 。 我们应该只导出应用程序中其他模块需要执行的工作。 在我们的例子中，我们只需要使 CreditCardComponent 可见，因为它在 AppComponent 的模板中使用。 app/app.component.ts 1 2 3 4 5 6 7 8 9 ... @Component ( ... template: ` ... rio-credit-card/rio-credit-card ` ) export class AppComponent  我们保持 CreditCardMaskPipe 是私有的，因为它只在 CreditCardModule 中使用，没有其他模块应该直接使用它。 我们现在可以将此功能模块导入到我们的简化根模块中。 app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import  NgModule  from '@angular/core' ; import  BrowserModule  from '@angular/platform-browser' ; import  CreditCardModule  from '../credit-card/credit-card.module' ; import  AppComponent  from './app.component' ; @NgModule ( imports: [ BrowserModule, CreditCardModule ], declarations: [AppComponent], bootstrap: [AppComponent] ) export class AppModule   在这一点上，我们完成了，我们的应用程序按预期运行。 View Example 服务和懒加载 这里是Angular模块的棘手部分。 除非明确导出组件，管道和指令的范围限于其模块，否则服务全局可用，除非模块延迟加载。 很难理解，首先，让我们试着看看在我们的例子中 CreditCardService 发生了什么。 首先请注意，服务不在 exports 数组中，而是在 providers 数组中。 有了这个配置，我们的服务将随处可用，即使在 AppComponent ，它居住在另一个模块。 所以，即使使用模块，没有办法有一个“私人”服务，除非…模块正在懒加载。 当模块被延迟加载时，Angular将创建一个子注入器（它是根模块的根注入器的一个子进程），并将在那里创建一个服务实例。 想象一下，我们的 CreditCardModule 配置为延迟加载。 使用我们当前的配置，当应用程序被引导并且我们的根模块被加载到内存中时， CreditCardService （一个单例）的一个实例将被添加到根注入器。 但是，当 CreditCardModule 在未来的某个时间被延迟加载时，将使用 CreditCardService 的新实例为该模块创建子注入器。 在这一点上，我们有一个分层注入器，具有相同服务的两个实例，这通常不是我们想要的。 考虑进行认证的服务的示例。 我们想在整个应用程序中只有一个单例，忽略我们的模块是在引导或延迟加载时加载。 因此，为了使我们的特性模块的服务 仅 添加到根注入器，我们需要使用不同的方法。 credit-card/credit-card.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  NgModule, ModuleWithProviders  from '@angular/core' ; /* ...other imports... */ @NgModule ( imports: [CommonModule], declarations: [ CreditCardMaskPipe, CreditCardComponent ], exports: [CreditCardComponent] ) export class CreditCardModule  static forRoot(): ModuleWithProviders  return  ngModule: CreditCardModule, providers: [CreditCardService]    与以前不同，我们不是将我们的服务直接放在 NgModule 装饰器的 providers 属性。 这次我们定义一个称为 forRoot 的静态方法，其中我们定义模块和要导出的服务。 有了这个新的语法，我们的根模块略有不同。 app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 /* ...imports... */ @NgModule ( imports: [ BrowserModule, CreditCardModule.forRoot() ], declarations: [AppComponent], bootstrap: [AppComponent] ) export class AppModule   你能发现差别吗？ 我们不直接导入 CreditCardModule ，而是我们正在导入的是从 forRoot 方法返回的对象，其中包括 CreditCardService 。 尽管这种语法比原始语法更复杂，但它将保证我们只有一个 CreditCardService 实例被添加到根模块。 当 CreditCardModule 被加载（即使是延迟加载）时，该服务的新实例不会被添加到子注入器。 View Example 作为经验法则，在从功能模块导出服务时， 始终使用 forRoot 语法 ，除非您有非常特殊的需求，需要在依赖注入树的不同级别有多个实例。"},"Modules/feature-modules.html#创建功能模块":{"title":"&#x521B;&#x5EFA;&#x529F;&#x80FD;&#x6A21;&#x5757;","path":"\\Modules\\feature-modules.html#创建功能模块","body":"&#x5F53;&#x6211;&#x4EEC;&#x7684;&#x6839;&#x6A21;&#x5757;&#x5F00;&#x59CB;&#x589E;&#x957F;&#x65F6;&#xFF0C;&#x4E00;&#x4E9B;&#x5143;&#x7D20;&#xFF08;&#x7EC4;&#x4EF6;&#xFF0C;&#x6307;&#x4EE4;&#x7B49;&#xFF09;&#x5F00;&#x59CB;&#x660E;&#x663E;&#x5730;&#x4EE5;&#x67D0;&#x79CD;&#x65B9;&#x5F0F;&#x76F8;&#x5173;&#xFF0C;&#x51E0;&#x4E4E;&#x6210;&#x4E86;&#x53EF;&#x4EE5;&#x201C;&#x63D2;&#x5165;&#x201D;&#x7684;&#x5E93;&#x3002; &#x5728;&#x6211;&#x4EEC;&#x524D;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x770B;&#x5230;&#x4E86;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x6839;&#x6A21;&#x5757;&#x6709;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF0C;&#x4E00;&#x4E2A;&#x7BA1;&#x9053;&#x548C;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#xFF0C;&#x5176;&#x552F;&#x4E00;&#x7684;&#x76EE;&#x7684;&#x662F;&#x5904;&#x7406;&#x4FE1;&#x7528;&#x5361;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;&#x8FD9;&#x4E09;&#x4E2A;&#x5143;&#x7D20;&#x63D0;&#x53D6;&#x5230;&#x81EA;&#x5DF1;&#x7684; &#x529F;&#x80FD;&#x6A21;&#x5757; &#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5B83;&#x4EEC;&#x5BFC;&#x5165;&#x6211;&#x4EEC;&#x7684; &#x6839;&#x6A21;&#x5757; &#x600E;&#x4E48;&#x529E;&#xFF1F; &#x6211;&#x4EEC;&#x5C06;&#x8FD9;&#x6837;&#x505A;&#x3002;&#x7B2C;&#x4E00;&#x6B65;&#x662F;&#x521B;&#x5EFA;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4EE5;&#x533A;&#x5206;&#x5C5E;&#x4E8E;&#x6839;&#x6A21;&#x5757;&#x7684;&#x5143;&#x7D20;&#x548C;&#x5C5E;&#x4E8E;&#x8981;&#x7D20;&#x6A21;&#x5757;&#x7684;&#x5143;&#x7D20;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 . &#x251C;&#x2500;&#x2500; app &#x2502; &#x251C;&#x2500;&#x2500; app.component.ts &#x2502; &#x2514;&#x2500;&#x2500; app.module.ts &#x251C;&#x2500;&#x2500; credit-card &#x2502; &#x251C;&#x2500;&#x2500; credit-card-mask.pipe.ts &#x2502; &#x251C;&#x2500;&#x2500; credit-card.component.ts &#x2502; &#x251C;&#x2500;&#x2500; credit-card.module.ts &#x2502; &#x2514;&#x2500;&#x2500; credit-card.service.ts &#x251C;&#x2500;&#x2500; index.html &#x2514;&#x2500;&#x2500; main.ts &#x6CE8;&#x610F;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x6A21;&#x5757;&#x6587;&#x4EF6;: app.module.ts &#x548C; credit-card.module.ts .&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x5148;&#x5173;&#x6CE8;&#x540E;&#x8005;&#x3002; credit-card/credit-card.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import { NgModule } from &apos;@angular/core&apos; ; import { CommonModule } from &apos;@angular/common&apos; ; import { CreditCardMaskPipe } from &apos;./credit-card-mask.pipe&apos; ; import { CreditCardService } from &apos;./credit-card.service&apos; ; import { CreditCardComponent } from &apos;./credit-card.component&apos; ; @NgModule ({ imports: [CommonModule], declarations: [ CreditCardMaskPipe, CreditCardComponent ], providers: [CreditCardService], exports: [CreditCardComponent] }) export class CreditCardModule {} CreditCardModule &#x548C; AppModule &#x5F88;&#x50CF;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x51E0;&#x4E2A;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#xFF1A; &#x6211;&#x4EEC;&#x4E0D;&#x5BFC;&#x5165; BrowserModule &#xFF0C;&#x800C;&#x662F;&#x5BFC;&#x5165; CommonModule &#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x770B;&#x5230; BrowserModule &#x7684;&#x6587;&#x6863;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5B83;&#x662F;&#x91CD;&#x65B0;&#x5BFC;&#x51FA; CommonModule &#x4E0E;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x670D;&#x52A1;&#xFF0C;&#x6709;&#x52A9;&#x4E8E;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x5448;&#x73B0;Angular 2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x8FD9;&#x4E9B;&#x670D;&#x52A1;&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x6839;&#x6A21;&#x5757;&#x4E0E;&#x7279;&#x5B9A;&#x5E73;&#x53F0;&#xFF08;&#x6D4F;&#x89C8;&#x5668;&#xFF09;&#x8026;&#x5408;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x6211;&#x4EEC;&#x7684;&#x7279;&#x6027;&#x6A21;&#x5757;&#x4E0E;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x3002; &#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x53EA;&#x5BFC;&#x5165; CommonModule&#xFF0C; &#x5B83;&#x53EA;&#x5BFC;&#x51FA;&#x516C;&#x5171;&#x6307;&#x4EE4;&#x548C;&#x7BA1;&#x9053;&#x3002; &#x5F53;&#x6D89;&#x53CA;&#x5230;&#x7EC4;&#x4EF6;&#xFF0C;&#x7BA1;&#x9053;&#x548C;&#x6307;&#x4EE4;&#x65F6;&#xFF0C;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x90FD;&#x5E94;&#x8BE5;&#x5BFC;&#x5165;&#x81EA;&#x5DF1;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x5FFD;&#x7565;&#x5728;&#x6839;&#x6A21;&#x5757;&#x6216;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x4E2D;&#x5BFC;&#x5165;&#x76F8;&#x540C;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002; &#x603B;&#x4E4B;&#xFF0C;&#x5373;&#x4F7F;&#x6709;&#x591A;&#x4E2A;&#x7279;&#x5F81;&#x6A21;&#x5757;&#xFF0C;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x6A21;&#x5757;&#x90FD;&#x9700;&#x8981;&#x5BFC;&#x5165; CommonModule &#x3002; &#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; exports &#x7684;&#x65B0;&#x5C5E;&#x6027;&#x3002; &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x58F0;&#x660E;&#x6570;&#x7EC4;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x662F; &#x79C1;&#x6709;&#x7684; &#x3002; &#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x53EA;&#x5BFC;&#x51FA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x5DE5;&#x4F5C;&#x3002; &#x5728;&#x6211;&#x4EEC;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4F7F; CreditCardComponent &#x53EF;&#x89C1;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5728; AppComponent &#x7684;&#x6A21;&#x677F;&#x4E2D;&#x4F7F;&#x7528;&#x3002; app/app.component.ts 1 2 3 4 5 6 7 8 9 ... @Component ({ ... template: ` ... rio-credit-card/rio-credit-card ` }) export class AppComponent {} &#x6211;&#x4EEC;&#x4FDD;&#x6301; CreditCardMaskPipe &#x662F;&#x79C1;&#x6709;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EA;&#x5728; CreditCardModule &#x4E2D;&#x4F7F;&#x7528;&#xFF0C;&#x6CA1;&#x6709;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x5E94;&#x8BE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x6211;&#x4EEC;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x5C06;&#x6B64;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x5BFC;&#x5165;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x7B80;&#x5316;&#x6839;&#x6A21;&#x5757;&#x4E2D;&#x3002; app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import { NgModule } from &apos;@angular/core&apos; ; import { BrowserModule } from &apos;@angular/platform-browser&apos; ; import { CreditCardModule } from &apos;../credit-card/credit-card.module&apos; ; import { AppComponent } from &apos;./app.component&apos; ; @NgModule ({ imports: [ BrowserModule, CreditCardModule ], declarations: [AppComponent], bootstrap: [AppComponent] }) export class AppModule { } &#x5728;&#x8FD9;&#x4E00;&#x70B9;&#x4E0A;&#xFF0C;&#x6211;&#x4EEC;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6309;&#x9884;&#x671F;&#x8FD0;&#x884C;&#x3002; View Example"},"Modules/feature-modules.html#服务和懒加载":{"title":"&#x670D;&#x52A1;&#x548C;&#x61D2;&#x52A0;&#x8F7D;","path":"\\Modules\\feature-modules.html#服务和懒加载","body":"&#x8FD9;&#x91CC;&#x662F;Angular&#x6A21;&#x5757;&#x7684;&#x68D8;&#x624B;&#x90E8;&#x5206;&#x3002; &#x9664;&#x975E;&#x660E;&#x786E;&#x5BFC;&#x51FA;&#x7EC4;&#x4EF6;&#xFF0C;&#x7BA1;&#x9053;&#x548C;&#x6307;&#x4EE4;&#x7684;&#x8303;&#x56F4;&#x9650;&#x4E8E;&#x5176;&#x6A21;&#x5757;&#xFF0C;&#x5426;&#x5219;&#x670D;&#x52A1;&#x5168;&#x5C40;&#x53EF;&#x7528;&#xFF0C;&#x9664;&#x975E;&#x6A21;&#x5757;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x3002; &#x5F88;&#x96BE;&#x7406;&#x89E3;&#xFF0C;&#x9996;&#x5148;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x8BD5;&#x7740;&#x770B;&#x770B;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x4F8B;&#x5B50;&#x4E2D; CreditCardService &#x53D1;&#x751F;&#x4E86;&#x4EC0;&#x4E48;&#x3002; &#x9996;&#x5148;&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x670D;&#x52A1;&#x4E0D;&#x5728; exports &#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x5728; providers &#x6570;&#x7EC4;&#x4E2D;&#x3002; &#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x914D;&#x7F6E;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5C06;&#x968F;&#x5904;&#x53EF;&#x7528;&#xFF0C;&#x5373;&#x4F7F;&#x5728; AppComponent &#xFF0C;&#x5B83;&#x5C45;&#x4F4F;&#x5728;&#x53E6;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x5373;&#x4F7F;&#x4F7F;&#x7528;&#x6A21;&#x5757;&#xFF0C;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x6709;&#x4E00;&#x4E2A;&#x201C;&#x79C1;&#x4EBA;&#x201D;&#x670D;&#x52A1;&#xFF0C;&#x9664;&#x975E;&#x2026;&#x6A21;&#x5757;&#x6B63;&#x5728;&#x61D2;&#x52A0;&#x8F7D;&#x3002; &#x5F53;&#x6A21;&#x5757;&#x88AB;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x65F6;&#xFF0C;Angular&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B50;&#x6CE8;&#x5165;&#x5668;&#xFF08;&#x5B83;&#x662F;&#x6839;&#x6A21;&#x5757;&#x7684;&#x6839;&#x6CE8;&#x5165;&#x5668;&#x7684;&#x4E00;&#x4E2A;&#x5B50;&#x8FDB;&#x7A0B;&#xFF09;&#xFF0C;&#x5E76;&#x5C06;&#x5728;&#x90A3;&#x91CC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5B9E;&#x4F8B;&#x3002; &#x60F3;&#x8C61;&#x4E00;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x7684; CreditCardModule &#x914D;&#x7F6E;&#x4E3A;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x3002; &#x4F7F;&#x7528;&#x6211;&#x4EEC;&#x5F53;&#x524D;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x88AB;&#x5F15;&#x5BFC;&#x5E76;&#x4E14;&#x6211;&#x4EEC;&#x7684;&#x6839;&#x6A21;&#x5757;&#x88AB;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#x65F6;&#xFF0C; CreditCardService &#xFF08;&#x4E00;&#x4E2A;&#x5355;&#x4F8B;&#xFF09;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x5C06;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x6839;&#x6CE8;&#x5165;&#x5668;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x5F53; CreditCardModule &#x5728;&#x672A;&#x6765;&#x7684;&#x67D0;&#x4E2A;&#x65F6;&#x95F4;&#x88AB;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x65F6;&#xFF0C;&#x5C06;&#x4F7F;&#x7528; CreditCardService &#x7684;&#x65B0;&#x5B9E;&#x4F8B;&#x4E3A;&#x8BE5;&#x6A21;&#x5757;&#x521B;&#x5EFA;&#x5B50;&#x6CE8;&#x5165;&#x5668;&#x3002; &#x5728;&#x8FD9;&#x4E00;&#x70B9;&#x4E0A;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x5206;&#x5C42;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x5177;&#x6709;&#x76F8;&#x540C;&#x670D;&#x52A1;&#x7684;&#x4E24;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x8FD9;&#x901A;&#x5E38;&#x4E0D;&#x662F;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x3002; &#x8003;&#x8651;&#x8FDB;&#x884C;&#x8BA4;&#x8BC1;&#x7684;&#x670D;&#x52A1;&#x7684;&#x793A;&#x4F8B;&#x3002; &#x6211;&#x4EEC;&#x60F3;&#x5728;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5355;&#x4F8B;&#xFF0C;&#x5FFD;&#x7565;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x5757;&#x662F;&#x5728;&#x5F15;&#x5BFC;&#x6216;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x65F6;&#x52A0;&#x8F7D;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x4E3A;&#x4E86;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x7279;&#x6027;&#x6A21;&#x5757;&#x7684;&#x670D;&#x52A1; &#x4EC5; &#x6DFB;&#x52A0;&#x5230;&#x6839;&#x6CE8;&#x5165;&#x5668;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#x3002; credit-card/credit-card.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import { NgModule, ModuleWithProviders } from &apos;@angular/core&apos; ; /* ...other imports... */ @NgModule ({ imports: [CommonModule], declarations: [ CreditCardMaskPipe, CreditCardComponent ], exports: [CreditCardComponent] }) export class CreditCardModule { static forRoot(): ModuleWithProviders { return { ngModule: CreditCardModule, providers: [CreditCardService] } } } &#x4E0E;&#x4EE5;&#x524D;&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x662F;&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x76F4;&#x63A5;&#x653E;&#x5728; NgModule &#x88C5;&#x9970;&#x5668;&#x7684; providers &#x5C5E;&#x6027;&#x3002; &#x8FD9;&#x6B21;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x79F0;&#x4E3A; forRoot &#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x4E2D;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x6A21;&#x5757;&#x548C;&#x8981;&#x5BFC;&#x51FA;&#x7684;&#x670D;&#x52A1;&#x3002; &#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x65B0;&#x7684;&#x8BED;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x6839;&#x6A21;&#x5757;&#x7565;&#x6709;&#x4E0D;&#x540C;&#x3002; app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 /* ...imports... */ @NgModule ({ imports: [ BrowserModule, CreditCardModule.forRoot() ], declarations: [AppComponent], bootstrap: [AppComponent] }) export class AppModule { } &#x4F60;&#x80FD;&#x53D1;&#x73B0;&#x5DEE;&#x522B;&#x5417;&#xFF1F; &#x6211;&#x4EEC;&#x4E0D;&#x76F4;&#x63A5;&#x5BFC;&#x5165; CreditCardModule &#xFF0C;&#x800C;&#x662F;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x5BFC;&#x5165;&#x7684;&#x662F;&#x4ECE; forRoot &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x62EC; CreditCardService &#x3002; &#x5C3D;&#x7BA1;&#x8FD9;&#x79CD;&#x8BED;&#x6CD5;&#x6BD4;&#x539F;&#x59CB;&#x8BED;&#x6CD5;&#x66F4;&#x590D;&#x6742;&#xFF0C;&#x4F46;&#x5B83;&#x5C06;&#x4FDD;&#x8BC1;&#x6211;&#x4EEC;&#x53EA;&#x6709;&#x4E00;&#x4E2A; CreditCardService &#x5B9E;&#x4F8B;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x6839;&#x6A21;&#x5757;&#x3002; &#x5F53; CreditCardModule &#x88AB;&#x52A0;&#x8F7D;&#xFF08;&#x5373;&#x4F7F;&#x662F;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#xFF09;&#x65F6;&#xFF0C;&#x8BE5;&#x670D;&#x52A1;&#x7684;&#x65B0;&#x5B9E;&#x4F8B;&#x4E0D;&#x4F1A;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x5B50;&#x6CE8;&#x5165;&#x5668;&#x3002; View Example &#x4F5C;&#x4E3A;&#x7ECF;&#x9A8C;&#x6CD5;&#x5219;&#xFF0C;&#x5728;&#x4ECE;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x5BFC;&#x51FA;&#x670D;&#x52A1;&#x65F6;&#xFF0C; &#x59CB;&#x7EC8;&#x4F7F;&#x7528; forRoot &#x8BED;&#x6CD5; &#xFF0C;&#x9664;&#x975E;&#x60A8;&#x6709;&#x975E;&#x5E38;&#x7279;&#x6B8A;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x6811;&#x7684;&#x4E0D;&#x540C;&#x7EA7;&#x522B;&#x6709;&#x591A;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002;"},"Modules/introduction.html":{"title":"","path":"\\Modules\\introduction.html","body":"#什么是Angular 2模块？ 在Angular 2中，模块是以相关的组件，指令，管道和服务的组合的机制，其可以与其他模块组合以创建应用程序。 Angular 2应用程序可以被认为是一个谜题，需要每个部分（或每个模块）组合在一起才能够看到完整的图片。 另一个类比了解Angular 2模块的是类。 在类中，我们可以定义公共或私有方法。 公共方法是我们代码的其他部分可以用来与之交互的API，而私有方法是隐藏的实现细节。 以相同的方式，模块可以导出或隐藏组件，指令，管道和服务。 导出的元素可被其他模块使用，而未导出（隐藏）的元素只是在模块本身内部使用，并且不能被我们的应用程序的其他模块直接访问。 一个模块的基本使用 模块的基本使用 为了能够定义模块，我们必须使用装饰器 NgModule 。 1 2 3 4 5 6 7 8 import  NgModule  from '@angular/core' ; @NgModule ( imports: [ ... ], declarations: [ ... ], bootstrap: [ ... ] ) export class AppModule   在上面的例子中，我们已经将类 AppModule 转换为Angular 2模块，只需使用 NgModule 装饰器。 NgModule 装饰器至少需要三个属性： import ， declarations 和 bootstrap 。 imports 属性需要一个模块数组。 这里是我们定义我们的拼图的部分（我们的应用程序）。 declarations 属性需要一个作为模块的一部分的组件，指令和管道的数组。 bootstrap 属性是我们定义模块的根组件的地方。 即使这个属性也是一个数组，99％的情况我们只定义一个组件。 在非常特殊的情况下，可能需要多个组件来引导模块，但是我们不会在这里讨论这些边缘情况。 以下是由一个组件组成的基本模块的样子： app/app.component.ts 1 2 3 4 5 6 7 import  Component  from '@angular/core' ; @Component ( selector: 'app-root' , template: 'h1My Angular 2 App/h1' ) export class AppComponent  app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 import  NgModule  from '@angular/core' ; import  BrowserModule  from '@angular/platform-browser' ; import  AppComponent  from './app.component' ; @NgModule ( imports: [BrowserModule], declarations: [AppComponent], bootstrap: [AppComponent] ) export class AppModule   文件 app.component.ts 只是一个“hello world”组件，没有什么有趣的。另一方面， app.module.ts 文件遵循我们之前定义模块的结构，但在这种情况下，我们定义了我们将要使用的模块和组件。 我们注意到的第一件事是，我们的模块是将 BrowserModule 导入为显式依赖项。 BrowserModule 是一个内置的模块，用于导出基本指令，管道和服务。与以前版本的Angular 2不同，我们必须显式导入这些依赖关系，以便能够在模板中使用类似 *ngFor 或 *ngIf 的指令。 假定我们模块的根（唯一）组件是 AppComponent ，我们必须在 bootstrap 数组中列出它。因为在 declarations 属性中，我们应该定义组成应用程序的所有组件或管道，我们必须再次定义 AppComponent 。 在继续之前，有一个重要的澄清要做。 有两种类型的模块，根模块和功能模块。 以同样的方式，在一个模块中，我们有一个根组件和许多可能的次级组件， 在应用程序中，我们只有一个根模块和零个或许多功能模块 。 为了能够引导我们的应用程序，Angular需要知道哪个是根模块。 识别根模块的简单方法是查看其 NgModule 装饰器的 imports 属性。 如果模块正在导入 BrowserModule ，那么它是一个根模块，如果相反是导入 CommonModule ，那么它是一个功能模块。 作为开发人员，我们需要注意在根模块中导入 BrowserModule ，而是将 CommonModule 导入我们为同一应用程序创建的任何其他模块。 如果不这样做，可能会导致在使用延迟加载模块时出现问题，我们将在以下部分中看到。 按照惯例，根模块应始终命名为 AppModule 。 引导应用程序 为了引导我们基于模块的应用程序，我们需要通知Angular哪一个是我们的根模块在浏览器中执行编译。这种在浏览器中的编译也称为“Just in Time”（JIT）编译。 main.ts 1 2 3 4 import  platformBrowserDynamic  from '@angular/platform-browser-dynamic' ; import  AppModule  from './app/app.module' ; platformBrowserDynamic().bootstrapModule(AppModule); 还可以将编译作为我们工作流程的构建步骤来执行。 这种方法称为“Ahead of Time”（AOT）编译，并且将需要稍微不同的引导过程，我们将在另一部分中讨论。 查看示例 在下一节中，我们将了解如何创建具有多个组件，服务和管道的模块。"},"Modules/introduction.html#一个模块的基本使用":{"title":"&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;","path":"\\Modules\\introduction.html#一个模块的基本使用","body":"&#x6A21;&#x5757;&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528; &#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x5B9A;&#x4E49;&#x6A21;&#x5757;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x88C5;&#x9970;&#x5668; NgModule &#x3002; 1 2 3 4 5 6 7 8 import { NgModule } from &apos;@angular/core&apos; ; @NgModule ({ imports: [ ... ], declarations: [ ... ], bootstrap: [ ... ] }) export class AppModule { } &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5C06;&#x7C7B; AppModule &#x8F6C;&#x6362;&#x4E3A;Angular 2&#x6A21;&#x5757;&#xFF0C;&#x53EA;&#x9700;&#x4F7F;&#x7528; NgModule &#x88C5;&#x9970;&#x5668;&#x3002; NgModule &#x88C5;&#x9970;&#x5668;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x4E09;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A; import &#xFF0C; declarations &#x548C; bootstrap &#x3002; imports &#x5C5E;&#x6027;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x6570;&#x7EC4;&#x3002; &#x8FD9;&#x91CC;&#x662F;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684;&#x62FC;&#x56FE;&#x7684;&#x90E8;&#x5206;&#xFF08;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF09;&#x3002; declarations &#x5C5E;&#x6027;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x4F5C;&#x4E3A;&#x6A21;&#x5757;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x6307;&#x4EE4;&#x548C;&#x7BA1;&#x9053;&#x7684;&#x6570;&#x7EC4;&#x3002; bootstrap &#x5C5E;&#x6027;&#x662F;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x6A21;&#x5757;&#x7684;&#x6839;&#x7EC4;&#x4EF6;&#x7684;&#x5730;&#x65B9;&#x3002; &#x5373;&#x4F7F;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;99&#xFF05;&#x7684;&#x60C5;&#x51B5;&#x6211;&#x4EEC;&#x53EA;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#x3002; &#x5728;&#x975E;&#x5E38;&#x7279;&#x6B8A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x591A;&#x4E2A;&#x7EC4;&#x4EF6;&#x6765;&#x5F15;&#x5BFC;&#x6A21;&#x5757;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x4E0D;&#x4F1A;&#x5728;&#x8FD9;&#x91CC;&#x8BA8;&#x8BBA;&#x8FD9;&#x4E9B;&#x8FB9;&#x7F18;&#x60C5;&#x51B5;&#x3002; &#x4EE5;&#x4E0B;&#x662F;&#x7531;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#x7EC4;&#x6210;&#x7684;&#x57FA;&#x672C;&#x6A21;&#x5757;&#x7684;&#x6837;&#x5B50;&#xFF1A; app/app.component.ts 1 2 3 4 5 6 7 import { Component } from &apos;@angular/core&apos; ; @Component ({ selector: &apos;app-root&apos; , template: &apos;h1My Angular 2 App/h1&apos; }) export class AppComponent {} app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 import { NgModule } from &apos;@angular/core&apos; ; import { BrowserModule } from &apos;@angular/platform-browser&apos; ; import { AppComponent } from &apos;./app.component&apos; ; @NgModule ({ imports: [BrowserModule], declarations: [AppComponent], bootstrap: [AppComponent] }) export class AppModule { } &#x6587;&#x4EF6; app.component.ts &#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x201C;hello world&#x201D;&#x7EC4;&#x4EF6;&#xFF0C;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x6709;&#x8DA3;&#x7684;&#x3002;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C; app.module.ts &#x6587;&#x4EF6;&#x9075;&#x5FAA;&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x5B9A;&#x4E49;&#x6A21;&#x5757;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x4F46;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E86;&#x6211;&#x4EEC;&#x5C06;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x6A21;&#x5757;&#x548C;&#x7EC4;&#x4EF6;&#x3002; &#x6211;&#x4EEC;&#x6CE8;&#x610F;&#x5230;&#x7684;&#x7B2C;&#x4E00;&#x4EF6;&#x4E8B;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x5757;&#x662F;&#x5C06; BrowserModule &#x5BFC;&#x5165;&#x4E3A;&#x663E;&#x5F0F;&#x4F9D;&#x8D56;&#x9879;&#x3002; BrowserModule &#x662F;&#x4E00;&#x4E2A;&#x5185;&#x7F6E;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x7528;&#x4E8E;&#x5BFC;&#x51FA;&#x57FA;&#x672C;&#x6307;&#x4EE4;&#xFF0C;&#x7BA1;&#x9053;&#x548C;&#x670D;&#x52A1;&#x3002;&#x4E0E;&#x4EE5;&#x524D;&#x7248;&#x672C;&#x7684;Angular 2&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x663E;&#x5F0F;&#x5BFC;&#x5165;&#x8FD9;&#x4E9B;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x4EE5;&#x4FBF;&#x80FD;&#x591F;&#x5728;&#x6A21;&#x677F;&#x4E2D;&#x4F7F;&#x7528;&#x7C7B;&#x4F3C; *ngFor &#x6216; *ngIf &#x7684;&#x6307;&#x4EE4;&#x3002; &#x5047;&#x5B9A;&#x6211;&#x4EEC;&#x6A21;&#x5757;&#x7684;&#x6839;&#xFF08;&#x552F;&#x4E00;&#xFF09;&#x7EC4;&#x4EF6;&#x662F; AppComponent &#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5728; bootstrap &#x6570;&#x7EC4;&#x4E2D;&#x5217;&#x51FA;&#x5B83;&#x3002;&#x56E0;&#x4E3A;&#x5728; declarations &#x5C5E;&#x6027;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5B9A;&#x4E49;&#x7EC4;&#x6210;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6240;&#x6709;&#x7EC4;&#x4EF6;&#x6216;&#x7BA1;&#x9053;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x518D;&#x6B21;&#x5B9A;&#x4E49; AppComponent &#x3002; &#x5728;&#x7EE7;&#x7EED;&#x4E4B;&#x524D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6F84;&#x6E05;&#x8981;&#x505A;&#x3002; &#x6709;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x6839;&#x6A21;&#x5757;&#x548C;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x3002; &#x4EE5;&#x540C;&#x6837;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x6839;&#x7EC4;&#x4EF6;&#x548C;&#x8BB8;&#x591A;&#x53EF;&#x80FD;&#x7684;&#x6B21;&#x7EA7;&#x7EC4;&#x4EF6;&#xFF0C; &#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6839;&#x6A21;&#x5757;&#x548C;&#x96F6;&#x4E2A;&#x6216;&#x8BB8;&#x591A;&#x529F;&#x80FD;&#x6A21;&#x5757; &#x3002; &#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x5F15;&#x5BFC;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;Angular&#x9700;&#x8981;&#x77E5;&#x9053;&#x54EA;&#x4E2A;&#x662F;&#x6839;&#x6A21;&#x5757;&#x3002; &#x8BC6;&#x522B;&#x6839;&#x6A21;&#x5757;&#x7684;&#x7B80;&#x5355;&#x65B9;&#x6CD5;&#x662F;&#x67E5;&#x770B;&#x5176; NgModule &#x88C5;&#x9970;&#x5668;&#x7684; imports &#x5C5E;&#x6027;&#x3002; &#x5982;&#x679C;&#x6A21;&#x5757;&#x6B63;&#x5728;&#x5BFC;&#x5165; BrowserModule &#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x6839;&#x6A21;&#x5757;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x53CD;&#x662F;&#x5BFC;&#x5165; CommonModule &#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x3002; &#x4F5C;&#x4E3A;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x5728;&#x6839;&#x6A21;&#x5757;&#x4E2D;&#x5BFC;&#x5165; BrowserModule &#xFF0C;&#x800C;&#x662F;&#x5C06; CommonModule &#x5BFC;&#x5165;&#x6211;&#x4EEC;&#x4E3A;&#x540C;&#x4E00;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x521B;&#x5EFA;&#x7684;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x3002; &#x5982;&#x679C;&#x4E0D;&#x8FD9;&#x6837;&#x505A;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x5728;&#x4F7F;&#x7528;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x65F6;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x4EE5;&#x4E0B;&#x90E8;&#x5206;&#x4E2D;&#x770B;&#x5230;&#x3002; &#x6309;&#x7167;&#x60EF;&#x4F8B;&#xFF0C;&#x6839;&#x6A21;&#x5757;&#x5E94;&#x59CB;&#x7EC8;&#x547D;&#x540D;&#x4E3A; AppModule &#x3002;"},"Modules/introduction.html#引导应用程序":{"title":"&#x5F15;&#x5BFC;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;","path":"\\Modules\\introduction.html#引导应用程序","body":"&#x4E3A;&#x4E86;&#x5F15;&#x5BFC;&#x6211;&#x4EEC;&#x57FA;&#x4E8E;&#x6A21;&#x5757;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x901A;&#x77E5;Angular&#x54EA;&#x4E00;&#x4E2A;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x6839;&#x6A21;&#x5757;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x6267;&#x884C;&#x7F16;&#x8BD1;&#x3002;&#x8FD9;&#x79CD;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x7684;&#x7F16;&#x8BD1;&#x4E5F;&#x79F0;&#x4E3A;&#x201C;Just in Time&#x201D;&#xFF08;JIT&#xFF09;&#x7F16;&#x8BD1;&#x3002; main.ts 1 2 3 4 import { platformBrowserDynamic } from &apos;@angular/platform-browser-dynamic&apos; ; import { AppModule } from &apos;./app/app.module&apos; ; platformBrowserDynamic().bootstrapModule(AppModule); &#x8FD8;&#x53EF;&#x4EE5;&#x5C06;&#x7F16;&#x8BD1;&#x4F5C;&#x4E3A;&#x6211;&#x4EEC;&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;&#x7684;&#x6784;&#x5EFA;&#x6B65;&#x9AA4;&#x6765;&#x6267;&#x884C;&#x3002; &#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x79F0;&#x4E3A;&#x201C;Ahead of Time&#x201D;&#xFF08;AOT&#xFF09;&#x7F16;&#x8BD1;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x9700;&#x8981;&#x7A0D;&#x5FAE;&#x4E0D;&#x540C;&#x7684;&#x5F15;&#x5BFC;&#x8FC7;&#x7A0B;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x53E6;&#x4E00;&#x90E8;&#x5206;&#x4E2D;&#x8BA8;&#x8BBA;&#x3002; &#x67E5;&#x770B;&#x793A;&#x4F8B; &#x5728;&#x4E0B;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4E86;&#x89E3;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x5177;&#x6709;&#x591A;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF0C;&#x670D;&#x52A1;&#x548C;&#x7BA1;&#x9053;&#x7684;&#x6A21;&#x5757;&#x3002;"},"Modules/lazy-load-di.html":{"title":"","path":"\\Modules\\lazy-load-di.html","body":"延迟加载和依赖注入树 延迟加载模块在依赖注入（DI）树上创建自己的分支。 这意味着可能拥有属于延迟加载模块的服务，这些服务不能由根模块或我们的应用程序的任何其他热加载的模块访问。 为了显示这种行为，让我们继续上一节的示例，并向我们的 LazyModule 添加一个 CounterService 。 app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 ... import  CounterService  from './counter.service' ; @NgModule ( ... providers: [CounterService] ) export class LazyModule  这里我们将 CounterService 添加到 providers 数组中。 我们的 CounterService 是一个简单的类，它保存对计数器属性的引用。 app/lazy/counter.service.ts 1 2 3 4 5 6 import  Injectable  from '@angular/core' ; @Injectable () export class CounterService  counter = 0 ;  我们可以修改 LazyComponent 来使用这个服务，使用一个按钮来增加计数器属性。 app/lazy/lazy.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  Component  from '@angular/core' ; import  CounterService  from './counter.service' ; @Component ( template: ` pLazy Component/p button (click)=\"increaseCounter()\"Increase Counter/button pCounter:  counterService.counter /p ` ) export class LazyComponent  constructor ( public counterService: CounterService )  increaseCounter()  this .counterService.counter += 1 ;   View Example 服务可以工作了。 如果我们递增计数器，然后在 eager 和 lazy 路由之间来回导航， counter 值将在延迟加载模块中持续。 但问题是，我们如何验证服务是隔离的，不能在属于不同模块的组件中使用？ 让我们尝试在 EagerComponent 中使用相同的服务。 app/eager.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import  Component  from '@angular/core' ; import  CounterService  from './lazy/counter.service' ; @Component ( template: ` pEager Component/p button (click)=\"increaseCounter()\"Increase Counter/button pCounter:  counterService.counter /p ` ) export class EagerComponent  constructor ( public counterService: CounterService )  increaseCounter()  this .counterService.counter += 1 ;   如果我们尝试运行这个新版本的代码，我们将在浏览器控制台中收到一条错误消息： 1 No provider for CounterService! 这个错误告诉我们，定义了 EagerComponent 的 AppModule 不知道叫做 CounterService 的服务。当 CounterService 在浏览器中延迟加载时，它驻留在为 LazyModule 创建的DI树的不同分支中。"},"Modules/lazy-load-di.html#延迟加载和依赖注入树":{"title":"&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x548C;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x6811;","path":"\\Modules\\lazy-load-di.html#延迟加载和依赖注入树","body":"&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x5728;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#xFF08;DI&#xFF09;&#x6811;&#x4E0A;&#x521B;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x5206;&#x652F;&#x3002; &#x8FD9;&#x610F;&#x5473;&#x7740;&#x53EF;&#x80FD;&#x62E5;&#x6709;&#x5C5E;&#x4E8E;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x8FD9;&#x4E9B;&#x670D;&#x52A1;&#x4E0D;&#x80FD;&#x7531;&#x6839;&#x6A21;&#x5757;&#x6216;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x70ED;&#x52A0;&#x8F7D;&#x7684;&#x6A21;&#x5757;&#x8BBF;&#x95EE;&#x3002; &#x4E3A;&#x4E86;&#x663E;&#x793A;&#x8FD9;&#x79CD;&#x884C;&#x4E3A;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x4E0A;&#x4E00;&#x8282;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x5E76;&#x5411;&#x6211;&#x4EEC;&#x7684; LazyModule &#x6DFB;&#x52A0;&#x4E00;&#x4E2A; CounterService &#x3002; app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 ... import { CounterService } from &apos;./counter.service&apos; ; @NgModule ({ ... providers: [CounterService] }) export class LazyModule {} &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5C06; CounterService &#x6DFB;&#x52A0;&#x5230; providers &#x6570;&#x7EC4;&#x4E2D;&#x3002; &#x6211;&#x4EEC;&#x7684; CounterService &#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x7C7B;&#xFF0C;&#x5B83;&#x4FDD;&#x5B58;&#x5BF9;&#x8BA1;&#x6570;&#x5668;&#x5C5E;&#x6027;&#x7684;&#x5F15;&#x7528;&#x3002; app/lazy/counter.service.ts 1 2 3 4 5 6 import { Injectable } from &apos;@angular/core&apos; ; @Injectable () export class CounterService { counter = 0 ; } &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4FEE;&#x6539; LazyComponent &#x6765;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x670D;&#x52A1;&#xFF0C;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&#x6765;&#x589E;&#x52A0;&#x8BA1;&#x6570;&#x5668;&#x5C5E;&#x6027;&#x3002; app/lazy/lazy.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import { Component } from &apos;@angular/core&apos; ; import { CounterService } from &apos;./counter.service&apos; ; @Component ({ template: ` pLazy Component/p button (click)=increaseCounter()Increase Counter/button pCounter: {{ counterService.counter }}/p ` }) export class LazyComponent { constructor ( public counterService: CounterService ) {} increaseCounter() { this .counterService.counter += 1 ; } } View Example &#x670D;&#x52A1;&#x53EF;&#x4EE5;&#x5DE5;&#x4F5C;&#x4E86;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x9012;&#x589E;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x7136;&#x540E;&#x5728; eager &#x548C; lazy &#x8DEF;&#x7531;&#x4E4B;&#x95F4;&#x6765;&#x56DE;&#x5BFC;&#x822A;&#xFF0C; counter &#x503C;&#x5C06;&#x5728;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x4E2D;&#x6301;&#x7EED;&#x3002; &#x4F46;&#x95EE;&#x9898;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x9A8C;&#x8BC1;&#x670D;&#x52A1;&#x662F;&#x9694;&#x79BB;&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x5728;&#x5C5E;&#x4E8E;&#x4E0D;&#x540C;&#x6A21;&#x5757;&#x7684;&#x7EC4;&#x4EF6;&#x4E2D;&#x4F7F;&#x7528;&#xFF1F; &#x8BA9;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x5728; EagerComponent &#x4E2D;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x670D;&#x52A1;&#x3002; app/eager.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import { Component } from &apos;@angular/core&apos; ; import { CounterService } from &apos;./lazy/counter.service&apos; ; @Component ({ template: ` pEager Component/p button (click)=increaseCounter()Increase Counter/button pCounter: {{ counterService.counter }}/p ` }) export class EagerComponent { constructor ( public counterService: CounterService ) {} increaseCounter() { this .counterService.counter += 1 ; } } &#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x8FD0;&#x884C;&#x8FD9;&#x4E2A;&#x65B0;&#x7248;&#x672C;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x63A7;&#x5236;&#x53F0;&#x4E2D;&#x6536;&#x5230;&#x4E00;&#x6761;&#x9519;&#x8BEF;&#x6D88;&#x606F;&#xFF1A; 1 No provider for CounterService! &#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#xFF0C;&#x5B9A;&#x4E49;&#x4E86; EagerComponent &#x7684; AppModule &#x4E0D;&#x77E5;&#x9053;&#x53EB;&#x505A; CounterService &#x7684;&#x670D;&#x52A1;&#x3002;&#x5F53; CounterService &#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x65F6;&#xFF0C;&#x5B83;&#x9A7B;&#x7559;&#x5728;&#x4E3A; LazyModule &#x521B;&#x5EFA;&#x7684;DI&#x6811;&#x7684;&#x4E0D;&#x540C;&#x5206;&#x652F;&#x4E2D;&#x3002;"},"Modules/lazy-loading-module.html":{"title":"","path":"\\Modules\\lazy-loading-module.html","body":"延迟加载模块 使用模块将我们的应用的相关功能分组的另一个优点是能够按需加载那些片段。 延迟加载模块有助于减少启动时间。 通过延迟加载，我们的应用程序不需要立即加载所有内容，它只需要加载用户期望第一次加载时看到的内容。 延迟加载的模块只会在用户导航到其路由时加载。 为了显示这种关系，让我们开始定义一个简单的模块，作为我们的示例应用程序的根模块。 app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  NgModule  from '@angular/core' ; import  BrowserModule  from '@angular/platform-browser' ; import  AppComponent  from './app.component' ; import  EagerComponent  from './eager.component' ; import  routing  from './app.routing' ; @NgModule ( imports: [ BrowserModule, routing ], declarations: [ AppComponent, EagerComponent ], bootstrap: [AppComponent] ) export class AppModule  到目前为止，这是一个非常常见的模块，依赖于 BrowserModule ，有一个路由机制和两个组件： AppComponent 和 EagerComponent 。 现在，让我们专注于定义导航的应用程序（ AppComponent ）的根组件。 app/app.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import  Component  from '@angular/core' ; @Component ( selector: 'app-root' , template: ` h1My App/h1 nav a routerLink=\"eager\"Eager/a a routerLink=\"lazy\"Lazy/a /nav router-outlet/router-outlet ` ) export class AppComponent  我们的导航系统只有两条路： eager 和 lazy 。 要知道当点击它们时加载哪些路径，我们需要看看我们传递给根模块的路由对象。 app/app.routing.ts 1 2 3 4 5 6 7 8 9 10 11 12 import  ModuleWithProviders  from '@angular/core' ; import  Routes, RouterModule  from '@angular/router' ; import  EagerComponent  from './eager.component' ; const routes: Routes = [  path: '' , redirectTo: 'eager' , pathMatch: 'full' ,  path: 'eager' , component: EagerComponent ,  path: 'lazy' , loadChildren: 'lazy/lazy.module#LazyModule'  ]; export const routing: ModuleWithProviders = RouterModule.forRoot(routes); 这里我们可以看到，在我们的应用程序中的默认路径叫做 eager ，它将加载 EagerComponent 。 app/eager.component.ts 1 2 3 4 5 6 import  Component  from '@angular/core' ; @Component ( template: 'pEager Component/p' ) export class EagerComponent  但更重要的是，我们可以看到，每当我们试图去 lazy 的路径，我们会懒加载一个模块，方便地称为 LazyModule 。 仔细观察那条路由的定义： 1  path: 'lazy' , loadChildren: 'lazy/lazy.module#LazyModule'  这里有几个重要的事情要注意： 我们使用属性 loadChildren 而不是 component 。 我们传递一个字符串而不是一个符号，以避免加载模块。 我们不仅定义了模块的路径，还定义了类的名称。 除了它有自己的路由和一个名为 LazyComponent 的组件， LazyModule 没有什么特别的。 app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 9 10 import  NgModule  from '@angular/core' ; import  LazyComponent  from './lazy.component' ; import  routing  from './lazy.routing' ; @NgModule ( imports: [routing], declarations: [LazyComponent] ) export class LazyModule  如果我们定义类 LazyModule 作为文件的默认导出，我们不需要在 loadChildren 属性中定义类名称，如上所示。 routing 对象非常简单，只定义导航到 lazy 路径时加载的默认组件。 app/lazy/lazy.routing.ts 1 2 3 4 5 6 7 8 9 10 import  ModuleWithProviders  from '@angular/core' ; import  Routes, RouterModule  from '@angular/router' ; import  LazyComponent  from './lazy.component' ; const routes: Routes = [  path: '' , component: LazyComponent  ]; export const routing: ModuleWithProviders = RouterModule.forChild(routes); 注意，我们使用方法调用 forChild 而不是 forRoot 来创建路由对象。 我们应该在为特征模块创建路由对象时始终这样做，无论模块应该是 eagerly 还是 lazily 加载。 最后，我们的 LazyComponent 非常类似于 EagerComponent ，并且只是一些文本的占位符。 app/lazy/lazy.component.ts 1 2 3 4 5 6 import  Component  from '@angular/core' ; @Component ( template: 'pLazy Component/p' ) export class LazyComponent  View Example 当我们第一次加载应用程序时， AppComponent 中的 AppModule 将在浏览器中加载，我们应该看到导航系统和文本“Eager Component”。 直到这一点， LazyModule 没有被下载，只有当我们点击链接“Lazy”所需的代码将被下载，我们将在浏览器中看到消息“Lazy Component”。 我们有效地延迟加载了一个模块。"},"Modules/lazy-loading-module.html#延迟加载模块":{"title":"&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;","path":"\\Modules\\lazy-loading-module.html#延迟加载模块","body":"&#x4F7F;&#x7528;&#x6A21;&#x5757;&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7684;&#x76F8;&#x5173;&#x529F;&#x80FD;&#x5206;&#x7EC4;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x4F18;&#x70B9;&#x662F;&#x80FD;&#x591F;&#x6309;&#x9700;&#x52A0;&#x8F7D;&#x90A3;&#x4E9B;&#x7247;&#x6BB5;&#x3002; &#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x6709;&#x52A9;&#x4E8E;&#x51CF;&#x5C11;&#x542F;&#x52A8;&#x65F6;&#x95F4;&#x3002; &#x901A;&#x8FC7;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0D;&#x9700;&#x8981;&#x7ACB;&#x5373;&#x52A0;&#x8F7D;&#x6240;&#x6709;&#x5185;&#x5BB9;&#xFF0C;&#x5B83;&#x53EA;&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x7528;&#x6237;&#x671F;&#x671B;&#x7B2C;&#x4E00;&#x6B21;&#x52A0;&#x8F7D;&#x65F6;&#x770B;&#x5230;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x7684;&#x6A21;&#x5757;&#x53EA;&#x4F1A;&#x5728;&#x7528;&#x6237;&#x5BFC;&#x822A;&#x5230;&#x5176;&#x8DEF;&#x7531;&#x65F6;&#x52A0;&#x8F7D;&#x3002; &#x4E3A;&#x4E86;&#x663E;&#x793A;&#x8FD9;&#x79CD;&#x5173;&#x7CFB;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x4F5C;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x793A;&#x4F8B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x6A21;&#x5757;&#x3002; app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import { NgModule } from &apos;@angular/core&apos; ; import { BrowserModule } from &apos;@angular/platform-browser&apos; ; import { AppComponent } from &apos;./app.component&apos; ; import { EagerComponent } from &apos;./eager.component&apos; ; import { routing } from &apos;./app.routing&apos; ; @NgModule ({ imports: [ BrowserModule, routing ], declarations: [ AppComponent, EagerComponent ], bootstrap: [AppComponent] }) export class AppModule {} &#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5E38;&#x89C1;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x4F9D;&#x8D56;&#x4E8E; BrowserModule &#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x8DEF;&#x7531;&#x673A;&#x5236;&#x548C;&#x4E24;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF1A; AppComponent &#x548C; EagerComponent &#x3002; &#x73B0;&#x5728;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x4E13;&#x6CE8;&#x4E8E;&#x5B9A;&#x4E49;&#x5BFC;&#x822A;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF08; AppComponent &#xFF09;&#x7684;&#x6839;&#x7EC4;&#x4EF6;&#x3002; app/app.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import { Component } from &apos;@angular/core&apos; ; @Component ({ selector: &apos;app-root&apos; , template: ` h1My App/h1 nav a routerLink=eagerEager/a a routerLink=lazyLazy/a /nav router-outlet/router-outlet ` }) export class AppComponent {} &#x6211;&#x4EEC;&#x7684;&#x5BFC;&#x822A;&#x7CFB;&#x7EDF;&#x53EA;&#x6709;&#x4E24;&#x6761;&#x8DEF;&#xFF1A; eager &#x548C; lazy &#x3002; &#x8981;&#x77E5;&#x9053;&#x5F53;&#x70B9;&#x51FB;&#x5B83;&#x4EEC;&#x65F6;&#x52A0;&#x8F7D;&#x54EA;&#x4E9B;&#x8DEF;&#x5F84;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x4F20;&#x9012;&#x7ED9;&#x6839;&#x6A21;&#x5757;&#x7684;&#x8DEF;&#x7531;&#x5BF9;&#x8C61;&#x3002; app/app.routing.ts 1 2 3 4 5 6 7 8 9 10 11 12 import { ModuleWithProviders } from &apos;@angular/core&apos; ; import { Routes, RouterModule } from &apos;@angular/router&apos; ; import { EagerComponent } from &apos;./eager.component&apos; ; const routes: Routes = [ { path: &apos;&apos; , redirectTo: &apos;eager&apos; , pathMatch: &apos;full&apos; }, { path: &apos;eager&apos; , component: EagerComponent }, { path: &apos;lazy&apos; , loadChildren: &apos;lazy/lazy.module#LazyModule&apos; } ]; export const routing: ModuleWithProviders = RouterModule.forRoot(routes); &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x9ED8;&#x8BA4;&#x8DEF;&#x5F84;&#x53EB;&#x505A; eager &#xFF0C;&#x5B83;&#x5C06;&#x52A0;&#x8F7D; EagerComponent &#x3002; app/eager.component.ts 1 2 3 4 5 6 import { Component } from &apos;@angular/core&apos; ; @Component ({ template: &apos;pEager Component/p&apos; }) export class EagerComponent {} &#x4F46;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6BCF;&#x5F53;&#x6211;&#x4EEC;&#x8BD5;&#x56FE;&#x53BB; lazy &#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x61D2;&#x52A0;&#x8F7D;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x65B9;&#x4FBF;&#x5730;&#x79F0;&#x4E3A; LazyModule &#x3002; &#x4ED4;&#x7EC6;&#x89C2;&#x5BDF;&#x90A3;&#x6761;&#x8DEF;&#x7531;&#x7684;&#x5B9A;&#x4E49;&#xFF1A; 1 { path: &apos;lazy&apos; , loadChildren: &apos;lazy/lazy.module#LazyModule&apos; } &#x8FD9;&#x91CC;&#x6709;&#x51E0;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x4E8B;&#x60C5;&#x8981;&#x6CE8;&#x610F;&#xFF1A; &#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5C5E;&#x6027; loadChildren &#x800C;&#x4E0D;&#x662F; component &#x3002; &#x6211;&#x4EEC;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x3002; &#x6211;&#x4EEC;&#x4E0D;&#x4EC5;&#x5B9A;&#x4E49;&#x4E86;&#x6A21;&#x5757;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD8;&#x5B9A;&#x4E49;&#x4E86;&#x7C7B;&#x7684;&#x540D;&#x79F0;&#x3002; &#x9664;&#x4E86;&#x5B83;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x8DEF;&#x7531;&#x548C;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; LazyComponent &#x7684;&#x7EC4;&#x4EF6;&#xFF0C; LazyModule &#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x7279;&#x522B;&#x7684;&#x3002; app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 9 10 import { NgModule } from &apos;@angular/core&apos; ; import { LazyComponent } from &apos;./lazy.component&apos; ; import { routing } from &apos;./lazy.routing&apos; ; @NgModule ({ imports: [routing], declarations: [LazyComponent] }) export class LazyModule {} &#x5982;&#x679C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x7C7B; LazyModule &#x4F5C;&#x4E3A;&#x6587;&#x4EF6;&#x7684;&#x9ED8;&#x8BA4;&#x5BFC;&#x51FA;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5728; loadChildren &#x5C5E;&#x6027;&#x4E2D;&#x5B9A;&#x4E49;&#x7C7B;&#x540D;&#x79F0;&#xFF0C;&#x5982;&#x4E0A;&#x6240;&#x793A;&#x3002; routing &#x5BF9;&#x8C61;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x5B9A;&#x4E49;&#x5BFC;&#x822A;&#x5230; lazy &#x8DEF;&#x5F84;&#x65F6;&#x52A0;&#x8F7D;&#x7684;&#x9ED8;&#x8BA4;&#x7EC4;&#x4EF6;&#x3002; app/lazy/lazy.routing.ts 1 2 3 4 5 6 7 8 9 10 import { ModuleWithProviders } from &apos;@angular/core&apos; ; import { Routes, RouterModule } from &apos;@angular/router&apos; ; import { LazyComponent } from &apos;./lazy.component&apos; ; const routes: Routes = [ { path: &apos;&apos; , component: LazyComponent } ]; export const routing: ModuleWithProviders = RouterModule.forChild(routes); &#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x8C03;&#x7528; forChild &#x800C;&#x4E0D;&#x662F; forRoot &#x6765;&#x521B;&#x5EFA;&#x8DEF;&#x7531;&#x5BF9;&#x8C61;&#x3002; &#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5728;&#x4E3A;&#x7279;&#x5F81;&#x6A21;&#x5757;&#x521B;&#x5EFA;&#x8DEF;&#x7531;&#x5BF9;&#x8C61;&#x65F6;&#x59CB;&#x7EC8;&#x8FD9;&#x6837;&#x505A;&#xFF0C;&#x65E0;&#x8BBA;&#x6A21;&#x5757;&#x5E94;&#x8BE5;&#x662F; eagerly &#x8FD8;&#x662F; lazily &#x52A0;&#x8F7D;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x7684; LazyComponent &#x975E;&#x5E38;&#x7C7B;&#x4F3C;&#x4E8E; EagerComponent &#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x662F;&#x4E00;&#x4E9B;&#x6587;&#x672C;&#x7684;&#x5360;&#x4F4D;&#x7B26;&#x3002; app/lazy/lazy.component.ts 1 2 3 4 5 6 import { Component } from &apos;@angular/core&apos; ; @Component ({ template: &apos;pLazy Component/p&apos; }) export class LazyComponent {} View Example &#x5F53;&#x6211;&#x4EEC;&#x7B2C;&#x4E00;&#x6B21;&#x52A0;&#x8F7D;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C; AppComponent &#x4E2D;&#x7684; AppModule &#x5C06;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x52A0;&#x8F7D;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x770B;&#x5230;&#x5BFC;&#x822A;&#x7CFB;&#x7EDF;&#x548C;&#x6587;&#x672C;&#x201C;Eager Component&#x201D;&#x3002; &#x76F4;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C; LazyModule &#x6CA1;&#x6709;&#x88AB;&#x4E0B;&#x8F7D;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x6211;&#x4EEC;&#x70B9;&#x51FB;&#x94FE;&#x63A5;&#x201C;Lazy&#x201D;&#x6240;&#x9700;&#x7684;&#x4EE3;&#x7801;&#x5C06;&#x88AB;&#x4E0B;&#x8F7D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x770B;&#x5230;&#x6D88;&#x606F;&#x201C;Lazy Component&#x201D;&#x3002; &#x6211;&#x4EEC;&#x6709;&#x6548;&#x5730;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x4E86;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x3002;"},"Modules/modules.html":{"title":"","path":"\\Modules\\modules.html","body":"模块 Angular模块提供了一种用于创建可以组合以构建应用程序的功能块的机制。 Figure: Used Lego Duplo Bricks by Arto Alanenpää is licensed under CC BY-SA 4.0 ( https://commons.wikimedia.org/wiki/File:Lego_dublo_arto_alanenpaa_5.JPG )"},"Modules/modules.html#模块":{"title":"&#x6A21;&#x5757;","path":"\\Modules\\modules.html#模块","body":"Angular&#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x53EF;&#x4EE5;&#x7EC4;&#x5408;&#x4EE5;&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x529F;&#x80FD;&#x5757;&#x7684;&#x673A;&#x5236;&#x3002; Figure: Used Lego Duplo Bricks by Arto Alanenp&#xE4;&#xE4; is licensed under CC BY-SA 4.0 ( https://commons.wikimedia.org/wiki/File:Lego_dublo_arto_alanenpaa_5.JPG )"},"Modules/multiple-elements.html":{"title":"","path":"\\Modules\\multiple-elements.html","body":"将组件，管道和服务添加到模块 在上一节中，我们学习了如何使用一个组件创建一个模块，但通常模块不可能只有一个组件。 我们的模块通常由多个组件，服务，指令和管道组成。 在本章中，我们将扩展我们之前使用自定义组件，管道和服务的示例。 让我们开始定义一个新的组件，我们将用来显示信用卡信息。 credit-card.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import  Component, OnInit  from '@angular/core' ; import  CreditCardService  from './credit-card.service' ; @Component ( selector: 'app-credit-card' , template: ` pYour credit card is:  creditCardNumber | creditCardMask /p ` ) export class CreditCardComponent implements OnInit  creditCardNumber: string ; constructor ( private creditCardService: CreditCardService )  ngOnInit()  this .creditCardNumber = this .creditCardService.getCreditCard();   此组件依靠 CreditCardService 获取信用卡号，并通过 creditCardMask 管道隐藏掉除最后4位之外的数字。 credit-card.service.ts 1 2 3 4 5 6 7 8 import  Injectable  from '@angular/core' ; @Injectable () export class CreditCardService  getCreditCard(): string  return '2131313133123174098' ;   credit-card-mask.pipe.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import  Pipe, PipeTransform  from '@angular/core' ; @Pipe ( name: 'creditCardMask' ) export class CreditCardMaskPipe implements PipeTransform  transform(plainCreditCard: string ): string  const visibleDigits = 4 ; let maskedSection = plainCreditCard.slice( 0 , -visibleDigits); let visibleSection = plainCreditCard.slice(-visibleDigits); return maskedSection.replace( /./g , '*' ) + visibleSection;   一切就绪后，我们现在可以在根组件中使用 CreditCardComponent 。 app.component.ts 1 2 3 4 5 6 7 8 9 10 mport  Component  from \"@angular/core\" ; @Component ( selector: 'app-root' , template: ` h1My Angular 2 App/h1 app-credit-card/app-credit-card ` ) export class AppComponent  当然，为了能够使用这个新的组件，管道和服务，我们需要更新我们的模块，否则Angular不能够编译我们的应用程序。 app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import  NgModule  from '@angular/core' ; import  BrowserModule  from '@angular/platform-browser' ; import  AppComponent  from './app.component' ; import  CreditCardMaskPipe  from './credit-card-mask.pipe' ; import  CreditCardService  from './credit-card.service' ; import  CreditCardComponent  from './credit-card.component' ; @NgModule ( imports: [BrowserModule], providers: [CreditCardService], declarations: [ AppComponent, CreditCardMaskPipe, CreditCardComponent ], bootstrap: [AppComponent] ) export class AppModule   注意，我们已将组件 CreditCardComponent 和管道 CreditCardMaskPipe 与模块 AppComponent 的根组件一起添加到声明属性中。 另一方面，我们的自定义服务使用具有 providers 属性的依赖注入系统进行配置。 View Example 请注意，在 providers 属性中定义服务的此方法 只应在根模块中使用 。 在功能模块中执行此操作将在使用延迟加载模块时导致意外的后果。 在下一节中，我们将了解如何安全地定义功能模块中的服务。"},"Modules/multiple-elements.html#将组件，管道和服务添加到模块":{"title":"&#x5C06;&#x7EC4;&#x4EF6;&#xFF0C;&#x7BA1;&#x9053;&#x548C;&#x670D;&#x52A1;&#x6DFB;&#x52A0;&#x5230;&#x6A21;&#x5757;","path":"\\Modules\\multiple-elements.html#将组件，管道和服务添加到模块","body":"&#x5728;&#x4E0A;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5B66;&#x4E60;&#x4E86;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x4F46;&#x901A;&#x5E38;&#x6A21;&#x5757;&#x4E0D;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x6A21;&#x5757;&#x901A;&#x5E38;&#x7531;&#x591A;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF0C;&#x670D;&#x52A1;&#xFF0C;&#x6307;&#x4EE4;&#x548C;&#x7BA1;&#x9053;&#x7EC4;&#x6210;&#x3002; &#x5728;&#x672C;&#x7AE0;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x6269;&#x5C55;&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x7EC4;&#x4EF6;&#xFF0C;&#x7BA1;&#x9053;&#x548C;&#x670D;&#x52A1;&#x7684;&#x793A;&#x4F8B;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x7528;&#x6765;&#x663E;&#x793A;&#x4FE1;&#x7528;&#x5361;&#x4FE1;&#x606F;&#x3002; credit-card.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import { Component, OnInit } from &apos;@angular/core&apos; ; import { CreditCardService } from &apos;./credit-card.service&apos; ; @Component ({ selector: &apos;app-credit-card&apos; , template: ` pYour credit card is: {{ creditCardNumber | creditCardMask }}/p ` }) export class CreditCardComponent implements OnInit { creditCardNumber: string ; constructor ( private creditCardService: CreditCardService ) {} ngOnInit() { this .creditCardNumber = this .creditCardService.getCreditCard(); } } &#x6B64;&#x7EC4;&#x4EF6;&#x4F9D;&#x9760; CreditCardService &#x83B7;&#x53D6;&#x4FE1;&#x7528;&#x5361;&#x53F7;&#xFF0C;&#x5E76;&#x901A;&#x8FC7; creditCardMask &#x7BA1;&#x9053;&#x9690;&#x85CF;&#x6389;&#x9664;&#x6700;&#x540E;4&#x4F4D;&#x4E4B;&#x5916;&#x7684;&#x6570;&#x5B57;&#x3002; credit-card.service.ts 1 2 3 4 5 6 7 8 import { Injectable } from &apos;@angular/core&apos; ; @Injectable () export class CreditCardService { getCreditCard(): string { return &apos;2131313133123174098&apos; ; } } credit-card-mask.pipe.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 import { Pipe, PipeTransform } from &apos;@angular/core&apos; ; @Pipe ({ name: &apos;creditCardMask&apos; }) export class CreditCardMaskPipe implements PipeTransform { transform(plainCreditCard: string ): string { const visibleDigits = 4 ; let maskedSection = plainCreditCard.slice( 0 , -visibleDigits); let visibleSection = plainCreditCard.slice(-visibleDigits); return maskedSection.replace( /./g , &apos;*&apos; ) + visibleSection; } } &#x4E00;&#x5207;&#x5C31;&#x7EEA;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x5728;&#x6839;&#x7EC4;&#x4EF6;&#x4E2D;&#x4F7F;&#x7528; CreditCardComponent &#x3002; app.component.ts 1 2 3 4 5 6 7 8 9 10 mport { Component } from @angular/core ; @Component ({ selector: &apos;app-root&apos; , template: ` h1My Angular 2 App/h1 app-credit-card/app-credit-card ` }) export class AppComponent {} &#x5F53;&#x7136;&#xFF0C;&#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x65B0;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x7BA1;&#x9053;&#x548C;&#x670D;&#x52A1;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x66F4;&#x65B0;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x5426;&#x5219;Angular&#x4E0D;&#x80FD;&#x591F;&#x7F16;&#x8BD1;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import { NgModule } from &apos;@angular/core&apos; ; import { BrowserModule } from &apos;@angular/platform-browser&apos; ; import { AppComponent } from &apos;./app.component&apos; ; import { CreditCardMaskPipe } from &apos;./credit-card-mask.pipe&apos; ; import { CreditCardService } from &apos;./credit-card.service&apos; ; import { CreditCardComponent } from &apos;./credit-card.component&apos; ; @NgModule ({ imports: [BrowserModule], providers: [CreditCardService], declarations: [ AppComponent, CreditCardMaskPipe, CreditCardComponent ], bootstrap: [AppComponent] }) export class AppModule { } &#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x5C06;&#x7EC4;&#x4EF6; CreditCardComponent &#x548C;&#x7BA1;&#x9053; CreditCardMaskPipe &#x4E0E;&#x6A21;&#x5757; AppComponent &#x7684;&#x6839;&#x7EC4;&#x4EF6;&#x4E00;&#x8D77;&#x6DFB;&#x52A0;&#x5230;&#x58F0;&#x660E;&#x5C5E;&#x6027;&#x4E2D;&#x3002; &#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x670D;&#x52A1;&#x4F7F;&#x7528;&#x5177;&#x6709; providers &#x5C5E;&#x6027;&#x7684;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#x3002; View Example &#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x5728; providers &#x5C5E;&#x6027;&#x4E2D;&#x5B9A;&#x4E49;&#x670D;&#x52A1;&#x7684;&#x6B64;&#x65B9;&#x6CD5; &#x53EA;&#x5E94;&#x5728;&#x6839;&#x6A21;&#x5757;&#x4E2D;&#x4F7F;&#x7528; &#x3002; &#x5728;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x4E2D;&#x6267;&#x884C;&#x6B64;&#x64CD;&#x4F5C;&#x5C06;&#x5728;&#x4F7F;&#x7528;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x65F6;&#x5BFC;&#x81F4;&#x610F;&#x5916;&#x7684;&#x540E;&#x679C;&#x3002; &#x5728;&#x4E0B;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4E86;&#x89E3;&#x5982;&#x4F55;&#x5B89;&#x5168;&#x5730;&#x5B9A;&#x4E49;&#x529F;&#x80FD;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x670D;&#x52A1;&#x3002;"},"Modules/shared-di-tree.html":{"title":"","path":"\\Modules\\shared-di-tree.html","body":"共享相同的依赖注入树 到目前为止，我们的问题是我们在DI树的不同级别创建相同服务的两个实例。 在树的较低分支中创建的实例会遮蔽在根级别定义的实例。 解决方案？ 避免在延迟加载模块的DI树的较低级别中创建第二个实例，并且仅使用在树根处注册的服务实例。 为了实现这一点，我们需要修改 SharedModule 的定义，而不是在 providers 属性中定义我们的服务，我们需要创建一个称为 forRoot 的静态方法，该方法将与模块本身一起导出服务。 app/shared/shared.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 import  NgModule, ModuleWithProviders  from '@angular/core' ; import  CounterService  from './counter.service' ; @NgModule () export class SharedModule  static forRoot(): ModuleWithProviders  return  ngModule: SharedModule, providers: [CounterService] ;   通过这个设置，我们可以在我们的根模块 AppModule 中导入这个模块，调用 forRoot 方法来注册模块和服务。 app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 ... import  SharedModule  from './shared/shared.module' ; @NgModule ( imports: [ SharedModule.forRoot(), ... ], ... ) export class AppModule  相反，当在 LazyModule 中导入相同的模块时，我们不会调用 forRoot 方法，因为我们不想在DI树的不同级别注册该服务，因此 LazyModule 的声明不会改变。 app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 9 10 11 ... import  SharedModule  from '../shared/shared.module' ; @NgModule ( imports: [ SharedModule, ... ], ... ) export class LazyModule  View Example 这次，只要我们更改 counter 属性的值，该值就会在 EagerComponent 和 LazyComponent 之间共享，证明我们正在使用 CounterService 的同一个实例。"},"Modules/shared-di-tree.html#共享相同的依赖注入树":{"title":"&#x5171;&#x4EAB;&#x76F8;&#x540C;&#x7684;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x6811;","path":"\\Modules\\shared-di-tree.html#共享相同的依赖注入树","body":"&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x95EE;&#x9898;&#x662F;&#x6211;&#x4EEC;&#x5728;DI&#x6811;&#x7684;&#x4E0D;&#x540C;&#x7EA7;&#x522B;&#x521B;&#x5EFA;&#x76F8;&#x540C;&#x670D;&#x52A1;&#x7684;&#x4E24;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002; &#x5728;&#x6811;&#x7684;&#x8F83;&#x4F4E;&#x5206;&#x652F;&#x4E2D;&#x521B;&#x5EFA;&#x7684;&#x5B9E;&#x4F8B;&#x4F1A;&#x906E;&#x853D;&#x5728;&#x6839;&#x7EA7;&#x522B;&#x5B9A;&#x4E49;&#x7684;&#x5B9E;&#x4F8B;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF1F; &#x907F;&#x514D;&#x5728;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x7684;DI&#x6811;&#x7684;&#x8F83;&#x4F4E;&#x7EA7;&#x522B;&#x4E2D;&#x521B;&#x5EFA;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x4E14;&#x4EC5;&#x4F7F;&#x7528;&#x5728;&#x6811;&#x6839;&#x5904;&#x6CE8;&#x518C;&#x7684;&#x670D;&#x52A1;&#x5B9E;&#x4F8B;&#x3002; &#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4FEE;&#x6539; SharedModule &#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5728; providers &#x5C5E;&#x6027;&#x4E2D;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x79F0;&#x4E3A; forRoot &#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x5C06;&#x4E0E;&#x6A21;&#x5757;&#x672C;&#x8EAB;&#x4E00;&#x8D77;&#x5BFC;&#x51FA;&#x670D;&#x52A1;&#x3002; app/shared/shared.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 import { NgModule, ModuleWithProviders } from &apos;@angular/core&apos; ; import { CounterService } from &apos;./counter.service&apos; ; @NgModule ({}) export class SharedModule { static forRoot(): ModuleWithProviders { return { ngModule: SharedModule, providers: [CounterService] }; } } &#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x8BBE;&#x7F6E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x6839;&#x6A21;&#x5757; AppModule &#x4E2D;&#x5BFC;&#x5165;&#x8FD9;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x8C03;&#x7528; forRoot &#x65B9;&#x6CD5;&#x6765;&#x6CE8;&#x518C;&#x6A21;&#x5757;&#x548C;&#x670D;&#x52A1;&#x3002; app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 ... import { SharedModule } from &apos;./shared/shared.module&apos; ; @NgModule ({ imports: [ SharedModule.forRoot(), ... ], ... }) export class AppModule {} &#x76F8;&#x53CD;&#xFF0C;&#x5F53;&#x5728; LazyModule &#x4E2D;&#x5BFC;&#x5165;&#x76F8;&#x540C;&#x7684;&#x6A21;&#x5757;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x4F1A;&#x8C03;&#x7528; forRoot &#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x4E0D;&#x60F3;&#x5728;DI&#x6811;&#x7684;&#x4E0D;&#x540C;&#x7EA7;&#x522B;&#x6CE8;&#x518C;&#x8BE5;&#x670D;&#x52A1;&#xFF0C;&#x56E0;&#x6B64; LazyModule &#x7684;&#x58F0;&#x660E;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x3002; app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 9 10 11 ... import { SharedModule } from &apos;../shared/shared.module&apos; ; @NgModule ({ imports: [ SharedModule, ... ], ... }) export class LazyModule {} View Example &#x8FD9;&#x6B21;&#xFF0C;&#x53EA;&#x8981;&#x6211;&#x4EEC;&#x66F4;&#x6539; counter &#x5C5E;&#x6027;&#x7684;&#x503C;&#xFF0C;&#x8BE5;&#x503C;&#x5C31;&#x4F1A;&#x5728; EagerComponent &#x548C; LazyComponent &#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#xFF0C;&#x8BC1;&#x660E;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x4F7F;&#x7528; CounterService &#x7684;&#x540C;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x3002;"},"Modules/shared-modules-di.html":{"title":"","path":"\\Modules\\shared-modules-di.html","body":"共享模块和依赖注入 现在我们已经证明延迟加载模块在依赖注入树上创建自己的分支，我们需要学习如何处理通过在 eager 和 lazy 加载模块中的共享模块导入的服务。 让我们创建一个名为 SharedModule 的新模块，并在那里定义 CounterService 。 app/shared/shared.module.ts 1 2 3 4 5 6 7 import  NgModule  from '@angular/core' ; import  CounterService  from './counter.service' ; @NgModule ( providers: [CounterService] ) export class SharedModule  现在我们将引入 SharedModule 到 AppModule 和 LazyModule 中。 app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ... import  SharedModule  from './shared/shared.module' ; @NgModule ( imports: [ SharedModule, ... ], declarations: [ EagerComponent, ... ] ... ) export class AppModule  app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 9 10 11 ... import  SharedModule  from '../shared/shared.module' ; @NgModule ( imports: [ SharedModule, ... ], declarations: [LazyComponent] ) export class LazyModule  使用此配置，两个模块的组件都可以访问 CounterService 。 我们将以完全相同的方式在 EagerComponent 和 LazyComponent 中使用此服务。 只是一个按钮来增加服务的内部 counter 属性。 app/eager.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import  Component  from '@angular/core' ; import  CounterService  from './shared/counter.service' ; @Component ( template: ` pEager Component/p button (click)=\"increaseCounter()\"Increase Counter/button pCounter:  counterService.counter /p ` ) export class EagerComponent  constructor ( public counterService: CounterService )  increaseCounter()  this .counterService.counter += 1 ;   View Example 如果看过了上面的在线示例，你会注意到计数器似乎在 EagerComponent 和 LazyComponent 中独立行为，我们可以增加一个计数器的值，而不改变另一个。 换句话说，我们最终得到了两个 CounterService 实例，一个存在于 AppModule 的DI树根目录中，另一个存在于 LazyModule 可访问的DI树的较低分支中。 这不是必要的错误，你可能会发现，你可能需要不同的实例相同的服务，但我打赌大部分时间，这不是你想要的。 考虑认证服务的例子，你需要具有相同的信息的相同实例在任何地方都可以忽略，如果我们在一个急切或延迟加载模块中使用服务。 在下一节中，我们将学习如何只有一个共享服务实例。"},"Modules/shared-modules-di.html#共享模块和依赖注入":{"title":"&#x5171;&#x4EAB;&#x6A21;&#x5757;&#x548C;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;","path":"\\Modules\\shared-modules-di.html#共享模块和依赖注入","body":"&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x8BC1;&#x660E;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x5728;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x6811;&#x4E0A;&#x521B;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x5206;&#x652F;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5B66;&#x4E60;&#x5982;&#x4F55;&#x5904;&#x7406;&#x901A;&#x8FC7;&#x5728; eager &#x548C; lazy &#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x5171;&#x4EAB;&#x6A21;&#x5757;&#x5BFC;&#x5165;&#x7684;&#x670D;&#x52A1;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; SharedModule &#x7684;&#x65B0;&#x6A21;&#x5757;&#xFF0C;&#x5E76;&#x5728;&#x90A3;&#x91CC;&#x5B9A;&#x4E49; CounterService &#x3002; app/shared/shared.module.ts 1 2 3 4 5 6 7 import { NgModule } from &apos;@angular/core&apos; ; import { CounterService } from &apos;./counter.service&apos; ; @NgModule ({ providers: [CounterService] }) export class SharedModule {} &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5C06;&#x5F15;&#x5165; SharedModule &#x5230; AppModule &#x548C; LazyModule &#x4E2D;&#x3002; app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ... import { SharedModule } from &apos;./shared/shared.module&apos; ; @NgModule ({ imports: [ SharedModule, ... ], declarations: [ EagerComponent, ... ] ... }) export class AppModule {} app/lazy/lazy.module.ts 1 2 3 4 5 6 7 8 9 10 11 ... import { SharedModule } from &apos;../shared/shared.module&apos; ; @NgModule ({ imports: [ SharedModule, ... ], declarations: [LazyComponent] }) export class LazyModule {} &#x4F7F;&#x7528;&#x6B64;&#x914D;&#x7F6E;&#xFF0C;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x7EC4;&#x4EF6;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE; CounterService &#x3002; &#x6211;&#x4EEC;&#x5C06;&#x4EE5;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x5728; EagerComponent &#x548C; LazyComponent &#x4E2D;&#x4F7F;&#x7528;&#x6B64;&#x670D;&#x52A1;&#x3002; &#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&#x6765;&#x589E;&#x52A0;&#x670D;&#x52A1;&#x7684;&#x5185;&#x90E8; counter &#x5C5E;&#x6027;&#x3002; app/eager.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import { Component } from &apos;@angular/core&apos; ; import { CounterService } from &apos;./shared/counter.service&apos; ; @Component ({ template: ` pEager Component/p button (click)=increaseCounter()Increase Counter/button pCounter: {{ counterService.counter }}/p ` }) export class EagerComponent { constructor ( public counterService: CounterService ) {} increaseCounter() { this .counterService.counter += 1 ; } } View Example &#x5982;&#x679C;&#x770B;&#x8FC7;&#x4E86;&#x4E0A;&#x9762;&#x7684;&#x5728;&#x7EBF;&#x793A;&#x4F8B;&#xFF0C;&#x4F60;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#x8BA1;&#x6570;&#x5668;&#x4F3C;&#x4E4E;&#x5728; EagerComponent &#x548C; LazyComponent &#x4E2D;&#x72EC;&#x7ACB;&#x884C;&#x4E3A;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#xFF0C;&#x800C;&#x4E0D;&#x6539;&#x53D8;&#x53E6;&#x4E00;&#x4E2A;&#x3002; &#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x4E86;&#x4E24;&#x4E2A; CounterService &#x5B9E;&#x4F8B;&#xFF0C;&#x4E00;&#x4E2A;&#x5B58;&#x5728;&#x4E8E; AppModule &#x7684;DI&#x6811;&#x6839;&#x76EE;&#x5F55;&#x4E2D;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x5B58;&#x5728;&#x4E8E; LazyModule &#x53EF;&#x8BBF;&#x95EE;&#x7684;DI&#x6811;&#x7684;&#x8F83;&#x4F4E;&#x5206;&#x652F;&#x4E2D;&#x3002; &#x8FD9;&#x4E0D;&#x662F;&#x5FC5;&#x8981;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4E0D;&#x540C;&#x7684;&#x5B9E;&#x4F8B;&#x76F8;&#x540C;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x4F46;&#x6211;&#x6253;&#x8D4C;&#x5927;&#x90E8;&#x5206;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x4E0D;&#x662F;&#x4F60;&#x60F3;&#x8981;&#x7684;&#x3002; &#x8003;&#x8651;&#x8BA4;&#x8BC1;&#x670D;&#x52A1;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x4FE1;&#x606F;&#x7684;&#x76F8;&#x540C;&#x5B9E;&#x4F8B;&#x5728;&#x4EFB;&#x4F55;&#x5730;&#x65B9;&#x90FD;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E2A;&#x6025;&#x5207;&#x6216;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6A21;&#x5757;&#x4E2D;&#x4F7F;&#x7528;&#x670D;&#x52A1;&#x3002; &#x5728;&#x4E0B;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5B66;&#x4E60;&#x5982;&#x4F55;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x670D;&#x52A1;&#x5B9E;&#x4F8B;&#x3002;"},"Observables/cold_vs_hot_observables.html":{"title":"","path":"\\Observables\\cold_vs_hot_observables.html","body":"“冷” vs “热” Observable Observables 可以分为两大类：“冷”和“热” Observables 。让我们从一个“冷” Observable 开始。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 const obsv = new Observable( observer =  setTimeout( () =  observer.next( 1 ); , 1000 ); setTimeout( () =  observer.next( 2 ); , 2000 ); setTimeout( () =  observer.next( 3 ); , 3000 ); setTimeout( () =  observer.next( 4 ); , 4000 ); ); // Subscription A setTimeout( () =  obsv.subscribe( value = console .log(value)); , 0 ); // Subscription B setTimeout( () =  obsv.subscribe( value = console .log( ` $value ` )); , 2500 ); View Example 在上述情况下，用户B在用户A之后2000ms订阅。然而，用户B开始获得像用户A的值只是时间偏移的值。 这种行为被称为冷 Observables 。 一个有用的类比是观看预录制的视频，例如在Netflix上。 您按下Play键，电影从头开始播放。 别人可以在25分钟后在自己的家里开始播放同一部电影。 另一方面，还有一个热 Observables ，这更像是一个现场表演。 你从一开始就参加一个现场乐队表演，但有些人可能迟到25分钟的节目。 乐队不会从头开始播放，后来者必须从那里开始观看表演。 我们已经遇到了这两种 Observables 。 上面的例子是一个冷的 Observables ，而在我们的文本字段输入上使用 valueChanges 的例子是一个热的 Observables 。 Cold Observables 转换到 Hot Observables 在RxJS API中的方法是 publish 方法。 此方法接受一个冷 Observable 作为其来源，并返回一个 ConnectableObservable 的实例。 在这种情况下，我们必须显式调用 connect 在我们的热 Observable 开始广播值给其订阅者。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 const obsv = new Observable( observer =  setTimeout( () =  observer.next( 1 ); , 1000 ); setTimeout( () =  observer.next( 2 ); , 2000 ); setTimeout( () =  observer.next( 3 ); , 3000 ); setTimeout( () =  observer.next( 4 ); , 4000 ); ).publish(); obsv.connect(); // Subscription A setTimeout( () =  obsv.subscribe( value = console .log(value)); , 0 ); // Subscription B setTimeout( () =  obsv.subscribe( value = console .log( ` $value ` )); , 2500 ); View Example 在上面的情况下，现场演出开始于1000ms，用户A在0秒到达音乐厅并找了一个好位置，用户B在2500ms处达到并错过了一首歌曲。 另一个有用的方法使用hot Observables 而不是 connect 是 refCount 。 这是一种自动连接方法，只要有多个用户，就会立即开始广播。 类似地，如果订阅者的数量到0，它将停止; 换句话说，如果观众中的每个人走出来，演出都会停止。"},"Observables/cold_vs_hot_observables.html#“冷”-vs-“热”-Observable":{"title":"&#x201C;&#x51B7;&#x201D; vs &#x201C;&#x70ED;&#x201D; Observable","path":"\\Observables\\cold_vs_hot_observables.html#“冷”-vs-“热”-Observable","body":"Observables &#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7C7B;&#xFF1A;&#x201C;&#x51B7;&#x201D;&#x548C;&#x201C;&#x70ED;&#x201D; Observables &#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x4ECE;&#x4E00;&#x4E2A;&#x201C;&#x51B7;&#x201D; Observable &#x5F00;&#x59CB;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 const obsv = new Observable( observer = { setTimeout( () = { observer.next( 1 ); }, 1000 ); setTimeout( () = { observer.next( 2 ); }, 2000 ); setTimeout( () = { observer.next( 3 ); }, 3000 ); setTimeout( () = { observer.next( 4 ); }, 4000 ); }); // Subscription A setTimeout( () = { obsv.subscribe( value = console .log(value)); }, 0 ); // Subscription B setTimeout( () = { obsv.subscribe( value = console .log( ` ${value} ` )); }, 2500 ); View Example &#x5728;&#x4E0A;&#x8FF0;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7528;&#x6237;B&#x5728;&#x7528;&#x6237;A&#x4E4B;&#x540E;2000ms&#x8BA2;&#x9605;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x7528;&#x6237;B&#x5F00;&#x59CB;&#x83B7;&#x5F97;&#x50CF;&#x7528;&#x6237;A&#x7684;&#x503C;&#x53EA;&#x662F;&#x65F6;&#x95F4;&#x504F;&#x79FB;&#x7684;&#x503C;&#x3002; &#x8FD9;&#x79CD;&#x884C;&#x4E3A;&#x88AB;&#x79F0;&#x4E3A;&#x51B7; Observables &#x3002; &#x4E00;&#x4E2A;&#x6709;&#x7528;&#x7684;&#x7C7B;&#x6BD4;&#x662F;&#x89C2;&#x770B;&#x9884;&#x5F55;&#x5236;&#x7684;&#x89C6;&#x9891;&#xFF0C;&#x4F8B;&#x5982;&#x5728;Netflix&#x4E0A;&#x3002; &#x60A8;&#x6309;&#x4E0B;Play&#x952E;&#xFF0C;&#x7535;&#x5F71;&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x64AD;&#x653E;&#x3002; &#x522B;&#x4EBA;&#x53EF;&#x4EE5;&#x5728;25&#x5206;&#x949F;&#x540E;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x5BB6;&#x91CC;&#x5F00;&#x59CB;&#x64AD;&#x653E;&#x540C;&#x4E00;&#x90E8;&#x7535;&#x5F71;&#x3002; &#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x70ED; Observables &#xFF0C;&#x8FD9;&#x66F4;&#x50CF;&#x662F;&#x4E00;&#x4E2A;&#x73B0;&#x573A;&#x8868;&#x6F14;&#x3002; &#x4F60;&#x4ECE;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x53C2;&#x52A0;&#x4E00;&#x4E2A;&#x73B0;&#x573A;&#x4E50;&#x961F;&#x8868;&#x6F14;&#xFF0C;&#x4F46;&#x6709;&#x4E9B;&#x4EBA;&#x53EF;&#x80FD;&#x8FDF;&#x5230;25&#x5206;&#x949F;&#x7684;&#x8282;&#x76EE;&#x3002; &#x4E50;&#x961F;&#x4E0D;&#x4F1A;&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x64AD;&#x653E;&#xFF0C;&#x540E;&#x6765;&#x8005;&#x5FC5;&#x987B;&#x4ECE;&#x90A3;&#x91CC;&#x5F00;&#x59CB;&#x89C2;&#x770B;&#x8868;&#x6F14;&#x3002; &#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x9047;&#x5230;&#x4E86;&#x8FD9;&#x4E24;&#x79CD; Observables &#x3002; &#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x662F;&#x4E00;&#x4E2A;&#x51B7;&#x7684; Observables &#xFF0C;&#x800C;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x6587;&#x672C;&#x5B57;&#x6BB5;&#x8F93;&#x5165;&#x4E0A;&#x4F7F;&#x7528; valueChanges &#x7684;&#x4F8B;&#x5B50;&#x662F;&#x4E00;&#x4E2A;&#x70ED;&#x7684; Observables &#x3002; Cold Observables &#x8F6C;&#x6362;&#x5230; Hot Observables &#x5728;RxJS API&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x662F; publish &#x65B9;&#x6CD5;&#x3002; &#x6B64;&#x65B9;&#x6CD5;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x51B7; Observable &#x4F5C;&#x4E3A;&#x5176;&#x6765;&#x6E90;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; ConnectableObservable &#x7684;&#x5B9E;&#x4F8B;&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x663E;&#x5F0F;&#x8C03;&#x7528; connect &#x5728;&#x6211;&#x4EEC;&#x7684;&#x70ED; Observable &#x5F00;&#x59CB;&#x5E7F;&#x64AD;&#x503C;&#x7ED9;&#x5176;&#x8BA2;&#x9605;&#x8005;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 const obsv = new Observable( observer = { setTimeout( () = { observer.next( 1 ); }, 1000 ); setTimeout( () = { observer.next( 2 ); }, 2000 ); setTimeout( () = { observer.next( 3 ); }, 3000 ); setTimeout( () = { observer.next( 4 ); }, 4000 ); }).publish(); obsv.connect(); // Subscription A setTimeout( () = { obsv.subscribe( value = console .log(value)); }, 0 ); // Subscription B setTimeout( () = { obsv.subscribe( value = console .log( ` ${value} ` )); }, 2500 ); View Example &#x5728;&#x4E0A;&#x9762;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x73B0;&#x573A;&#x6F14;&#x51FA;&#x5F00;&#x59CB;&#x4E8E;1000ms&#xFF0C;&#x7528;&#x6237;A&#x5728;0&#x79D2;&#x5230;&#x8FBE;&#x97F3;&#x4E50;&#x5385;&#x5E76;&#x627E;&#x4E86;&#x4E00;&#x4E2A;&#x597D;&#x4F4D;&#x7F6E;&#xFF0C;&#x7528;&#x6237;B&#x5728;2500ms&#x5904;&#x8FBE;&#x5230;&#x5E76;&#x9519;&#x8FC7;&#x4E86;&#x4E00;&#x9996;&#x6B4C;&#x66F2;&#x3002; &#x53E6;&#x4E00;&#x4E2A;&#x6709;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x4F7F;&#x7528;hot Observables &#x800C;&#x4E0D;&#x662F; connect &#x662F; refCount &#x3002; &#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x81EA;&#x52A8;&#x8FDE;&#x63A5;&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x8981;&#x6709;&#x591A;&#x4E2A;&#x7528;&#x6237;&#xFF0C;&#x5C31;&#x4F1A;&#x7ACB;&#x5373;&#x5F00;&#x59CB;&#x5E7F;&#x64AD;&#x3002; &#x7C7B;&#x4F3C;&#x5730;&#xFF0C;&#x5982;&#x679C;&#x8BA2;&#x9605;&#x8005;&#x7684;&#x6570;&#x91CF;&#x5230;0&#xFF0C;&#x5B83;&#x5C06;&#x505C;&#x6B62;; &#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x89C2;&#x4F17;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x4EBA;&#x8D70;&#x51FA;&#x6765;&#xFF0C;&#x6F14;&#x51FA;&#x90FD;&#x4F1A;&#x505C;&#x6B62;&#x3002;"},"Observables/disposing_subscriptions_and_releasing_resources.html":{"title":"","path":"\\Observables\\disposing_subscriptions_and_releasing_resources.html","body":"#处理订阅和释放资源 在某些情况下，我们可能需要取消订阅Observable流。这是非常简单的，因为 .subscribe() 调用返回一个数据类型，我们可以调用 unsubscribe() 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 export class MyApp  private data: Observable Array  string ; private value: string ; private subscribed: boolean ; private status: string ; init()  this .data = new Observable( observer =  let timeoutId = setTimeout( () =  observer.next( 'You will never see this message' ); , 2000 ); this .status = 'Started' ; return onUnsubscribe = () =  this .subscribed = false ; this .status = 'Finished' ; clearTimeout(timeoutId);  ); let subscription = this .data.subscribe( value = this .value = value, error = console .log(error), () = this .status = 'Finished' ; ); this .subscribed = true ; setTimeout( () =  subscription.unsubscribe(); , 1000 );   调用.unsubscribe（）将取消一个成员的回调监听Observable流。 当创建Observable时，您还可以返回自定义回调onUnsubscribe，当收听流的成员取消订阅时将调用该回调。 这对于必须实现的任何类型的清理都很有用。 如果我们没有清除setTimeout，那么值仍然会发射，但是没有人听。 为了节省资源，我们应该停止发射值。 一个重要的事情要注意的是，当您调用.unsubscribe（）时，您正在销毁正在侦听的订阅对象，因此附加到该订阅对象的完成事件将不会被调用。 在大多数情况下，我们不需要显式调用unsubscribe方法，除非我们想提前取消或我们的Observable的生命周期比我们的订阅更长。 Observable运算符的默认行为是在发布.complete（）或.error（）消息后立即处理订阅。 请记住，RxJS的设计是在大多数时候以“发射和忘记”的方式使用。"},"Observables/error_handling.html":{"title":"","path":"\\Observables\\error_handling.html","body":"#错误处理 如果出现意外事件，我们可以在Observable流上引发一个错误，并在订阅例程中使用保留用于处理错误的函数来查看发生了什么。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 export class App  values: number [] = []; anyErrors: Error ; private data: Observable number []; constructor ( )  this .data = new Observable( observer =  setTimeout( () =  observer.next( 10 ); , 1500 ); setTimeout( () =  observer.error( new Error ( 'Something bad happened!' )); , 2000 ); setTimeout( () =  observer.next( 50 ); , 2500 ); ); let subscription = this .data.subscribe( value = this .values.push(value), error = this .anyErrors = error );   这里出现一个错误并捕获。 需要注意的一点是，如果我们在引发错误后包含一个 .complete() ，这个事件不会真正触发。 因此，您应该记住在错误处理程序中包含一些调用，这将关闭应用程序中的任何可视加载状态。"},"Observables/observables.html":{"title":"","path":"\\Observables\\observables.html","body":"#Observable Angular 2使用的一个令人兴奋的新功能是Observable。 这不是Angular 2的特定功能，而是用于管理异步数据的建议标准，将被包括在ES7中。 Observables 打开了一个连续的通信通道，其中可以随时间发射多个数据值。 这里，我们通过使用数组类型的操作来解析，修改和维护数据，得到一种处理数据的模式。 Angular 2广泛使用observables - 你将在HTTP服务和事件系统中看到它们。"},"Observables/observables_array_operations.html":{"title":"","path":"\\Observables\\observables_array_operations.html","body":"Observables 数组操作 In addition to simply iterating over an asynchronous collection, we can perform other operations such as filter or map and many more as defined in the RxJS API. This is what bridges an Observable with the iterable pattern, and lets us conceptualize them as collections. Let’s expand our example and do something a little more with our stream: 除了简单地遍历异步集合之外，我们还可以执行其他操作，例如过滤或映射，以及RxJS API中定义的更多操作。 这是一个 Observable 与可迭代模式的桥梁，让我们将它们概念化为集合。 让我们扩展我们的示例，并使用我们的流做一些事情： 1 2 3 4 5 6 7 8 9 10 11 12 13 export class MyApp  private doctors = []; constructor (http: Http)  http.get( 'http://jsonplaceholder.typicode.com/users/' ) .flatMap( ( response ) = response.json()) .filter( ( person ) = person.id  5 ) .map( ( person ) = \"Dr. \" + person.name) .subscribe( ( data ) =  this .doctors.push(data); );   View Example 这里有两个真正有用的数组操作 - map 和 filter 。 这些做什么呢？ map 将创建一个新的数组，其结果是在该数组中的每个元素上调用一个提供的函数。 在这个例子中，我们使用它来创建一个新的结果集，通过迭代每个项目，并追加“Dr.” 缩写在每个用户的名字前面。 现在我们数组中的每个对象都有“Dr.” 前面加上其name属性的值。 filter 将创建一个新数组，其中所有元素都通过由提供的函数实现的测试。 在这里，我们使用它来创建一个新的结果集，排除任何id属性小于6的用户。 现在，当我们的subscribe回调被调用时，它接收的数据将是一个JSON对象的列表，其id属性大于或等于6，其名称属性已添加到“Dr .”. 请注意链接函数样式，以及TypeScript附带的可选静态类型，我们在本示例中使用。 最重要的是函数比如 filter 返回一个 Observable ，就像 Observable 中的其他 Observable ，类似 promise 。为了在链接序列中使用 map 和 filter ，我们使用 flatMap 展平了我们的 Observable 的结果。 由于 filter 接受一个 Observable 而不是一个数组，我们必须将我们的JSON对象数组从 data.json() 转换为 Observable 流。 这是通过 flatMap 完成的。 你可以在Observable`中使用很多其他的数组操作; 在 RxJS API 中查找它们。 rxmarbles.com 是一个有用的资源，有助于你了解 operations 的工作原理。"},"Observables/observables_array_operations.html#Observables-数组操作":{"title":"Observables &#x6570;&#x7EC4;&#x64CD;&#x4F5C;","path":"\\Observables\\observables_array_operations.html#Observables-数组操作","body":"In addition to simply iterating over an asynchronous collection, we can perform other operations such as filter or map and many more as defined in the RxJS API. This is what bridges an Observable with the iterable pattern, and lets us conceptualize them as collections. Let&#x2019;s expand our example and do something a little more with our stream: &#x9664;&#x4E86;&#x7B80;&#x5355;&#x5730;&#x904D;&#x5386;&#x5F02;&#x6B65;&#x96C6;&#x5408;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x5176;&#x4ED6;&#x64CD;&#x4F5C;&#xFF0C;&#x4F8B;&#x5982;&#x8FC7;&#x6EE4;&#x6216;&#x6620;&#x5C04;&#xFF0C;&#x4EE5;&#x53CA;RxJS API&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x66F4;&#x591A;&#x64CD;&#x4F5C;&#x3002; &#x8FD9;&#x662F;&#x4E00;&#x4E2A; Observable &#x4E0E;&#x53EF;&#x8FED;&#x4EE3;&#x6A21;&#x5F0F;&#x7684;&#x6865;&#x6881;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x5C06;&#x5B83;&#x4EEC;&#x6982;&#x5FF5;&#x5316;&#x4E3A;&#x96C6;&#x5408;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6269;&#x5C55;&#x6211;&#x4EEC;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x6211;&#x4EEC;&#x7684;&#x6D41;&#x505A;&#x4E00;&#x4E9B;&#x4E8B;&#x60C5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 export class MyApp { private doctors = []; constructor (http: Http) { http.get( &apos;http://jsonplaceholder.typicode.com/users/&apos; ) .flatMap( ( response ) = response.json()) .filter( ( person ) = person.id  5 ) .map( ( person ) = Dr.  + person.name) .subscribe( ( data ) = { this .doctors.push(data); }); } } View Example &#x8FD9;&#x91CC;&#x6709;&#x4E24;&#x4E2A;&#x771F;&#x6B63;&#x6709;&#x7528;&#x7684;&#x6570;&#x7EC4;&#x64CD;&#x4F5C; - map &#x548C; filter &#x3002; &#x8FD9;&#x4E9B;&#x505A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; map &#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x5176;&#x7ED3;&#x679C;&#x662F;&#x5728;&#x8BE5;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E0A;&#x8C03;&#x7528;&#x4E00;&#x4E2A;&#x63D0;&#x4F9B;&#x7684;&#x51FD;&#x6570;&#x3002; &#x5728;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5B83;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7ED3;&#x679C;&#x96C6;&#xFF0C;&#x901A;&#x8FC7;&#x8FED;&#x4EE3;&#x6BCF;&#x4E2A;&#x9879;&#x76EE;&#xFF0C;&#x5E76;&#x8FFD;&#x52A0;&#x201C;Dr.&#x201D; &#x7F29;&#x5199;&#x5728;&#x6BCF;&#x4E2A;&#x7528;&#x6237;&#x7684;&#x540D;&#x5B57;&#x524D;&#x9762;&#x3002; &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x6570;&#x7EC4;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x5BF9;&#x8C61;&#x90FD;&#x6709;&#x201C;Dr.&#x201D; &#x524D;&#x9762;&#x52A0;&#x4E0A;&#x5176;name&#x5C5E;&#x6027;&#x7684;&#x503C;&#x3002; filter &#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6570;&#x7EC4;&#xFF0C;&#x5176;&#x4E2D;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x901A;&#x8FC7;&#x7531;&#x63D0;&#x4F9B;&#x7684;&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x7684;&#x6D4B;&#x8BD5;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5B83;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7ED3;&#x679C;&#x96C6;&#xFF0C;&#x6392;&#x9664;&#x4EFB;&#x4F55;id&#x5C5E;&#x6027;&#x5C0F;&#x4E8E;6&#x7684;&#x7528;&#x6237;&#x3002; &#x73B0;&#x5728;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x7684;subscribe&#x56DE;&#x8C03;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#xFF0C;&#x5B83;&#x63A5;&#x6536;&#x7684;&#x6570;&#x636E;&#x5C06;&#x662F;&#x4E00;&#x4E2A;JSON&#x5BF9;&#x8C61;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x5176;id&#x5C5E;&#x6027;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;6&#xFF0C;&#x5176;&#x540D;&#x79F0;&#x5C5E;&#x6027;&#x5DF2;&#x6DFB;&#x52A0;&#x5230;&#x201C;Dr .&#x201D;. &#x8BF7;&#x6CE8;&#x610F;&#x94FE;&#x63A5;&#x51FD;&#x6570;&#x6837;&#x5F0F;&#xFF0C;&#x4EE5;&#x53CA;TypeScript&#x9644;&#x5E26;&#x7684;&#x53EF;&#x9009;&#x9759;&#x6001;&#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x672C;&#x793A;&#x4F8B;&#x4E2D;&#x4F7F;&#x7528;&#x3002; &#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#x51FD;&#x6570;&#x6BD4;&#x5982; filter &#x8FD4;&#x56DE;&#x4E00;&#x4E2A; Observable &#xFF0C;&#x5C31;&#x50CF; Observable &#x4E2D;&#x7684;&#x5176;&#x4ED6; Observable &#xFF0C;&#x7C7B;&#x4F3C; promise &#x3002;&#x4E3A;&#x4E86;&#x5728;&#x94FE;&#x63A5;&#x5E8F;&#x5217;&#x4E2D;&#x4F7F;&#x7528; map &#x548C; filter &#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528; flatMap &#x5C55;&#x5E73;&#x4E86;&#x6211;&#x4EEC;&#x7684; Observable &#x7684;&#x7ED3;&#x679C;&#x3002; &#x7531;&#x4E8E; filter &#x63A5;&#x53D7;&#x4E00;&#x4E2A; Observable &#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5C06;&#x6211;&#x4EEC;&#x7684;JSON&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#x4ECE; data.json() &#x8F6C;&#x6362;&#x4E3A; Observable &#x6D41;&#x3002; &#x8FD9;&#x662F;&#x901A;&#x8FC7; flatMap &#x5B8C;&#x6210;&#x7684;&#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x5728;Observable`&#x4E2D;&#x4F7F;&#x7528;&#x5F88;&#x591A;&#x5176;&#x4ED6;&#x7684;&#x6570;&#x7EC4;&#x64CD;&#x4F5C;; &#x5728; RxJS API &#x4E2D;&#x67E5;&#x627E;&#x5B83;&#x4EEC;&#x3002; rxmarbles.com &#x662F;&#x4E00;&#x4E2A;&#x6709;&#x7528;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x6709;&#x52A9;&#x4E8E;&#x4F60;&#x4E86;&#x89E3; operations &#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x3002;"},"Observables/observables_vs_promises.html":{"title":"","path":"\\Observables\\observables_vs_promises.html","body":"#Observables vs Promises Promises和Observables都为我们提供了抽象，帮助我们处理应用程序的异步性质。 然而，两者之间存在重要的区别： 如前面的例子所示，Observables可以定义异步行为的建立和分解。 Observables是可取消的 此外，可以使用API提供的重试操作符之一重试Observable，例如retry和retryWhen。 另一方面，Promises需要调用者访问返回promise的原始函数，以便具有重试能力。 ⚡️Observables 就是 Promise 的超集"},"Observables/summary.html":{"title":"","path":"\\Observables\\summary.html","body":"#总结 Observables 为组合和转换异步流提供了一组灵活的API。 它们提供了许多功能来创建来自许多其他类型的流，以及操纵和变换它们。 我们已经了解了Angular 2如何使用 Observables 从许多其他类型创建流来读取用户输入，执行异步数据提取和设置自定义的发布/订阅程序。 rxjs 4 to 5 migration rxjs Observable API Which operator do I use? rxmarbles RxJS Operators by Example"},"Observables/using_observables.html":{"title":"","path":"\\Observables\\using_observables.html","body":"#使用Observable 让我们来看看如何在Angular 2组件中创建和使用Observable的一个基本示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 import Component from '@angular/core' ; import Observable from 'rxjs/Observable' ; @Component ( selector: 'app' , template: ` bAngular 2 Component Using Observables!/b h6 style=\"margin-bottom: 0\"VALUES:/h6 div *ngFor=\"let value of values\"-  value /div h6 style=\"margin-bottom: 0\"ERRORs:/h6 divErrors: anyErrors/div h6 style=\"margin-bottom: 0\"FINISHED:/h6 divFinished:  finished /div button style=\"margin-top: 2rem;\" (click)=\"init()\"Init/button ` ) export class MyApp  private data: Observable Array  number ; private values: Array  number  = []; private anyErrors: boolean ; private finished: boolean ; constructor ( )   init()  this .data = new Observable( observer =  setTimeout( () =  observer.next( 42 ); , 1000 ); setTimeout( () =  observer.next( 43 ); , 2000 ); setTimeout( () =  observer.complete(); , 3000 ); ); let subscription = this .data.subscribe( value = this .values.push(value), error = this .anyErrors = true , () = this .finished = true );   首先我们从rxjs / Observable中将Observable导入到我们的组件中。 接下来，在我们的构造函数中，我们创建一个新的Observable。 请注意，这将创建一个包含数字类型数据的Observable数据类型。 这说明Observable提供的数据流，以及使我们能够维护我们期望接收的数据类型的完整性。 接下来我们调用这个Observable的subscribe，它允许我们监听任何数据。 在订阅中，我们使用三个不同的回调：第一个在接收新值时被调用，第二个在出现的任何错误时调用，最后一个表示当传入数据的序列完成并成功时被调用的函数。 我们还可以使用forEach监听传入的数据。 forEach和subscribe之间的关键区别在于如何处理错误和完成回调。 forEach调用只接受“下一个值”回调作为参数; 它然后返回promise而不是订阅。 当Observable完成时，promise解析。 当Observable遇到错误时，promise被拒绝。 你可以认为Observable.of（1，2，3）.forEach（doSomething）在语义上等同于： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 new Promise ( ( resolve, reject ) =  Observable.of( 1 , 2 , 3 ).subscribe( doSomething, reject, resolve); ); The forEach pattern is useful for a sequence of events you only expect to happen once. export class MyApp  private data: Observable Array  number ; private values: Array  number  = []; private anyErrors: boolean ; private finished: boolean ; constructor ( )   init()  this .data = new Observable( observer =  setTimeout( () =  observer.next( 42 ); , 1000 ); setTimeout( () =  observer.next( 43 ); , 2000 ); setTimeout( () =  observer.complete(); , 3000 ); this .status = \"Started\" ; ); let subscription = this .data.forEach( v = this .values.push(v)) .then( () = this .status = \"Ended\" );  "},"Observables/using_observables_from_other_sources.html":{"title":"","path":"\\Observables\\using_observables_from_other_sources.html","body":"#使用其他来源的Observable 在上面的例子中，我们从头开始创建Observable，这在理解Observable的解剖结构时特别有用。 但是，我们将经常从回调，promise，事件，集合或使用API上可用的许多运算符创建Observable。 ##Observable HTTP Events 任何Web应用程序中的常见操作是向服务器获取或发布数据。 Angular应用程序使用Http库来实现这一点，它以前使用Promises以异步方式操作。 更新的Http库现在合并了Observable，用于触发事件和获取新数据。 让我们快速浏览一下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import Component from '@angular/core' ; import Http from '@angular/http' ; import 'rxjs/Rx' ; @Component ( selector: 'app' , template: ` bAngular 2 HTTP requests using RxJs Observables!/b ul li *ngFor=\"let doctor of doctors\"doctor.name/li /ul ` ) export class MyApp  private doctors = []; constructor ( http: Http )  http.get( 'http://jsonplaceholder.typicode.com/users/' ) .flatMap( ( data ) = data.json()) .subscribe( ( data ) =  this .doctors.push(data); );   这个基本示例概述了Http库常见例程如get，post，put和delete所有返回Observables，允许我们异步处理任何结果数据。 ##Observable Form Events 让我们来看看Observables如何在Angular 2形式中使用。 表单中的每个字段都被视为一个Observable，我们可以订阅和监听对输入字段的值所做的任何更改。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import Component from '@angular/core' ; import FormControl, FormGroup, FormBuilder from '@angular/forms' ; import 'rxjs/add/operator/filter' ; import 'rxjs/add/operator/map' ; @Component ( selector: 'app' , template: ` form [formGroup]=\"coolForm\" input formControlName=\"email\" /form div bYou Typed Reversed:/b data /div ` ) export class MyApp  email: FormControl; coolForm: FormGroup; data: string ; constructor ( private fb: FormBuilder )  this .email = new FormControl(); this .coolForm = fb.group( email: this .email ); this .email.valueChanges .filter( n = n) .map( n = n.split( '' ).reverse().join( '' )) .subscribe( value = this .data = value);   这里我们通过初始化一个新的FormControl字段并将其分组到一个绑定到coolForm HTML表单的FormGroup中来创建一个新的表单。 控件字段有一个属性.valueChanges，它返回一个我们可以订阅的Observable。 现在每当用户在字段中输入内容时，我们会立即得到它。"},"Pipes/custom_pipes.html":{"title":"","path":"\\Pipes\\custom_pipes.html","body":"自定义管道 Angular 2允许创建你自己的管道： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import  Pipe, PipeTransform  from '@angular/core' ; const FILE_SIZE_UNITS = [ 'B' , 'KB' , 'MB' , 'GB' , 'TB' , 'PB' , 'EB' , 'ZB' , 'YB' ]; const FILE_SIZE_UNITS_LONG = [ 'Bytes' , 'Kilobytes' , 'Megabytes' , 'Gigabytes' , 'Pettabytes' , 'Exabytes' , 'Zettabytes' , 'Yottabytes' ]; @Pipe ( name: 'formatFileSize' ) export class FormatFileSizePipe implements PipeTransform  transform(sizeInBytes: number , longForm: boolean ): string  const units = longForm ? FILE_SIZE_UNITS_LONG : FILE_SIZE_UNITS; let power = Math .round( Math .log(sizeInBytes) / Math .log( 1024 )); power = Math .min(power, units.length - 1 ); const size = sizeInBytes / Math .pow( 1024 , power); // size in new units const formattedSize = Math .round(size * 100 ) / 100 ; // keep up to 2 decimals const unit = units[power]; return ` $formattedSize $unit ` ;   每个自定义管道实现必须： 使 @Pipe 装饰器包含具有 name 属性的管道元数据。 此值将用于在模板表达式中调用此管道。 它必须是有效的JavaScript标识符。 实现 PipeTransform 接口的 transform 方法。 此方法接受管道的值和任何类型的可变数量的参数，并返回一个变换的（“管道”）值。 模板中的每个以冒号分隔的参数按相同的顺序映射到一个方法参数。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import  Component  from '@angular/core' ; % raw % @Component ( selector: 'app-root' , template: ` div p *ngFor=\"let f of fileSizes\" f | formatFileSize /p p largeFileSize | formatFileSize:true /p /div` ) % endraw % export class AppComponent  fileSizes = [ 10 , 100 , 1000 , 10000 , 100000 , 10000000 , 10000000000 ]; largeFileSize = Math .pow( 10 , 15 )  View Example"},"Pipes/custom_pipes.html#自定义管道":{"title":"&#x81EA;&#x5B9A;&#x4E49;&#x7BA1;&#x9053;","path":"\\Pipes\\custom_pipes.html#自定义管道","body":"Angular 2&#x5141;&#x8BB8;&#x521B;&#x5EFA;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x7BA1;&#x9053;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import { Pipe, PipeTransform } from &apos;@angular/core&apos; ; const FILE_SIZE_UNITS = [ &apos;B&apos; , &apos;KB&apos; , &apos;MB&apos; , &apos;GB&apos; , &apos;TB&apos; , &apos;PB&apos; , &apos;EB&apos; , &apos;ZB&apos; , &apos;YB&apos; ]; const FILE_SIZE_UNITS_LONG = [ &apos;Bytes&apos; , &apos;Kilobytes&apos; , &apos;Megabytes&apos; , &apos;Gigabytes&apos; , &apos;Pettabytes&apos; , &apos;Exabytes&apos; , &apos;Zettabytes&apos; , &apos;Yottabytes&apos; ]; @Pipe ({ name: &apos;formatFileSize&apos; }) export class FormatFileSizePipe implements PipeTransform { transform(sizeInBytes: number , longForm: boolean ): string { const units = longForm ? FILE_SIZE_UNITS_LONG : FILE_SIZE_UNITS; let power = Math .round( Math .log(sizeInBytes) / Math .log( 1024 )); power = Math .min(power, units.length - 1 ); const size = sizeInBytes / Math .pow( 1024 , power); // size in new units const formattedSize = Math .round(size * 100 ) / 100 ; // keep up to 2 decimals const unit = units[power]; return ` ${formattedSize} ${unit} ` ; } } &#x6BCF;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7BA1;&#x9053;&#x5B9E;&#x73B0;&#x5FC5;&#x987B;&#xFF1A; &#x4F7F; @Pipe &#x88C5;&#x9970;&#x5668;&#x5305;&#x542B;&#x5177;&#x6709; name &#x5C5E;&#x6027;&#x7684;&#x7BA1;&#x9053;&#x5143;&#x6570;&#x636E;&#x3002; &#x6B64;&#x503C;&#x5C06;&#x7528;&#x4E8E;&#x5728;&#x6A21;&#x677F;&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x8C03;&#x7528;&#x6B64;&#x7BA1;&#x9053;&#x3002; &#x5B83;&#x5FC5;&#x987B;&#x662F;&#x6709;&#x6548;&#x7684;JavaScript&#x6807;&#x8BC6;&#x7B26;&#x3002; &#x5B9E;&#x73B0; PipeTransform &#x63A5;&#x53E3;&#x7684; transform &#x65B9;&#x6CD5;&#x3002; &#x6B64;&#x65B9;&#x6CD5;&#x63A5;&#x53D7;&#x7BA1;&#x9053;&#x7684;&#x503C;&#x548C;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x53EF;&#x53D8;&#x6570;&#x91CF;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x53D8;&#x6362;&#x7684;&#xFF08;&#x201C;&#x7BA1;&#x9053;&#x201D;&#xFF09;&#x503C;&#x3002; &#x6A21;&#x677F;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x4EE5;&#x5192;&#x53F7;&#x5206;&#x9694;&#x7684;&#x53C2;&#x6570;&#x6309;&#x76F8;&#x540C;&#x7684;&#x987A;&#x5E8F;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x53C2;&#x6570;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import { Component } from &apos;@angular/core&apos; ; {% raw %} @Component ({ selector: &apos;app-root&apos; , template: ` div p *ngFor=let f of fileSizes{{ f | formatFileSize }}/p p{{ largeFileSize | formatFileSize:true }}/p /div` }) {% endraw %} export class AppComponent { fileSizes = [ 10 , 100 , 1000 , 10000 , 100000 , 10000000 , 10000000000 ]; largeFileSize = Math .pow( 10 , 15 ) } View Example"},"Pipes/pipes.html":{"title":"","path":"\\Pipes\\pipes.html","body":"#管道 Figure: Pipes by Life-Of-Pix is licensed under Public Domain ( https://pixabay.com/en/pipe-plumbing-connection-pipeline-406906/ ) Angular 2提供了一种过滤数据的新方法： pipes 。 管道是Angular 1.x的 filters 的替代品。 大多数来自Angular 1.x的内置过滤器已经转换为Angular 2管道; 一些其他简单的过滤器也可以直接使用。"},"Pipes/using_pipes.html":{"title":"","path":"\\Pipes\\using_pipes.html","body":"#使用管道 像过滤器一样，管道也将数据作为输入，并将其转换为所需的输出。使用管道的基本示例如下所示： 1 2 3 4 5 6 7 8 9 import Component from '@angular/core' ; @Component ( selector: 'product-price' , template: `pTotal price of product is  price | currency /p` ) export class ProductPrice  price: number = 100.1234 ;  查看示例 #传递参数 管道可以接受可选参数以修改输出。要将参数传递到管道，只需在管道表达式的末尾添加冒号和参数值： parameterValue``` 1 2 你也可以这样传递多个参数： ```pipeName: parameter1: parameter2 1 2 3 4 5 6 7 8 9 import Component from '@angular/core' ; @Component ( selector: 'product-price' , template: 'pTotal price of product is  price | currency: \"CAD\": true: \"1.2-4\" /p' ) export class ProductPrice  price: number = 100.123456 ;  View Example 链接管道 链接管道 我们可以将多个管道连接在一起，以便在一个表达式中使用多个管道。 1 2 3 4 5 6 7 8 9 import Component from '@angular/core' ; @Component ( selector: 'product-price' , template: 'pTotal price of product is  price | currency: \"CAD\": true: \"1.2-4\" | lowercase /p' ) export class ProductPrice  price: number = 100.123456 ;  View Example"},"Pipes/using_pipes.html#链接管道":{"title":"&#x94FE;&#x63A5;&#x7BA1;&#x9053;","path":"\\Pipes\\using_pipes.html#链接管道","body":"&#x94FE;&#x63A5;&#x7BA1;&#x9053; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x591A;&#x4E2A;&#x7BA1;&#x9053;&#x8FDE;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x4EE5;&#x4FBF;&#x5728;&#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x7BA1;&#x9053;&#x3002; 1 2 3 4 5 6 7 8 9 import {Component} from &apos;@angular/core&apos; ; @Component ({ selector: &apos;product-price&apos; , template: &apos;pTotal price of product is {{ price | currency: CAD: true: 1.2-4 | lowercase }}/p&apos; }) export class ProductPrice { price: number = 100.123456 ; } View Example"},"Pipes/stateful_and_async_pipes.html":{"title":"","path":"\\Pipes\\stateful_and_async_pipes.html","body":"#状态管道 有两种类型的管道： 无状态管道是纯粹的功能，通过输入数据流动而不记住任何东西或引起可检测的副作用。 大多数管道是无状态的。 我们使用的CurrencyPipe和我们创建的长度管是无状态管的示例。 状态管道是能够管理它们转换的数据的状态的管道。 创建HTTP请求，存储响应并显示输出的管道是有状态的管道。 有状态管道应谨慎使用。 Angular 2提供 AsyncPipe ，这是有状态的。 AsyncPipe AsyncPipe可以接收 Promise 或 Observable 作为输入，并自动订阅输入，最终返回发射的值。 它是有状态的，因为管道维护对输入的预订，并且其返回值取决于该预订。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 % raw % @Component ( selector: 'app-root' , template: ` pTotal price of product is fetchPrice | async | currency:\"CAD\":true:\"1.2-2\"/p pSeconds: seconds | async /p ` ) % endraw % export class AppComponent  fetchPrice = new Promise ( ( resolve, reject ) =  setTimeout( () = resolve( 10 ), 500 ); ); seconds = Observable.of( 0 ).concat(Observable.interval( 1000 ))  View Example 实现有状态管道 默认情况下，管道是无状态的。 我们必须通过将 @Pipe 装饰器的 pure 属性设置为 false 来声明一个管道是有状态的。 这个设置告诉Angular的变化检测系统每个周期检查这个管道的输出，无论它的输入是否改变。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // naive implementation assumes small number increments @Pipe ( name: 'animateNumber' , pure: false ) export class AnimateNumberPipe implements PipeTransform  private currentNumber: number = null ; // intermediary number private targetNumber: number = null ; transform(targetNumber: number ): string  if (targetNumber !== this .targetNumber)  this .currentNumber = this .targetNumber || targetNumber; this .targetNumber = targetNumber; const difference = this .targetNumber - this .currentNumber Observable.interval( 100 ) .take(difference) .subscribe( () =  this .currentNumber++; )  return this .currentNumber;   View Example"},"Pipes/stateful_and_async_pipes.html#AsyncPipe":{"title":"AsyncPipe","path":"\\Pipes\\stateful_and_async_pipes.html#AsyncPipe","body":"AsyncPipe&#x53EF;&#x4EE5;&#x63A5;&#x6536; Promise &#x6216; Observable &#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x5E76;&#x81EA;&#x52A8;&#x8BA2;&#x9605;&#x8F93;&#x5165;&#xFF0C;&#x6700;&#x7EC8;&#x8FD4;&#x56DE;&#x53D1;&#x5C04;&#x7684;&#x503C;&#x3002; &#x5B83;&#x662F;&#x6709;&#x72B6;&#x6001;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x7BA1;&#x9053;&#x7EF4;&#x62A4;&#x5BF9;&#x8F93;&#x5165;&#x7684;&#x9884;&#x8BA2;&#xFF0C;&#x5E76;&#x4E14;&#x5176;&#x8FD4;&#x56DE;&#x503C;&#x53D6;&#x51B3;&#x4E8E;&#x8BE5;&#x9884;&#x8BA2;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 {% raw %} @Component ({ selector: &apos;app-root&apos; , template: ` pTotal price of product is {{fetchPrice | async | currency:CAD:true:1.2-2}}/p pSeconds: {{seconds | async}} /p ` }) {% endraw %} export class AppComponent { fetchPrice = new Promise ( ( resolve, reject ) = { setTimeout( () = resolve( 10 ), 500 ); }); seconds = Observable.of( 0 ).concat(Observable.interval( 1000 )) } View Example"},"Pipes/stateful_and_async_pipes.html#实现有状态管道":{"title":"&#x5B9E;&#x73B0;&#x6709;&#x72B6;&#x6001;&#x7BA1;&#x9053;","path":"\\Pipes\\stateful_and_async_pipes.html#实现有状态管道","body":"&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7BA1;&#x9053;&#x662F;&#x65E0;&#x72B6;&#x6001;&#x7684;&#x3002; &#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x5C06; @Pipe &#x88C5;&#x9970;&#x5668;&#x7684; pure &#x5C5E;&#x6027;&#x8BBE;&#x7F6E;&#x4E3A; false &#x6765;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x7BA1;&#x9053;&#x662F;&#x6709;&#x72B6;&#x6001;&#x7684;&#x3002; &#x8FD9;&#x4E2A;&#x8BBE;&#x7F6E;&#x544A;&#x8BC9;Angular&#x7684;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x7CFB;&#x7EDF;&#x6BCF;&#x4E2A;&#x5468;&#x671F;&#x68C0;&#x67E5;&#x8FD9;&#x4E2A;&#x7BA1;&#x9053;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x65E0;&#x8BBA;&#x5B83;&#x7684;&#x8F93;&#x5165;&#x662F;&#x5426;&#x6539;&#x53D8;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // naive implementation assumes small number increments @Pipe ({ name: &apos;animateNumber&apos; , pure: false }) export class AnimateNumberPipe implements PipeTransform { private currentNumber: number = null ; // intermediary number private targetNumber: number = null ; transform(targetNumber: number ): string { if (targetNumber !== this .targetNumber) { this .currentNumber = this .targetNumber || targetNumber; this .targetNumber = targetNumber; const difference = this .targetNumber - this .currentNumber Observable.interval( 100 ) .take(difference) .subscribe( () = { this .currentNumber++; }) } return this .currentNumber; } } View Example"},"Project-setup/installation_and_usage.html":{"title":"","path":"\\Project-setup\\installation_and_usage.html","body":"安装 引入webpack及其插件的最简单的方法是通过NPM并将其保存到您的 devDependencies ： 1 npm install -D webpack ts-loader html-webpack-plugin tslint-loader 设置和使用 使用webpack的最常见方法是通过CLI。默认情况下，运行命令会执行 webpack.config.js ，这是webpack设置的配置文件。 Bundle webpack的核心概念是bundle。 bundle是一个简单的模块集合，我们定义它们如何分离的边界。 在这个项目中，我们有两个包： app 为我们的应用程序特定的客户端逻辑 第三方库的 vendor 在webpack中，通过入口点配置bundle。 Webpack逐个遍历每个入口点。 它通过遍历每个模块的引用映射一个依赖关系图。 它遇到的所有依赖关系然后打包到该捆绑包中。 通过NPM安装的软件包使用CommonJS的模块化方式引入。 在JavaScript文件中，它将如下所示： 1 const app = require(&apos;./src/index.ts&apos;); 或在TypeScript/ES6 文件中： 1 import  Component  from &apos;@angular/core&apos;; 我们将使用这些字符串值作为我们传递给webpack的模块名称。 让我们来看看我们在示例应用中定义的入口点： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  ... entry:  app: './src/index.ts', vendor: [ '@angular/core', '@angular/compiler', '@angular/common', '@angular/http', '@angular/platform-browser', '@angular/platform-browser-dynamic', '@angular/router', 'es6-shim', 'redux', 'redux-thunk', 'redux-logger', 'reflect-metadata', 'ng2-redux', 'zone.js', ]  ...  app的入口点，./src/index.ts，是我们Angular 2应用程序的基本文件。 如果我们正确地定义了每个模块的依赖关系，这些引用应该连接我们应用程序的所有部分。 vendor 的入口点是我们的应用程序代码正常工作所需的模块列表。 即使这些文件被我们的应用程序包中的某个模块引用，我们也希望将这些资源分离在第三方代码中。 输出配置 在大多数情况下，我们不只是想要配置webpack如何生成bundle - 我们还想配置如何输出这些bundle。 通常，我们将要重新路由保存文件的位置。 例如，进入 bin 或 dist 文件夹。 这是因为我们想要优化我们的生产。 Webpack在绑定我们的模块并输出它们时转换代码。 我们想要有一种方法来连接由webpack生成的代码和我们编写的代码。 服务器路由可以以许多不同的方式配置。 我们可能想要一些配置webpack的方式来考虑我们的服务器路由设置。 所有这些配置选项都由config的 output 属性处理。 让我们看看我们如何设置我们的配置来解决这些问题： 1 2 3 4 5 6 7 8 9 10  ... output:  path: path.resolve(__dirname, 'dist'), filename: '[name].[hash].js', publicPath: \"/\", sourceMapFilename: '[name].[hash].js.map'  ...  一些选项包含在方括号中的单词。 Webpack能够解析这些属性的参数，每个属性都有一组不同的可用于替换的参数。在这里，我们使用 name（ 包名称）和 hash（ 包的内容的哈希值）。 要将捆绑文件保存在不同的文件夹中，我们使用path属性。这里， path 告诉webpack所有的输出文件必须保存到 path.resolve(__ dirname，&#39;dist&#39;) 。在我们的例子中，我们将每个bundle保存到一个单独的文件中。此文件的名称由 filename 属性指定。 链接这些捆绑的文件和我们实际编码的文件是使用所谓的源映射。有不同的方式配置源地图。我们想要的是将这些源映射保存在由 sourceMapFilename 属性指定的单独文件中。服务器访问文件的方式可能不会直接跟随文件系统树。对我们来说，我们要使用dist下保存的文件作为我们服务器的根文件夹。为了让webpack知道这一点，我们将 publicPath 属性设置为 / 。"},"Project-setup/installation_and_usage.html#安装":{"title":"&#x5B89;&#x88C5;","path":"\\Project-setup\\installation_and_usage.html#安装","body":"&#x5F15;&#x5165;webpack&#x53CA;&#x5176;&#x63D2;&#x4EF6;&#x7684;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;NPM&#x5E76;&#x5C06;&#x5176;&#x4FDD;&#x5B58;&#x5230;&#x60A8;&#x7684; devDependencies &#xFF1A; 1 npm install -D webpack ts-loader html-webpack-plugin tslint-loader &#x8BBE;&#x7F6E;&#x548C;&#x4F7F;&#x7528; &#x4F7F;&#x7528;webpack&#x7684;&#x6700;&#x5E38;&#x89C1;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;CLI&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD0;&#x884C;&#x547D;&#x4EE4;&#x4F1A;&#x6267;&#x884C; webpack.config.js &#xFF0C;&#x8FD9;&#x662F;webpack&#x8BBE;&#x7F6E;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;"},"Project-setup/installation_and_usage.html#设置和使用":{"title":"&#x8BBE;&#x7F6E;&#x548C;&#x4F7F;&#x7528;","path":"\\Project-setup\\installation_and_usage.html#设置和使用","body":"&#x4F7F;&#x7528;webpack&#x7684;&#x6700;&#x5E38;&#x89C1;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;CLI&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD0;&#x884C;&#x547D;&#x4EE4;&#x4F1A;&#x6267;&#x884C; webpack.config.js &#xFF0C;&#x8FD9;&#x662F;webpack&#x8BBE;&#x7F6E;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;"},"Project-setup/installation_and_usage.html#Bundle":{"title":"Bundle","path":"\\Project-setup\\installation_and_usage.html#Bundle","body":"webpack&#x7684;&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x662F;bundle&#x3002; bundle&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6A21;&#x5757;&#x96C6;&#x5408;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x5B83;&#x4EEC;&#x5982;&#x4F55;&#x5206;&#x79BB;&#x7684;&#x8FB9;&#x754C;&#x3002; &#x5728;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E24;&#x4E2A;&#x5305;&#xFF1A; app &#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7279;&#x5B9A;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x903B;&#x8F91; &#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x7684; vendor &#x5728;webpack&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;&#x5165;&#x53E3;&#x70B9;&#x914D;&#x7F6E;bundle&#x3002; Webpack&#x9010;&#x4E2A;&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x5165;&#x53E3;&#x70B9;&#x3002; &#x5B83;&#x901A;&#x8FC7;&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x5F15;&#x7528;&#x6620;&#x5C04;&#x4E00;&#x4E2A;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x56FE;&#x3002; &#x5B83;&#x9047;&#x5230;&#x7684;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x7136;&#x540E;&#x6253;&#x5305;&#x5230;&#x8BE5;&#x6346;&#x7ED1;&#x5305;&#x4E2D;&#x3002; &#x901A;&#x8FC7;NPM&#x5B89;&#x88C5;&#x7684;&#x8F6F;&#x4EF6;&#x5305;&#x4F7F;&#x7528;CommonJS&#x7684;&#x6A21;&#x5757;&#x5316;&#x65B9;&#x5F0F;&#x5F15;&#x5165;&#x3002; &#x5728;JavaScript&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x5B83;&#x5C06;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1 const app = require(&apos;./src/index.ts&apos;); &#x6216;&#x5728;TypeScript/ES6 &#x6587;&#x4EF6;&#x4E2D;&#xFF1A; 1 import { Component } from &apos;@angular/core&apos;; &#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x4F5C;&#x4E3A;&#x6211;&#x4EEC;&#x4F20;&#x9012;&#x7ED9;webpack&#x7684;&#x6A21;&#x5757;&#x540D;&#x79F0;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x5728;&#x793A;&#x4F8B;&#x5E94;&#x7528;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x5165;&#x53E3;&#x70B9;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 { ... entry: { app: &apos;./src/index.ts&apos;, vendor: [ &apos;@angular/core&apos;, &apos;@angular/compiler&apos;, &apos;@angular/common&apos;, &apos;@angular/http&apos;, &apos;@angular/platform-browser&apos;, &apos;@angular/platform-browser-dynamic&apos;, &apos;@angular/router&apos;, &apos;es6-shim&apos;, &apos;redux&apos;, &apos;redux-thunk&apos;, &apos;redux-logger&apos;, &apos;reflect-metadata&apos;, &apos;ng2-redux&apos;, &apos;zone.js&apos;, ] } ... } app&#x7684;&#x5165;&#x53E3;&#x70B9;&#xFF0C;./src/index.ts&#xFF0C;&#x662F;&#x6211;&#x4EEC;Angular 2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x57FA;&#x672C;&#x6587;&#x4EF6;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x6B63;&#x786E;&#x5730;&#x5B9A;&#x4E49;&#x4E86;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x8FD9;&#x4E9B;&#x5F15;&#x7528;&#x5E94;&#x8BE5;&#x8FDE;&#x63A5;&#x6211;&#x4EEC;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6240;&#x6709;&#x90E8;&#x5206;&#x3002; vendor &#x7684;&#x5165;&#x53E3;&#x70B9;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C;&#x6240;&#x9700;&#x7684;&#x6A21;&#x5757;&#x5217;&#x8868;&#x3002; &#x5373;&#x4F7F;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x88AB;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5305;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x6A21;&#x5757;&#x5F15;&#x7528;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5E0C;&#x671B;&#x5C06;&#x8FD9;&#x4E9B;&#x8D44;&#x6E90;&#x5206;&#x79BB;&#x5728;&#x7B2C;&#x4E09;&#x65B9;&#x4EE3;&#x7801;&#x4E2D;&#x3002;"},"Project-setup/installation_and_usage.html#输出配置":{"title":"&#x8F93;&#x51FA;&#x914D;&#x7F6E;","path":"\\Project-setup\\installation_and_usage.html#输出配置","body":"&#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x53EA;&#x662F;&#x60F3;&#x8981;&#x914D;&#x7F6E;webpack&#x5982;&#x4F55;&#x751F;&#x6210;bundle - &#x6211;&#x4EEC;&#x8FD8;&#x60F3;&#x914D;&#x7F6E;&#x5982;&#x4F55;&#x8F93;&#x51FA;&#x8FD9;&#x4E9B;bundle&#x3002; &#x901A;&#x5E38;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x8981;&#x91CD;&#x65B0;&#x8DEF;&#x7531;&#x4FDD;&#x5B58;&#x6587;&#x4EF6;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x8FDB;&#x5165; bin &#x6216; dist &#x6587;&#x4EF6;&#x5939;&#x3002; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x4F18;&#x5316;&#x6211;&#x4EEC;&#x7684;&#x751F;&#x4EA7;&#x3002; Webpack&#x5728;&#x7ED1;&#x5B9A;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x5757;&#x5E76;&#x8F93;&#x51FA;&#x5B83;&#x4EEC;&#x65F6;&#x8F6C;&#x6362;&#x4EE3;&#x7801;&#x3002; &#x6211;&#x4EEC;&#x60F3;&#x8981;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x6765;&#x8FDE;&#x63A5;&#x7531;webpack&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x6211;&#x4EEC;&#x7F16;&#x5199;&#x7684;&#x4EE3;&#x7801;&#x3002; &#x670D;&#x52A1;&#x5668;&#x8DEF;&#x7531;&#x53EF;&#x4EE5;&#x4EE5;&#x8BB8;&#x591A;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x914D;&#x7F6E;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x60F3;&#x8981;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;webpack&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8003;&#x8651;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5668;&#x8DEF;&#x7531;&#x8BBE;&#x7F6E;&#x3002; &#x6240;&#x6709;&#x8FD9;&#x4E9B;&#x914D;&#x7F6E;&#x9009;&#x9879;&#x90FD;&#x7531;config&#x7684; output &#x5C5E;&#x6027;&#x5904;&#x7406;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x8BBE;&#x7F6E;&#x6211;&#x4EEC;&#x7684;&#x914D;&#x7F6E;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 { ... output: { path: path.resolve(__dirname, &apos;dist&apos;), filename: &apos;[name].[hash].js&apos;, publicPath: /, sourceMapFilename: &apos;[name].[hash].js.map&apos; } ... } &#x4E00;&#x4E9B;&#x9009;&#x9879;&#x5305;&#x542B;&#x5728;&#x65B9;&#x62EC;&#x53F7;&#x4E2D;&#x7684;&#x5355;&#x8BCD;&#x3002; Webpack&#x80FD;&#x591F;&#x89E3;&#x6790;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x90FD;&#x6709;&#x4E00;&#x7EC4;&#x4E0D;&#x540C;&#x7684;&#x53EF;&#x7528;&#x4E8E;&#x66FF;&#x6362;&#x7684;&#x53C2;&#x6570;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528; name&#xFF08; &#x5305;&#x540D;&#x79F0;&#xFF09;&#x548C; hash&#xFF08; &#x5305;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x54C8;&#x5E0C;&#x503C;&#xFF09;&#x3002; &#x8981;&#x5C06;&#x6346;&#x7ED1;&#x6587;&#x4EF6;&#x4FDD;&#x5B58;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;path&#x5C5E;&#x6027;&#x3002;&#x8FD9;&#x91CC;&#xFF0C; path &#x544A;&#x8BC9;webpack&#x6240;&#x6709;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x5FC5;&#x987B;&#x4FDD;&#x5B58;&#x5230; path.resolve(__ dirname&#xFF0C;&apos;dist&apos;) &#x3002;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x6BCF;&#x4E2A;bundle&#x4FDD;&#x5B58;&#x5230;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#x3002;&#x6B64;&#x6587;&#x4EF6;&#x7684;&#x540D;&#x79F0;&#x7531; filename &#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x3002; &#x94FE;&#x63A5;&#x8FD9;&#x4E9B;&#x6346;&#x7ED1;&#x7684;&#x6587;&#x4EF6;&#x548C;&#x6211;&#x4EEC;&#x5B9E;&#x9645;&#x7F16;&#x7801;&#x7684;&#x6587;&#x4EF6;&#x662F;&#x4F7F;&#x7528;&#x6240;&#x8C13;&#x7684;&#x6E90;&#x6620;&#x5C04;&#x3002;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x914D;&#x7F6E;&#x6E90;&#x5730;&#x56FE;&#x3002;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x662F;&#x5C06;&#x8FD9;&#x4E9B;&#x6E90;&#x6620;&#x5C04;&#x4FDD;&#x5B58;&#x5728;&#x7531; sourceMapFilename &#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x7684;&#x5355;&#x72EC;&#x6587;&#x4EF6;&#x4E2D;&#x3002;&#x670D;&#x52A1;&#x5668;&#x8BBF;&#x95EE;&#x6587;&#x4EF6;&#x7684;&#x65B9;&#x5F0F;&#x53EF;&#x80FD;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x8DDF;&#x968F;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x6811;&#x3002;&#x5BF9;&#x6211;&#x4EEC;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x4F7F;&#x7528;dist&#x4E0B;&#x4FDD;&#x5B58;&#x7684;&#x6587;&#x4EF6;&#x4F5C;&#x4E3A;&#x6211;&#x4EEC;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6839;&#x6587;&#x4EF6;&#x5939;&#x3002;&#x4E3A;&#x4E86;&#x8BA9;webpack&#x77E5;&#x9053;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x5C06; publicPath &#x5C5E;&#x6027;&#x8BBE;&#x7F6E;&#x4E3A; / &#x3002;"},"Project-setup/loaders.html":{"title":"","path":"\\Project-setup\\loaders.html","body":"Loaders TypeScript不是核心JavaScript，所以webpack需要一点额外的帮助来解析 .ts 文件。 它通过使用装载器来做到这一点。 加载器是一种配置webpack如何转换我们的bundle中的特定文件的输出的方法。 我们的 ts-loader 包能够处理TypeScript文件的这种转换。 Inline 在需要/导入模块时，可以内联配置装载程序： 1 const app = require(&apos;ts!./src/index.ts&apos;); 加载器通过使用 ! 字符来分隔模块引用和将要运行的加载器。可以使用多个加载器，并且它们以同样用 ! 分开。装载机从右到左执行。 1 const app = require(&apos;ts!tslint!./src/index.ts&apos;); 虽然软件包命名为 ts-loader ， tslint-loader ， style-loader ，我们不需要在我们的配置中包含 -loader 部分。 在以这种方式配置加载器时要小心 - 它将应用程序不同阶段的实现细节结合在一起，因此在许多情况下可能不是正确的选择。 Webpack 配置 首选方法是通过webpack.config.js文件配置装载程序。例如，TypeScript加载器任务看起来像这样： 1 2 3 4 5  test: /\\.ts$/, loader: &apos;ts-loader&apos;, exclude: /node_modules/  这将运行typescript编译器，它遵循上面指定的配置设置。 我们希望能够处理其他文件，而不仅仅是TypeScript文件，所以我们需要指定一个加载器列表。 这是通过创建任务数组来完成的。 此数组中指定的任务被链接。 如果文件匹配多个条件，则将按顺序使用每个任务处理它。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  ... module :  rules: [  test : /\\.ts$/ , loader : 'tslint' ,  test : /\\.ts$/ , loader : 'ts' , exclude : /node_modules/ ,  test : /\\.html$/ , loader : 'raw' ,  test : /\\.css$/ , loader : 'style!css?sourceMap' ,  test : /\\.svg/ , loader : 'url' ,  test : /\\.eot/ , loader : 'url' ,  test : /\\.woff/ , loader : 'url' ,  test : /\\.woff2/ , loader : 'url' ,  test : /\\.ttf/ , loader : 'url' , ], noParse: [ /zone\\.js\\/dist\\/.+/ , /angular2\\/bundles\\/.+ / ]  ...  每个任务都有一些配置选项： test - 文件路径必须匹配此条件才能处理。 这通常用于测试文件扩展名。 /\\.ts$/ 。 loader - 将用于转换输入的装载程序。 这遵循上面指定的语法。 exclude - 文件路径不能与要处理的此条件匹配。 这通常用于排除文件夹，例如。 / node_modules / 。 include - 文件路径必须与要处理的此条件匹配。 这通常用于包括文件夹。 例如。 path.resolve(__ dirname,&#39;app / src&#39;) 。 Pre-Loaders preLoaders数组的工作方式就像加载器数组一样，它是一个单独的任务链，在loader任务链之前执行。 非 JavaScript 资源 Webpack还允许我们加载非JavaScript资源，例如：CSS，SVG，字体文件等。为了将这些资源附加到我们的包中，我们必须在我们的应用程序模块中导入它们。 例如： 1 2 3 4 5 import './styles/style.css' ; // or const STYLES = require ( './styles/style.css' ); 其他常用 Loaders raw-loader - 以字符串形式返回文件内容。 url-loader - 如果文件大小低于某个阈值，则返回base64编码数据URL，否则只返回文件。 css-loader - 在CSS文件中将 @import 和 url 引用解析为模块。 style-loader - 在 head 标签中插入带有捆绑CSS的样式标签。"},"Project-setup/loaders.html#Loaders":{"title":"Loaders","path":"\\Project-setup\\loaders.html#Loaders","body":"TypeScript&#x4E0D;&#x662F;&#x6838;&#x5FC3;JavaScript&#xFF0C;&#x6240;&#x4EE5;webpack&#x9700;&#x8981;&#x4E00;&#x70B9;&#x989D;&#x5916;&#x7684;&#x5E2E;&#x52A9;&#x6765;&#x89E3;&#x6790; .ts &#x6587;&#x4EF6;&#x3002; &#x5B83;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x88C5;&#x8F7D;&#x5668;&#x6765;&#x505A;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#x3002; &#x52A0;&#x8F7D;&#x5668;&#x662F;&#x4E00;&#x79CD;&#x914D;&#x7F6E;webpack&#x5982;&#x4F55;&#x8F6C;&#x6362;&#x6211;&#x4EEC;&#x7684;bundle&#x4E2D;&#x7684;&#x7279;&#x5B9A;&#x6587;&#x4EF6;&#x7684;&#x8F93;&#x51FA;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x6211;&#x4EEC;&#x7684; ts-loader &#x5305;&#x80FD;&#x591F;&#x5904;&#x7406;TypeScript&#x6587;&#x4EF6;&#x7684;&#x8FD9;&#x79CD;&#x8F6C;&#x6362;&#x3002;"},"Project-setup/loaders.html#Inline":{"title":"Inline","path":"\\Project-setup\\loaders.html#Inline","body":"&#x5728;&#x9700;&#x8981;/&#x5BFC;&#x5165;&#x6A21;&#x5757;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x5185;&#x8054;&#x914D;&#x7F6E;&#x88C5;&#x8F7D;&#x7A0B;&#x5E8F;&#xFF1A; 1 const app = require(&apos;ts!./src/index.ts&apos;); &#x52A0;&#x8F7D;&#x5668;&#x901A;&#x8FC7;&#x4F7F;&#x7528; ! &#x5B57;&#x7B26;&#x6765;&#x5206;&#x9694;&#x6A21;&#x5757;&#x5F15;&#x7528;&#x548C;&#x5C06;&#x8981;&#x8FD0;&#x884C;&#x7684;&#x52A0;&#x8F7D;&#x5668;&#x3002;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x52A0;&#x8F7D;&#x5668;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x4EEC;&#x4EE5;&#x540C;&#x6837;&#x7528; ! &#x5206;&#x5F00;&#x3002;&#x88C5;&#x8F7D;&#x673A;&#x4ECE;&#x53F3;&#x5230;&#x5DE6;&#x6267;&#x884C;&#x3002; 1 const app = require(&apos;ts!tslint!./src/index.ts&apos;); &#x867D;&#x7136;&#x8F6F;&#x4EF6;&#x5305;&#x547D;&#x540D;&#x4E3A; ts-loader &#xFF0C; tslint-loader &#xFF0C; style-loader &#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x914D;&#x7F6E;&#x4E2D;&#x5305;&#x542B; -loader &#x90E8;&#x5206;&#x3002; &#x5728;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x914D;&#x7F6E;&#x52A0;&#x8F7D;&#x5668;&#x65F6;&#x8981;&#x5C0F;&#x5FC3; - &#x5B83;&#x5C06;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0D;&#x540C;&#x9636;&#x6BB5;&#x7684;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x8BB8;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#x53EF;&#x80FD;&#x4E0D;&#x662F;&#x6B63;&#x786E;&#x7684;&#x9009;&#x62E9;&#x3002;"},"Project-setup/loaders.html#Webpack-配置":{"title":"Webpack &#x914D;&#x7F6E;","path":"\\Project-setup\\loaders.html#Webpack-配置","body":"&#x9996;&#x9009;&#x65B9;&#x6CD5;&#x662F;&#x901A;&#x8FC7;webpack.config.js&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x88C5;&#x8F7D;&#x7A0B;&#x5E8F;&#x3002;&#x4F8B;&#x5982;&#xFF0C;TypeScript&#x52A0;&#x8F7D;&#x5668;&#x4EFB;&#x52A1;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x8FD9;&#x6837;&#xFF1A; 1 2 3 4 5 { test: /\\.ts$/, loader: &apos;ts-loader&apos;, exclude: /node_modules/ } &#x8FD9;&#x5C06;&#x8FD0;&#x884C;typescript&#x7F16;&#x8BD1;&#x5668;&#xFF0C;&#x5B83;&#x9075;&#x5FAA;&#x4E0A;&#x9762;&#x6307;&#x5B9A;&#x7684;&#x914D;&#x7F6E;&#x8BBE;&#x7F6E;&#x3002; &#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x80FD;&#x591F;&#x5904;&#x7406;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;TypeScript&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x52A0;&#x8F7D;&#x5668;&#x5217;&#x8868;&#x3002; &#x8FD9;&#x662F;&#x901A;&#x8FC7;&#x521B;&#x5EFA;&#x4EFB;&#x52A1;&#x6570;&#x7EC4;&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002; &#x6B64;&#x6570;&#x7EC4;&#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x4EFB;&#x52A1;&#x88AB;&#x94FE;&#x63A5;&#x3002; &#x5982;&#x679C;&#x6587;&#x4EF6;&#x5339;&#x914D;&#x591A;&#x4E2A;&#x6761;&#x4EF6;&#xFF0C;&#x5219;&#x5C06;&#x6309;&#x987A;&#x5E8F;&#x4F7F;&#x7528;&#x6BCF;&#x4E2A;&#x4EFB;&#x52A1;&#x5904;&#x7406;&#x5B83;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 { ... module : { rules: [ { test : /\\.ts$/ , loader : &apos;tslint&apos; }, { test : /\\.ts$/ , loader : &apos;ts&apos; , exclude : /node_modules/ }, { test : /\\.html$/ , loader : &apos;raw&apos; }, { test : /\\.css$/ , loader : &apos;style!css?sourceMap&apos; }, { test : /\\.svg/ , loader : &apos;url&apos; }, { test : /\\.eot/ , loader : &apos;url&apos; }, { test : /\\.woff/ , loader : &apos;url&apos; }, { test : /\\.woff2/ , loader : &apos;url&apos; }, { test : /\\.ttf/ , loader : &apos;url&apos; }, ], noParse: [ /zone\\.js\\/dist\\/.+/ , /angular2\\/bundles\\/.+ / ] } ... } &#x6BCF;&#x4E2A;&#x4EFB;&#x52A1;&#x90FD;&#x6709;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;&#x9009;&#x9879;&#xFF1A; test - &#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x5FC5;&#x987B;&#x5339;&#x914D;&#x6B64;&#x6761;&#x4EF6;&#x624D;&#x80FD;&#x5904;&#x7406;&#x3002; &#x8FD9;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#x6269;&#x5C55;&#x540D;&#x3002; /\\.ts$/ &#x3002; loader - &#x5C06;&#x7528;&#x4E8E;&#x8F6C;&#x6362;&#x8F93;&#x5165;&#x7684;&#x88C5;&#x8F7D;&#x7A0B;&#x5E8F;&#x3002; &#x8FD9;&#x9075;&#x5FAA;&#x4E0A;&#x9762;&#x6307;&#x5B9A;&#x7684;&#x8BED;&#x6CD5;&#x3002; exclude - &#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x4E0D;&#x80FD;&#x4E0E;&#x8981;&#x5904;&#x7406;&#x7684;&#x6B64;&#x6761;&#x4EF6;&#x5339;&#x914D;&#x3002; &#x8FD9;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x6392;&#x9664;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x4F8B;&#x5982;&#x3002; / node_modules / &#x3002; include - &#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x5FC5;&#x987B;&#x4E0E;&#x8981;&#x5904;&#x7406;&#x7684;&#x6B64;&#x6761;&#x4EF6;&#x5339;&#x914D;&#x3002; &#x8FD9;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x5305;&#x62EC;&#x6587;&#x4EF6;&#x5939;&#x3002; &#x4F8B;&#x5982;&#x3002; path.resolve(__ dirname,&apos;app / src&apos;) &#x3002; Pre-Loaders preLoaders&#x6570;&#x7EC4;&#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x5C31;&#x50CF;&#x52A0;&#x8F7D;&#x5668;&#x6570;&#x7EC4;&#x4E00;&#x6837;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x4EFB;&#x52A1;&#x94FE;&#xFF0C;&#x5728;loader&#x4EFB;&#x52A1;&#x94FE;&#x4E4B;&#x524D;&#x6267;&#x884C;&#x3002; &#x975E; JavaScript &#x8D44;&#x6E90; Webpack&#x8FD8;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x52A0;&#x8F7D;&#x975E;JavaScript&#x8D44;&#x6E90;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;CSS&#xFF0C;SVG&#xFF0C;&#x5B57;&#x4F53;&#x6587;&#x4EF6;&#x7B49;&#x3002;&#x4E3A;&#x4E86;&#x5C06;&#x8FD9;&#x4E9B;&#x8D44;&#x6E90;&#x9644;&#x52A0;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x5305;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6A21;&#x5757;&#x4E2D;&#x5BFC;&#x5165;&#x5B83;&#x4EEC;&#x3002; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 import &apos;./styles/style.css&apos; ; // or const STYLES = require ( &apos;./styles/style.css&apos; ); &#x5176;&#x4ED6;&#x5E38;&#x7528; Loaders raw-loader - &#x4EE5;&#x5B57;&#x7B26;&#x4E32;&#x5F62;&#x5F0F;&#x8FD4;&#x56DE;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x3002; url-loader - &#x5982;&#x679C;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x4F4E;&#x4E8E;&#x67D0;&#x4E2A;&#x9608;&#x503C;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;base64&#x7F16;&#x7801;&#x6570;&#x636E;URL&#xFF0C;&#x5426;&#x5219;&#x53EA;&#x8FD4;&#x56DE;&#x6587;&#x4EF6;&#x3002; css-loader - &#x5728;CSS&#x6587;&#x4EF6;&#x4E2D;&#x5C06; @import &#x548C; url &#x5F15;&#x7528;&#x89E3;&#x6790;&#x4E3A;&#x6A21;&#x5757;&#x3002; style-loader - &#x5728; head &#x6807;&#x7B7E;&#x4E2D;&#x63D2;&#x5165;&#x5E26;&#x6709;&#x6346;&#x7ED1;CSS&#x7684;&#x6837;&#x5F0F;&#x6807;&#x7B7E;&#x3002;"},"Project-setup/npm_scripts_integration.html":{"title":"","path":"\\Project-setup\\npm_scripts_integration.html","body":"NPM 脚本集成 NPM允许我们在 package.json 文件中定义自定义脚本。然后，这些可以使用NPM CLI执行任务。 我们依靠这些脚本来管理大多数项目任务以及适配webpack。 这些脚本在 package.json 文件的 scripts 属性中定义。例如： 1 2 3 4 5 6 7 ... scripts:  clean: rimraf dist, prebuild: npm run clean, build: NODE_ENV=production webpack,  ... NPM允许前后任务绑定，方法是先将单词 pre 或 post 分别附加到任务名称。 这里，我们的预构建 prebuild 任务在我们的 build 任务之前执行。 我们可以从另一个NPM脚本内部运行NPM脚本。 要调用构建脚本，我们运行命令 npm run build ： prebuild 任务执行； prebuild 任务运行 clean 任务，执行 rimraf dist 命令； rimraf （命令来自NPM包）递归删除指定文件夹中的所有内容； 执行构建任务。 这会将 NODE_ENV 环境变量设置为 production ，并启动webpack构建； Webpack根据项目根文件夹中可用的 webpack.config.js 生成打包文件。"},"Project-setup/npm_scripts_integration.html#NPM-脚本集成":{"title":"NPM &#x811A;&#x672C;&#x96C6;&#x6210;","path":"\\Project-setup\\npm_scripts_integration.html#NPM-脚本集成","body":"NPM&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5728; package.json &#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x81EA;&#x5B9A;&#x4E49;&#x811A;&#x672C;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x8FD9;&#x4E9B;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;NPM CLI&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x3002; &#x6211;&#x4EEC;&#x4F9D;&#x9760;&#x8FD9;&#x4E9B;&#x811A;&#x672C;&#x6765;&#x7BA1;&#x7406;&#x5927;&#x591A;&#x6570;&#x9879;&#x76EE;&#x4EFB;&#x52A1;&#x4EE5;&#x53CA;&#x9002;&#x914D;webpack&#x3002; &#x8FD9;&#x4E9B;&#x811A;&#x672C;&#x5728; package.json &#x6587;&#x4EF6;&#x7684; scripts &#x5C5E;&#x6027;&#x4E2D;&#x5B9A;&#x4E49;&#x3002;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 ... scripts: { clean: rimraf dist, prebuild: npm run clean, build: NODE_ENV=production webpack, } ... NPM&#x5141;&#x8BB8;&#x524D;&#x540E;&#x4EFB;&#x52A1;&#x7ED1;&#x5B9A;&#xFF0C;&#x65B9;&#x6CD5;&#x662F;&#x5148;&#x5C06;&#x5355;&#x8BCD; pre &#x6216; post &#x5206;&#x522B;&#x9644;&#x52A0;&#x5230;&#x4EFB;&#x52A1;&#x540D;&#x79F0;&#x3002; &#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x9884;&#x6784;&#x5EFA; prebuild &#x4EFB;&#x52A1;&#x5728;&#x6211;&#x4EEC;&#x7684; build &#x4EFB;&#x52A1;&#x4E4B;&#x524D;&#x6267;&#x884C;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x53E6;&#x4E00;&#x4E2A;NPM&#x811A;&#x672C;&#x5185;&#x90E8;&#x8FD0;&#x884C;NPM&#x811A;&#x672C;&#x3002; &#x8981;&#x8C03;&#x7528;&#x6784;&#x5EFA;&#x811A;&#x672C;&#xFF0C;&#x6211;&#x4EEC;&#x8FD0;&#x884C;&#x547D;&#x4EE4; npm run build &#xFF1A; prebuild &#x4EFB;&#x52A1;&#x6267;&#x884C;&#xFF1B; prebuild &#x4EFB;&#x52A1;&#x8FD0;&#x884C; clean &#x4EFB;&#x52A1;&#xFF0C;&#x6267;&#x884C; rimraf dist &#x547D;&#x4EE4;&#xFF1B; rimraf &#xFF08;&#x547D;&#x4EE4;&#x6765;&#x81EA;NPM&#x5305;&#xFF09;&#x9012;&#x5F52;&#x5220;&#x9664;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5185;&#x5BB9;&#xFF1B; &#x6267;&#x884C;&#x6784;&#x5EFA;&#x4EFB;&#x52A1;&#x3002; &#x8FD9;&#x4F1A;&#x5C06; NODE_ENV &#x73AF;&#x5883;&#x53D8;&#x91CF;&#x8BBE;&#x7F6E;&#x4E3A; production &#xFF0C;&#x5E76;&#x542F;&#x52A8;webpack&#x6784;&#x5EFA;&#xFF1B; Webpack&#x6839;&#x636E;&#x9879;&#x76EE;&#x6839;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x53EF;&#x7528;&#x7684; webpack.config.js &#x751F;&#x6210;&#x6253;&#x5305;&#x6587;&#x4EF6;&#x3002;"},"Project-setup/plugins.html":{"title":"","path":"\\Project-setup\\plugins.html","body":"插件 插件允许我们在捆绑过程中注入自定义构建步骤。 一个常用的插件是 html-webpack-plugin 。 这使我们能够生成生产所需的HTML文件。 例如，它可以用于为输出包注入脚本标记。 1 2 3 4 5 new HtmlWebpackPlugin( template: './src/index.html' , inject: 'body' , minify: false );"},"Project-setup/plugins.html#插件":{"title":"&#x63D2;&#x4EF6;","path":"\\Project-setup\\plugins.html#插件","body":"&#x63D2;&#x4EF6;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5728;&#x6346;&#x7ED1;&#x8FC7;&#x7A0B;&#x4E2D;&#x6CE8;&#x5165;&#x81EA;&#x5B9A;&#x4E49;&#x6784;&#x5EFA;&#x6B65;&#x9AA4;&#x3002; &#x4E00;&#x4E2A;&#x5E38;&#x7528;&#x7684;&#x63D2;&#x4EF6;&#x662F; html-webpack-plugin &#x3002; &#x8FD9;&#x4F7F;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x751F;&#x6210;&#x751F;&#x4EA7;&#x6240;&#x9700;&#x7684;HTML&#x6587;&#x4EF6;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x4E3A;&#x8F93;&#x51FA;&#x5305;&#x6CE8;&#x5165;&#x811A;&#x672C;&#x6807;&#x8BB0;&#x3002; 1 2 3 4 5 new HtmlWebpackPlugin({ template: &apos;./src/index.html&apos; , inject: &apos;body&apos; , minify: false });"},"Project-setup/project-setup.html":{"title":"","path":"\\Project-setup\\project-setup.html","body":"项目设置 适当的工具和设置对任何项目都是好的，但它对于Angular 2尤其重要，因为所有的参与。 我们决定使用webpack，这是一个强大的工具，尝试处理我们的复杂集成。 由于我们项目大部分由webpack打包，重要的是要经过配置，以便更好地了解生成的客户端。"},"Project-setup/project-setup.html#项目设置":{"title":"&#x9879;&#x76EE;&#x8BBE;&#x7F6E;","path":"\\Project-setup\\project-setup.html#项目设置","body":"&#x9002;&#x5F53;&#x7684;&#x5DE5;&#x5177;&#x548C;&#x8BBE;&#x7F6E;&#x5BF9;&#x4EFB;&#x4F55;&#x9879;&#x76EE;&#x90FD;&#x662F;&#x597D;&#x7684;&#xFF0C;&#x4F46;&#x5B83;&#x5BF9;&#x4E8E;Angular 2&#x5C24;&#x5176;&#x91CD;&#x8981;&#xFF0C;&#x56E0;&#x4E3A;&#x6240;&#x6709;&#x7684;&#x53C2;&#x4E0E;&#x3002; &#x6211;&#x4EEC;&#x51B3;&#x5B9A;&#x4F7F;&#x7528;webpack&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F3A;&#x5927;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5C1D;&#x8BD5;&#x5904;&#x7406;&#x6211;&#x4EEC;&#x7684;&#x590D;&#x6742;&#x96C6;&#x6210;&#x3002; &#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x9879;&#x76EE;&#x5927;&#x90E8;&#x5206;&#x7531;webpack&#x6253;&#x5305;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x662F;&#x8981;&#x7ECF;&#x8FC7;&#x914D;&#x7F6E;&#xFF0C;&#x4EE5;&#x4FBF;&#x66F4;&#x597D;&#x5730;&#x4E86;&#x89E3;&#x751F;&#x6210;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x3002;"},"Project-setup/summary.html":{"title":"","path":"\\Project-setup\\summary.html","body":"总结 当我们把所有东西放在一起时，我们完整的 webpack.config.js 文件看起来像这样： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 'use strict' ; const path = require ( \"path\" ); const webpack = require ( 'webpack' ); const HtmlWebpackPlugin = require ( 'html-webpack-plugin' ); const basePlugins = [ new webpack.optimize.CommonsChunkPlugin( 'vendor' , '[name].[hash].bundle.js' ), new HtmlWebpackPlugin( template: './src/index.html' , inject: 'body' , minify: false ) ]; const envPlugins =  production: [ new webpack.optimize.UglifyJsPlugin( compress:  warnings: false  ) ], development: [] ; const plugins = basePlugins.concat(envPlugins[process.env.NODE_ENV] || []); module .exports =  entry:  app: './src/index.ts' , vendor: [ '@angular/core' , '@angular/compiler' , '@angular/common' , '@angular/http' , '@angular/platform-browser' , '@angular/platform-browser-dynamic' , '@angular/router' , 'es6-shim' , 'redux' , 'redux-thunk' , 'redux-logger' , 'reflect-metadata' , 'ng2-redux' , 'zone.js' , ] , output:  path: path.resolve(__dirname, 'dist' ), filename: '[name].[hash].js' , publicPath: \"/\" , sourceMapFilename: '[name].[hash].js.map' , devtool: 'source-map' , resolve:  extensions: [ '.webpack.js' , '.web.js' , '.ts' , '.js' ] , plugins: plugins, module :  rules: [  test: /\\.ts$/ , loader: 'tslint' ,  test: /\\.ts$/ , loader: 'ts' , exclude: /node_modules/ ,  test: /\\.html$/ , loader: 'raw' ,  test: /\\.css$/ , loader: 'style!css?sourceMap' ,  test: /\\.svg/ , loader: 'url' ,  test: /\\.eot/ , loader: 'url' ,  test: /\\.woff/ , loader: 'url' ,  test: /\\.woff2/ , loader: 'url' ,  test: /\\.ttf/ , loader: 'url' , ], noParse: [ /zone\\.js\\/dist\\/.+/ , /angular2\\/bundles\\/.+/ ]   更进一步 Webpack也做类似热部署和代码优化，我们没有覆盖。有关更多信息，您可以查看 官方文档 。源代码也可以在Github上获得。"},"Project-setup/summary.html#总结":{"title":"&#x603B;&#x7ED3;","path":"\\Project-setup\\summary.html#总结","body":"&#x5F53;&#x6211;&#x4EEC;&#x628A;&#x6240;&#x6709;&#x4E1C;&#x897F;&#x653E;&#x5728;&#x4E00;&#x8D77;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5B8C;&#x6574;&#x7684; webpack.config.js &#x6587;&#x4EF6;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x8FD9;&#x6837;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 &apos;use strict&apos; ; const path = require ( path ); const webpack = require ( &apos;webpack&apos; ); const HtmlWebpackPlugin = require ( &apos;html-webpack-plugin&apos; ); const basePlugins = [ new webpack.optimize.CommonsChunkPlugin( &apos;vendor&apos; , &apos;[name].[hash].bundle.js&apos; ), new HtmlWebpackPlugin({ template: &apos;./src/index.html&apos; , inject: &apos;body&apos; , minify: false }) ]; const envPlugins = { production: [ new webpack.optimize.UglifyJsPlugin({ compress: { warnings: false } }) ], development: [] }; const plugins = basePlugins.concat(envPlugins[process.env.NODE_ENV] || []); module .exports = { entry: { app: &apos;./src/index.ts&apos; , vendor: [ &apos;@angular/core&apos; , &apos;@angular/compiler&apos; , &apos;@angular/common&apos; , &apos;@angular/http&apos; , &apos;@angular/platform-browser&apos; , &apos;@angular/platform-browser-dynamic&apos; , &apos;@angular/router&apos; , &apos;es6-shim&apos; , &apos;redux&apos; , &apos;redux-thunk&apos; , &apos;redux-logger&apos; , &apos;reflect-metadata&apos; , &apos;ng2-redux&apos; , &apos;zone.js&apos; , ] }, output: { path: path.resolve(__dirname, &apos;dist&apos; ), filename: &apos;[name].[hash].js&apos; , publicPath: / , sourceMapFilename: &apos;[name].[hash].js.map&apos; }, devtool: &apos;source-map&apos; , resolve: { extensions: [ &apos;.webpack.js&apos; , &apos;.web.js&apos; , &apos;.ts&apos; , &apos;.js&apos; ] }, plugins: plugins, module : { rules: [ { test: /\\.ts$/ , loader: &apos;tslint&apos; }, { test: /\\.ts$/ , loader: &apos;ts&apos; , exclude: /node_modules/ }, { test: /\\.html$/ , loader: &apos;raw&apos; }, { test: /\\.css$/ , loader: &apos;style!css?sourceMap&apos; }, { test: /\\.svg/ , loader: &apos;url&apos; }, { test: /\\.eot/ , loader: &apos;url&apos; }, { test: /\\.woff/ , loader: &apos;url&apos; }, { test: /\\.woff2/ , loader: &apos;url&apos; }, { test: /\\.ttf/ , loader: &apos;url&apos; }, ], noParse: [ /zone\\.js\\/dist\\/.+/ , /angular2\\/bundles\\/.+/ ] } }"},"Project-setup/summary.html#更进一步":{"title":"&#x66F4;&#x8FDB;&#x4E00;&#x6B65;","path":"\\Project-setup\\summary.html#更进一步","body":"Webpack&#x4E5F;&#x505A;&#x7C7B;&#x4F3C;&#x70ED;&#x90E8;&#x7F72;&#x548C;&#x4EE3;&#x7801;&#x4F18;&#x5316;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x8986;&#x76D6;&#x3002;&#x6709;&#x5173;&#x66F4;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x67E5;&#x770B; &#x5B98;&#x65B9;&#x6587;&#x6863; &#x3002;&#x6E90;&#x4EE3;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;Github&#x4E0A;&#x83B7;&#x5F97;&#x3002;"},"Project-setup/webpack.html":{"title":"","path":"\\Project-setup\\webpack.html","body":"Webpack 一个现代的JavaScript Web应用程序包括很多不同的包和依赖关系，重要的是要有一些简单的方式解释这一切。 Angular 2采用将应用程序分为许多不同组件的方法，每个组件可以有多个文件。以这种方式分离应用程序逻辑对程序员是有好处的，但是会减损用户体验，因为这样做会增加页面加载时间。 HTTP2旨在以一种方式解决这个问题，但是直到更多的知道它的效果，我们将需要捆绑我们的应用程序的不同部分，并压缩它。 我们的平台，浏览器，必须继续提供所有现有代码的向后兼容性，并且这需要慢慢移动添加到HTML / CSS / JS的基本功能。社区创建了不同的工具，将其首选语法/功能集转换为浏览器支持的语法/功能集，以避免将其自身绑定到Web平台的约束。这在Angular 2应用程序中尤其明显，其中使用了大量的TypeScript。虽然我们不在我们的课程中这样做，但是项目也可能涉及到必须集成的CSS预处理器（sass，stylus）或模板引擎（jade, Mustache, EJS）。 Webpack通过提供一个通用接口来集成所有这些工具，并允许我们简化我们的工作流和避免复杂性解决这些问题。"},"Project-setup/webpack.html#Webpack":{"title":"Webpack","path":"\\Project-setup\\webpack.html#Webpack","body":"&#x4E00;&#x4E2A;&#x73B0;&#x4EE3;&#x7684;JavaScript Web&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5305;&#x62EC;&#x5F88;&#x591A;&#x4E0D;&#x540C;&#x7684;&#x5305;&#x548C;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x662F;&#x8981;&#x6709;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#x89E3;&#x91CA;&#x8FD9;&#x4E00;&#x5207;&#x3002; Angular 2&#x91C7;&#x7528;&#x5C06;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5206;&#x4E3A;&#x8BB8;&#x591A;&#x4E0D;&#x540C;&#x7EC4;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6BCF;&#x4E2A;&#x7EC4;&#x4EF6;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x3002;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5206;&#x79BB;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x903B;&#x8F91;&#x5BF9;&#x7A0B;&#x5E8F;&#x5458;&#x662F;&#x6709;&#x597D;&#x5904;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x4F1A;&#x51CF;&#x635F;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x505A;&#x4F1A;&#x589E;&#x52A0;&#x9875;&#x9762;&#x52A0;&#x8F7D;&#x65F6;&#x95F4;&#x3002; HTTP2&#x65E8;&#x5728;&#x4EE5;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x76F4;&#x5230;&#x66F4;&#x591A;&#x7684;&#x77E5;&#x9053;&#x5B83;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x9700;&#x8981;&#x6346;&#x7ED1;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E0D;&#x540C;&#x90E8;&#x5206;&#xFF0C;&#x5E76;&#x538B;&#x7F29;&#x5B83;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x5E73;&#x53F0;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x5FC5;&#x987B;&#x7EE7;&#x7EED;&#x63D0;&#x4F9B;&#x6240;&#x6709;&#x73B0;&#x6709;&#x4EE3;&#x7801;&#x7684;&#x5411;&#x540E;&#x517C;&#x5BB9;&#x6027;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x9700;&#x8981;&#x6162;&#x6162;&#x79FB;&#x52A8;&#x6DFB;&#x52A0;&#x5230;HTML / CSS / JS&#x7684;&#x57FA;&#x672C;&#x529F;&#x80FD;&#x3002;&#x793E;&#x533A;&#x521B;&#x5EFA;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5C06;&#x5176;&#x9996;&#x9009;&#x8BED;&#x6CD5;/&#x529F;&#x80FD;&#x96C6;&#x8F6C;&#x6362;&#x4E3A;&#x6D4F;&#x89C8;&#x5668;&#x652F;&#x6301;&#x7684;&#x8BED;&#x6CD5;/&#x529F;&#x80FD;&#x96C6;&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x5C06;&#x5176;&#x81EA;&#x8EAB;&#x7ED1;&#x5B9A;&#x5230;Web&#x5E73;&#x53F0;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x8FD9;&#x5728;Angular 2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x5C24;&#x5176;&#x660E;&#x663E;&#xFF0C;&#x5176;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;&#x5927;&#x91CF;&#x7684;TypeScript&#x3002;&#x867D;&#x7136;&#x6211;&#x4EEC;&#x4E0D;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x8BFE;&#x7A0B;&#x4E2D;&#x8FD9;&#x6837;&#x505A;&#xFF0C;&#x4F46;&#x662F;&#x9879;&#x76EE;&#x4E5F;&#x53EF;&#x80FD;&#x6D89;&#x53CA;&#x5230;&#x5FC5;&#x987B;&#x96C6;&#x6210;&#x7684;CSS&#x9884;&#x5904;&#x7406;&#x5668;&#xFF08;sass&#xFF0C;stylus&#xFF09;&#x6216;&#x6A21;&#x677F;&#x5F15;&#x64CE;&#xFF08;jade, Mustache, EJS&#xFF09;&#x3002; Webpack&#x901A;&#x8FC7;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x63A5;&#x53E3;&#x6765;&#x96C6;&#x6210;&#x6240;&#x6709;&#x8FD9;&#x4E9B;&#x5DE5;&#x5177;&#xFF0C;&#x5E76;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x7B80;&#x5316;&#x6211;&#x4EEC;&#x7684;&#x5DE5;&#x4F5C;&#x6D41;&#x548C;&#x907F;&#x514D;&#x590D;&#x6742;&#x6027;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x3002;"},"Routing/aux-routes.html":{"title":"","path":"\\Routing\\aux-routes.html","body":"使用辅助路由 Angular 2支持辅助路由的概念，它允许您在单个应用程序中设置和导航多个独立路由。 每个组件具有一个主路由和零个或多个辅助出口。 辅助出口必须在组件中具有唯一的名称。 为了定义辅助路由，我们必须首先添加一个命名的路由出口，其中要呈现辅助路由的内容。 这里有一个例子： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import Component from '@angular/core' ; @Component ( selector: 'app' , template: ` nav a [routerLink]=\"['/component-one']\"Component One/a a [routerLink]=\"['/component-two']\"Component Two/a a [routerLink]=\"[ outlets:  'sidebar': ['component-aux']  ]\"Component Aux/a /nav div style=\"color: green; margin-top: 1rem;\"Outlet:/div div style=\"border: 2px solid green; padding: 1rem;\" router-outlet/router-outlet /div div style=\"color: green; margin-top: 1rem;\"Sidebar Outlet:/div div style=\"border: 2px solid blue; padding: 1rem;\" router-outlet name=\"sidebar\"/router-outlet /div ` ) export class AppComponent   接下来，我们必须定义到应用程序的辅助路由的链接，以导航和呈现内容。 1 2 3  a [ routerLink ]= \"[ outlets:  'sidebar': ['component-aux']  ]\"  Component Aux / a  View Example 每个辅助路由是独立的路由，可以拥有： 自己的子路由 自己的辅助路由 自己的路由参数 自己的浏览器历史记录栈"},"Routing/aux-routes.html#使用辅助路由":{"title":"&#x4F7F;&#x7528;&#x8F85;&#x52A9;&#x8DEF;&#x7531;","path":"\\Routing\\aux-routes.html#使用辅助路由","body":"Angular 2&#x652F;&#x6301;&#x8F85;&#x52A9;&#x8DEF;&#x7531;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x60A8;&#x5728;&#x5355;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x8BBE;&#x7F6E;&#x548C;&#x5BFC;&#x822A;&#x591A;&#x4E2A;&#x72EC;&#x7ACB;&#x8DEF;&#x7531;&#x3002; &#x6BCF;&#x4E2A;&#x7EC4;&#x4EF6;&#x5177;&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x8DEF;&#x7531;&#x548C;&#x96F6;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x8F85;&#x52A9;&#x51FA;&#x53E3;&#x3002; &#x8F85;&#x52A9;&#x51FA;&#x53E3;&#x5FC5;&#x987B;&#x5728;&#x7EC4;&#x4EF6;&#x4E2D;&#x5177;&#x6709;&#x552F;&#x4E00;&#x7684;&#x540D;&#x79F0;&#x3002; &#x4E3A;&#x4E86;&#x5B9A;&#x4E49;&#x8F85;&#x52A9;&#x8DEF;&#x7531;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x9996;&#x5148;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x547D;&#x540D;&#x7684;&#x8DEF;&#x7531;&#x51FA;&#x53E3;&#xFF0C;&#x5176;&#x4E2D;&#x8981;&#x5448;&#x73B0;&#x8F85;&#x52A9;&#x8DEF;&#x7531;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import {Component} from &apos;@angular/core&apos; ; @Component ({ selector: &apos;app&apos; , template: ` nav a [routerLink]=[&apos;/component-one&apos;]Component One/a a [routerLink]=[&apos;/component-two&apos;]Component Two/a a [routerLink]=[{ outlets: { &apos;sidebar&apos;: [&apos;component-aux&apos;] } }]Component Aux/a /nav div style=color: green; margin-top: 1rem;Outlet:/div div style=border: 2px solid green; padding: 1rem; router-outlet/router-outlet /div div style=color: green; margin-top: 1rem;Sidebar Outlet:/div div style=border: 2px solid blue; padding: 1rem; router-outlet name=sidebar/router-outlet /div ` }) export class AppComponent { } &#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5B9A;&#x4E49;&#x5230;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x8F85;&#x52A9;&#x8DEF;&#x7531;&#x7684;&#x94FE;&#x63A5;&#xFF0C;&#x4EE5;&#x5BFC;&#x822A;&#x548C;&#x5448;&#x73B0;&#x5185;&#x5BB9;&#x3002; 1 2 3  a [ routerLink ]= [{ outlets: { &apos;sidebar&apos;: [&apos;component-aux&apos;] } }]  Component Aux / a  View Example &#x6BCF;&#x4E2A;&#x8F85;&#x52A9;&#x8DEF;&#x7531;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#x8DEF;&#x7531;&#xFF0C;&#x53EF;&#x4EE5;&#x62E5;&#x6709;&#xFF1A; &#x81EA;&#x5DF1;&#x7684;&#x5B50;&#x8DEF;&#x7531; &#x81EA;&#x5DF1;&#x7684;&#x8F85;&#x52A9;&#x8DEF;&#x7531; &#x81EA;&#x5DF1;&#x7684;&#x8DEF;&#x7531;&#x53C2;&#x6570; &#x81EA;&#x5DF1;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x5386;&#x53F2;&#x8BB0;&#x5F55;&#x6808;"},"Routing/child_routes.html":{"title":"","path":"\\Routing\\child_routes.html","body":"定义子路由 当某些路由只能在其他路由中访问和查看时，可能适合将其创建为子路由。 例如：产品详细信息页面可能有一个标签式导航部分，默认显示产品概述。 当用户单击“技术规格”选项卡时，该部分将显示规格。 如果用户点击ID为3的产品，我们要显示产品详细信息页面，其中包含概述： localhost:3000/product-details/3/overview 当用户点击 “Technical Specs”: localhost:3000/product-details/3/specs overview 和 specs 作为 product-details/:id 的子路由。 它们只能在产品详细信息中找到。 我们的子 Routes 看起来像这样： 1 2 3 4 5 6 7 8 9 10 11 export const routes: Routes = [  path: '' , redirectTo: 'product-list' , pathMatch: 'full' ,  path: 'product-list' , component: ProductList ,  path: 'product-details/:id' , component: ProductDetails, children: [  path: '' , redirectTo: 'overview' , pathMatch: 'full' ,  path: 'overview' , component: Overview ,  path: 'specs' , component: Specs  ]  ]; 这些子路由的组件将显示在哪里？ 就像我们对于根应用程序组件有一个 router-outlet / router-outlet ，我们在 ProductDetails 组件中有一个路由出口。 对应于 product-details 的子路由的组件将被放置在 ProductDetails 中的路由出口。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import  Component, OnInit, OnDestroy  from '@angular/core' ; import  ActivatedRoute  from '@angular/router' ; @Component ( selector: 'product-details' , template: ` pProduct Details: id/p !-- Product information -- nav a [routerLink]=\"['overview']\"Overview/a a [routerLink]=\"['specs']\"Technical Specs/a /nav router-outlet/router-outlet !-- Overview &amp; Specs components get added here by the router -- ` ) export default class ProductDetails implements OnInit, OnDestroy  id: number ; constructor ( private route: ActivatedRoute )  ngOnInit()  this .sub = this .route.params.subscribe( params =  this .id = +params[ 'id' ]; // (+) converts string 'id' to a number );  ngOnDestroy()  this .sub.unsubscribe();   或者，我们可以将 overview 路由URL简单地指定为： localhost:3000/product-details/ 1 2 3 4 5 6 7 8 9 10 export const routes: Routes = [  path: '' , redirectTo: 'product-list' , pathMatch: 'full' ,  path: 'product-list' , component: ProductList ,  path: 'product-details/:id' , component: ProductDetails, children: [  path: '' , component: Overview ,  path: 'specs' , component: Specs  ]  ]; 由于 product-details 的 Overview 子路由具有空路径，因此默认情况下将加载它。 specs 子路由保持不变。 View Example with child routes View Example with route params &amp; child routes 查看以全屏模式运行的示例，以查看URL变化。 访问父路由的参数 在上述示例中，假设 product-details 的子路由需要产品的ID以获取规范或概述信息。子路由组件可以访问父路由的参数，如下所示： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 export default class Overview  parentRouteId: number ; private sub: any ; constructor ( private router: Router, private route: ActivatedRoute )  ngOnInit()  // Get parent ActivatedRoute of this route. this .sub = this .router.routerState.parent( this .route) .params.subscribe( params =  this .parentRouteId = +params[ \"id\" ]; );  ngOnDestroy()  this .sub.unsubscribe();   View Example child routes accessing parent’s route parameters 查看以全屏模式运行的示例，以查看URL变化。 链接 路由可以使用 / ，或 ../ ;这告诉Angular 2在路由树链接到哪里。 Prefix Looks in / Root of the application none Current component children routes ../ Current component parent routes 例如： 1 2 3  a [ routerLink ]= \"['route-one']\"  Route One / a   a [ routerLink ]= \"['../route-two']\"  Route Two / a   a [ routerLink ]= \"['/route-three']\"  Route Three / a  在上面的例子中，路由一链接到当前路由的子节点。 路由二链接到当前路由的兄弟。 路由三链接到根组件的子节点（如果当前路由是根组件，则与路由一等效）。 View Example with linking throughout route tree 查看以全屏模式运行的示例，以查看URL变化。"},"Routing/child_routes.html#定义子路由":{"title":"&#x5B9A;&#x4E49;&#x5B50;&#x8DEF;&#x7531;","path":"\\Routing\\child_routes.html#定义子路由","body":"&#x5F53;&#x67D0;&#x4E9B;&#x8DEF;&#x7531;&#x53EA;&#x80FD;&#x5728;&#x5176;&#x4ED6;&#x8DEF;&#x7531;&#x4E2D;&#x8BBF;&#x95EE;&#x548C;&#x67E5;&#x770B;&#x65F6;&#xFF0C;&#x53EF;&#x80FD;&#x9002;&#x5408;&#x5C06;&#x5176;&#x521B;&#x5EFA;&#x4E3A;&#x5B50;&#x8DEF;&#x7531;&#x3002; &#x4F8B;&#x5982;&#xFF1A;&#x4EA7;&#x54C1;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x9875;&#x9762;&#x53EF;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x6807;&#x7B7E;&#x5F0F;&#x5BFC;&#x822A;&#x90E8;&#x5206;&#xFF0C;&#x9ED8;&#x8BA4;&#x663E;&#x793A;&#x4EA7;&#x54C1;&#x6982;&#x8FF0;&#x3002; &#x5F53;&#x7528;&#x6237;&#x5355;&#x51FB;&#x201C;&#x6280;&#x672F;&#x89C4;&#x683C;&#x201D;&#x9009;&#x9879;&#x5361;&#x65F6;&#xFF0C;&#x8BE5;&#x90E8;&#x5206;&#x5C06;&#x663E;&#x793A;&#x89C4;&#x683C;&#x3002; &#x5982;&#x679C;&#x7528;&#x6237;&#x70B9;&#x51FB;ID&#x4E3A;3&#x7684;&#x4EA7;&#x54C1;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x663E;&#x793A;&#x4EA7;&#x54C1;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x9875;&#x9762;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x6982;&#x8FF0;&#xFF1A; localhost:3000/product-details/3/overview &#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB; &#x201C;Technical Specs&#x201D;: localhost:3000/product-details/3/specs overview &#x548C; specs &#x4F5C;&#x4E3A; product-details/:id &#x7684;&#x5B50;&#x8DEF;&#x7531;&#x3002; &#x5B83;&#x4EEC;&#x53EA;&#x80FD;&#x5728;&#x4EA7;&#x54C1;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x4E2D;&#x627E;&#x5230;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x5B50; Routes &#x770B;&#x8D77;&#x6765;&#x50CF;&#x8FD9;&#x6837;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 export const routes: Routes = [ { path: &apos;&apos; , redirectTo: &apos;product-list&apos; , pathMatch: &apos;full&apos; }, { path: &apos;product-list&apos; , component: ProductList }, { path: &apos;product-details/:id&apos; , component: ProductDetails, children: [ { path: &apos;&apos; , redirectTo: &apos;overview&apos; , pathMatch: &apos;full&apos; }, { path: &apos;overview&apos; , component: Overview }, { path: &apos;specs&apos; , component: Specs } ] } ]; &#x8FD9;&#x4E9B;&#x5B50;&#x8DEF;&#x7531;&#x7684;&#x7EC4;&#x4EF6;&#x5C06;&#x663E;&#x793A;&#x5728;&#x54EA;&#x91CC;&#xFF1F; &#x5C31;&#x50CF;&#x6211;&#x4EEC;&#x5BF9;&#x4E8E;&#x6839;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;&#x6709;&#x4E00;&#x4E2A; router-outlet / router-outlet &#xFF0C;&#x6211;&#x4EEC;&#x5728; ProductDetails &#x7EC4;&#x4EF6;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x8DEF;&#x7531;&#x51FA;&#x53E3;&#x3002; &#x5BF9;&#x5E94;&#x4E8E; product-details &#x7684;&#x5B50;&#x8DEF;&#x7531;&#x7684;&#x7EC4;&#x4EF6;&#x5C06;&#x88AB;&#x653E;&#x7F6E;&#x5728; ProductDetails &#x4E2D;&#x7684;&#x8DEF;&#x7531;&#x51FA;&#x53E3;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos; ; import { ActivatedRoute } from &apos;@angular/router&apos; ; @Component ({ selector: &apos;product-details&apos; , template: ` pProduct Details: {{id}}/p !-- Product information -- nav a [routerLink]=[&apos;overview&apos;]Overview/a a [routerLink]=[&apos;specs&apos;]Technical Specs/a /nav router-outlet/router-outlet !-- Overview &amp; Specs components get added here by the router -- ` }) export default class ProductDetails implements OnInit, OnDestroy { id: number ; constructor ( private route: ActivatedRoute ) {} ngOnInit() { this .sub = this .route.params.subscribe( params = { this .id = +params[ &apos;id&apos; ]; // (+) converts string &apos;id&apos; to a number }); } ngOnDestroy() { this .sub.unsubscribe(); } } &#x6216;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06; overview &#x8DEF;&#x7531;URL&#x7B80;&#x5355;&#x5730;&#x6307;&#x5B9A;&#x4E3A;&#xFF1A; localhost:3000/product-details/ 1 2 3 4 5 6 7 8 9 10 export const routes: Routes = [ { path: &apos;&apos; , redirectTo: &apos;product-list&apos; , pathMatch: &apos;full&apos; }, { path: &apos;product-list&apos; , component: ProductList }, { path: &apos;product-details/:id&apos; , component: ProductDetails, children: [ { path: &apos;&apos; , component: Overview }, { path: &apos;specs&apos; , component: Specs } ] } ]; &#x7531;&#x4E8E; product-details &#x7684; Overview &#x5B50;&#x8DEF;&#x7531;&#x5177;&#x6709;&#x7A7A;&#x8DEF;&#x5F84;&#xFF0C;&#x56E0;&#x6B64;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x5C06;&#x52A0;&#x8F7D;&#x5B83;&#x3002; specs &#x5B50;&#x8DEF;&#x7531;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x3002; View Example with child routes View Example with route params &amp; child routes &#x67E5;&#x770B;&#x4EE5;&#x5168;&#x5C4F;&#x6A21;&#x5F0F;&#x8FD0;&#x884C;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x4EE5;&#x67E5;&#x770B;URL&#x53D8;&#x5316;&#x3002;"},"Routing/child_routes.html#访问父路由的参数":{"title":"&#x8BBF;&#x95EE;&#x7236;&#x8DEF;&#x7531;&#x7684;&#x53C2;&#x6570;","path":"\\Routing\\child_routes.html#访问父路由的参数","body":"&#x5728;&#x4E0A;&#x8FF0;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x5047;&#x8BBE; product-details &#x7684;&#x5B50;&#x8DEF;&#x7531;&#x9700;&#x8981;&#x4EA7;&#x54C1;&#x7684;ID&#x4EE5;&#x83B7;&#x53D6;&#x89C4;&#x8303;&#x6216;&#x6982;&#x8FF0;&#x4FE1;&#x606F;&#x3002;&#x5B50;&#x8DEF;&#x7531;&#x7EC4;&#x4EF6;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x7236;&#x8DEF;&#x7531;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 export default class Overview { parentRouteId: number ; private sub: any ; constructor ( private router: Router, private route: ActivatedRoute ) {} ngOnInit() { // Get parent ActivatedRoute of this route. this .sub = this .router.routerState.parent( this .route) .params.subscribe( params = { this .parentRouteId = +params[ id ]; }); } ngOnDestroy() { this .sub.unsubscribe(); } } View Example child routes accessing parent&#x2019;s route parameters &#x67E5;&#x770B;&#x4EE5;&#x5168;&#x5C4F;&#x6A21;&#x5F0F;&#x8FD0;&#x884C;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x4EE5;&#x67E5;&#x770B;URL&#x53D8;&#x5316;&#x3002;"},"Routing/child_routes.html#链接":{"title":"&#x94FE;&#x63A5;","path":"\\Routing\\child_routes.html#链接","body":"&#x8DEF;&#x7531;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; / &#xFF0C;&#x6216; ../ ;&#x8FD9;&#x544A;&#x8BC9;Angular 2&#x5728;&#x8DEF;&#x7531;&#x6811;&#x94FE;&#x63A5;&#x5230;&#x54EA;&#x91CC;&#x3002; Prefix Looks in / Root of the application none Current component children routes ../ Current component parent routes &#x4F8B;&#x5982;&#xFF1A; 1 2 3  a [ routerLink ]= [&apos;route-one&apos;]  Route One / a   a [ routerLink ]= [&apos;../route-two&apos;]  Route Two / a   a [ routerLink ]= [&apos;/route-three&apos;]  Route Three / a  &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x8DEF;&#x7531;&#x4E00;&#x94FE;&#x63A5;&#x5230;&#x5F53;&#x524D;&#x8DEF;&#x7531;&#x7684;&#x5B50;&#x8282;&#x70B9;&#x3002; &#x8DEF;&#x7531;&#x4E8C;&#x94FE;&#x63A5;&#x5230;&#x5F53;&#x524D;&#x8DEF;&#x7531;&#x7684;&#x5144;&#x5F1F;&#x3002; &#x8DEF;&#x7531;&#x4E09;&#x94FE;&#x63A5;&#x5230;&#x6839;&#x7EC4;&#x4EF6;&#x7684;&#x5B50;&#x8282;&#x70B9;&#xFF08;&#x5982;&#x679C;&#x5F53;&#x524D;&#x8DEF;&#x7531;&#x662F;&#x6839;&#x7EC4;&#x4EF6;&#xFF0C;&#x5219;&#x4E0E;&#x8DEF;&#x7531;&#x4E00;&#x7B49;&#x6548;&#xFF09;&#x3002; View Example with linking throughout route tree &#x67E5;&#x770B;&#x4EE5;&#x5168;&#x5C4F;&#x6A21;&#x5F0F;&#x8FD0;&#x884C;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x4EE5;&#x67E5;&#x770B;URL&#x53D8;&#x5316;&#x3002;"},"Routing/config.html":{"title":"","path":"\\Routing\\config.html","body":"配置路由 Base 标签 Base 标记必须在index.html的 标记中设置： 1 base href=/ 在演示中，我们使用脚本标记来设置 base 标记。在实际应用中，必须如上设置。 路由定义对象 Routes 类型是定义应用程序路由的路由数组。 这是我们可以设置预期的路径，我们想要使用的组件，我们希望我们的应用程序来理解它们。 每个路由可以有不同的属性; 一些常见的属性是： path - 应用程序在特定路由上时在浏览器中显示的URL component - 当应用程序在特定路由上时要呈现的组件 redirectTo - 如果需要重定向路由; 每个路由可以具有在路由中定义的组件或重定向属性（在本章后面讨论） pathMatch - 默认为’prefix’的可选属性。 确定是匹配完整的网址还是仅匹配开头。 当定义一个具有空路径字符串的路径设置pathMatch为’full’时，否则它将匹配所有路径。 children - 表示此路由的子路由的路由定义数组（本章后面将介绍）。 要使用路由，请创建 路由配置数组 。 下面是 Routes 数组定义的示例： 1 2 3 4 const routes: Routes = [  path: 'component-one' , component: ComponentOne ,  path: 'component-two' , component: ComponentTwo  ]; See Routes definition RouterModule RouterModule.forRoot 将 Routes 数组作为参数，并返回配置的路由器模块。 此路由器模块必须在应用程序模块的导入列表中指定。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ... import  RouterModule, Routes  from '@angular/router' ; const routes: Routes = [  path: 'component-one' , component: ComponentOne ,  path: 'component-two' , component: ComponentTwo  ]; export const routing = RouterModule.forRoot(routes); @NgModule ( imports: [ BrowserModule, routing ], declarations: [ AppComponent, ComponentOne, ComponentTwo ], bootstrap: [ AppComponent ] ) export class AppModule   platformBrowserDynamic().bootstrapModule(AppModule);"},"Routing/config.html#配置路由":{"title":"&#x914D;&#x7F6E;&#x8DEF;&#x7531;","path":"\\Routing\\config.html#配置路由","body":""},"Routing/config.html#Base-标签":{"title":"Base &#x6807;&#x7B7E;","path":"\\Routing\\config.html#Base-标签","body":"Base &#x6807;&#x8BB0;&#x5FC5;&#x987B;&#x5728;index.html&#x7684; &#x6807;&#x8BB0;&#x4E2D;&#x8BBE;&#x7F6E;&#xFF1A; 1 base href=/ &#x5728;&#x6F14;&#x793A;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x811A;&#x672C;&#x6807;&#x8BB0;&#x6765;&#x8BBE;&#x7F6E; base &#x6807;&#x8BB0;&#x3002;&#x5728;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x5FC5;&#x987B;&#x5982;&#x4E0A;&#x8BBE;&#x7F6E;&#x3002;"},"Routing/config.html#路由定义对象":{"title":"&#x8DEF;&#x7531;&#x5B9A;&#x4E49;&#x5BF9;&#x8C61;","path":"\\Routing\\config.html#路由定义对象","body":"Routes &#x7C7B;&#x578B;&#x662F;&#x5B9A;&#x4E49;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8DEF;&#x7531;&#x7684;&#x8DEF;&#x7531;&#x6570;&#x7EC4;&#x3002; &#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x9884;&#x671F;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6765;&#x7406;&#x89E3;&#x5B83;&#x4EEC;&#x3002; &#x6BCF;&#x4E2A;&#x8DEF;&#x7531;&#x53EF;&#x4EE5;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5C5E;&#x6027;; &#x4E00;&#x4E9B;&#x5E38;&#x89C1;&#x7684;&#x5C5E;&#x6027;&#x662F;&#xFF1A; path - &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x7279;&#x5B9A;&#x8DEF;&#x7531;&#x4E0A;&#x65F6;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x663E;&#x793A;&#x7684;URL component - &#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x7279;&#x5B9A;&#x8DEF;&#x7531;&#x4E0A;&#x65F6;&#x8981;&#x5448;&#x73B0;&#x7684;&#x7EC4;&#x4EF6; redirectTo - &#x5982;&#x679C;&#x9700;&#x8981;&#x91CD;&#x5B9A;&#x5411;&#x8DEF;&#x7531;; &#x6BCF;&#x4E2A;&#x8DEF;&#x7531;&#x53EF;&#x4EE5;&#x5177;&#x6709;&#x5728;&#x8DEF;&#x7531;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x7EC4;&#x4EF6;&#x6216;&#x91CD;&#x5B9A;&#x5411;&#x5C5E;&#x6027;&#xFF08;&#x5728;&#x672C;&#x7AE0;&#x540E;&#x9762;&#x8BA8;&#x8BBA;&#xFF09; pathMatch - &#x9ED8;&#x8BA4;&#x4E3A;&#x2019;prefix&#x2019;&#x7684;&#x53EF;&#x9009;&#x5C5E;&#x6027;&#x3002; &#x786E;&#x5B9A;&#x662F;&#x5339;&#x914D;&#x5B8C;&#x6574;&#x7684;&#x7F51;&#x5740;&#x8FD8;&#x662F;&#x4EC5;&#x5339;&#x914D;&#x5F00;&#x5934;&#x3002; &#x5F53;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x7A7A;&#x8DEF;&#x5F84;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x8DEF;&#x5F84;&#x8BBE;&#x7F6E;pathMatch&#x4E3A;&#x2019;full&#x2019;&#x65F6;&#xFF0C;&#x5426;&#x5219;&#x5B83;&#x5C06;&#x5339;&#x914D;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x3002; children - &#x8868;&#x793A;&#x6B64;&#x8DEF;&#x7531;&#x7684;&#x5B50;&#x8DEF;&#x7531;&#x7684;&#x8DEF;&#x7531;&#x5B9A;&#x4E49;&#x6570;&#x7EC4;&#xFF08;&#x672C;&#x7AE0;&#x540E;&#x9762;&#x5C06;&#x4ECB;&#x7ECD;&#xFF09;&#x3002; &#x8981;&#x4F7F;&#x7528;&#x8DEF;&#x7531;&#xFF0C;&#x8BF7;&#x521B;&#x5EFA; &#x8DEF;&#x7531;&#x914D;&#x7F6E;&#x6570;&#x7EC4; &#x3002; &#x4E0B;&#x9762;&#x662F; Routes &#x6570;&#x7EC4;&#x5B9A;&#x4E49;&#x7684;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 const routes: Routes = [ { path: &apos;component-one&apos; , component: ComponentOne }, { path: &apos;component-two&apos; , component: ComponentTwo } ]; See Routes definition"},"Routing/config.html#RouterModule":{"title":"RouterModule","path":"\\Routing\\config.html#RouterModule","body":"RouterModule.forRoot &#x5C06; Routes &#x6570;&#x7EC4;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x914D;&#x7F6E;&#x7684;&#x8DEF;&#x7531;&#x5668;&#x6A21;&#x5757;&#x3002; &#x6B64;&#x8DEF;&#x7531;&#x5668;&#x6A21;&#x5757;&#x5FC5;&#x987B;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6A21;&#x5757;&#x7684;&#x5BFC;&#x5165;&#x5217;&#x8868;&#x4E2D;&#x6307;&#x5B9A;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ... import { RouterModule, Routes } from &apos;@angular/router&apos; ; const routes: Routes = [ { path: &apos;component-one&apos; , component: ComponentOne }, { path: &apos;component-two&apos; , component: ComponentTwo } ]; export const routing = RouterModule.forRoot(routes); @NgModule ({ imports: [ BrowserModule, routing ], declarations: [ AppComponent, ComponentOne, ComponentTwo ], bootstrap: [ AppComponent ] }) export class AppModule { } platformBrowserDynamic().bootstrapModule(AppModule);"},"Routing/query_params.html":{"title":"","path":"\\Routing\\query_params.html","body":"传递可选参数 查询参数允许您将可选参数传递到路由，例如分页信息。 例如，在具有分页列表的路由上，网址可能如下所示，表示我们已加载第二个网页： localhost:3000/product-list?page=2 查询参数和路由参数之间的关键区别在于 路由参数 对于确定路由是必要的，而查询参数是可选的。 传递查询参数 使用 [queryParams] 指令和 [routerLink] 来传递查询参数。例如： 1  a [ routerLink ]= \"['product-list']\" [ queryParams ]= \" page: 99 \"  Go to Page 99 / a  或者，我们可以使用 Router 服务通过JS跳转： 1 2 3 goToPage(pageNum)  this .router.navigate([ '/product-list' ],  queryParams:  page: pageNum  );  读取查询参数 类似于读取 路由参数 ， Router 服务返回一个Observable，我们可以订阅读取查询参数： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import  Component  from '@angular/core' ; import  ActivatedRoute, Router  from '@angular/router' ; @Component ( selector: 'product-list' , template: `!-- Show product list --` ) export default class ProductList  constructor ( private route: ActivatedRoute, private router: Router )  ngOnInit()  this .sub = this .route .queryParams .subscribe( params =  // Defaults to 0 if no query param provided. this .page = +params[ 'page' ] || 0 ; );  ngOnDestroy()  this .sub.unsubscribe();  nextPage()  this .router.navigate([ 'product-list' ],  queryParams:  page: this .page + 1  );   View Example See Official Documentation on Query Parameters"},"Routing/query_params.html#传递可选参数":{"title":"&#x4F20;&#x9012;&#x53EF;&#x9009;&#x53C2;&#x6570;","path":"\\Routing\\query_params.html#传递可选参数","body":"&#x67E5;&#x8BE2;&#x53C2;&#x6570;&#x5141;&#x8BB8;&#x60A8;&#x5C06;&#x53EF;&#x9009;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x5230;&#x8DEF;&#x7531;&#xFF0C;&#x4F8B;&#x5982;&#x5206;&#x9875;&#x4FE1;&#x606F;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x5177;&#x6709;&#x5206;&#x9875;&#x5217;&#x8868;&#x7684;&#x8DEF;&#x7531;&#x4E0A;&#xFF0C;&#x7F51;&#x5740;&#x53EF;&#x80FD;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF0C;&#x8868;&#x793A;&#x6211;&#x4EEC;&#x5DF2;&#x52A0;&#x8F7D;&#x7B2C;&#x4E8C;&#x4E2A;&#x7F51;&#x9875;&#xFF1A; localhost:3000/product-list?page=2 &#x67E5;&#x8BE2;&#x53C2;&#x6570;&#x548C;&#x8DEF;&#x7531;&#x53C2;&#x6570;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x952E;&#x533A;&#x522B;&#x5728;&#x4E8E; &#x8DEF;&#x7531;&#x53C2;&#x6570; &#x5BF9;&#x4E8E;&#x786E;&#x5B9A;&#x8DEF;&#x7531;&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x800C;&#x67E5;&#x8BE2;&#x53C2;&#x6570;&#x662F;&#x53EF;&#x9009;&#x7684;&#x3002;"},"Routing/query_params.html#传递查询参数":{"title":"&#x4F20;&#x9012;&#x67E5;&#x8BE2;&#x53C2;&#x6570;","path":"\\Routing\\query_params.html#传递查询参数","body":"&#x4F7F;&#x7528; [queryParams] &#x6307;&#x4EE4;&#x548C; [routerLink] &#x6765;&#x4F20;&#x9012;&#x67E5;&#x8BE2;&#x53C2;&#x6570;&#x3002;&#x4F8B;&#x5982;&#xFF1A; 1  a [ routerLink ]= [&apos;product-list&apos;] [ queryParams ]= { page: 99 }  Go to Page 99 / a  &#x6216;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Router &#x670D;&#x52A1;&#x901A;&#x8FC7;JS&#x8DF3;&#x8F6C;&#xFF1A; 1 2 3 goToPage(pageNum) { this .router.navigate([ &apos;/product-list&apos; ], { queryParams: { page: pageNum } }); }"},"Routing/query_params.html#读取查询参数":{"title":"&#x8BFB;&#x53D6;&#x67E5;&#x8BE2;&#x53C2;&#x6570;","path":"\\Routing\\query_params.html#读取查询参数","body":"&#x7C7B;&#x4F3C;&#x4E8E;&#x8BFB;&#x53D6; &#x8DEF;&#x7531;&#x53C2;&#x6570; &#xFF0C; Router &#x670D;&#x52A1;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;Observable&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA2;&#x9605;&#x8BFB;&#x53D6;&#x67E5;&#x8BE2;&#x53C2;&#x6570;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import { Component } from &apos;@angular/core&apos; ; import { ActivatedRoute, Router } from &apos;@angular/router&apos; ; @Component ({ selector: &apos;product-list&apos; , template: `!-- Show product list --` }) export default class ProductList { constructor ( private route: ActivatedRoute, private router: Router ) {} ngOnInit() { this .sub = this .route .queryParams .subscribe( params = { // Defaults to 0 if no query param provided. this .page = +params[ &apos;page&apos; ] || 0 ; }); } ngOnDestroy() { this .sub.unsubscribe(); } nextPage() { this .router.navigate([ &apos;product-list&apos; ], { queryParams: { page: this .page + 1 } }); } } View Example See Official Documentation on Query Parameters"},"Routing/redirects.html":{"title":"","path":"\\Routing\\redirects.html","body":"将路由器重定向到另一条路由 当应用程序启动时，默认情况下导航到空路由。默认情况下，我们可以配置路由重定向到命名路由： 1 2 3 4 5 export const routes: Routes = [  path: '' , redirectTo: 'component-one' , pathMatch: 'full' ,  path: 'component-one' , component: ComponentOne ,  path: 'component-two' , component: ComponentTwo  ]; 这告诉路由器在匹配空路径（’’）时重定向到 component-one 。 当启动应用程序时，它将自动导航到 component-one 的路由。"},"Routing/redirects.html#将路由器重定向到另一条路由":{"title":"&#x5C06;&#x8DEF;&#x7531;&#x5668;&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x53E6;&#x4E00;&#x6761;&#x8DEF;&#x7531;","path":"\\Routing\\redirects.html#将路由器重定向到另一条路由","body":"&#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x5BFC;&#x822A;&#x5230;&#x7A7A;&#x8DEF;&#x7531;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x8DEF;&#x7531;&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x547D;&#x540D;&#x8DEF;&#x7531;&#xFF1A; 1 2 3 4 5 export const routes: Routes = [ { path: &apos;&apos; , redirectTo: &apos;component-one&apos; , pathMatch: &apos;full&apos; }, { path: &apos;component-one&apos; , component: ComponentOne }, { path: &apos;component-two&apos; , component: ComponentTwo } ]; &#x8FD9;&#x544A;&#x8BC9;&#x8DEF;&#x7531;&#x5668;&#x5728;&#x5339;&#x914D;&#x7A7A;&#x8DEF;&#x5F84;&#xFF08;&#x2019;&#x2019;&#xFF09;&#x65F6;&#x91CD;&#x5B9A;&#x5411;&#x5230; component-one &#x3002; &#x5F53;&#x542F;&#x52A8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x81EA;&#x52A8;&#x5BFC;&#x822A;&#x5230; component-one &#x7684;&#x8DEF;&#x7531;&#x3002;"},"Routing/route_guards.html":{"title":"","path":"\\Routing\\route_guards.html","body":"路由拦截 要控制用户是否可以导航到或离开指定路由，请使用路由哨兵。 例如，我们可能希望一些路线只有在用户登录或接受条款和条件后才可访问。 我们可以使用路由哨兵来检查这些条件并控制对路由的访问。 路由哨兵还可以控制用户是否可以离开某个路由。 例如，假设用户已将信息键入页面上的表单，但尚未提交表单。 如果这时离开页面，他们将丢失信息。 如果用户尝试离开路由而不是提交或保存信息，我们可以提示用户。 Angular 提供了五种路由拦截哨兵： CanActive 激活拦截 CanActiveChild 控制是否允许激活子路由 CanDeactivate 反激活拦截 Resolve 数据预加载拦截 CanLoad 模块预加载拦截 在路由上注册路由哨兵 为了使用路由哨兵，我们必须在我们希望它们运行的特定路由上注册它们。 例如，假设我们有一个 accounts 路由，只有登录的用户可以访问。 此页面还有表单，我们希望确保用户在离开帐户页面之前提交了未保存的更改。 在我们的路由配置中，我们可以添加我们的哨兵到该路由： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import  Routes, RouterModule  from '@angular/router' ; import  AccountPage  from './account-page' ; import  LoginRouteGuard  from './login-route-guard' ; import  SaveFormsGuard  from './save-forms-guard' ; const routes: Routes = [  path: 'home' , component: HomePage ,  path: 'accounts' , component: AccountPage, canActivate: [LoginRouteGuard], canDeactivate: [SaveFormsGuard]  ]; export const appRoutingProviders: any [] = []; export const routing = RouterModule.forRoot(routes); 现在 LoginRouteGuard 将在 accounts 路由激活时检查， SaveFormsGuard 将在离开该路由时被检查。 实现CanActivate 让我们看一个例子激活哨兵检查用户是否登录： 1 2 3 4 5 6 7 8 9 10 11 12 13 import  CanActivate  from '@angular/router' ; import  Injectable  from '@angular/core' ; import  LoginService  from './login-service' ; @Injectable () export class LoginRouteGuard implements CanActivate  constructor ( private loginService: LoginService )  canActivate()  return this .loginService.isLoggedIn();   这个类通过实现 canActivate 函数实现了 CanActivate 功能。 当 canActivate 返回true时，用户可以激活路由。 当 canActivate 返回false时，用户无法访问路由。 在上面的例子中，我们允许用户登录时的访问。 canActivate 还可以用于通知用户他们无法访问应用程序的该部分，或将它们重定向到登录页面。 See Official Definition for CanActivate 实现 CanDeactivate CanDeactivate 的工作方式与 CanActivate 类似，但有一些重要的区别。 canDeactivate 函数将被禁用的组件作为参数传递给函数： 1 2 3 4 export interface CanDeactivateT  canDeactivate(component: T, route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable boolean | Promise  boolean | boolean ;  我们可以使用该组件来确定用户是否可以停用。 1 2 3 4 5 6 7 8 9 10 11 12 import  CanDeactivate  from '@angular/router' ; import  Injectable  from '@angular/core' ; import  AccountPage  from './account-page' ; @Injectable () export class SaveFormsGuard implements CanDeactivateAccountPage  canDeactivate(component: AccountPage)  return component.areFormsSaved();   See Official Definition for CanDeactivate 异步路由哨兵 canActivate 和 canDeactivate 函数可以返回 boolean 类型的值，也可以返回 Observable boolean （一个可解析为boolean的Observable）的值。 如果你需要做一个异步请求（如服务器请求）来确定用户是否可以导航到或离开路由，你可以简单地返回一个 Observable boolean 。 路由将等待，直到它被解决并且使用该值来决定是否可以访问。 例如，当用户导航离开时，您可以有一个对话服务请求用户确认导航。 对话服务返回一个 Observable boolean ，如果用户单击“确定”，该值将解析为true，如果用户单击“取消”，则该值将为false。 1 2 3 canDeactivate()  return dialogService.confirm( 'Discard unsaved changes?' );  View Example 查看官方文档"},"Routing/route_guards.html#路由拦截":{"title":"&#x8DEF;&#x7531;&#x62E6;&#x622A;","path":"\\Routing\\route_guards.html#路由拦截","body":"&#x8981;&#x63A7;&#x5236;&#x7528;&#x6237;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x5BFC;&#x822A;&#x5230;&#x6216;&#x79BB;&#x5F00;&#x6307;&#x5B9A;&#x8DEF;&#x7531;&#xFF0C;&#x8BF7;&#x4F7F;&#x7528;&#x8DEF;&#x7531;&#x54E8;&#x5175;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x5E0C;&#x671B;&#x4E00;&#x4E9B;&#x8DEF;&#x7EBF;&#x53EA;&#x6709;&#x5728;&#x7528;&#x6237;&#x767B;&#x5F55;&#x6216;&#x63A5;&#x53D7;&#x6761;&#x6B3E;&#x548C;&#x6761;&#x4EF6;&#x540E;&#x624D;&#x53EF;&#x8BBF;&#x95EE;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8DEF;&#x7531;&#x54E8;&#x5175;&#x6765;&#x68C0;&#x67E5;&#x8FD9;&#x4E9B;&#x6761;&#x4EF6;&#x5E76;&#x63A7;&#x5236;&#x5BF9;&#x8DEF;&#x7531;&#x7684;&#x8BBF;&#x95EE;&#x3002; &#x8DEF;&#x7531;&#x54E8;&#x5175;&#x8FD8;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x7528;&#x6237;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x79BB;&#x5F00;&#x67D0;&#x4E2A;&#x8DEF;&#x7531;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5047;&#x8BBE;&#x7528;&#x6237;&#x5DF2;&#x5C06;&#x4FE1;&#x606F;&#x952E;&#x5165;&#x9875;&#x9762;&#x4E0A;&#x7684;&#x8868;&#x5355;&#xFF0C;&#x4F46;&#x5C1A;&#x672A;&#x63D0;&#x4EA4;&#x8868;&#x5355;&#x3002; &#x5982;&#x679C;&#x8FD9;&#x65F6;&#x79BB;&#x5F00;&#x9875;&#x9762;&#xFF0C;&#x4ED6;&#x4EEC;&#x5C06;&#x4E22;&#x5931;&#x4FE1;&#x606F;&#x3002; &#x5982;&#x679C;&#x7528;&#x6237;&#x5C1D;&#x8BD5;&#x79BB;&#x5F00;&#x8DEF;&#x7531;&#x800C;&#x4E0D;&#x662F;&#x63D0;&#x4EA4;&#x6216;&#x4FDD;&#x5B58;&#x4FE1;&#x606F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x63D0;&#x793A;&#x7528;&#x6237;&#x3002; Angular &#x63D0;&#x4F9B;&#x4E86;&#x4E94;&#x79CD;&#x8DEF;&#x7531;&#x62E6;&#x622A;&#x54E8;&#x5175;&#xFF1A; CanActive &#x6FC0;&#x6D3B;&#x62E6;&#x622A; CanActiveChild &#x63A7;&#x5236;&#x662F;&#x5426;&#x5141;&#x8BB8;&#x6FC0;&#x6D3B;&#x5B50;&#x8DEF;&#x7531; CanDeactivate &#x53CD;&#x6FC0;&#x6D3B;&#x62E6;&#x622A; Resolve &#x6570;&#x636E;&#x9884;&#x52A0;&#x8F7D;&#x62E6;&#x622A; CanLoad &#x6A21;&#x5757;&#x9884;&#x52A0;&#x8F7D;&#x62E6;&#x622A;"},"Routing/route_guards.html#在路由上注册路由哨兵":{"title":"&#x5728;&#x8DEF;&#x7531;&#x4E0A;&#x6CE8;&#x518C;&#x8DEF;&#x7531;&#x54E8;&#x5175;","path":"\\Routing\\route_guards.html#在路由上注册路由哨兵","body":"&#x4E3A;&#x4E86;&#x4F7F;&#x7528;&#x8DEF;&#x7531;&#x54E8;&#x5175;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5728;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5B83;&#x4EEC;&#x8FD0;&#x884C;&#x7684;&#x7279;&#x5B9A;&#x8DEF;&#x7531;&#x4E0A;&#x6CE8;&#x518C;&#x5B83;&#x4EEC;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A; accounts &#x8DEF;&#x7531;&#xFF0C;&#x53EA;&#x6709;&#x767B;&#x5F55;&#x7684;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x3002; &#x6B64;&#x9875;&#x9762;&#x8FD8;&#x6709;&#x8868;&#x5355;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x786E;&#x4FDD;&#x7528;&#x6237;&#x5728;&#x79BB;&#x5F00;&#x5E10;&#x6237;&#x9875;&#x9762;&#x4E4B;&#x524D;&#x63D0;&#x4EA4;&#x4E86;&#x672A;&#x4FDD;&#x5B58;&#x7684;&#x66F4;&#x6539;&#x3002; &#x5728;&#x6211;&#x4EEC;&#x7684;&#x8DEF;&#x7531;&#x914D;&#x7F6E;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x6211;&#x4EEC;&#x7684;&#x54E8;&#x5175;&#x5230;&#x8BE5;&#x8DEF;&#x7531;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import { Routes, RouterModule } from &apos;@angular/router&apos; ; import { AccountPage } from &apos;./account-page&apos; ; import { LoginRouteGuard } from &apos;./login-route-guard&apos; ; import { SaveFormsGuard } from &apos;./save-forms-guard&apos; ; const routes: Routes = [ { path: &apos;home&apos; , component: HomePage }, { path: &apos;accounts&apos; , component: AccountPage, canActivate: [LoginRouteGuard], canDeactivate: [SaveFormsGuard] } ]; export const appRoutingProviders: any [] = []; export const routing = RouterModule.forRoot(routes); &#x73B0;&#x5728; LoginRouteGuard &#x5C06;&#x5728; accounts &#x8DEF;&#x7531;&#x6FC0;&#x6D3B;&#x65F6;&#x68C0;&#x67E5;&#xFF0C; SaveFormsGuard &#x5C06;&#x5728;&#x79BB;&#x5F00;&#x8BE5;&#x8DEF;&#x7531;&#x65F6;&#x88AB;&#x68C0;&#x67E5;&#x3002;"},"Routing/route_guards.html#实现CanActivate":{"title":"&#x5B9E;&#x73B0;CanActivate","path":"\\Routing\\route_guards.html#实现CanActivate","body":"&#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x6FC0;&#x6D3B;&#x54E8;&#x5175;&#x68C0;&#x67E5;&#x7528;&#x6237;&#x662F;&#x5426;&#x767B;&#x5F55;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 import { CanActivate } from &apos;@angular/router&apos; ; import { Injectable } from &apos;@angular/core&apos; ; import { LoginService } from &apos;./login-service&apos; ; @Injectable () export class LoginRouteGuard implements CanActivate { constructor ( private loginService: LoginService ) {} canActivate() { return this .loginService.isLoggedIn(); } } &#x8FD9;&#x4E2A;&#x7C7B;&#x901A;&#x8FC7;&#x5B9E;&#x73B0; canActivate &#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x4E86; CanActivate &#x529F;&#x80FD;&#x3002; &#x5F53; canActivate &#x8FD4;&#x56DE;true&#x65F6;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x6FC0;&#x6D3B;&#x8DEF;&#x7531;&#x3002; &#x5F53; canActivate &#x8FD4;&#x56DE;false&#x65F6;&#xFF0C;&#x7528;&#x6237;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#x8DEF;&#x7531;&#x3002; &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x767B;&#x5F55;&#x65F6;&#x7684;&#x8BBF;&#x95EE;&#x3002; canActivate &#x8FD8;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x901A;&#x77E5;&#x7528;&#x6237;&#x4ED6;&#x4EEC;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x8BE5;&#x90E8;&#x5206;&#xFF0C;&#x6216;&#x5C06;&#x5B83;&#x4EEC;&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x767B;&#x5F55;&#x9875;&#x9762;&#x3002; See Official Definition for CanActivate"},"Routing/route_guards.html#实现-CanDeactivate":{"title":"&#x5B9E;&#x73B0; CanDeactivate","path":"\\Routing\\route_guards.html#实现-CanDeactivate","body":"CanDeactivate &#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x4E0E; CanActivate &#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x6709;&#x4E00;&#x4E9B;&#x91CD;&#x8981;&#x7684;&#x533A;&#x522B;&#x3002; canDeactivate &#x51FD;&#x6570;&#x5C06;&#x88AB;&#x7981;&#x7528;&#x7684;&#x7EC4;&#x4EF6;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x7ED9;&#x51FD;&#x6570;&#xFF1A; 1 2 3 4 export interface CanDeactivateT { canDeactivate(component: T, route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable boolean | Promise  boolean | boolean ; } &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8BE5;&#x7EC4;&#x4EF6;&#x6765;&#x786E;&#x5B9A;&#x7528;&#x6237;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x505C;&#x7528;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 import { CanDeactivate } from &apos;@angular/router&apos; ; import { Injectable } from &apos;@angular/core&apos; ; import { AccountPage } from &apos;./account-page&apos; ; @Injectable () export class SaveFormsGuard implements CanDeactivateAccountPage { canDeactivate(component: AccountPage) { return component.areFormsSaved(); } } See Official Definition for CanDeactivate"},"Routing/route_guards.html#异步路由哨兵":{"title":"&#x5F02;&#x6B65;&#x8DEF;&#x7531;&#x54E8;&#x5175;","path":"\\Routing\\route_guards.html#异步路由哨兵","body":"canActivate &#x548C; canDeactivate &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; boolean &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; Observable boolean &#xFF08;&#x4E00;&#x4E2A;&#x53EF;&#x89E3;&#x6790;&#x4E3A;boolean&#x7684;Observable&#xFF09;&#x7684;&#x503C;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x505A;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x8BF7;&#x6C42;&#xFF08;&#x5982;&#x670D;&#x52A1;&#x5668;&#x8BF7;&#x6C42;&#xFF09;&#x6765;&#x786E;&#x5B9A;&#x7528;&#x6237;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x5BFC;&#x822A;&#x5230;&#x6216;&#x79BB;&#x5F00;&#x8DEF;&#x7531;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5730;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; Observable boolean &#x3002; &#x8DEF;&#x7531;&#x5C06;&#x7B49;&#x5F85;&#xFF0C;&#x76F4;&#x5230;&#x5B83;&#x88AB;&#x89E3;&#x51B3;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x8BE5;&#x503C;&#x6765;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x7528;&#x6237;&#x5BFC;&#x822A;&#x79BB;&#x5F00;&#x65F6;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x6709;&#x4E00;&#x4E2A;&#x5BF9;&#x8BDD;&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x7528;&#x6237;&#x786E;&#x8BA4;&#x5BFC;&#x822A;&#x3002; &#x5BF9;&#x8BDD;&#x670D;&#x52A1;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; Observable boolean &#xFF0C;&#x5982;&#x679C;&#x7528;&#x6237;&#x5355;&#x51FB;&#x201C;&#x786E;&#x5B9A;&#x201D;&#xFF0C;&#x8BE5;&#x503C;&#x5C06;&#x89E3;&#x6790;&#x4E3A;true&#xFF0C;&#x5982;&#x679C;&#x7528;&#x6237;&#x5355;&#x51FB;&#x201C;&#x53D6;&#x6D88;&#x201D;&#xFF0C;&#x5219;&#x8BE5;&#x503C;&#x5C06;&#x4E3A;false&#x3002; 1 2 3 canDeactivate() { return dialogService.confirm( &apos;Discard unsaved changes?&apos; ); } View Example &#x67E5;&#x770B;&#x5B98;&#x65B9;&#x6587;&#x6863;"},"Routing/routeparams.html":{"title":"","path":"\\Routing\\routeparams.html","body":"使用路由参数 假设我们正在创建一个显示产品列表的应用程序。当用户点击列表中的产品时，我们要显示一个页面，显示该产品的详细信息。为此你必须： 添加路由参数ID 将路由链接到参数 添加读取参数的服务。 声明路由参数 显示特定产品详细信息的组件的路由需要该产品ID的路由参数。我们可以使用以下 Router 实现： 1 2 3 4 5 export const routes: Routes = [  path: '' , redirectTo: 'product-list' , pathMatch: 'full' ,  path: 'product-list' , component: ProductList ,  path: 'product-details/:id' , component: ProductDetails  ]; 注意： product-details 路由的路径中的 :id ，它将参数放在路径中。例如，要查看ID为5的产品的产品详细信息页面，必须使用以下URL： localhost:3000/product-details/5 链接到带参数的路由 在 ProductList 组件中，您可以通过ID显示产品列表。每个产品都有一个链接到 product-details 的路由： 1 2 3 4  a * ngFor = \"let product of products\" [ routerLink ]= \"['/product-details', product.id]\"   product.name  / a  注意， routerLink 指令传递一个数组，该数组指定路径和路由参数。或者，我们可以使用JS跳转： 1 2 3 goToProductDetails(id)  this .router.navigate([ '/product-details' , id]);  读取路由参数 ProductDetails 组件必须读取参数，然后根据参数中给出的ID加载产品。 ActivatedRoute 服务提供了一个 params Observable，我们可以订阅它来获取路由参数（见 Observables ）。​ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import  Component, OnInit, OnDestroy  from '@angular/core' ; import  ActivatedRoute  from '@angular/router' ; @Component ( selector: 'product-details' , template: ` div Showing product details for product: id /div ` , ) export class LoanDetailsPage implements OnInit, OnDestroy  id: number ; private sub: any ; constructor ( private route: ActivatedRoute )  ngOnInit()  this .sub = this .route.params.subscribe( params =  this .id = +params[ 'id' ]; // (+) converts string 'id' to a number // In a real app: dispatch action to load the details here. );  ngOnDestroy()  this .sub.unsubscribe();   ActivatedRoute 上的 params 属性是一个 Observable 的原因是路由器在导航到同一个组件时可能无法重新创建组件。在这种情况下，参数可能会改变，而不会重新创建组件。 View Basic Example View Example with Programmatic Route Navigation 查看以全屏模式运行的示例，以查看URL变化。"},"Routing/routeparams.html#使用路由参数":{"title":"&#x4F7F;&#x7528;&#x8DEF;&#x7531;&#x53C2;&#x6570;","path":"\\Routing\\routeparams.html#使用路由参数","body":"&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x663E;&#x793A;&#x4EA7;&#x54C1;&#x5217;&#x8868;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x5F53;&#x7528;&#x6237;&#x70B9;&#x51FB;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x4EA7;&#x54C1;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x663E;&#x793A;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF0C;&#x663E;&#x793A;&#x8BE5;&#x4EA7;&#x54C1;&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x3002;&#x4E3A;&#x6B64;&#x4F60;&#x5FC5;&#x987B;&#xFF1A; &#x6DFB;&#x52A0;&#x8DEF;&#x7531;&#x53C2;&#x6570;ID &#x5C06;&#x8DEF;&#x7531;&#x94FE;&#x63A5;&#x5230;&#x53C2;&#x6570; &#x6DFB;&#x52A0;&#x8BFB;&#x53D6;&#x53C2;&#x6570;&#x7684;&#x670D;&#x52A1;&#x3002;"},"Routing/routeparams.html#声明路由参数":{"title":"&#x58F0;&#x660E;&#x8DEF;&#x7531;&#x53C2;&#x6570;","path":"\\Routing\\routeparams.html#声明路由参数","body":"&#x663E;&#x793A;&#x7279;&#x5B9A;&#x4EA7;&#x54C1;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x7684;&#x7EC4;&#x4EF6;&#x7684;&#x8DEF;&#x7531;&#x9700;&#x8981;&#x8BE5;&#x4EA7;&#x54C1;ID&#x7684;&#x8DEF;&#x7531;&#x53C2;&#x6570;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B; Router &#x5B9E;&#x73B0;&#xFF1A; 1 2 3 4 5 export const routes: Routes = [ { path: &apos;&apos; , redirectTo: &apos;product-list&apos; , pathMatch: &apos;full&apos; }, { path: &apos;product-list&apos; , component: ProductList }, { path: &apos;product-details/:id&apos; , component: ProductDetails } ]; &#x6CE8;&#x610F;&#xFF1A; product-details &#x8DEF;&#x7531;&#x7684;&#x8DEF;&#x5F84;&#x4E2D;&#x7684; :id &#xFF0C;&#x5B83;&#x5C06;&#x53C2;&#x6570;&#x653E;&#x5728;&#x8DEF;&#x5F84;&#x4E2D;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x8981;&#x67E5;&#x770B;ID&#x4E3A;5&#x7684;&#x4EA7;&#x54C1;&#x7684;&#x4EA7;&#x54C1;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#x9875;&#x9762;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;URL&#xFF1A; localhost:3000/product-details/5"},"Routing/routeparams.html#链接到带参数的路由":{"title":"&#x94FE;&#x63A5;&#x5230;&#x5E26;&#x53C2;&#x6570;&#x7684;&#x8DEF;&#x7531;","path":"\\Routing\\routeparams.html#链接到带参数的路由","body":"&#x5728; ProductList &#x7EC4;&#x4EF6;&#x4E2D;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;ID&#x663E;&#x793A;&#x4EA7;&#x54C1;&#x5217;&#x8868;&#x3002;&#x6BCF;&#x4E2A;&#x4EA7;&#x54C1;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x94FE;&#x63A5;&#x5230; product-details &#x7684;&#x8DEF;&#x7531;&#xFF1A; 1 2 3 4  a * ngFor = let product of products [ routerLink ]= [&apos;/product-details&apos;, product.id]  {{ product.name }} / a  &#x6CE8;&#x610F;&#xFF0C; routerLink &#x6307;&#x4EE4;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x8BE5;&#x6570;&#x7EC4;&#x6307;&#x5B9A;&#x8DEF;&#x5F84;&#x548C;&#x8DEF;&#x7531;&#x53C2;&#x6570;&#x3002;&#x6216;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;JS&#x8DF3;&#x8F6C;&#xFF1A; 1 2 3 goToProductDetails(id) { this .router.navigate([ &apos;/product-details&apos; , id]); }"},"Routing/routeparams.html#读取路由参数":{"title":"&#x8BFB;&#x53D6;&#x8DEF;&#x7531;&#x53C2;&#x6570;","path":"\\Routing\\routeparams.html#读取路由参数","body":"ProductDetails &#x7EC4;&#x4EF6;&#x5FC5;&#x987B;&#x8BFB;&#x53D6;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x53C2;&#x6570;&#x4E2D;&#x7ED9;&#x51FA;&#x7684;ID&#x52A0;&#x8F7D;&#x4EA7;&#x54C1;&#x3002; ActivatedRoute &#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A; params Observable&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA2;&#x9605;&#x5B83;&#x6765;&#x83B7;&#x53D6;&#x8DEF;&#x7531;&#x53C2;&#x6570;&#xFF08;&#x89C1; Observables &#xFF09;&#x3002;&#x200B; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import { Component, OnInit, OnDestroy } from &apos;@angular/core&apos; ; import { ActivatedRoute } from &apos;@angular/router&apos; ; @Component ({ selector: &apos;product-details&apos; , template: ` div Showing product details for product: {{id}} /div ` , }) export class LoanDetailsPage implements OnInit, OnDestroy { id: number ; private sub: any ; constructor ( private route: ActivatedRoute ) {} ngOnInit() { this .sub = this .route.params.subscribe( params = { this .id = +params[ &apos;id&apos; ]; // (+) converts string &apos;id&apos; to a number // In a real app: dispatch action to load the details here. }); } ngOnDestroy() { this .sub.unsubscribe(); } } ActivatedRoute &#x4E0A;&#x7684; params &#x5C5E;&#x6027;&#x662F;&#x4E00;&#x4E2A; Observable &#x7684;&#x539F;&#x56E0;&#x662F;&#x8DEF;&#x7531;&#x5668;&#x5728;&#x5BFC;&#x822A;&#x5230;&#x540C;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6;&#x65F6;&#x53EF;&#x80FD;&#x65E0;&#x6CD5;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x7EC4;&#x4EF6;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53C2;&#x6570;&#x53EF;&#x80FD;&#x4F1A;&#x6539;&#x53D8;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x7EC4;&#x4EF6;&#x3002; View Basic Example View Example with Programmatic Route Navigation &#x67E5;&#x770B;&#x4EE5;&#x5168;&#x5C4F;&#x6A21;&#x5F0F;&#x8FD0;&#x884C;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x4EE5;&#x67E5;&#x770B;URL&#x53D8;&#x5316;&#x3002;"},"Routing/routerlink.html":{"title":"","path":"\\Routing\\routerlink.html","body":"定义路由之间的链接 RouterLink 使用 RouterLink 指令添加链路到路由。 例如，以下代码定义了在路径 component-one 的路由的链接。 1 a [routerLink]=[&apos;/component-one&apos;]Component One/a Navigating Programmatically 或者，你可以通过调用 route 上的 navigate 功能导航到路由： 1 this.router.navigate([&apos;/component-one&apos;]);"},"Routing/routerlink.html#定义路由之间的链接":{"title":"&#x5B9A;&#x4E49;&#x8DEF;&#x7531;&#x4E4B;&#x95F4;&#x7684;&#x94FE;&#x63A5;","path":"\\Routing\\routerlink.html#定义路由之间的链接","body":""},"Routing/routerlink.html#RouterLink":{"title":"RouterLink","path":"\\Routing\\routerlink.html#RouterLink","body":"&#x4F7F;&#x7528; RouterLink &#x6307;&#x4EE4;&#x6DFB;&#x52A0;&#x94FE;&#x8DEF;&#x5230;&#x8DEF;&#x7531;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x5B9A;&#x4E49;&#x4E86;&#x5728;&#x8DEF;&#x5F84; component-one &#x7684;&#x8DEF;&#x7531;&#x7684;&#x94FE;&#x63A5;&#x3002; 1 a [routerLink]=[&apos;/component-one&apos;]Component One/a"},"Routing/routerlink.html#Navigating-Programmatically":{"title":"Navigating Programmatically","path":"\\Routing\\routerlink.html#Navigating-Programmatically","body":"&#x6216;&#x8005;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528; route &#x4E0A;&#x7684; navigate &#x529F;&#x80FD;&#x5BFC;&#x822A;&#x5230;&#x8DEF;&#x7531;&#xFF1A; 1 this.router.navigate([&apos;/component-one&apos;]);"},"Routing/routeroutlet.html":{"title":"","path":"\\Routing\\routeroutlet.html","body":"动态添加路由组件 不同于单独定义每个路由的组件，使用 RouterOutlet 作为组件占位符; Angular 2会将被激活的路由的组件动态地添加到 router-outlet / router-outlet 元素中。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import  Component  from '@angular/core' ; @Component ( selector: 'app' , template: ` nav a [routerLink]=\"['/component-one']\"Component One/a a [routerLink]=\"['/component-two']\"Component Two/a /nav router-outlet/router-outlet !-- Route components are added by router here -- ` ) export class AppComponent  在上面的例子中，当点击链接时，对应于指定路由的组件将放置在 router-outlet / router-outlet 元素之后。 View Example 用全屏模式运行示例，以查看URL的变化。"},"Routing/routeroutlet.html#动态添加路由组件":{"title":"&#x52A8;&#x6001;&#x6DFB;&#x52A0;&#x8DEF;&#x7531;&#x7EC4;&#x4EF6;","path":"\\Routing\\routeroutlet.html#动态添加路由组件","body":"&#x4E0D;&#x540C;&#x4E8E;&#x5355;&#x72EC;&#x5B9A;&#x4E49;&#x6BCF;&#x4E2A;&#x8DEF;&#x7531;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528; RouterOutlet &#x4F5C;&#x4E3A;&#x7EC4;&#x4EF6;&#x5360;&#x4F4D;&#x7B26;; Angular 2&#x4F1A;&#x5C06;&#x88AB;&#x6FC0;&#x6D3B;&#x7684;&#x8DEF;&#x7531;&#x7684;&#x7EC4;&#x4EF6;&#x52A8;&#x6001;&#x5730;&#x6DFB;&#x52A0;&#x5230; router-outlet / router-outlet &#x5143;&#x7D20;&#x4E2D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import { Component } from &apos;@angular/core&apos; ; @Component ({ selector: &apos;app&apos; , template: ` nav a [routerLink]=[&apos;/component-one&apos;]Component One/a a [routerLink]=[&apos;/component-two&apos;]Component Two/a /nav router-outlet/router-outlet !-- Route components are added by router here -- ` }) export class AppComponent {} &#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x5F53;&#x70B9;&#x51FB;&#x94FE;&#x63A5;&#x65F6;&#xFF0C;&#x5BF9;&#x5E94;&#x4E8E;&#x6307;&#x5B9A;&#x8DEF;&#x7531;&#x7684;&#x7EC4;&#x4EF6;&#x5C06;&#x653E;&#x7F6E;&#x5728; router-outlet / router-outlet &#x5143;&#x7D20;&#x4E4B;&#x540E;&#x3002; View Example &#x7528;&#x5168;&#x5C4F;&#x6A21;&#x5F0F;&#x8FD0;&#x884C;&#x793A;&#x4F8B;&#xFF0C;&#x4EE5;&#x67E5;&#x770B;URL&#x7684;&#x53D8;&#x5316;&#x3002;"},"Routing/routing.html":{"title":"","path":"\\Routing\\routing.html","body":"路由 在本节中，我们将讨论路由在单页应用和Angular 2的新组件路由器中的作用。"},"Routing/routing.html#路由":{"title":"&#x8DEF;&#x7531;","path":"\\Routing\\routing.html#路由","body":"&#x5728;&#x672C;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x8BA8;&#x8BBA;&#x8DEF;&#x7531;&#x5728;&#x5355;&#x9875;&#x5E94;&#x7528;&#x548C;Angular 2&#x7684;&#x65B0;&#x7EC4;&#x4EF6;&#x8DEF;&#x7531;&#x5668;&#x4E2D;&#x7684;&#x4F5C;&#x7528;&#x3002;"},"Routing/why_routing.html":{"title":"","path":"\\Routing\\why_routing.html","body":"为什么要用路由？ 路由允许我们在URL中表达应用程序某种状态。与服务器端前端解决方案不同，这是可选的 - 我们可以在不更改URL的情况下构建完整的应用程序。 然而，添加路由允许用户直接进入应用程序的某部分。 这非常方便，因为它可以保持您的应用程序可链接并且可以被添加为书签，还允许用户与他人分享链接。 路由可以让你： 保持应用程序的状态 实现模块化应用 基于角色实现应用程序（某些角色可以访问某些URL）"},"Routing/why_routing.html#为什么要用路由？":{"title":"&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528;&#x8DEF;&#x7531;&#xFF1F;","path":"\\Routing\\why_routing.html#为什么要用路由？","body":"&#x8DEF;&#x7531;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5728;URL&#x4E2D;&#x8868;&#x8FBE;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x67D0;&#x79CD;&#x72B6;&#x6001;&#x3002;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x524D;&#x7AEF;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E0D;&#x540C;&#xFF0C;&#x8FD9;&#x662F;&#x53EF;&#x9009;&#x7684; - &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x66F4;&#x6539;URL&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x6784;&#x5EFA;&#x5B8C;&#x6574;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x7136;&#x800C;&#xFF0C;&#x6DFB;&#x52A0;&#x8DEF;&#x7531;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x76F4;&#x63A5;&#x8FDB;&#x5165;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x67D0;&#x90E8;&#x5206;&#x3002; &#x8FD9;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EF;&#x4EE5;&#x4FDD;&#x6301;&#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53EF;&#x94FE;&#x63A5;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x88AB;&#x6DFB;&#x52A0;&#x4E3A;&#x4E66;&#x7B7E;&#xFF0C;&#x8FD8;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x4E0E;&#x4ED6;&#x4EBA;&#x5206;&#x4EAB;&#x94FE;&#x63A5;&#x3002; &#x8DEF;&#x7531;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#xFF1A; &#x4FDD;&#x6301;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x72B6;&#x6001; &#x5B9E;&#x73B0;&#x6A21;&#x5757;&#x5316;&#x5E94;&#x7528; &#x57FA;&#x4E8E;&#x89D2;&#x8272;&#x5B9E;&#x73B0;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF08;&#x67D0;&#x4E9B;&#x89D2;&#x8272;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x67D0;&#x4E9B;URL&#xFF09;"},"Testing/after-thoughts.html":{"title":"","path":"\\Testing\\after-thoughts.html","body":"Afterthoughts 上面列出的示例只是Redux中单元测试的一种方法。 在实际开发过程中，为每个action和reducer维护测试代价太高，在某些情况下是没什么必要的（比如我应该对这个JSON对象有一个属性返回吗？）。 我们尝试的另一种方法是将由action（或一系列action）触发的存储中的整体状态变化视为单个单元 - 在Redux中，reducer不会在没有操作的情况下运行，反之亦然，因此为什么分开他们？ 这使得在更改action和Reducers时没有失去Redux为我们的应用程序带来的灵活性。"},"Testing/after-thoughts.html#Afterthoughts":{"title":"Afterthoughts","path":"\\Testing\\after-thoughts.html#Afterthoughts","body":"&#x4E0A;&#x9762;&#x5217;&#x51FA;&#x7684;&#x793A;&#x4F8B;&#x53EA;&#x662F;Redux&#x4E2D;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x3002; &#x5728;&#x5B9E;&#x9645;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4E3A;&#x6BCF;&#x4E2A;action&#x548C;reducer&#x7EF4;&#x62A4;&#x6D4B;&#x8BD5;&#x4EE3;&#x4EF7;&#x592A;&#x9AD8;&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x6CA1;&#x4EC0;&#x4E48;&#x5FC5;&#x8981;&#x7684;&#xFF08;&#x6BD4;&#x5982;&#x6211;&#x5E94;&#x8BE5;&#x5BF9;&#x8FD9;&#x4E2A;JSON&#x5BF9;&#x8C61;&#x6709;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x8FD4;&#x56DE;&#x5417;&#xFF1F;&#xFF09;&#x3002; &#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x7684;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#x5C06;&#x7531;action&#xFF08;&#x6216;&#x4E00;&#x7CFB;&#x5217;action&#xFF09;&#x89E6;&#x53D1;&#x7684;&#x5B58;&#x50A8;&#x4E2D;&#x7684;&#x6574;&#x4F53;&#x72B6;&#x6001;&#x53D8;&#x5316;&#x89C6;&#x4E3A;&#x5355;&#x4E2A;&#x5355;&#x5143; - &#x5728;Redux&#x4E2D;&#xFF0C;reducer&#x4E0D;&#x4F1A;&#x5728;&#x6CA1;&#x6709;&#x64CD;&#x4F5C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x8FD0;&#x884C;&#xFF0C;&#x53CD;&#x4E4B;&#x4EA6;&#x7136;&#xFF0C;&#x56E0;&#x6B64;&#x4E3A;&#x4EC0;&#x4E48;&#x5206;&#x5F00;&#x4ED6;&#x4EEC;&#xFF1F; &#x8FD9;&#x4F7F;&#x5F97;&#x5728;&#x66F4;&#x6539;action&#x548C;Reducers&#x65F6;&#x6CA1;&#x6709;&#x5931;&#x53BB;Redux&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5E26;&#x6765;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x3002;"},"Testing/alt-http-mocking.html":{"title":"","path":"\\Testing\\alt-http-mocking.html","body":"替代HTTP Mock策略 使用 MockBackend 的一个替代方法是创建我们自己的轻模拟。 这里我们创建一个对象，然后告诉TypeScript使用类型断言将其视为 Http 。 然后我们为它的get方法创建一个监测器，并返回一个类似于真正的Http服务的observable 。 此方法仍然允许我们检查服务是否已请求正确的URL，并返回预期的数据。 wikisearch.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 import  fakeAsync, inject, TestBed  from '@angular/core/testing' ; import  HttpModule, Http, ResponseOptions, Response  from '@angular/http' ; import  Observable  from 'rxjs/Observable' ; import 'rxjs/add/observable/of' ; import SearchWiki from './wikisearch.service' ; const mockResponse =  \"batchcomplete\" : \"\" , \"continue\" :  \"sroffset\" : 10 , \"continue\" : \"-||\" , \"query\" :  \"searchinfo\" :  \"totalhits\" : 36853 , \"search\" : [ \"ns\" : 0 , \"title\" : \"Stuff\" , \"snippet\" : \"span/span\" , \"size\" : 1906 , \"wordcount\" : 204 , \"timestamp\" : \"2016-06-10T17:25:36Z\" ]  ; describe( 'Wikipedia search service' , () =  let mockHttp: Http; beforeEach( () =  mockHttp =  get : null  as Http; spyOn(mockHttp, 'get' ).and.returnValue(Observable.of( json: () = mockResponse )); TestBed.configureTestingModule( imports: [HttpModule], providers: [  provide: Http, useValue: mockHttp , SearchWiki ] ); ); it( 'should get search results' , fakeAsync( inject([SearchWiki], searchWiki =  const expectedUrl = 'https://en.wikipedia.org/w/api.php?' + 'action=query&amp;list=search&amp;srsearch=Angular' ; searchWiki.search( 'Angular' ) .subscribe( res =  expect(mockHttp.get).toHaveBeenCalledWith(expectedUrl); expect(res).toEqual(mockResponse); ); ) )); ); View Example"},"Testing/alt-http-mocking.html#替代HTTP-Mock策略":{"title":"&#x66FF;&#x4EE3;HTTP Mock&#x7B56;&#x7565;","path":"\\Testing\\alt-http-mocking.html#替代HTTP-Mock策略","body":"&#x4F7F;&#x7528; MockBackend &#x7684;&#x4E00;&#x4E2A;&#x66FF;&#x4EE3;&#x65B9;&#x6CD5;&#x662F;&#x521B;&#x5EFA;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x8F7B;&#x6A21;&#x62DF;&#x3002; &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x544A;&#x8BC9;TypeScript&#x4F7F;&#x7528;&#x7C7B;&#x578B;&#x65AD;&#x8A00;&#x5C06;&#x5176;&#x89C6;&#x4E3A; Http &#x3002; &#x7136;&#x540E;&#x6211;&#x4EEC;&#x4E3A;&#x5B83;&#x7684;get&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x76D1;&#x6D4B;&#x5668;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x4E8E;&#x771F;&#x6B63;&#x7684;Http&#x670D;&#x52A1;&#x7684;observable &#x3002; &#x6B64;&#x65B9;&#x6CD5;&#x4ECD;&#x7136;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x68C0;&#x67E5;&#x670D;&#x52A1;&#x662F;&#x5426;&#x5DF2;&#x8BF7;&#x6C42;&#x6B63;&#x786E;&#x7684;URL&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x9884;&#x671F;&#x7684;&#x6570;&#x636E;&#x3002; wikisearch.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 import { fakeAsync, inject, TestBed } from &apos;@angular/core/testing&apos; ; import { HttpModule, Http, ResponseOptions, Response } from &apos;@angular/http&apos; ; import { Observable } from &apos;rxjs/Observable&apos; ; import &apos;rxjs/add/observable/of&apos; ; import {SearchWiki} from &apos;./wikisearch.service&apos; ; const mockResponse = { batchcomplete :  , continue : { sroffset : 10 , continue : -|| }, query : { searchinfo : { totalhits : 36853 }, search : [{ ns : 0 , title : Stuff , snippet : span/span , size : 1906 , wordcount : 204 , timestamp : 2016-06-10T17:25:36Z }] } }; describe( &apos;Wikipedia search service&apos; , () = { let mockHttp: Http; beforeEach( () = { mockHttp = { get : null } as Http; spyOn(mockHttp, &apos;get&apos; ).and.returnValue(Observable.of({ json: () = mockResponse })); TestBed.configureTestingModule({ imports: [HttpModule], providers: [ { provide: Http, useValue: mockHttp }, SearchWiki ] }); }); it( &apos;should get search results&apos; , fakeAsync( inject([SearchWiki], searchWiki = { const expectedUrl = &apos;https://en.wikipedia.org/w/api.php?&apos; + &apos;action=query&amp;list=search&amp;srsearch=Angular&apos; ; searchWiki.search( &apos;Angular&apos; ) .subscribe( res = { expect(mockHttp.get).toHaveBeenCalledWith(expectedUrl); expect(res).toEqual(mockResponse); }); }) )); }); View Example"},"Testing/async-execution.html":{"title":"","path":"\\Testing\\async-execution.html","body":"异步执行测试 由于服务以异步方式操作，因此异步地执行服务的整个单元测试可能是有用的。 这可以加快完成整个测试周期所需的总时间，因为特定的单元测试不会阻止其他测试的执行。 我们可以设置我们的单元测试来返回一个promise，它将根据测试的结果来返回成功或失败。 1 2 3 4 5 6 7 8 describe( 'verify search' , () =  it( 'searches for the correct term' , fakeAsync(inject([SearchWiki, MockBackend], (searchWiki, mockBackend) =  return new Promise ( ( pass, fail ) =  ... ); ))); ); 不是只使用 inject ，我们使用 fakeAsync 来包装它并完成依赖并在异步过程中执行测试。 使用 fakeAsync 需要我们返回一个Promise，我们通过调用 pass 或者 fail 来解决我们的测试的 competition ，这取决于我们测试的结果。"},"Testing/async-execution.html#异步执行测试":{"title":"&#x5F02;&#x6B65;&#x6267;&#x884C;&#x6D4B;&#x8BD5;","path":"\\Testing\\async-execution.html#异步执行测试","body":"&#x7531;&#x4E8E;&#x670D;&#x52A1;&#x4EE5;&#x5F02;&#x6B65;&#x65B9;&#x5F0F;&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x6B64;&#x5F02;&#x6B65;&#x5730;&#x6267;&#x884C;&#x670D;&#x52A1;&#x7684;&#x6574;&#x4E2A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x53EF;&#x80FD;&#x662F;&#x6709;&#x7528;&#x7684;&#x3002; &#x8FD9;&#x53EF;&#x4EE5;&#x52A0;&#x5FEB;&#x5B8C;&#x6210;&#x6574;&#x4E2A;&#x6D4B;&#x8BD5;&#x5468;&#x671F;&#x6240;&#x9700;&#x7684;&#x603B;&#x65F6;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x7279;&#x5B9A;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E0D;&#x4F1A;&#x963B;&#x6B62;&#x5176;&#x4ED6;&#x6D4B;&#x8BD5;&#x7684;&#x6267;&#x884C;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x6211;&#x4EEC;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x6765;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;promise&#xFF0C;&#x5B83;&#x5C06;&#x6839;&#x636E;&#x6D4B;&#x8BD5;&#x7684;&#x7ED3;&#x679C;&#x6765;&#x8FD4;&#x56DE;&#x6210;&#x529F;&#x6216;&#x5931;&#x8D25;&#x3002; 1 2 3 4 5 6 7 8 describe( &apos;verify search&apos; , () = { it( &apos;searches for the correct term&apos; , fakeAsync(inject([SearchWiki, MockBackend], (searchWiki, mockBackend) = { return new Promise ( ( pass, fail ) = { ... }); }))); }); &#x4E0D;&#x662F;&#x53EA;&#x4F7F;&#x7528; inject &#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528; fakeAsync &#x6765;&#x5305;&#x88C5;&#x5B83;&#x5E76;&#x5B8C;&#x6210;&#x4F9D;&#x8D56;&#x5E76;&#x5728;&#x5F02;&#x6B65;&#x8FC7;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x3002; &#x4F7F;&#x7528; fakeAsync &#x9700;&#x8981;&#x6211;&#x4EEC;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;Promise&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8C03;&#x7528; pass &#x6216;&#x8005; fail &#x6765;&#x89E3;&#x51B3;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x7684; competition &#xFF0C;&#x8FD9;&#x53D6;&#x51B3;&#x4E8E;&#x6211;&#x4EEC;&#x6D4B;&#x8BD5;&#x7684;&#x7ED3;&#x679C;&#x3002;"},"Testing/async.html":{"title":"","path":"\\Testing\\async.html","body":"测试异步操作 有时候，我们需要测试依赖于在特定时间发生的异步操作的组件。 Angular提供了一个称为 fakeAsync 的函数，它将我们的测试包裹在一个区域中，并让我们访问 tick 函数，这将允许我们精确地模拟时间的流逝。 让我们回到 QuoteComponent 组件的例子，并使用 fakeAsync 重写单元测试： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  Component  from '@angular/core' ; import  QuoteService  from './quote.service' ; @Component ( selector: 'my-quote' , template: 'h3Random Quote/h3 divquote/div' ) export class QuoteComponent  quote: string ; constructor ( private quoteService: QuoteService ); getQuote()  this .quoteService.getQuote().then( ( quote ) =  this .quote = quote; ); ;  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 import  QuoteService  from './quote.service' ; import  QuoteComponent  from './quote.component' ; import  provide  from '@angular/core' ; import  async , TestBed, fakeAsync, tick,  from '@angular/core/testing' ; class MockQuoteService  public quote: string = 'Test quote' ; getQuote()  return Promise .resolve( this .quote);   describe( 'Testing Quote Component' , () =  let fixture; beforeEach( () =  TestBed.configureTestingModule( declarations: [ QuoteComponent ], providers: [  provide: QuoteService, useClass: MockQuoteService  ] ); fixture = TestBed.createComponent(QuoteComponent); fixture.detectChanges(); ); it( 'Should get quote' , fakeAsync( () =  fixture.componentInstance.getQuote(); tick(); fixture.detectChanges(); const compiled = fixture.debugElement.nativeElement; expect(compiled.querySelector( 'div' ).innerText).toEqual( 'Test quote' ); )); ); View Example 这里我们有一个 QuoteComponent， 它有一个 getQuote 触发异步更新。 我们将整个测试包装在 fakeAsync 中，这将允许我们通过调用 tick() 来使用同步函数调用来测试我们的组件( getQuote() )的异步行为。 然后我们可以运行 detectChanges 并查询DOM的预期结果。"},"Testing/async.html#测试异步操作":{"title":"&#x6D4B;&#x8BD5;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;","path":"\\Testing\\async.html#测试异步操作","body":"&#x6709;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6D4B;&#x8BD5;&#x4F9D;&#x8D56;&#x4E8E;&#x5728;&#x7279;&#x5B9A;&#x65F6;&#x95F4;&#x53D1;&#x751F;&#x7684;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x7684;&#x7EC4;&#x4EF6;&#x3002; Angular&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x79F0;&#x4E3A; fakeAsync &#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x5305;&#x88F9;&#x5728;&#x4E00;&#x4E2A;&#x533A;&#x57DF;&#x4E2D;&#xFF0C;&#x5E76;&#x8BA9;&#x6211;&#x4EEC;&#x8BBF;&#x95EE; tick &#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x5C06;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x7CBE;&#x786E;&#x5730;&#x6A21;&#x62DF;&#x65F6;&#x95F4;&#x7684;&#x6D41;&#x901D;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x56DE;&#x5230; QuoteComponent &#x7EC4;&#x4EF6;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; fakeAsync &#x91CD;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import { Component } from &apos;@angular/core&apos; ; import { QuoteService } from &apos;./quote.service&apos; ; @Component ({ selector: &apos;my-quote&apos; , template: &apos;h3Random Quote/h3 div{{quote}}/div&apos; }) export class QuoteComponent { quote: string ; constructor ( private quoteService: QuoteService ){}; getQuote() { this .quoteService.getQuote().then( ( quote ) = { this .quote = quote; }); }; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 import { QuoteService } from &apos;./quote.service&apos; ; import { QuoteComponent } from &apos;./quote.component&apos; ; import { provide } from &apos;@angular/core&apos; ; import { async , TestBed, fakeAsync, tick, } from &apos;@angular/core/testing&apos; ; class MockQuoteService { public quote: string = &apos;Test quote&apos; ; getQuote() { return Promise .resolve( this .quote); } } describe( &apos;Testing Quote Component&apos; , () = { let fixture; beforeEach( () = { TestBed.configureTestingModule({ declarations: [ QuoteComponent ], providers: [ { provide: QuoteService, useClass: MockQuoteService } ] }); fixture = TestBed.createComponent(QuoteComponent); fixture.detectChanges(); }); it( &apos;Should get quote&apos; , fakeAsync( () = { fixture.componentInstance.getQuote(); tick(); fixture.detectChanges(); const compiled = fixture.debugElement.nativeElement; expect(compiled.querySelector( &apos;div&apos; ).innerText).toEqual( &apos;Test quote&apos; ); })); }); View Example &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A; QuoteComponent&#xFF0C; &#x5B83;&#x6709;&#x4E00;&#x4E2A; getQuote &#x89E6;&#x53D1;&#x5F02;&#x6B65;&#x66F4;&#x65B0;&#x3002; &#x6211;&#x4EEC;&#x5C06;&#x6574;&#x4E2A;&#x6D4B;&#x8BD5;&#x5305;&#x88C5;&#x5728; fakeAsync &#x4E2D;&#xFF0C;&#x8FD9;&#x5C06;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8C03;&#x7528; tick() &#x6765;&#x4F7F;&#x7528;&#x540C;&#x6B65;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6765;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;( getQuote() )&#x7684;&#x5F02;&#x6B65;&#x884C;&#x4E3A;&#x3002; &#x7136;&#x540E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD0;&#x884C; detectChanges &#x5E76;&#x67E5;&#x8BE2;DOM&#x7684;&#x9884;&#x671F;&#x7ED3;&#x679C;&#x3002;"},"Testing/complex-actions.html":{"title":"","path":"\\Testing\\complex-actions.html","body":"测试复杂的 Actions 当我们想测试异步或条件Actions创建者时，事情变得有点棘手。我们的目标仍然是相同的：确保 operations 发出我们期望的Actions。 条件 Action 考虑以下条件action（即，根据当前状态触发的操作）： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import  Injectable  from '@angular/core' ; import  NgRedux  from 'ng2-redux' ; export const INCREMENT_COUNTER = 'INCREMENT_COUNTER' ; @Injectable () export class MyActionService  constructor ( private redux: NgRedux ) ; // A conditional action incrementIfOdd()  const  counter  = this .redux.getState(); if (counter % 2 === 0 ) return ; this .redux.dispatch( type : INCREMENT_COUNTER );   单元测试与之前类似，但我们需要模拟我们的状态以及dispatch： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 import  NgRedux  from 'ng2-redux' ; import  CounterActions  from './counter' ; class MockRedux extends NgRedux any   constructor ( private state: any )  super ( null );  dispatch = () = undefined ; getState = () = this .state;  describe( 'counter action creators' , () =  let actions: CounterActions; let mockRedux: NgRedux any ; let mockState: any = ; beforeEach( () =  // Our mock NgRedux can now accept mock state as a constructor param. mockRedux = new MockRedux(mockState); actions = new CounterActions(mockRedux); ); it( 'incrementIfOdd should dispatch INCREMENT_COUNTER action if count is odd' , () =  // Our tests can bake in the initial state they need. const expectedAction =  type : CounterActions.INCREMENT_COUNTER ; mockState.counter = 3 ; spyOn(mockRedux, 'dispatch' ); actions.incrementIfOdd(); expect(mockRedux.dispatch).toHaveBeenCalled(); expect(mockRedux.dispatch).toHaveBeenCalledWith(expectedAction); ); it( 'incrementIfOdd should not dispatch INCREMENT_COUNTER action if count is even' , () =  mockState.counter = 2 ; spyOn(mockRedux, 'dispatch' ); actions.incrementIfOdd(); expect(mockRedux.dispatch).not.toHaveBeenCalled(); ); ); 异步 Action 下面异步Action怎么办？ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import  Injectable  from '@angular/core' ; import  NgRedux  from 'ng2-redux' ; export const INCREMENT_COUNTER = 'INCREMENT_COUNTER' ; export const DECREMENT_COUNTER = 'DECREMENT_COUNTER' ; @Injectable () export class CounterActions  constructor ( private redux: NgRedux any  )  // ... incrementAsync(timeInMs = 1000 )  this .delay(timeInMs).then( () = this .redux.dispatch( type : INCREMENT_COUNTER ));  private delay(timeInMs)  return new Promise ( ( resolve,reject ) =  setTimeout( () = resolve() , timeInMs); );   我们可以使用异步服务函数的常规技术来测试： 如果我们可以让 incrementAsync 返回一个promise，我们可以从测试中返回一个promise，并且 jasmine 将一直等到它完成。 或者，我们可以使用在测试组件一节中讨论的 fakeAsync 技术。 要记住的是，如果我们遵循 ActionCreatorService 模式，我们的操作只是Angular服务上的函数。 所以我们可以模拟出NgRedux（和任何其他依赖项），就像测试其他Angular 2服务一样。"},"Testing/complex-actions.html#测试复杂的-Actions":{"title":"&#x6D4B;&#x8BD5;&#x590D;&#x6742;&#x7684; Actions","path":"\\Testing\\complex-actions.html#测试复杂的-Actions","body":"&#x5F53;&#x6211;&#x4EEC;&#x60F3;&#x6D4B;&#x8BD5;&#x5F02;&#x6B65;&#x6216;&#x6761;&#x4EF6;Actions&#x521B;&#x5EFA;&#x8005;&#x65F6;&#xFF0C;&#x4E8B;&#x60C5;&#x53D8;&#x5F97;&#x6709;&#x70B9;&#x68D8;&#x624B;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x4ECD;&#x7136;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF1A;&#x786E;&#x4FDD; operations &#x53D1;&#x51FA;&#x6211;&#x4EEC;&#x671F;&#x671B;&#x7684;Actions&#x3002;"},"Testing/complex-actions.html#条件-Action":{"title":"&#x6761;&#x4EF6; Action","path":"\\Testing\\complex-actions.html#条件-Action","body":"&#x8003;&#x8651;&#x4EE5;&#x4E0B;&#x6761;&#x4EF6;action&#xFF08;&#x5373;&#xFF0C;&#x6839;&#x636E;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x89E6;&#x53D1;&#x7684;&#x64CD;&#x4F5C;&#xFF09;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import { Injectable } from &apos;@angular/core&apos; ; import { NgRedux } from &apos;ng2-redux&apos; ; export const INCREMENT_COUNTER = &apos;INCREMENT_COUNTER&apos; ; @Injectable () export class MyActionService { constructor ( private redux: NgRedux ) {}; // A conditional action incrementIfOdd() { const { counter } = this .redux.getState(); if (counter % 2 === 0 ) return ; this .redux.dispatch({ type : INCREMENT_COUNTER }); } } &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E0E;&#x4E4B;&#x524D;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6A21;&#x62DF;&#x6211;&#x4EEC;&#x7684;&#x72B6;&#x6001;&#x4EE5;&#x53CA;dispatch&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 import { NgRedux } from &apos;ng2-redux&apos; ; import { CounterActions } from &apos;./counter&apos; ; class MockRedux extends NgRedux any  { constructor ( private state: any ) { super ( null ); } dispatch = () = undefined ; getState = () = this .state; } describe( &apos;counter action creators&apos; , () = { let actions: CounterActions; let mockRedux: NgRedux any ; let mockState: any = {}; beforeEach( () = { // Our mock NgRedux can now accept mock state as a constructor param. mockRedux = new MockRedux(mockState); actions = new CounterActions(mockRedux); }); it( &apos;incrementIfOdd should dispatch INCREMENT_COUNTER action if count is odd&apos; , () = { // Our tests can bake in the initial state they need. const expectedAction = { type : CounterActions.INCREMENT_COUNTER }; mockState.counter = 3 ; spyOn(mockRedux, &apos;dispatch&apos; ); actions.incrementIfOdd(); expect(mockRedux.dispatch).toHaveBeenCalled(); expect(mockRedux.dispatch).toHaveBeenCalledWith(expectedAction); }); it( &apos;incrementIfOdd should not dispatch INCREMENT_COUNTER action if count is even&apos; , () = { mockState.counter = 2 ; spyOn(mockRedux, &apos;dispatch&apos; ); actions.incrementIfOdd(); expect(mockRedux.dispatch).not.toHaveBeenCalled(); }); });"},"Testing/complex-actions.html#异步-Action":{"title":"&#x5F02;&#x6B65; Action","path":"\\Testing\\complex-actions.html#异步-Action","body":"&#x4E0B;&#x9762;&#x5F02;&#x6B65;Action&#x600E;&#x4E48;&#x529E;&#xFF1F; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import { Injectable } from &apos;@angular/core&apos; ; import { NgRedux } from &apos;ng2-redux&apos; ; export const INCREMENT_COUNTER = &apos;INCREMENT_COUNTER&apos; ; export const DECREMENT_COUNTER = &apos;DECREMENT_COUNTER&apos; ; @Injectable () export class CounterActions { constructor ( private redux: NgRedux any  ) {} // ... incrementAsync(timeInMs = 1000 ) { this .delay(timeInMs).then( () = this .redux.dispatch({ type : INCREMENT_COUNTER })); } private delay(timeInMs) { return new Promise ( ( resolve,reject ) = { setTimeout( () = resolve() , timeInMs); }); } } &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x670D;&#x52A1;&#x51FD;&#x6570;&#x7684;&#x5E38;&#x89C4;&#x6280;&#x672F;&#x6765;&#x6D4B;&#x8BD5;&#xFF1A; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BA9; incrementAsync &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;promise&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x6D4B;&#x8BD5;&#x4E2D;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;promise&#xFF0C;&#x5E76;&#x4E14; jasmine &#x5C06;&#x4E00;&#x76F4;&#x7B49;&#x5230;&#x5B83;&#x5B8C;&#x6210;&#x3002; &#x6216;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5728;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#x4E00;&#x8282;&#x4E2D;&#x8BA8;&#x8BBA;&#x7684; fakeAsync &#x6280;&#x672F;&#x3002; &#x8981;&#x8BB0;&#x4F4F;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x9075;&#x5FAA; ActionCreatorService &#x6A21;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x64CD;&#x4F5C;&#x53EA;&#x662F;Angular&#x670D;&#x52A1;&#x4E0A;&#x7684;&#x51FD;&#x6570;&#x3002; &#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6A21;&#x62DF;&#x51FA;NgRedux&#xFF08;&#x548C;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x4F9D;&#x8D56;&#x9879;&#xFF09;&#xFF0C;&#x5C31;&#x50CF;&#x6D4B;&#x8BD5;&#x5176;&#x4ED6;Angular 2&#x670D;&#x52A1;&#x4E00;&#x6837;&#x3002;"},"Testing/components.html":{"title":"","path":"\\Testing\\components.html","body":"测试组件 测试Angular 2组件需要深入了解Angular 2 @angular/core/testing 模块。 虽然Jasmine的许多功能在Angular的测试模块中使用，但是Angular在测试组件时还需要一些非常具体的包装器和routine。"},"Testing/components.html#测试组件":{"title":"&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;","path":"\\Testing\\components.html#测试组件","body":"&#x6D4B;&#x8BD5;Angular 2&#x7EC4;&#x4EF6;&#x9700;&#x8981;&#x6DF1;&#x5165;&#x4E86;&#x89E3;Angular 2 @angular/core/testing &#x6A21;&#x5757;&#x3002; &#x867D;&#x7136;Jasmine&#x7684;&#x8BB8;&#x591A;&#x529F;&#x80FD;&#x5728;Angular&#x7684;&#x6D4B;&#x8BD5;&#x6A21;&#x5757;&#x4E2D;&#x4F7F;&#x7528;&#xFF0C;&#x4F46;&#x662F;Angular&#x5728;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#x65F6;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E9B;&#x975E;&#x5E38;&#x5177;&#x4F53;&#x7684;&#x5305;&#x88C5;&#x5668;&#x548C;routine&#x3002;"},"Testing/execute.html":{"title":"","path":"\\Testing\\execute.html","body":"执行测试脚本 我们的整个测试工作流程是通过Karma完成的。 运行命令 karma start 来启动Karma来设置测试环境，运行每个单元测试并执行我们在 karma.config.js 配置文件中设置的任何记录器。 为了通过命令行运行Karma，它必须全局安装（ npm install karma -g ）。 一个好的做法是合并所有项目的任务/构建命令通过npm。 这为您的构建过程提供了连续性，并使人们更容易测试/运行应用程序，而无需了解您的确切技术堆栈。 在 package.json 中， scripts 字段包含具有键值配对的对象，其中键是命令的别名，值是要执行的命令。 1 2 3 4 5 6 ... scripts:  test: karma start, ...  ... 现在运行 npm test 将启动Karma。下面是我们的Karma测试的输出。如您所见，我们有一个测试已通过，在Chrome 48浏览器中运行。"},"Testing/execute.html#执行测试脚本":{"title":"&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x811A;&#x672C;","path":"\\Testing\\execute.html#执行测试脚本","body":"&#x6211;&#x4EEC;&#x7684;&#x6574;&#x4E2A;&#x6D4B;&#x8BD5;&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;&#x662F;&#x901A;&#x8FC7;Karma&#x5B8C;&#x6210;&#x7684;&#x3002; &#x8FD0;&#x884C;&#x547D;&#x4EE4; karma start &#x6765;&#x542F;&#x52A8;Karma&#x6765;&#x8BBE;&#x7F6E;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#xFF0C;&#x8FD0;&#x884C;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x5E76;&#x6267;&#x884C;&#x6211;&#x4EEC;&#x5728; karma.config.js &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x8BBE;&#x7F6E;&#x7684;&#x4EFB;&#x4F55;&#x8BB0;&#x5F55;&#x5668;&#x3002; &#x4E3A;&#x4E86;&#x901A;&#x8FC7;&#x547D;&#x4EE4;&#x884C;&#x8FD0;&#x884C;Karma&#xFF0C;&#x5B83;&#x5FC5;&#x987B;&#x5168;&#x5C40;&#x5B89;&#x88C5;&#xFF08; npm install karma -g &#xFF09;&#x3002; &#x4E00;&#x4E2A;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5408;&#x5E76;&#x6240;&#x6709;&#x9879;&#x76EE;&#x7684;&#x4EFB;&#x52A1;/&#x6784;&#x5EFA;&#x547D;&#x4EE4;&#x901A;&#x8FC7;npm&#x3002; &#x8FD9;&#x4E3A;&#x60A8;&#x7684;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#x63D0;&#x4F9B;&#x4E86;&#x8FDE;&#x7EED;&#x6027;&#xFF0C;&#x5E76;&#x4F7F;&#x4EBA;&#x4EEC;&#x66F4;&#x5BB9;&#x6613;&#x6D4B;&#x8BD5;/&#x8FD0;&#x884C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x800C;&#x65E0;&#x9700;&#x4E86;&#x89E3;&#x60A8;&#x7684;&#x786E;&#x5207;&#x6280;&#x672F;&#x5806;&#x6808;&#x3002; &#x5728; package.json &#x4E2D;&#xFF0C; scripts &#x5B57;&#x6BB5;&#x5305;&#x542B;&#x5177;&#x6709;&#x952E;&#x503C;&#x914D;&#x5BF9;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x4E2D;&#x952E;&#x662F;&#x547D;&#x4EE4;&#x7684;&#x522B;&#x540D;&#xFF0C;&#x503C;&#x662F;&#x8981;&#x6267;&#x884C;&#x7684;&#x547D;&#x4EE4;&#x3002; 1 2 3 4 5 6 ... scripts: { test: karma start, ... } ... &#x73B0;&#x5728;&#x8FD0;&#x884C; npm test &#x5C06;&#x542F;&#x52A8;Karma&#x3002;&#x4E0B;&#x9762;&#x662F;&#x6211;&#x4EEC;&#x7684;Karma&#x6D4B;&#x8BD5;&#x7684;&#x8F93;&#x51FA;&#x3002;&#x5982;&#x60A8;&#x6240;&#x89C1;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x5DF2;&#x901A;&#x8FC7;&#xFF0C;&#x5728;Chrome 48&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8FD0;&#x884C;&#x3002;"},"Testing/filename-conventions.html":{"title":"","path":"\\Testing\\filename-conventions.html","body":"文件名约定 每个单元测试都放在自己单独的文件中。 Angular 2团队建议将单元测试脚本放在他们正在测试的文件旁边，并使用 .spec 文件扩展名将其标记为测试脚本（这是一个Jasmine约定）。 因此，如果您有一个组件 /app/components/mycomponent.ts ，那么您对此组件的单元测试将在 /app/components/mycomponent.spec.ts 中。 这是个人喜好的问题; 你可以把你的测试脚本放在任何你喜欢的地方，虽然保持它们接近你的源文件，使它们更容易找到，并给方便那些不熟悉源代码的人了解特定的代码是如何工作的。"},"Testing/filename-conventions.html#文件名约定":{"title":"&#x6587;&#x4EF6;&#x540D;&#x7EA6;&#x5B9A;","path":"\\Testing\\filename-conventions.html#文件名约定","body":"&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x90FD;&#x653E;&#x5728;&#x81EA;&#x5DF1;&#x5355;&#x72EC;&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#x3002; Angular 2&#x56E2;&#x961F;&#x5EFA;&#x8BAE;&#x5C06;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x811A;&#x672C;&#x653E;&#x5728;&#x4ED6;&#x4EEC;&#x6B63;&#x5728;&#x6D4B;&#x8BD5;&#x7684;&#x6587;&#x4EF6;&#x65C1;&#x8FB9;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; .spec &#x6587;&#x4EF6;&#x6269;&#x5C55;&#x540D;&#x5C06;&#x5176;&#x6807;&#x8BB0;&#x4E3A;&#x6D4B;&#x8BD5;&#x811A;&#x672C;&#xFF08;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;Jasmine&#x7EA6;&#x5B9A;&#xFF09;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x6709;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6; /app/components/mycomponent.ts &#xFF0C;&#x90A3;&#x4E48;&#x60A8;&#x5BF9;&#x6B64;&#x7EC4;&#x4EF6;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x5C06;&#x5728; /app/components/mycomponent.spec.ts &#x4E2D;&#x3002; &#x8FD9;&#x662F;&#x4E2A;&#x4EBA;&#x559C;&#x597D;&#x7684;&#x95EE;&#x9898;; &#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x4F60;&#x7684;&#x6D4B;&#x8BD5;&#x811A;&#x672C;&#x653E;&#x5728;&#x4EFB;&#x4F55;&#x4F60;&#x559C;&#x6B22;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x867D;&#x7136;&#x4FDD;&#x6301;&#x5B83;&#x4EEC;&#x63A5;&#x8FD1;&#x4F60;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x5B83;&#x4EEC;&#x66F4;&#x5BB9;&#x6613;&#x627E;&#x5230;&#xFF0C;&#x5E76;&#x7ED9;&#x65B9;&#x4FBF;&#x90A3;&#x4E9B;&#x4E0D;&#x719F;&#x6089;&#x6E90;&#x4EE3;&#x7801;&#x7684;&#x4EBA;&#x4E86;&#x89E3;&#x7279;&#x5B9A;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#x3002;"},"Testing/http.html":{"title":"","path":"\\Testing\\http.html","body":"测试HTTP请求 服务，由于它们执行异步任务的性质。 当我们进行HTTP请求时，我们使用异步方式，以免阻止应用程序的其余部分执行其操作。我们之前了解了一些组件的异步测试，幸运的是，很多这方面的知识也带到了测试异步服务中。 测试这种服务的基本策略是验证请求的内容（正确的URL），并确保我们模拟到服务中的数据通过正确的方法正确返回。 让我们来看一些代码： wikisearch.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import Http from &apos;@angular/http&apos;; import Injectable from &apos;@angular/core&apos;; import Observable from &apos;rxjs&apos;; import &apos;rxjs/add/operator/map&apos; @Injectable() export class SearchWiki  constructor (private http: Http)  search(term: string): Observableany  return this.http.get( &apos;https://en.wikipedia.org/w/api.php?&apos; + &apos;action=query&amp;list=search&amp;srsearch=&apos; + term ).map((response) = response.json());  searchXML(term: string): Observableany  return this.http.get( &apos;https://en.wikipedia.org/w/api.php?&apos; + &apos;action=query&amp;list=search&amp;format=xmlfm&amp;srsearch=&apos; + term );   这里是一个基本的服务。 它将使用搜索项查询维基百科，并返回一个带有查询结果的Observable。 搜索功能将使用提供的术语进行GET请求，searchXML方法将执行相同的操作，但请求响应为XML而不是JSON。 正如你可以看到，它取决于HTTP模块向wikipedia.org发出请求。 我们的测试策略是检查服务是否已请求正确的网址，一旦我们回复了模拟数据，我们就要验证它是否返回相同的数据。"},"Testing/http.html#测试HTTP请求":{"title":"&#x6D4B;&#x8BD5;HTTP&#x8BF7;&#x6C42;","path":"\\Testing\\http.html#测试HTTP请求","body":"&#x670D;&#x52A1;&#xFF0C;&#x7531;&#x4E8E;&#x5B83;&#x4EEC;&#x6267;&#x884C;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x7684;&#x6027;&#x8D28;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x8FDB;&#x884C;HTTP&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x65B9;&#x5F0F;&#xFF0C;&#x4EE5;&#x514D;&#x963B;&#x6B62;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5176;&#x4F59;&#x90E8;&#x5206;&#x6267;&#x884C;&#x5176;&#x64CD;&#x4F5C;&#x3002;&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x4E86;&#x89E3;&#x4E86;&#x4E00;&#x4E9B;&#x7EC4;&#x4EF6;&#x7684;&#x5F02;&#x6B65;&#x6D4B;&#x8BD5;&#xFF0C;&#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x5F88;&#x591A;&#x8FD9;&#x65B9;&#x9762;&#x7684;&#x77E5;&#x8BC6;&#x4E5F;&#x5E26;&#x5230;&#x4E86;&#x6D4B;&#x8BD5;&#x5F02;&#x6B65;&#x670D;&#x52A1;&#x4E2D;&#x3002; &#x6D4B;&#x8BD5;&#x8FD9;&#x79CD;&#x670D;&#x52A1;&#x7684;&#x57FA;&#x672C;&#x7B56;&#x7565;&#x662F;&#x9A8C;&#x8BC1;&#x8BF7;&#x6C42;&#x7684;&#x5185;&#x5BB9;&#xFF08;&#x6B63;&#x786E;&#x7684;URL&#xFF09;&#xFF0C;&#x5E76;&#x786E;&#x4FDD;&#x6211;&#x4EEC;&#x6A21;&#x62DF;&#x5230;&#x670D;&#x52A1;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x901A;&#x8FC7;&#x6B63;&#x786E;&#x7684;&#x65B9;&#x6CD5;&#x6B63;&#x786E;&#x8FD4;&#x56DE;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#xFF1A; wikisearch.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import {Http} from &apos;@angular/http&apos;; import {Injectable} from &apos;@angular/core&apos;; import {Observable} from &apos;rxjs&apos;; import &apos;rxjs/add/operator/map&apos; @Injectable() export class SearchWiki { constructor (private http: Http) {} search(term: string): Observableany { return this.http.get( &apos;https://en.wikipedia.org/w/api.php?&apos; + &apos;action=query&amp;list=search&amp;srsearch=&apos; + term ).map((response) = response.json()); } searchXML(term: string): Observableany { return this.http.get( &apos;https://en.wikipedia.org/w/api.php?&apos; + &apos;action=query&amp;list=search&amp;format=xmlfm&amp;srsearch=&apos; + term ); } } &#x8FD9;&#x91CC;&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x670D;&#x52A1;&#x3002; &#x5B83;&#x5C06;&#x4F7F;&#x7528;&#x641C;&#x7D22;&#x9879;&#x67E5;&#x8BE2;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x7684;Observable&#x3002; &#x641C;&#x7D22;&#x529F;&#x80FD;&#x5C06;&#x4F7F;&#x7528;&#x63D0;&#x4F9B;&#x7684;&#x672F;&#x8BED;&#x8FDB;&#x884C;GET&#x8BF7;&#x6C42;&#xFF0C;searchXML&#x65B9;&#x6CD5;&#x5C06;&#x6267;&#x884C;&#x76F8;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x4F46;&#x8BF7;&#x6C42;&#x54CD;&#x5E94;&#x4E3A;XML&#x800C;&#x4E0D;&#x662F;JSON&#x3002; &#x6B63;&#x5982;&#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5B83;&#x53D6;&#x51B3;&#x4E8E;HTTP&#x6A21;&#x5757;&#x5411;wikipedia.org&#x53D1;&#x51FA;&#x8BF7;&#x6C42;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x7B56;&#x7565;&#x662F;&#x68C0;&#x67E5;&#x670D;&#x52A1;&#x662F;&#x5426;&#x5DF2;&#x8BF7;&#x6C42;&#x6B63;&#x786E;&#x7684;&#x7F51;&#x5740;&#xFF0C;&#x4E00;&#x65E6;&#x6211;&#x4EEC;&#x56DE;&#x590D;&#x4E86;&#x6A21;&#x62DF;&#x6570;&#x636E;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x8981;&#x9A8C;&#x8BC1;&#x5B83;&#x662F;&#x5426;&#x8FD4;&#x56DE;&#x76F8;&#x540C;&#x7684;&#x6570;&#x636E;&#x3002;"},"Testing/injecting-dependencies.html":{"title":"","path":"\\Testing\\injecting-dependencies.html","body":"注入依赖和DOM修改 在前面的例子中，我们测试的类 MessageComponent 没有任何注入的依赖。 在Angular 2中，组件通常依赖于服务和其他类（管道/提供程序等）来运行，这将被注入到组件类的构造函数中。 当测试这些组件时，我们自己注入依赖。 由于这是一个Angular特定的例程，没有用于完成这个的纯Jasmine函数。 Angular在 @angular/core/testing 中提供了许多函数，使我们能够有效地测试我们的组件。 让我们来看一个基本组件： quote.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  QuoteService  from './quote.service' ; import  Component  from '@angular/core' ; @Component ( selector: 'my-quote' , template: 'h3Random Quote/h3 divquote/div' ) export class QuoteComponent  quote: string ; constructor ( private quoteService: QuoteService ); getQuote()  this .quoteService.getQuote().then( ( quote ) =  this .quote = quote; ); ;  此组件依赖于 QuoteService 来获取随机报价，然后它将显示。 类很简单 - 它只有 getQuote 函数，它将修改DOM，因此它将是我们测试的主要目标。 为了测试这个组件，我们需要启动 QuoteComponent 类。 Angular测试库提供了一个名为 TestBed 的实用程序。 这允许我们配置一个测试模块，我们可以提供模拟依赖。 此外，它将为我们创建组件并返回一个组件 fixture ，我们可以对其执行测试操作。 quote.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 import  QuoteService  from './quote.service' ; import  QuoteComponent  from './quote.component' ; import  provide, destroyPlatform  from '@angular/core' ; import  async , inject, TestBed,  from '@angular/core/testing' ; import  BrowserDynamicTestingModule, platformBrowserDynamicTesting  from '@angular/platform-browser-dynamic/testing' ; class MockQuoteService  public quote: string = 'Test quote' ; getQuote()  return Promise .resolve( this .quote);   describe( 'Testing Quote Component' , () =  let fixture; beforeEach( () = destroyPlatform()); beforeEach( () =  TestBed.initTestEnvironment( BrowserDynamicTestingModule, platformBrowserDynamicTesting() ); TestBed.configureTestingModule( declarations: [ QuoteComponent ], providers: [  provide: QuoteService, useClass: MockQuoteService  ] ); fixture = TestBed.createComponent(QuoteComponent); fixture.detectChanges(); ); it( 'Should get quote' , async (inject([], () =  fixture.componentInstance.getQuote(); fixture.whenStable() .then( () =  fixture.detectChanges(); return fixture.whenStable(); ) .then( () =  const compiled = fixture.debugElement.nativeElement; expect(compiled.querySelector( 'div' ).innerText).toEqual( 'Test quote' ); ); ))); ); View Example 测试 QuoteComponent 是一个相当简单的过程。我们想创建一个 QuoteComponent ，给它一个报价，看看它是否出现在DOM中。这个过程需要我们创建组件，传入任何依赖项，触发组件执行一个动作，然后查看DOM，看看动作是否是我们所期望的。 让我们来看看上面的单元测试是如何实现的。 我们使用 TestBed.initTestingEnvironment 创建一个使用 BrowserDynamicTestingModule 和 platformBrowserDynamicTesting 作为参数的测试平台，它们也从Angular导入，并允许应用程序被引导进行测试。这对于使用 TestBed 的所有单元测试都是必要的。请注意，在每次测试运行之前，该平台将被销毁并重置。 我们使用 TestBed.configureTestingModule 来提供我们的组件所需的任何依赖项。 这里我们的组件依赖于 QuoteService 来获取数据。 我们自己模拟这些数据，从而让我们控制我们期望出现的价值。 优秀的做法是将组件测试与服务测试分开 - 这使得测试更容易，因为您一次只关注应用程序的一个方面。 如果您的服务或组件失败，您将如何知道哪个是罪魁祸首？ 我们使用我们的mock类 MockQuoteService 注入 QuoteService 依赖，在这里我们将为组件提供模拟数据。 接下来我们使用 TestBed.createComponent(QuoteComponent) 创建一个 fixture ，供我们在我们的测试中使用。 这将创建一个我们的组件的新实例，完成任何角度特定的例程，如依赖注入。 fixture是一个强大的工具，允许我们查询组件渲染的DOM，以及更改DOM元素和组件属性。 它是测试组件的主要接入点，我们广泛使用它。 在 Should get quote 测试中，我们通过 fixture.componentInstance 属性访问了我们的组件。然后我们调用 getQuote 来启动我们在 QuoteComponent 组件中的唯一操作。我们通过使用它的 whenStable 方法来运行测试，该方法将确保 getQuote() 中的promise已经解决，给组件一个设置报价值的机会。我们调用 fixture.detectChanges 来监视对DOM发生的任何更改，并使用 fixture.debugElement.nativeElement 属性来访问那些基础DOM元素。 现在我们可以检查由我们的 QuoteComponent 渲染的DOM是否包含我们通过 QuoteService 设置的报价。最后一行试图断言DOM的div标签包含模拟报价’Test Quote’。如果是，则我们的组件通过测试并按预期工作；如果没有，这意味着我们的组件不正确地输出引号。 我们的报价测试包在 async() 中。这是为了允许我们的测试在异步测试区域运行。使用异步将创建一个测试区域，这将确保所有异步功能在结束测试之前已经完成。"},"Testing/injecting-dependencies.html#注入依赖和DOM修改":{"title":"&#x6CE8;&#x5165;&#x4F9D;&#x8D56;&#x548C;DOM&#x4FEE;&#x6539;","path":"\\Testing\\injecting-dependencies.html#注入依赖和DOM修改","body":"&#x5728;&#x524D;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x6D4B;&#x8BD5;&#x7684;&#x7C7B; MessageComponent &#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x6CE8;&#x5165;&#x7684;&#x4F9D;&#x8D56;&#x3002; &#x5728;Angular 2&#x4E2D;&#xFF0C;&#x7EC4;&#x4EF6;&#x901A;&#x5E38;&#x4F9D;&#x8D56;&#x4E8E;&#x670D;&#x52A1;&#x548C;&#x5176;&#x4ED6;&#x7C7B;&#xFF08;&#x7BA1;&#x9053;/&#x63D0;&#x4F9B;&#x7A0B;&#x5E8F;&#x7B49;&#xFF09;&#x6765;&#x8FD0;&#x884C;&#xFF0C;&#x8FD9;&#x5C06;&#x88AB;&#x6CE8;&#x5165;&#x5230;&#x7EC4;&#x4EF6;&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x3002; &#x5F53;&#x6D4B;&#x8BD5;&#x8FD9;&#x4E9B;&#x7EC4;&#x4EF6;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x6CE8;&#x5165;&#x4F9D;&#x8D56;&#x3002; &#x7531;&#x4E8E;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;Angular&#x7279;&#x5B9A;&#x7684;&#x4F8B;&#x7A0B;&#xFF0C;&#x6CA1;&#x6709;&#x7528;&#x4E8E;&#x5B8C;&#x6210;&#x8FD9;&#x4E2A;&#x7684;&#x7EAF;Jasmine&#x51FD;&#x6570;&#x3002; Angular&#x5728; @angular/core/testing &#x4E2D;&#x63D0;&#x4F9B;&#x4E86;&#x8BB8;&#x591A;&#x51FD;&#x6570;&#xFF0C;&#x4F7F;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x6709;&#x6548;&#x5730;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x7EC4;&#x4EF6;&#xFF1A; quote.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import { QuoteService } from &apos;./quote.service&apos; ; import { Component } from &apos;@angular/core&apos; ; @Component ({ selector: &apos;my-quote&apos; , template: &apos;h3Random Quote/h3 div{{quote}}/div&apos; }) export class QuoteComponent { quote: string ; constructor ( private quoteService: QuoteService ){}; getQuote() { this .quoteService.getQuote().then( ( quote ) = { this .quote = quote; }); }; } &#x6B64;&#x7EC4;&#x4EF6;&#x4F9D;&#x8D56;&#x4E8E; QuoteService &#x6765;&#x83B7;&#x53D6;&#x968F;&#x673A;&#x62A5;&#x4EF7;&#xFF0C;&#x7136;&#x540E;&#x5B83;&#x5C06;&#x663E;&#x793A;&#x3002; &#x7C7B;&#x5F88;&#x7B80;&#x5355; - &#x5B83;&#x53EA;&#x6709; getQuote &#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5C06;&#x4FEE;&#x6539;DOM&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x5C06;&#x662F;&#x6211;&#x4EEC;&#x6D4B;&#x8BD5;&#x7684;&#x4E3B;&#x8981;&#x76EE;&#x6807;&#x3002; &#x4E3A;&#x4E86;&#x6D4B;&#x8BD5;&#x8FD9;&#x4E2A;&#x7EC4;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x542F;&#x52A8; QuoteComponent &#x7C7B;&#x3002; Angular&#x6D4B;&#x8BD5;&#x5E93;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; TestBed &#x7684;&#x5B9E;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x8FD9;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6A21;&#x5757;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x6A21;&#x62DF;&#x4F9D;&#x8D56;&#x3002; &#x6B64;&#x5916;&#xFF0C;&#x5B83;&#x5C06;&#x4E3A;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x7EC4;&#x4EF6;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7EC4;&#x4EF6; fixture &#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5BF9;&#x5176;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x64CD;&#x4F5C;&#x3002; quote.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 import { QuoteService } from &apos;./quote.service&apos; ; import { QuoteComponent } from &apos;./quote.component&apos; ; import { provide, destroyPlatform } from &apos;@angular/core&apos; ; import { async , inject, TestBed, } from &apos;@angular/core/testing&apos; ; import { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from &apos;@angular/platform-browser-dynamic/testing&apos; ; class MockQuoteService { public quote: string = &apos;Test quote&apos; ; getQuote() { return Promise .resolve( this .quote); } } describe( &apos;Testing Quote Component&apos; , () = { let fixture; beforeEach( () = destroyPlatform()); beforeEach( () = { TestBed.initTestEnvironment( BrowserDynamicTestingModule, platformBrowserDynamicTesting() ); TestBed.configureTestingModule({ declarations: [ QuoteComponent ], providers: [ { provide: QuoteService, useClass: MockQuoteService } ] }); fixture = TestBed.createComponent(QuoteComponent); fixture.detectChanges(); }); it( &apos;Should get quote&apos; , async (inject([], () = { fixture.componentInstance.getQuote(); fixture.whenStable() .then( () = { fixture.detectChanges(); return fixture.whenStable(); }) .then( () = { const compiled = fixture.debugElement.nativeElement; expect(compiled.querySelector( &apos;div&apos; ).innerText).toEqual( &apos;Test quote&apos; ); }); }))); }); View Example &#x6D4B;&#x8BD5; QuoteComponent &#x662F;&#x4E00;&#x4E2A;&#x76F8;&#x5F53;&#x7B80;&#x5355;&#x7684;&#x8FC7;&#x7A0B;&#x3002;&#x6211;&#x4EEC;&#x60F3;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; QuoteComponent &#xFF0C;&#x7ED9;&#x5B83;&#x4E00;&#x4E2A;&#x62A5;&#x4EF7;&#xFF0C;&#x770B;&#x770B;&#x5B83;&#x662F;&#x5426;&#x51FA;&#x73B0;&#x5728;DOM&#x4E2D;&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x7EC4;&#x4EF6;&#xFF0C;&#x4F20;&#x5165;&#x4EFB;&#x4F55;&#x4F9D;&#x8D56;&#x9879;&#xFF0C;&#x89E6;&#x53D1;&#x7EC4;&#x4EF6;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x52A8;&#x4F5C;&#xFF0C;&#x7136;&#x540E;&#x67E5;&#x770B;DOM&#xFF0C;&#x770B;&#x770B;&#x52A8;&#x4F5C;&#x662F;&#x5426;&#x662F;&#x6211;&#x4EEC;&#x6240;&#x671F;&#x671B;&#x7684;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x4E0A;&#x9762;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x662F;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#x3002; &#x6211;&#x4EEC;&#x4F7F;&#x7528; TestBed.initTestingEnvironment &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4F7F;&#x7528; BrowserDynamicTestingModule &#x548C; platformBrowserDynamicTesting &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x6D4B;&#x8BD5;&#x5E73;&#x53F0;&#xFF0C;&#x5B83;&#x4EEC;&#x4E5F;&#x4ECE;Angular&#x5BFC;&#x5165;&#xFF0C;&#x5E76;&#x5141;&#x8BB8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x88AB;&#x5F15;&#x5BFC;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002;&#x8FD9;&#x5BF9;&#x4E8E;&#x4F7F;&#x7528; TestBed &#x7684;&#x6240;&#x6709;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x90FD;&#x662F;&#x5FC5;&#x8981;&#x7684;&#x3002;&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x5728;&#x6BCF;&#x6B21;&#x6D4B;&#x8BD5;&#x8FD0;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x8BE5;&#x5E73;&#x53F0;&#x5C06;&#x88AB;&#x9500;&#x6BC1;&#x5E76;&#x91CD;&#x7F6E;&#x3002; &#x6211;&#x4EEC;&#x4F7F;&#x7528; TestBed.configureTestingModule &#x6765;&#x63D0;&#x4F9B;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x6240;&#x9700;&#x7684;&#x4EFB;&#x4F55;&#x4F9D;&#x8D56;&#x9879;&#x3002; &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x4F9D;&#x8D56;&#x4E8E; QuoteService &#x6765;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x3002; &#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x6A21;&#x62DF;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#xFF0C;&#x4ECE;&#x800C;&#x8BA9;&#x6211;&#x4EEC;&#x63A7;&#x5236;&#x6211;&#x4EEC;&#x671F;&#x671B;&#x51FA;&#x73B0;&#x7684;&#x4EF7;&#x503C;&#x3002; &#x4F18;&#x79C0;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5C06;&#x7EC4;&#x4EF6;&#x6D4B;&#x8BD5;&#x4E0E;&#x670D;&#x52A1;&#x6D4B;&#x8BD5;&#x5206;&#x5F00; - &#x8FD9;&#x4F7F;&#x5F97;&#x6D4B;&#x8BD5;&#x66F4;&#x5BB9;&#x6613;&#xFF0C;&#x56E0;&#x4E3A;&#x60A8;&#x4E00;&#x6B21;&#x53EA;&#x5173;&#x6CE8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x9762;&#x3002; &#x5982;&#x679C;&#x60A8;&#x7684;&#x670D;&#x52A1;&#x6216;&#x7EC4;&#x4EF6;&#x5931;&#x8D25;&#xFF0C;&#x60A8;&#x5C06;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x54EA;&#x4E2A;&#x662F;&#x7F6A;&#x9B41;&#x7978;&#x9996;&#xFF1F; &#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x6211;&#x4EEC;&#x7684;mock&#x7C7B; MockQuoteService &#x6CE8;&#x5165; QuoteService &#x4F9D;&#x8D56;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5C06;&#x4E3A;&#x7EC4;&#x4EF6;&#x63D0;&#x4F9B;&#x6A21;&#x62DF;&#x6570;&#x636E;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x4F7F;&#x7528; TestBed.createComponent(QuoteComponent) &#x521B;&#x5EFA;&#x4E00;&#x4E2A; fixture &#xFF0C;&#x4F9B;&#x6211;&#x4EEC;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x4E2D;&#x4F7F;&#x7528;&#x3002; &#x8FD9;&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x7684;&#x65B0;&#x5B9E;&#x4F8B;&#xFF0C;&#x5B8C;&#x6210;&#x4EFB;&#x4F55;&#x89D2;&#x5EA6;&#x7279;&#x5B9A;&#x7684;&#x4F8B;&#x7A0B;&#xFF0C;&#x5982;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x3002; fixture&#x662F;&#x4E00;&#x4E2A;&#x5F3A;&#x5927;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x67E5;&#x8BE2;&#x7EC4;&#x4EF6;&#x6E32;&#x67D3;&#x7684;DOM&#xFF0C;&#x4EE5;&#x53CA;&#x66F4;&#x6539;DOM&#x5143;&#x7D20;&#x548C;&#x7EC4;&#x4EF6;&#x5C5E;&#x6027;&#x3002; &#x5B83;&#x662F;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#x7684;&#x4E3B;&#x8981;&#x63A5;&#x5165;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x5728; Should get quote &#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7; fixture.componentInstance &#x5C5E;&#x6027;&#x8BBF;&#x95EE;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x3002;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x8C03;&#x7528; getQuote &#x6765;&#x542F;&#x52A8;&#x6211;&#x4EEC;&#x5728; QuoteComponent &#x7EC4;&#x4EF6;&#x4E2D;&#x7684;&#x552F;&#x4E00;&#x64CD;&#x4F5C;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x5B83;&#x7684; whenStable &#x65B9;&#x6CD5;&#x6765;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x5C06;&#x786E;&#x4FDD; getQuote() &#x4E2D;&#x7684;promise&#x5DF2;&#x7ECF;&#x89E3;&#x51B3;&#xFF0C;&#x7ED9;&#x7EC4;&#x4EF6;&#x4E00;&#x4E2A;&#x8BBE;&#x7F6E;&#x62A5;&#x4EF7;&#x503C;&#x7684;&#x673A;&#x4F1A;&#x3002;&#x6211;&#x4EEC;&#x8C03;&#x7528; fixture.detectChanges &#x6765;&#x76D1;&#x89C6;&#x5BF9;DOM&#x53D1;&#x751F;&#x7684;&#x4EFB;&#x4F55;&#x66F4;&#x6539;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; fixture.debugElement.nativeElement &#x5C5E;&#x6027;&#x6765;&#x8BBF;&#x95EE;&#x90A3;&#x4E9B;&#x57FA;&#x7840;DOM&#x5143;&#x7D20;&#x3002; &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x68C0;&#x67E5;&#x7531;&#x6211;&#x4EEC;&#x7684; QuoteComponent &#x6E32;&#x67D3;&#x7684;DOM&#x662F;&#x5426;&#x5305;&#x542B;&#x6211;&#x4EEC;&#x901A;&#x8FC7; QuoteService &#x8BBE;&#x7F6E;&#x7684;&#x62A5;&#x4EF7;&#x3002;&#x6700;&#x540E;&#x4E00;&#x884C;&#x8BD5;&#x56FE;&#x65AD;&#x8A00;DOM&#x7684;div&#x6807;&#x7B7E;&#x5305;&#x542B;&#x6A21;&#x62DF;&#x62A5;&#x4EF7;&#x2019;Test Quote&#x2019;&#x3002;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x5219;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x901A;&#x8FC7;&#x6D4B;&#x8BD5;&#x5E76;&#x6309;&#x9884;&#x671F;&#x5DE5;&#x4F5C;&#xFF1B;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x4E0D;&#x6B63;&#x786E;&#x5730;&#x8F93;&#x51FA;&#x5F15;&#x53F7;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x62A5;&#x4EF7;&#x6D4B;&#x8BD5;&#x5305;&#x5728; async() &#x4E2D;&#x3002;&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x5728;&#x5F02;&#x6B65;&#x6D4B;&#x8BD5;&#x533A;&#x57DF;&#x8FD0;&#x884C;&#x3002;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x533A;&#x57DF;&#xFF0C;&#x8FD9;&#x5C06;&#x786E;&#x4FDD;&#x6240;&#x6709;&#x5F02;&#x6B65;&#x529F;&#x80FD;&#x5728;&#x7ED3;&#x675F;&#x6D4B;&#x8BD5;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x3002;"},"Testing/json-xhr.html":{"title":"","path":"\\Testing\\json-xhr.html","body":"测试JSONP和XHR后端 一些服务利用JSONP或XHR模块获取数据，而不是传统的HTTP模块。 我们使用相同的策略来测试这些服务 - 创建一个模拟后端，初始化服务，并测试，看看我们的服务做出的请求是否正确，以及如果通过后端返回的数据成功地用于该服务。 幸运的是，依赖于XHR模块的服务的测试方式与使用HTTP模块的服务完全相同。 唯一的区别是在哪个类用于模拟后端。 在使用HTTP模块的服务中，用 MockBackend 类；在使用XHR的服务中，使用 XHRBackend 代替。 其他一切都保持不变 不幸的是，使用JSONP模块的服务使用明显不同的类来模拟后端。 MockBrowserJsonp 类用于此场景。"},"Testing/json-xhr.html#测试JSONP和XHR后端":{"title":"&#x6D4B;&#x8BD5;JSONP&#x548C;XHR&#x540E;&#x7AEF;","path":"\\Testing\\json-xhr.html#测试JSONP和XHR后端","body":"&#x4E00;&#x4E9B;&#x670D;&#x52A1;&#x5229;&#x7528;JSONP&#x6216;XHR&#x6A21;&#x5757;&#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4F20;&#x7EDF;&#x7684;HTTP&#x6A21;&#x5757;&#x3002; &#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x7B56;&#x7565;&#x6765;&#x6D4B;&#x8BD5;&#x8FD9;&#x4E9B;&#x670D;&#x52A1; - &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6A21;&#x62DF;&#x540E;&#x7AEF;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x670D;&#x52A1;&#xFF0C;&#x5E76;&#x6D4B;&#x8BD5;&#xFF0C;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x505A;&#x51FA;&#x7684;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x6B63;&#x786E;&#xFF0C;&#x4EE5;&#x53CA;&#x5982;&#x679C;&#x901A;&#x8FC7;&#x540E;&#x7AEF;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x6210;&#x529F;&#x5730;&#x7528;&#x4E8E;&#x8BE5;&#x670D;&#x52A1;&#x3002; &#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x4F9D;&#x8D56;&#x4E8E;XHR&#x6A21;&#x5757;&#x7684;&#x670D;&#x52A1;&#x7684;&#x6D4B;&#x8BD5;&#x65B9;&#x5F0F;&#x4E0E;&#x4F7F;&#x7528;HTTP&#x6A21;&#x5757;&#x7684;&#x670D;&#x52A1;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x3002; &#x552F;&#x4E00;&#x7684;&#x533A;&#x522B;&#x662F;&#x5728;&#x54EA;&#x4E2A;&#x7C7B;&#x7528;&#x4E8E;&#x6A21;&#x62DF;&#x540E;&#x7AEF;&#x3002; &#x5728;&#x4F7F;&#x7528;HTTP&#x6A21;&#x5757;&#x7684;&#x670D;&#x52A1;&#x4E2D;&#xFF0C;&#x7528; MockBackend &#x7C7B;&#xFF1B;&#x5728;&#x4F7F;&#x7528;XHR&#x7684;&#x670D;&#x52A1;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528; XHRBackend &#x4EE3;&#x66FF;&#x3002; &#x5176;&#x4ED6;&#x4E00;&#x5207;&#x90FD;&#x4FDD;&#x6301;&#x4E0D;&#x53D8; &#x4E0D;&#x5E78;&#x7684;&#x662F;&#xFF0C;&#x4F7F;&#x7528;JSONP&#x6A21;&#x5757;&#x7684;&#x670D;&#x52A1;&#x4F7F;&#x7528;&#x660E;&#x663E;&#x4E0D;&#x540C;&#x7684;&#x7C7B;&#x6765;&#x6A21;&#x62DF;&#x540E;&#x7AEF;&#x3002; MockBrowserJsonp &#x7C7B;&#x7528;&#x4E8E;&#x6B64;&#x573A;&#x666F;&#x3002;"},"Testing/karma-config.html":{"title":"","path":"\\Testing\\karma-config.html","body":"Karma 配置 Karma是我们测试工作流程的基础。 它集合了我们的其他测试工具来定义我们想要使用的框架，测试环境，我们想要执行的具体操作等。为了做到这一点，Karma依赖于一个以默认 karma.conf.js 命名的配置文件。 您可以通过 karma init 命令生成新的配置文件，这将指导您完成几个基本问题，以便运行最基本的设置。 概述 通过导出一个接受Karma将要使用的配置对象的函数，可以将配置文件放在一起。 修改此对象的某些属性将告诉Karma我们想要做什么。 让我们来看一下在这个配置文件中使用的一些关键属性： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 module .exports = ( config ) =  const coverage = config.singleRun ? [ 'coverage' ] : []; config.set( frameworks: [...], plugins: [ ... ], files: [ ... ], preprocessors:  ... , webpack:  ... , reporters: [ ... ], coverageReporter:  ... , port: 9999 , browsers: [ 'Chrome' ], // 或者: 'PhantomJS' colors: true , logLevel: config.LOG_INFO, autoWatch: true , captureTimeout: 6000 , ); ; 框架 1 2 3 frameworks: [ &apos;jasmine&apos;, ], frameworks 是我们要使用的测试框架的列表。这些框架必须通过NPM作为依赖项安装在我们的项目中，或/和作为Karma插件。 插件 1 2 3 4 5 6 7 plugins: [ &apos;karma-jasmine&apos;, &apos;karma-webpack&apos;, &apos;karma-coverage&apos;, &apos;karma-remap-istanbul&apos;, &apos;karma-chrome-launcher&apos;, ], 将karma与测试框架（如Jasmine）或构建系统（如Webpack）集成的插件。 files 1 2 3 4 5 6 7 8 9 files: [ &apos;./src/tests.entry.ts&apos;,  pattern: &apos;**/*.map&apos;, served: true, included: false, watched: true, , ], files 是要加载到浏览器/测试环境中的文件的列表。 这些文件会按顺序加载，所以顺序很重要。 文件列表还可以采用glob模式的形式，因为为每个创建的新测试脚本手动添加新文件变得相当繁琐。 在angular2-redux-starter karma.conf.js中，我们将我们希望包含的测试文件放在一个单独的文件 - src / tests.entry.ts 中，它包含一个require调用，使用regex模式导入文件 . spec.ts 文件扩展名。 随着项目越来越大，要包括的文件数量越来越复杂，这是一个很好的做法是将文件导入到一个单独的文件中 - 这使 karma.conf.js 文件更清晰，更易读。 这里是我们的 src / tests.entry.ts 看起来像： 1 2 let testContext = ( context?: Function require).context(&apos;./&apos;, true, /\\.test\\.ts/); testContext.keys().forEach(testContext); 预处理器 1 2 3 4 5 6 7 8 9 preprocessors:  &apos;./src/tests.entry.ts&apos;: [ &apos;webpack&apos;, &apos;sourcemap&apos;, ], &apos;./src/**/!(*.test|tests.*).(ts|js)&apos;: [ &apos;sourcemap&apos;, ],  preprocessors 允许在单元测试文件的内容被执行之前对其执行一些操作。 这些操作通过使用Karma插件来执行，并且经常用于换行操作。 由于我们在TypeScript中编写单元测试，因此.ts文件必须转换为纯Javascript以便在基于浏览器的环境中运行。 在angular2-redux-starter中，这个过程是用 webpack 完成的，所以我们在所有的测试文件（以 .spec.ts 结尾的文件）上显式调用webpack处理器。 我们还加载源自源映射处理器的换代的任何 sourcemap 文件。 webpack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 webpack:  plugins, entry: './src/tests.entry.ts' , devtool: 'inline-source-map' , resolve:  extensions: [ '.webpack.js' , '.web.js' , '.ts' , '.js' ], , module :  rules: combinedLoaders().concat( config.singleRun ? [ loaders.istanbulInstrumenter ] : [ ]), , stats:  colors : true , reasons : true , , webpackServer:  noInfo: true , // prevent console spamming when running in Karma!  如果项目使用webpack，那么在Karma配置对象中的属性webpack是我们可以使用Karma配置webpack的位置。 在angular2-redux-starter中，插件和加载程序从它们自己的文件中导出，以便通过webpack config和karma config导入，使配置对象更小。 使用webpack，我们可以配置如何捆绑我们的单元测试; 也就是说，是将所有测试打包到单个包中，还是将每个单元测试都包含在自己的包中等。无论如何，单元测试不应与其余应用程序代码捆绑在一起（尤其是在生产中！）。 在angular2-redux-starter中，我们选择将所有单元测试捆绑在一起。 coverageReporters 和 reporters 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 reporters: [ 'spec' ] .concat(coverage) .concat(coverage.length  0 ? [ 'karma-remap-istanbul' ] : []), remapIstanbulReporter:  src: 'coverage/chrome/coverage-final.json' , reports:  html: 'coverage' , , , coverageReporter:  reporters: [  type : 'json' , ], dir: './coverage/' , subdir: ( browser ) =  return browser.toLowerCase().split( /[ /-]/ )[ 0 ]; // returns 'chrome' , , coverageReporter 用于配置我们的代码覆盖率工具（我们的工具链使用伊斯坦布尔）的结果输出。 这里我们指定以JSON和HTML格式输出结果。 报告将显示在 coverage/ 文件夹中。 reporters 是在测试循环中使用的 reporters 的列表。 reporters 可以被认为是用于报告核心单元测试之外的测试例程的某些方面的模块化工具。 代码覆盖是 reporters 的一个例子 - 我们希望它报告我们的代码有多少被测试。 有更多的 reporters 可用于Karma ，可以帮助制定您的测试工作流。 环境配置 1 2 3 4 5 6 port: 9999, browsers: [&apos;Chrome&apos;], // Alternatively: &apos;PhantomJS&apos; colors: true, logLevel: config.LOG_INFO, autoWatch: true, captureTimeout: 6000, port , browsers 和 singleRun 配置我们的单元测试将运行的环境。 browsers 属性指定了我们希望Karma启动和捕获输出的浏览器。 我们可以使用Chrome，Firefox，Safari，IE或Opera（需要为每个浏览器安装额外的Karma启动器）。 对于无浏览器的DOM实例，我们可以使用PhantomJS（如工具链部分中所述）。 我们还可以通过浏览到 http://localhost:port 手动捕获浏览器的输出，其中port是port属性中指定的数字（如果未指定，则默认值为9876）。 属性 singleRun 控制Karma如何执行，如果设置为 true ，Karma将启动配置的浏览器，运行测试，然后退出 0 或 1 ，这取决于是否所有测试通过。 完成配置 定制所有这些属性的最终结果是在 angular-redux-starter中的karma.conf.js文件 。 其他资源 这只是angular2-redux-starter项目使用的karma.conf.js中的核心属性的示例。 还有更多的属性可以用于扩展和配置Karma的功能 - 看看完整的官方API文档 。"},"Testing/karma-config.html#Karma-配置":{"title":"Karma &#x914D;&#x7F6E;","path":"\\Testing\\karma-config.html#Karma-配置","body":"Karma&#x662F;&#x6211;&#x4EEC;&#x6D4B;&#x8BD5;&#x5DE5;&#x4F5C;&#x6D41;&#x7A0B;&#x7684;&#x57FA;&#x7840;&#x3002; &#x5B83;&#x96C6;&#x5408;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x5176;&#x4ED6;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#x6765;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#xFF0C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x6267;&#x884C;&#x7684;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x7B49;&#x3002;&#x4E3A;&#x4E86;&#x505A;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;Karma&#x4F9D;&#x8D56;&#x4E8E;&#x4E00;&#x4E2A;&#x4EE5;&#x9ED8;&#x8BA4; karma.conf.js &#x547D;&#x540D;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002; &#x60A8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; karma init &#x547D;&#x4EE4;&#x751F;&#x6210;&#x65B0;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x5C06;&#x6307;&#x5BFC;&#x60A8;&#x5B8C;&#x6210;&#x51E0;&#x4E2A;&#x57FA;&#x672C;&#x95EE;&#x9898;&#xFF0C;&#x4EE5;&#x4FBF;&#x8FD0;&#x884C;&#x6700;&#x57FA;&#x672C;&#x7684;&#x8BBE;&#x7F6E;&#x3002;"},"Testing/karma-config.html#概述":{"title":"&#x6982;&#x8FF0;","path":"\\Testing\\karma-config.html#概述","body":"&#x901A;&#x8FC7;&#x5BFC;&#x51FA;&#x4E00;&#x4E2A;&#x63A5;&#x53D7;Karma&#x5C06;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x914D;&#x7F6E;&#x5BF9;&#x8C61;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x653E;&#x5728;&#x4E00;&#x8D77;&#x3002; &#x4FEE;&#x6539;&#x6B64;&#x5BF9;&#x8C61;&#x7684;&#x67D0;&#x4E9B;&#x5C5E;&#x6027;&#x5C06;&#x544A;&#x8BC9;Karma&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x505A;&#x4EC0;&#x4E48;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x5728;&#x8FD9;&#x4E2A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x4E00;&#x4E9B;&#x5173;&#x952E;&#x5C5E;&#x6027;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 module .exports = ( config ) = { const coverage = config.singleRun ? [ &apos;coverage&apos; ] : []; config.set({ frameworks: [...], plugins: [ ... ], files: [ ... ], preprocessors: { ... }, webpack: { ... }, reporters: [ ... ], coverageReporter: { ... }, port: 9999 , browsers: [ &apos;Chrome&apos; ], // &#x6216;&#x8005;: &apos;PhantomJS&apos; colors: true , logLevel: config.LOG_INFO, autoWatch: true , captureTimeout: 6000 , }); }; &#x6846;&#x67B6; 1 2 3 frameworks: [ &apos;jasmine&apos;, ], frameworks &#x662F;&#x6211;&#x4EEC;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x7684;&#x5217;&#x8868;&#x3002;&#x8FD9;&#x4E9B;&#x6846;&#x67B6;&#x5FC5;&#x987B;&#x901A;&#x8FC7;NPM&#x4F5C;&#x4E3A;&#x4F9D;&#x8D56;&#x9879;&#x5B89;&#x88C5;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x6216;/&#x548C;&#x4F5C;&#x4E3A;Karma&#x63D2;&#x4EF6;&#x3002; &#x63D2;&#x4EF6; 1 2 3 4 5 6 7 plugins: [ &apos;karma-jasmine&apos;, &apos;karma-webpack&apos;, &apos;karma-coverage&apos;, &apos;karma-remap-istanbul&apos;, &apos;karma-chrome-launcher&apos;, ], &#x5C06;karma&#x4E0E;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#xFF08;&#x5982;Jasmine&#xFF09;&#x6216;&#x6784;&#x5EFA;&#x7CFB;&#x7EDF;&#xFF08;&#x5982;Webpack&#xFF09;&#x96C6;&#x6210;&#x7684;&#x63D2;&#x4EF6;&#x3002; files 1 2 3 4 5 6 7 8 9 files: [ &apos;./src/tests.entry.ts&apos;, { pattern: &apos;**/*.map&apos;, served: true, included: false, watched: true, }, ], files &#x662F;&#x8981;&#x52A0;&#x8F7D;&#x5230;&#x6D4F;&#x89C8;&#x5668;/&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x4E2D;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x5217;&#x8868;&#x3002; &#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x4F1A;&#x6309;&#x987A;&#x5E8F;&#x52A0;&#x8F7D;&#xFF0C;&#x6240;&#x4EE5;&#x987A;&#x5E8F;&#x5F88;&#x91CD;&#x8981;&#x3002; &#x6587;&#x4EF6;&#x5217;&#x8868;&#x8FD8;&#x53EF;&#x4EE5;&#x91C7;&#x7528;glob&#x6A21;&#x5F0F;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x4E3A;&#x6BCF;&#x4E2A;&#x521B;&#x5EFA;&#x7684;&#x65B0;&#x6D4B;&#x8BD5;&#x811A;&#x672C;&#x624B;&#x52A8;&#x6DFB;&#x52A0;&#x65B0;&#x6587;&#x4EF6;&#x53D8;&#x5F97;&#x76F8;&#x5F53;&#x7E41;&#x7410;&#x3002; &#x5728;angular2-redux-starter karma.conf.js&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5305;&#x542B;&#x7684;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#x653E;&#x5728;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x6587;&#x4EF6; - src / tests.entry.ts &#x4E2D;&#xFF0C;&#x5B83;&#x5305;&#x542B;&#x4E00;&#x4E2A;require&#x8C03;&#x7528;&#xFF0C;&#x4F7F;&#x7528;regex&#x6A21;&#x5F0F;&#x5BFC;&#x5165;&#x6587;&#x4EF6; . spec.ts &#x6587;&#x4EF6;&#x6269;&#x5C55;&#x540D;&#x3002; &#x968F;&#x7740;&#x9879;&#x76EE;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x8981;&#x5305;&#x62EC;&#x7684;&#x6587;&#x4EF6;&#x6570;&#x91CF;&#x8D8A;&#x6765;&#x8D8A;&#x590D;&#x6742;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5C06;&#x6587;&#x4EF6;&#x5BFC;&#x5165;&#x5230;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x6587;&#x4EF6;&#x4E2D; - &#x8FD9;&#x4F7F; karma.conf.js &#x6587;&#x4EF6;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x66F4;&#x6613;&#x8BFB;&#x3002; &#x8FD9;&#x91CC;&#x662F;&#x6211;&#x4EEC;&#x7684; src / tests.entry.ts &#x770B;&#x8D77;&#x6765;&#x50CF;&#xFF1A; 1 2 let testContext = ({ context?: Function }require).context(&apos;./&apos;, true, /\\.test\\.ts/); testContext.keys().forEach(testContext); &#x9884;&#x5904;&#x7406;&#x5668; 1 2 3 4 5 6 7 8 9 preprocessors: { &apos;./src/tests.entry.ts&apos;: [ &apos;webpack&apos;, &apos;sourcemap&apos;, ], &apos;./src/**/!(*.test|tests.*).(ts|js)&apos;: [ &apos;sourcemap&apos;, ], } preprocessors &#x5141;&#x8BB8;&#x5728;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x88AB;&#x6267;&#x884C;&#x4E4B;&#x524D;&#x5BF9;&#x5176;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x64CD;&#x4F5C;&#x3002; &#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#x901A;&#x8FC7;&#x4F7F;&#x7528;Karma&#x63D2;&#x4EF6;&#x6765;&#x6267;&#x884C;&#xFF0C;&#x5E76;&#x4E14;&#x7ECF;&#x5E38;&#x7528;&#x4E8E;&#x6362;&#x884C;&#x64CD;&#x4F5C;&#x3002; &#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x5728;TypeScript&#x4E2D;&#x7F16;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF0C;&#x56E0;&#x6B64;.ts&#x6587;&#x4EF6;&#x5FC5;&#x987B;&#x8F6C;&#x6362;&#x4E3A;&#x7EAF;Javascript&#x4EE5;&#x4FBF;&#x5728;&#x57FA;&#x4E8E;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x73AF;&#x5883;&#x4E2D;&#x8FD0;&#x884C;&#x3002; &#x5728;angular2-redux-starter&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x662F;&#x7528; webpack &#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5728;&#x6240;&#x6709;&#x7684;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#xFF08;&#x4EE5; .spec.ts &#x7ED3;&#x5C3E;&#x7684;&#x6587;&#x4EF6;&#xFF09;&#x4E0A;&#x663E;&#x5F0F;&#x8C03;&#x7528;webpack&#x5904;&#x7406;&#x5668;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x52A0;&#x8F7D;&#x6E90;&#x81EA;&#x6E90;&#x6620;&#x5C04;&#x5904;&#x7406;&#x5668;&#x7684;&#x6362;&#x4EE3;&#x7684;&#x4EFB;&#x4F55; sourcemap &#x6587;&#x4EF6;&#x3002; webpack 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 webpack: { plugins, entry: &apos;./src/tests.entry.ts&apos; , devtool: &apos;inline-source-map&apos; , resolve: { extensions: [ &apos;.webpack.js&apos; , &apos;.web.js&apos; , &apos;.ts&apos; , &apos;.js&apos; ], }, module : { rules: combinedLoaders().concat( config.singleRun ? [ loaders.istanbulInstrumenter ] : [ ]), }, stats: { colors : true , reasons : true }, }, webpackServer: { noInfo: true , // prevent console spamming when running in Karma! } &#x5982;&#x679C;&#x9879;&#x76EE;&#x4F7F;&#x7528;webpack&#xFF0C;&#x90A3;&#x4E48;&#x5728;Karma&#x914D;&#x7F6E;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x5C5E;&#x6027;webpack&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Karma&#x914D;&#x7F6E;webpack&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x5728;angular2-redux-starter&#x4E2D;&#xFF0C;&#x63D2;&#x4EF6;&#x548C;&#x52A0;&#x8F7D;&#x7A0B;&#x5E8F;&#x4ECE;&#x5B83;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#x5BFC;&#x51FA;&#xFF0C;&#x4EE5;&#x4FBF;&#x901A;&#x8FC7;webpack config&#x548C;karma config&#x5BFC;&#x5165;&#xFF0C;&#x4F7F;&#x914D;&#x7F6E;&#x5BF9;&#x8C61;&#x66F4;&#x5C0F;&#x3002; &#x4F7F;&#x7528;webpack&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x5982;&#x4F55;&#x6346;&#x7ED1;&#x6211;&#x4EEC;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x662F;&#x5C06;&#x6240;&#x6709;&#x6D4B;&#x8BD5;&#x6253;&#x5305;&#x5230;&#x5355;&#x4E2A;&#x5305;&#x4E2D;&#xFF0C;&#x8FD8;&#x662F;&#x5C06;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x90FD;&#x5305;&#x542B;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x5305;&#x4E2D;&#x7B49;&#x3002;&#x65E0;&#x8BBA;&#x5982;&#x4F55;&#xFF0C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E0D;&#x5E94;&#x4E0E;&#x5176;&#x4F59;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#x6346;&#x7ED1;&#x5728;&#x4E00;&#x8D77;&#xFF08;&#x5C24;&#x5176;&#x662F;&#x5728;&#x751F;&#x4EA7;&#x4E2D;&#xFF01;&#xFF09;&#x3002; &#x5728;angular2-redux-starter&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x5C06;&#x6240;&#x6709;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x6346;&#x7ED1;&#x5728;&#x4E00;&#x8D77;&#x3002; coverageReporters &#x548C; reporters 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 reporters: [ &apos;spec&apos; ] .concat(coverage) .concat(coverage.length  0 ? [ &apos;karma-remap-istanbul&apos; ] : []), remapIstanbulReporter: { src: &apos;coverage/chrome/coverage-final.json&apos; , reports: { html: &apos;coverage&apos; , }, }, coverageReporter: { reporters: [ { type : &apos;json&apos; }, ], dir: &apos;./coverage/&apos; , subdir: ( browser ) = { return browser.toLowerCase().split( /[ /-]/ )[ 0 ]; // returns &apos;chrome&apos; }, }, coverageReporter &#x7528;&#x4E8E;&#x914D;&#x7F6E;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;&#x8986;&#x76D6;&#x7387;&#x5DE5;&#x5177;&#xFF08;&#x6211;&#x4EEC;&#x7684;&#x5DE5;&#x5177;&#x94FE;&#x4F7F;&#x7528;&#x4F0A;&#x65AF;&#x5766;&#x5E03;&#x5C14;&#xFF09;&#x7684;&#x7ED3;&#x679C;&#x8F93;&#x51FA;&#x3002; &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x4EE5;JSON&#x548C;HTML&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x3002; &#x62A5;&#x544A;&#x5C06;&#x663E;&#x793A;&#x5728; coverage/ &#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x3002; reporters &#x662F;&#x5728;&#x6D4B;&#x8BD5;&#x5FAA;&#x73AF;&#x4E2D;&#x4F7F;&#x7528;&#x7684; reporters &#x7684;&#x5217;&#x8868;&#x3002; reporters &#x53EF;&#x4EE5;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x7528;&#x4E8E;&#x62A5;&#x544A;&#x6838;&#x5FC3;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E4B;&#x5916;&#x7684;&#x6D4B;&#x8BD5;&#x4F8B;&#x7A0B;&#x7684;&#x67D0;&#x4E9B;&#x65B9;&#x9762;&#x7684;&#x6A21;&#x5757;&#x5316;&#x5DE5;&#x5177;&#x3002; &#x4EE3;&#x7801;&#x8986;&#x76D6;&#x662F; reporters &#x7684;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50; - &#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5B83;&#x62A5;&#x544A;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;&#x6709;&#x591A;&#x5C11;&#x88AB;&#x6D4B;&#x8BD5;&#x3002; &#x6709;&#x66F4;&#x591A;&#x7684; reporters &#x53EF;&#x7528;&#x4E8E;Karma &#xFF0C;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x5236;&#x5B9A;&#x60A8;&#x7684;&#x6D4B;&#x8BD5;&#x5DE5;&#x4F5C;&#x6D41;&#x3002; &#x73AF;&#x5883;&#x914D;&#x7F6E; 1 2 3 4 5 6 port: 9999, browsers: [&apos;Chrome&apos;], // Alternatively: &apos;PhantomJS&apos; colors: true, logLevel: config.LOG_INFO, autoWatch: true, captureTimeout: 6000, port , browsers &#x548C; singleRun &#x914D;&#x7F6E;&#x6211;&#x4EEC;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x5C06;&#x8FD0;&#x884C;&#x7684;&#x73AF;&#x5883;&#x3002; browsers &#x5C5E;&#x6027;&#x6307;&#x5B9A;&#x4E86;&#x6211;&#x4EEC;&#x5E0C;&#x671B;Karma&#x542F;&#x52A8;&#x548C;&#x6355;&#x83B7;&#x8F93;&#x51FA;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Chrome&#xFF0C;Firefox&#xFF0C;Safari&#xFF0C;IE&#x6216;Opera&#xFF08;&#x9700;&#x8981;&#x4E3A;&#x6BCF;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#x5B89;&#x88C5;&#x989D;&#x5916;&#x7684;Karma&#x542F;&#x52A8;&#x5668;&#xFF09;&#x3002; &#x5BF9;&#x4E8E;&#x65E0;&#x6D4F;&#x89C8;&#x5668;&#x7684;DOM&#x5B9E;&#x4F8B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;PhantomJS&#xFF08;&#x5982;&#x5DE5;&#x5177;&#x94FE;&#x90E8;&#x5206;&#x4E2D;&#x6240;&#x8FF0;&#xFF09;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6D4F;&#x89C8;&#x5230; http://localhost:port &#x624B;&#x52A8;&#x6355;&#x83B7;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5176;&#x4E2D;port&#x662F;port&#x5C5E;&#x6027;&#x4E2D;&#x6307;&#x5B9A;&#x7684;&#x6570;&#x5B57;&#xFF08;&#x5982;&#x679C;&#x672A;&#x6307;&#x5B9A;&#xFF0C;&#x5219;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;9876&#xFF09;&#x3002; &#x5C5E;&#x6027; singleRun &#x63A7;&#x5236;Karma&#x5982;&#x4F55;&#x6267;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E3A; true &#xFF0C;Karma&#x5C06;&#x542F;&#x52A8;&#x914D;&#x7F6E;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#xFF0C;&#x7136;&#x540E;&#x9000;&#x51FA; 0 &#x6216; 1 &#xFF0C;&#x8FD9;&#x53D6;&#x51B3;&#x4E8E;&#x662F;&#x5426;&#x6240;&#x6709;&#x6D4B;&#x8BD5;&#x901A;&#x8FC7;&#x3002;"},"Testing/karma-config.html#完成配置":{"title":"&#x5B8C;&#x6210;&#x914D;&#x7F6E;","path":"\\Testing\\karma-config.html#完成配置","body":"&#x5B9A;&#x5236;&#x6240;&#x6709;&#x8FD9;&#x4E9B;&#x5C5E;&#x6027;&#x7684;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x662F;&#x5728; angular-redux-starter&#x4E2D;&#x7684;karma.conf.js&#x6587;&#x4EF6; &#x3002;"},"Testing/karma-config.html#其他资源":{"title":"&#x5176;&#x4ED6;&#x8D44;&#x6E90;","path":"\\Testing\\karma-config.html#其他资源","body":"&#x8FD9;&#x53EA;&#x662F;angular2-redux-starter&#x9879;&#x76EE;&#x4F7F;&#x7528;&#x7684;karma.conf.js&#x4E2D;&#x7684;&#x6838;&#x5FC3;&#x5C5E;&#x6027;&#x7684;&#x793A;&#x4F8B;&#x3002; &#x8FD8;&#x6709;&#x66F4;&#x591A;&#x7684;&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x6269;&#x5C55;&#x548C;&#x914D;&#x7F6E;Karma&#x7684;&#x529F;&#x80FD; - &#x770B;&#x770B;&#x5B8C;&#x6574;&#x7684;&#x5B98;&#x65B9;API&#x6587;&#x6863; &#x3002;"},"Testing/mockbackend.html":{"title":"","path":"\\Testing\\mockbackend.html","body":"使用MockBackend测试HTTP请求 要对我们的服务进行单元测试，我们不想发出实际的HTTP请求。 为了实现这一点，我们需要模拟我们的HTTP服务。 Angular 2为我们提供了一个 MockBackend 类，它可以被配置为提供对我们的请求的模拟响应，而不实际做出网络请求。 然后可以将配置的 MockBackend 注入到HTTP中，因此对服务的任何调用（例如 http.get ）将返回我们预期的数据，从而允许我们隔离真实网络流量测试服务。 wikisearch.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 import  fakeAsync, inject, TestBed  from '@angular/core/testing' ; import  HttpModule, XHRBackend, ResponseOptions, Response, RequestMethod  from '@angular/http' ; import  MockBackend, MockConnection  from '@angular/http/testing/mock_backend' ; import SearchWiki from './wikisearch.service' ; const mockResponse =  \"batchcomplete\" : \"\" , \"continue\" :  \"sroffset\" : 10 , \"continue\" : \"-||\" , \"query\" :  \"searchinfo\" :  \"totalhits\" : 36853 , \"search\" : [ \"ns\" : 0 , \"title\" : \"Stuff\" , \"snippet\" : \"span/span\" , \"size\" : 1906 , \"wordcount\" : 204 , \"timestamp\" : \"2016-06-10T17:25:36Z\" ]  ; describe( 'Wikipedia search service' , () =  beforeEach( () =  TestBed.configureTestingModule( imports: [HttpModule], providers: [  provide: XHRBackend, useClass: MockBackend , SearchWiki ] ); ); it( 'should get search results' , fakeAsync( inject([ XHRBackend, SearchWiki ], ( mockBackend: XHRBackend, searchWiki: SearchWiki ) =  const expectedUrl = 'https://en.wikipedia.org/w/api.php?' + 'action=query&amp;list=search&amp;srsearch=Angular' ; mockBackend.connections.subscribe( (connection: MockConnection) =  expect(connection.request.method).toBe(RequestMethod.Get); expect(connection.request.url).toBe(expectedUrl); connection.mockRespond( new Response( new ResponseOptions( body: mockResponse ) )); ); searchWiki.search( 'Angular' ) .subscribe( res =  expect(res).toEqual(mockResponse); ); ) )); it( 'should set foo with a 1s delay' , fakeAsync( inject([SearchWiki], ( searchWiki: SearchWiki ) =  searchWiki.setFoo( 'food' ); tick( 1000 ); expect(searchWiki.foo).toEqual( 'food' ); ) )); ); View Example 我们使用 inject 注入 SearchWiki 服务和 MockBackend 到我们的测试。然后，我们使用对 fakeAsync 的调用封装我们的整个测试，这将用于控制 SearchWiki 服务的异步行为以进行测试。 接下来，我们订阅来自我们后端的任何传入连接。这使我们可以访问一个对象 MockConnection ，它允许我们配置我们想要从我们的后端发送的响应，以及测试任何来自我们正在测试的服务的请求。 在我们的示例中，我们要验证 SearchWiki 的搜索方法是否向正确的URL发出GET请求。这是通过查看当我们的 SearchWiki 服务连接到我们的模拟后端时获得的请求对象来完成。分析 request.url 属性，我们可以看到它的值是否是我们期望的值。这里我们只检查URL，但在其他情况下，我们可以看到是否已设置某些头，或者是否已发送某些POST数据。 现在，使用 MockConnection 对象，我们模拟了一些任意数据。我们创建一个新的 ResponseOptions 对象，我们可以配置我们的响应的属性。这遵循常规Angular 2响应类的格式。在这里，我们只需将body属性设置为您可能从维基百科中看到的基本搜索结果集。我们还可以设置Cookie，HTTP标头等等，或将状态值设置为非200状态，以测试我们的服务如何响应错误。一旦我们配置了 ResponseOptions， 我们创建一个Respond对象的新实例，并告诉我们后端通过调用 .mockRespond 开始将其用作响应。 可以使用多个响应。假设您的服务有两个可能的GET请求 - 一个用于 /api/users ，另一个用于 /api/users/1 。这些请求中的每一个具有不同的对应的模拟数据集合。当通过 MockBackend 订阅接收新的连接时，您可以检查请求的是什么类型的URL，并使用任何一组模拟数据进行响应。 最后，我们可以通过调用和订阅结果来测试 SearchWiki 服务的搜索方法。一旦我们的搜索过程完成，我们检查结果对象，看看它是否包含相同的数据，我们mock到我们的后端。如果是，那么恭喜你，你的测试已经通过。 在应该设置foo与1s延迟测试，你会注意到，我们调用 tick(1000) 模拟1秒的延迟。"},"Testing/mockbackend.html#使用MockBackend测试HTTP请求":{"title":"&#x4F7F;&#x7528;MockBackend&#x6D4B;&#x8BD5;HTTP&#x8BF7;&#x6C42;","path":"\\Testing\\mockbackend.html#使用MockBackend测试HTTP请求","body":"&#x8981;&#x5BF9;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x8FDB;&#x884C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x60F3;&#x53D1;&#x51FA;&#x5B9E;&#x9645;&#x7684;HTTP&#x8BF7;&#x6C42;&#x3002; &#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6A21;&#x62DF;&#x6211;&#x4EEC;&#x7684;HTTP&#x670D;&#x52A1;&#x3002; Angular 2&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A; MockBackend &#x7C7B;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x914D;&#x7F6E;&#x4E3A;&#x63D0;&#x4F9B;&#x5BF9;&#x6211;&#x4EEC;&#x7684;&#x8BF7;&#x6C42;&#x7684;&#x6A21;&#x62DF;&#x54CD;&#x5E94;&#xFF0C;&#x800C;&#x4E0D;&#x5B9E;&#x9645;&#x505A;&#x51FA;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x3002; &#x7136;&#x540E;&#x53EF;&#x4EE5;&#x5C06;&#x914D;&#x7F6E;&#x7684; MockBackend &#x6CE8;&#x5165;&#x5230;HTTP&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x670D;&#x52A1;&#x7684;&#x4EFB;&#x4F55;&#x8C03;&#x7528;&#xFF08;&#x4F8B;&#x5982; http.get &#xFF09;&#x5C06;&#x8FD4;&#x56DE;&#x6211;&#x4EEC;&#x9884;&#x671F;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4ECE;&#x800C;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x9694;&#x79BB;&#x771F;&#x5B9E;&#x7F51;&#x7EDC;&#x6D41;&#x91CF;&#x6D4B;&#x8BD5;&#x670D;&#x52A1;&#x3002; wikisearch.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 import { fakeAsync, inject, TestBed } from &apos;@angular/core/testing&apos; ; import { HttpModule, XHRBackend, ResponseOptions, Response, RequestMethod } from &apos;@angular/http&apos; ; import { MockBackend, MockConnection } from &apos;@angular/http/testing/mock_backend&apos; ; import {SearchWiki} from &apos;./wikisearch.service&apos; ; const mockResponse = { batchcomplete :  , continue : { sroffset : 10 , continue : -|| }, query : { searchinfo : { totalhits : 36853 }, search : [{ ns : 0 , title : Stuff , snippet : span/span , size : 1906 , wordcount : 204 , timestamp : 2016-06-10T17:25:36Z }] } }; describe( &apos;Wikipedia search service&apos; , () = { beforeEach( () = { TestBed.configureTestingModule({ imports: [HttpModule], providers: [ { provide: XHRBackend, useClass: MockBackend }, SearchWiki ] }); }); it( &apos;should get search results&apos; , fakeAsync( inject([ XHRBackend, SearchWiki ], ( mockBackend: XHRBackend, searchWiki: SearchWiki ) = { const expectedUrl = &apos;https://en.wikipedia.org/w/api.php?&apos; + &apos;action=query&amp;list=search&amp;srsearch=Angular&apos; ; mockBackend.connections.subscribe( (connection: MockConnection) = { expect(connection.request.method).toBe(RequestMethod.Get); expect(connection.request.url).toBe(expectedUrl); connection.mockRespond( new Response( new ResponseOptions({ body: mockResponse }) )); }); searchWiki.search( &apos;Angular&apos; ) .subscribe( res = { expect(res).toEqual(mockResponse); }); }) )); it( &apos;should set foo with a 1s delay&apos; , fakeAsync( inject([SearchWiki], ( searchWiki: SearchWiki ) = { searchWiki.setFoo( &apos;food&apos; ); tick( 1000 ); expect(searchWiki.foo).toEqual( &apos;food&apos; ); }) )); }); View Example &#x6211;&#x4EEC;&#x4F7F;&#x7528; inject &#x6CE8;&#x5165; SearchWiki &#x670D;&#x52A1;&#x548C; MockBackend &#x5230;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5BF9; fakeAsync &#x7684;&#x8C03;&#x7528;&#x5C01;&#x88C5;&#x6211;&#x4EEC;&#x7684;&#x6574;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF0C;&#x8FD9;&#x5C06;&#x7528;&#x4E8E;&#x63A7;&#x5236; SearchWiki &#x670D;&#x52A1;&#x7684;&#x5F02;&#x6B65;&#x884C;&#x4E3A;&#x4EE5;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x8BA2;&#x9605;&#x6765;&#x81EA;&#x6211;&#x4EEC;&#x540E;&#x7AEF;&#x7684;&#x4EFB;&#x4F55;&#x4F20;&#x5165;&#x8FDE;&#x63A5;&#x3002;&#x8FD9;&#x4F7F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61; MockConnection &#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x914D;&#x7F6E;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x4ECE;&#x6211;&#x4EEC;&#x7684;&#x540E;&#x7AEF;&#x53D1;&#x9001;&#x7684;&#x54CD;&#x5E94;&#xFF0C;&#x4EE5;&#x53CA;&#x6D4B;&#x8BD5;&#x4EFB;&#x4F55;&#x6765;&#x81EA;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x6D4B;&#x8BD5;&#x7684;&#x670D;&#x52A1;&#x7684;&#x8BF7;&#x6C42;&#x3002; &#x5728;&#x6211;&#x4EEC;&#x7684;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x9A8C;&#x8BC1; SearchWiki &#x7684;&#x641C;&#x7D22;&#x65B9;&#x6CD5;&#x662F;&#x5426;&#x5411;&#x6B63;&#x786E;&#x7684;URL&#x53D1;&#x51FA;GET&#x8BF7;&#x6C42;&#x3002;&#x8FD9;&#x662F;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x5F53;&#x6211;&#x4EEC;&#x7684; SearchWiki &#x670D;&#x52A1;&#x8FDE;&#x63A5;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x62DF;&#x540E;&#x7AEF;&#x65F6;&#x83B7;&#x5F97;&#x7684;&#x8BF7;&#x6C42;&#x5BF9;&#x8C61;&#x6765;&#x5B8C;&#x6210;&#x3002;&#x5206;&#x6790; request.url &#x5C5E;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5B83;&#x7684;&#x503C;&#x662F;&#x5426;&#x662F;&#x6211;&#x4EEC;&#x671F;&#x671B;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EA;&#x68C0;&#x67E5;URL&#xFF0C;&#x4F46;&#x5728;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x662F;&#x5426;&#x5DF2;&#x8BBE;&#x7F6E;&#x67D0;&#x4E9B;&#x5934;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x5426;&#x5DF2;&#x53D1;&#x9001;&#x67D0;&#x4E9B;POST&#x6570;&#x636E;&#x3002; &#x73B0;&#x5728;&#xFF0C;&#x4F7F;&#x7528; MockConnection &#x5BF9;&#x8C61;&#xFF0C;&#x6211;&#x4EEC;&#x6A21;&#x62DF;&#x4E86;&#x4E00;&#x4E9B;&#x4EFB;&#x610F;&#x6570;&#x636E;&#x3002;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684; ResponseOptions &#x5BF9;&#x8C61;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x6211;&#x4EEC;&#x7684;&#x54CD;&#x5E94;&#x7684;&#x5C5E;&#x6027;&#x3002;&#x8FD9;&#x9075;&#x5FAA;&#x5E38;&#x89C4;Angular 2&#x54CD;&#x5E94;&#x7C7B;&#x7684;&#x683C;&#x5F0F;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x5C06;body&#x5C5E;&#x6027;&#x8BBE;&#x7F6E;&#x4E3A;&#x60A8;&#x53EF;&#x80FD;&#x4ECE;&#x7EF4;&#x57FA;&#x767E;&#x79D1;&#x4E2D;&#x770B;&#x5230;&#x7684;&#x57FA;&#x672C;&#x641C;&#x7D22;&#x7ED3;&#x679C;&#x96C6;&#x3002;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;Cookie&#xFF0C;HTTP&#x6807;&#x5934;&#x7B49;&#x7B49;&#xFF0C;&#x6216;&#x5C06;&#x72B6;&#x6001;&#x503C;&#x8BBE;&#x7F6E;&#x4E3A;&#x975E;200&#x72B6;&#x6001;&#xFF0C;&#x4EE5;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5982;&#x4F55;&#x54CD;&#x5E94;&#x9519;&#x8BEF;&#x3002;&#x4E00;&#x65E6;&#x6211;&#x4EEC;&#x914D;&#x7F6E;&#x4E86; ResponseOptions&#xFF0C; &#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Respond&#x5BF9;&#x8C61;&#x7684;&#x65B0;&#x5B9E;&#x4F8B;&#xFF0C;&#x5E76;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#x540E;&#x7AEF;&#x901A;&#x8FC7;&#x8C03;&#x7528; .mockRespond &#x5F00;&#x59CB;&#x5C06;&#x5176;&#x7528;&#x4F5C;&#x54CD;&#x5E94;&#x3002; &#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x54CD;&#x5E94;&#x3002;&#x5047;&#x8BBE;&#x60A8;&#x7684;&#x670D;&#x52A1;&#x6709;&#x4E24;&#x4E2A;&#x53EF;&#x80FD;&#x7684;GET&#x8BF7;&#x6C42; - &#x4E00;&#x4E2A;&#x7528;&#x4E8E; /api/users &#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7528;&#x4E8E; /api/users/1 &#x3002;&#x8FD9;&#x4E9B;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x5BF9;&#x5E94;&#x7684;&#x6A21;&#x62DF;&#x6570;&#x636E;&#x96C6;&#x5408;&#x3002;&#x5F53;&#x901A;&#x8FC7; MockBackend &#x8BA2;&#x9605;&#x63A5;&#x6536;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#x65F6;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x68C0;&#x67E5;&#x8BF7;&#x6C42;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#x7684;URL&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x4E00;&#x7EC4;&#x6A21;&#x62DF;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x54CD;&#x5E94;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x548C;&#x8BA2;&#x9605;&#x7ED3;&#x679C;&#x6765;&#x6D4B;&#x8BD5; SearchWiki &#x670D;&#x52A1;&#x7684;&#x641C;&#x7D22;&#x65B9;&#x6CD5;&#x3002;&#x4E00;&#x65E6;&#x6211;&#x4EEC;&#x7684;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#x5B8C;&#x6210;&#xFF0C;&#x6211;&#x4EEC;&#x68C0;&#x67E5;&#x7ED3;&#x679C;&#x5BF9;&#x8C61;&#xFF0C;&#x770B;&#x770B;&#x5B83;&#x662F;&#x5426;&#x5305;&#x542B;&#x76F8;&#x540C;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6211;&#x4EEC;mock&#x5230;&#x6211;&#x4EEC;&#x7684;&#x540E;&#x7AEF;&#x3002;&#x5982;&#x679C;&#x662F;&#xFF0C;&#x90A3;&#x4E48;&#x606D;&#x559C;&#x4F60;&#xFF0C;&#x4F60;&#x7684;&#x6D4B;&#x8BD5;&#x5DF2;&#x7ECF;&#x901A;&#x8FC7;&#x3002; &#x5728;&#x5E94;&#x8BE5;&#x8BBE;&#x7F6E;foo&#x4E0E;1s&#x5EF6;&#x8FDF;&#x6D4B;&#x8BD5;&#xFF0C;&#x4F60;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#xFF0C;&#x6211;&#x4EEC;&#x8C03;&#x7528; tick(1000) &#x6A21;&#x62DF;1&#x79D2;&#x7684;&#x5EF6;&#x8FDF;&#x3002;"},"Testing/overriding.html":{"title":"","path":"\\Testing\\overriding.html","body":"覆盖测试的依赖关系 TestBed 提供了几个函数，允许我们覆盖测试模块中使用的依赖项。 overrideModule overrideComponent overrideDirective overridePipe 例如，您可能想要覆盖组件的模板。这对于测试大型组件的一小部分很有用，因为您可以忽略DOM的其余部分的输出，并且只关注您感兴趣的部分。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import Component from '@angular/core' ; @Component ( selector: 'display-message' , template: ` div div h1message/h1 div /div ` ) export class MessageComponent  public message: string = '' ; setMessage(newMessage: string )  this .message = newMessage;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import MessageComponent from './message.component' ; import  provide  from '@angular/core' ; import  async , inject, TestBed,  from '@angular/core/testing' ; describe( 'MessageComponent' , () =  let fixture; beforeEach( () =  TestBed.configureTestingModule( declarations: [MessageComponent], providers: [] ); fixture = TestBed.overrideComponent(MessageComponent,  set :  template: 'spanmessage/span' ) .createComponent(MessageComponent); fixture.detectChanges(); ); it( 'should set the message' , async (inject([], () =  fixture.componentInstance.setMessage( 'Test message' ); fixture.detectChanges(); fixture.whenStable().then( () =  const compiled = fixture.debugElement.nativeElement; expect(compiled.querySelector( 'span' ).innerText).toEqual( 'Test message' ); ); ))); ); View Example"},"Testing/overriding.html#覆盖测试的依赖关系":{"title":"&#x8986;&#x76D6;&#x6D4B;&#x8BD5;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;","path":"\\Testing\\overriding.html#覆盖测试的依赖关系","body":"TestBed &#x63D0;&#x4F9B;&#x4E86;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x8986;&#x76D6;&#x6D4B;&#x8BD5;&#x6A21;&#x5757;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#x3002; overrideModule overrideComponent overrideDirective overridePipe &#x4F8B;&#x5982;&#xFF0C;&#x60A8;&#x53EF;&#x80FD;&#x60F3;&#x8981;&#x8986;&#x76D6;&#x7EC4;&#x4EF6;&#x7684;&#x6A21;&#x677F;&#x3002;&#x8FD9;&#x5BF9;&#x4E8E;&#x6D4B;&#x8BD5;&#x5927;&#x578B;&#x7EC4;&#x4EF6;&#x7684;&#x4E00;&#x5C0F;&#x90E8;&#x5206;&#x5F88;&#x6709;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x60A8;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;DOM&#x7684;&#x5176;&#x4F59;&#x90E8;&#x5206;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x5173;&#x6CE8;&#x60A8;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x90E8;&#x5206;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import {Component} from &apos;@angular/core&apos; ; @Component ({ selector: &apos;display-message&apos; , template: ` div div h1{{message}}/h1 div /div ` }) export class MessageComponent { public message: string = &apos;&apos; ; setMessage(newMessage: string ) { this .message = newMessage; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import {MessageComponent} from &apos;./message.component&apos; ; import { provide } from &apos;@angular/core&apos; ; import { async , inject, TestBed, } from &apos;@angular/core/testing&apos; ; describe( &apos;MessageComponent&apos; , () = { let fixture; beforeEach( () = { TestBed.configureTestingModule({ declarations: [MessageComponent], providers: [] }); fixture = TestBed.overrideComponent(MessageComponent, { set : { template: &apos;span{{message}}/span&apos; }}) .createComponent(MessageComponent); fixture.detectChanges(); }); it( &apos;should set the message&apos; , async (inject([], () = { fixture.componentInstance.setMessage( &apos;Test message&apos; ); fixture.detectChanges(); fixture.whenStable().then( () = { const compiled = fixture.debugElement.nativeElement; expect(compiled.querySelector( &apos;span&apos; ).innerText).toEqual( &apos;Test message&apos; ); }); }))); }); View Example"},"Testing/reducers.html":{"title":"","path":"\\Testing\\reducers.html","body":"测试 Reducers 幸运的是，测试reducers很像测试我们的同步 action 创建者，因为所有reducer操作是同步的，这使我们的全局状态容易跟踪，同时也是为什么Redux的拥有众多粉丝的原因。 我们将在 angular2-redux-starter 中测试减速器： 1 2 3 4 5 6 7 8 9 10 export default function counter ( state = 0 , action ) switch ( action.type )  case INCREMENT_COUNTER: return state + 1 ; case DECREMENT_COUNTER: return state - 1 ; default : return state;   正如你可以看到，有三种情况要测试：默认情况，增量和减量。我们想测试我们的 actions 触发的 reducer 状态变化符合预期。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import  INCREMENT_COUNTER, DECREMENT_COUNTER  from '../actions/counter' ; import counter from './counter' ; describe( 'counter reducers' , () =  it( 'should handle initial state' , () =  expect( counter( undefined , ) ) .toEqual( 0 ) ); it( 'should handle INCREMENT_COUNTER' , () =  expect( counter( 0 ,  type: INCREMENT_COUNTER ) ) .toEqual( 1 ) ); it( 'should handle DECREMENT_COUNTER' , () =  expect( counter( 1 ,  type: DECREMENT_COUNTER ) ) .toEqual( 0 ) ); ); 注意，我们只是测试Redux状态的一部分，减速器负责 Counter ，而不是整体。从这些测试中我们可以看出，Redux主要基于纯函数。"},"Testing/reducers.html#测试-Reducers":{"title":"&#x6D4B;&#x8BD5; Reducers","path":"\\Testing\\reducers.html#测试-Reducers","body":"&#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x6D4B;&#x8BD5;reducers&#x5F88;&#x50CF;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;&#x540C;&#x6B65; action &#x521B;&#x5EFA;&#x8005;&#xFF0C;&#x56E0;&#x4E3A;&#x6240;&#x6709;reducer&#x64CD;&#x4F5C;&#x662F;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x8FD9;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x5168;&#x5C40;&#x72B6;&#x6001;&#x5BB9;&#x6613;&#x8DDF;&#x8E2A;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;Redux&#x7684;&#x62E5;&#x6709;&#x4F17;&#x591A;&#x7C89;&#x4E1D;&#x7684;&#x539F;&#x56E0;&#x3002; &#x6211;&#x4EEC;&#x5C06;&#x5728; angular2-redux-starter &#x4E2D;&#x6D4B;&#x8BD5;&#x51CF;&#x901F;&#x5668;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 export default function counter ( state = 0 , action ) switch ( action.type ) { case INCREMENT_COUNTER: return state + 1 ; case DECREMENT_COUNTER: return state - 1 ; default : return state; } } &#x6B63;&#x5982;&#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6709;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x8981;&#x6D4B;&#x8BD5;&#xFF1A;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#xFF0C;&#x589E;&#x91CF;&#x548C;&#x51CF;&#x91CF;&#x3002;&#x6211;&#x4EEC;&#x60F3;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684; actions &#x89E6;&#x53D1;&#x7684; reducer &#x72B6;&#x6001;&#x53D8;&#x5316;&#x7B26;&#x5408;&#x9884;&#x671F;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import { INCREMENT_COUNTER, DECREMENT_COUNTER } from &apos;../actions/counter&apos; ; import counter from &apos;./counter&apos; ; describe( &apos;counter reducers&apos; , () = { it( &apos;should handle initial state&apos; , () = { expect( counter( undefined , {}) ) .toEqual( 0 ) }); it( &apos;should handle INCREMENT_COUNTER&apos; , () = { expect( counter( 0 , { type: INCREMENT_COUNTER }) ) .toEqual( 1 ) }); it( &apos;should handle DECREMENT_COUNTER&apos; , () = { expect( counter( 1 , { type: DECREMENT_COUNTER }) ) .toEqual( 0 ) }); }); &#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x6D4B;&#x8BD5;Redux&#x72B6;&#x6001;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x51CF;&#x901F;&#x5668;&#x8D1F;&#x8D23; Counter &#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6574;&#x4F53;&#x3002;&#x4ECE;&#x8FD9;&#x4E9B;&#x6D4B;&#x8BD5;&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;Redux&#x4E3B;&#x8981;&#x57FA;&#x4E8E;&#x7EAF;&#x51FD;&#x6570;&#x3002;"},"Testing/redux.html":{"title":"","path":"\\Testing\\redux.html","body":"测试 Redux 对Redux进行单元测试是一个非常简单的过程，原因有两点： Reducers 是一种纯粹的函数，适合测试。 Actions 触发Redux系统中的更改。只有两种类型的动作：同步（测试相当简单）和异步（涉及的东西稍多一些）。 下面的示例会为您测试Redux应用程序打下坚实的基础。"},"Testing/redux.html#测试-Redux":{"title":"&#x6D4B;&#x8BD5; Redux","path":"\\Testing\\redux.html#测试-Redux","body":"&#x5BF9;Redux&#x8FDB;&#x884C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x539F;&#x56E0;&#x6709;&#x4E24;&#x70B9;&#xFF1A; Reducers &#x662F;&#x4E00;&#x79CD;&#x7EAF;&#x7CB9;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x9002;&#x5408;&#x6D4B;&#x8BD5;&#x3002; Actions &#x89E6;&#x53D1;Redux&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x66F4;&#x6539;&#x3002;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x52A8;&#x4F5C;&#xFF1A;&#x540C;&#x6B65;&#xFF08;&#x6D4B;&#x8BD5;&#x76F8;&#x5F53;&#x7B80;&#x5355;&#xFF09;&#x548C;&#x5F02;&#x6B65;&#xFF08;&#x6D89;&#x53CA;&#x7684;&#x4E1C;&#x897F;&#x7A0D;&#x591A;&#x4E00;&#x4E9B;&#xFF09;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x4F1A;&#x4E3A;&#x60A8;&#x6D4B;&#x8BD5;Redux&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6253;&#x4E0B;&#x575A;&#x5B9E;&#x7684;&#x57FA;&#x7840;&#x3002;"},"Testing/refactor.html":{"title":"","path":"\\Testing\\refactor.html","body":"重构难以测试的代码 当你开始编写单元测试时，你可能会发现很多代码很难测试。 最好的策略通常是重构代码，使其易于测试。 例如，考虑将组件代码重构到服务中，并专注于服务测试，反之亦然。"},"Testing/refactor.html#重构难以测试的代码":{"title":"&#x91CD;&#x6784;&#x96BE;&#x4EE5;&#x6D4B;&#x8BD5;&#x7684;&#x4EE3;&#x7801;","path":"\\Testing\\refactor.html#重构难以测试的代码","body":"&#x5F53;&#x4F60;&#x5F00;&#x59CB;&#x7F16;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x73B0;&#x5F88;&#x591A;&#x4EE3;&#x7801;&#x5F88;&#x96BE;&#x6D4B;&#x8BD5;&#x3002; &#x6700;&#x597D;&#x7684;&#x7B56;&#x7565;&#x901A;&#x5E38;&#x662F;&#x91CD;&#x6784;&#x4EE3;&#x7801;&#xFF0C;&#x4F7F;&#x5176;&#x6613;&#x4E8E;&#x6D4B;&#x8BD5;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x8003;&#x8651;&#x5C06;&#x7EC4;&#x4EF6;&#x4EE3;&#x7801;&#x91CD;&#x6784;&#x5230;&#x670D;&#x52A1;&#x4E2D;&#xFF0C;&#x5E76;&#x4E13;&#x6CE8;&#x4E8E;&#x670D;&#x52A1;&#x6D4B;&#x8BD5;&#xFF0C;&#x53CD;&#x4E4B;&#x4EA6;&#x7136;&#x3002;"},"Testing/services.html":{"title":"","path":"\\Testing\\services.html","body":"测试服务 当在Angular 2中测试服务时，我们采用了许多用于测试组件的相同技术和策略。 服务，类似组件，是具有我们想要验证的方法和属性的类。 数据是测试服务的主要重点 - 我们是否正确地获取，存储和传播数据。"},"Testing/services.html#测试服务":{"title":"&#x6D4B;&#x8BD5;&#x670D;&#x52A1;","path":"\\Testing\\services.html#测试服务","body":"&#x5F53;&#x5728;Angular 2&#x4E2D;&#x6D4B;&#x8BD5;&#x670D;&#x52A1;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x91C7;&#x7528;&#x4E86;&#x8BB8;&#x591A;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#x7684;&#x76F8;&#x540C;&#x6280;&#x672F;&#x548C;&#x7B56;&#x7565;&#x3002; &#x670D;&#x52A1;&#xFF0C;&#x7C7B;&#x4F3C;&#x7EC4;&#x4EF6;&#xFF0C;&#x662F;&#x5177;&#x6709;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x9A8C;&#x8BC1;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#x7684;&#x7C7B;&#x3002; &#x6570;&#x636E;&#x662F;&#x6D4B;&#x8BD5;&#x670D;&#x52A1;&#x7684;&#x4E3B;&#x8981;&#x91CD;&#x70B9; - &#x6211;&#x4EEC;&#x662F;&#x5426;&#x6B63;&#x786E;&#x5730;&#x83B7;&#x53D6;&#xFF0C;&#x5B58;&#x50A8;&#x548C;&#x4F20;&#x64AD;&#x6570;&#x636E;&#x3002;"},"Testing/setup.html":{"title":"","path":"\\Testing\\setup.html","body":"测试设置 angular2-redux-starter 是一个基于webpack的Angular 2的应用程序（使用Redux），它具有上述相同的测试工具链。让我们来看看这个项目是如何设置的。"},"Testing/setup.html#测试设置":{"title":"&#x6D4B;&#x8BD5;&#x8BBE;&#x7F6E;","path":"\\Testing\\setup.html#测试设置","body":"angular2-redux-starter &#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;webpack&#x7684;Angular 2&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF08;&#x4F7F;&#x7528;Redux&#xFF09;&#xFF0C;&#x5B83;&#x5177;&#x6709;&#x4E0A;&#x8FF0;&#x76F8;&#x540C;&#x7684;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#x94FE;&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x662F;&#x5982;&#x4F55;&#x8BBE;&#x7F6E;&#x7684;&#x3002;"},"Testing/simple-actions.html":{"title":"","path":"\\Testing\\simple-actions.html","body":"测试简单的 Action 考虑下面的简单动作，取自本书的Redux章节： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import  Injectable  from '@angular/core' ; import  NgRedux  from 'ng2-redux' ; export const INCREMENT_COUNTER = 'INCREMENT_COUNTER' ; export const DECREMENT_COUNTER = 'DECREMENT_COUNTER' ; @Injectable export class CounterActions  constructor ( private redux: NgRedux any  )  increment()  this .redux.dispatch( type : INCREMENT_COUNTER );  decrement()  this .redux.dispatch( type : DECREMENT_COUNTER );   这些是很简单的测试： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 import  NgRedux  from 'ng2-redux' ; import  CounterActions, INCREMENT_COUNTER, DECREMENT_COUNTER,  from './counter' ; // Mock out the NgRedux class with just enough to test what we want. class MockRedux extends NgRedux any   constructor ( )  super ( null );  dispatch = () = undefined ;  describe( 'counter action creators' , () =  let actions: CounterActions; let mockRedux: NgRedux any ; beforeEach( () =  // Initialize mock NgRedux and create a new instance of the // ActionCreatorService to be tested. mockRedux = new MockRedux(); actions = new CounterActions(mockRedux); ); it( 'increment should dispatch INCREMENT_COUNTER action' , () =  const expectedAction =  type : INCREMENT_COUNTER ; spyOn(mockRedux, 'dispatch' ); actions.increment(); expect(mockRedux.dispatch).toHaveBeenCalled(); expect(mockRedux.dispatch).toHaveBeenCalledWith(expectedAction); ); it( 'decrement should dispatch DECREMENT_COUNTER action' , () =  const expectedAction =  type : DECREMENT_COUNTER ; spyOn(mockRedux, 'dispatch' ); actions.decrement(); expect(mockRedux.dispatch).toHaveBeenCalled(); expect(mockRedux.dispatch).toHaveBeenCalledWith(expectedAction); ); ); 我们只是确保我们的action创建者正确地分派actions。"},"Testing/simple-actions.html#测试简单的-Action":{"title":"&#x6D4B;&#x8BD5;&#x7B80;&#x5355;&#x7684; Action","path":"\\Testing\\simple-actions.html#测试简单的-Action","body":"&#x8003;&#x8651;&#x4E0B;&#x9762;&#x7684;&#x7B80;&#x5355;&#x52A8;&#x4F5C;&#xFF0C;&#x53D6;&#x81EA;&#x672C;&#x4E66;&#x7684;Redux&#x7AE0;&#x8282;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import { Injectable } from &apos;@angular/core&apos; ; import { NgRedux } from &apos;ng2-redux&apos; ; export const INCREMENT_COUNTER = &apos;INCREMENT_COUNTER&apos; ; export const DECREMENT_COUNTER = &apos;DECREMENT_COUNTER&apos; ; @Injectable export class CounterActions { constructor ( private redux: NgRedux any  ) {} increment() { this .redux.dispatch({ type : INCREMENT_COUNTER }); } decrement() { this .redux.dispatch({ type : DECREMENT_COUNTER }); } } &#x8FD9;&#x4E9B;&#x662F;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x6D4B;&#x8BD5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 import { NgRedux } from &apos;ng2-redux&apos; ; import { CounterActions, INCREMENT_COUNTER, DECREMENT_COUNTER, } from &apos;./counter&apos; ; // Mock out the NgRedux class with just enough to test what we want. class MockRedux extends NgRedux any  { constructor ( ) { super ( null ); } dispatch = () = undefined ; } describe( &apos;counter action creators&apos; , () = { let actions: CounterActions; let mockRedux: NgRedux any ; beforeEach( () = { // Initialize mock NgRedux and create a new instance of the // ActionCreatorService to be tested. mockRedux = new MockRedux(); actions = new CounterActions(mockRedux); }); it( &apos;increment should dispatch INCREMENT_COUNTER action&apos; , () = { const expectedAction = { type : INCREMENT_COUNTER }; spyOn(mockRedux, &apos;dispatch&apos; ); actions.increment(); expect(mockRedux.dispatch).toHaveBeenCalled(); expect(mockRedux.dispatch).toHaveBeenCalledWith(expectedAction); }); it( &apos;decrement should dispatch DECREMENT_COUNTER action&apos; , () = { const expectedAction = { type : DECREMENT_COUNTER }; spyOn(mockRedux, &apos;dispatch&apos; ); actions.decrement(); expect(mockRedux.dispatch).toHaveBeenCalled(); expect(mockRedux.dispatch).toHaveBeenCalledWith(expectedAction); }); }); &#x6211;&#x4EEC;&#x53EA;&#x662F;&#x786E;&#x4FDD;&#x6211;&#x4EEC;&#x7684;action&#x521B;&#x5EFA;&#x8005;&#x6B63;&#x786E;&#x5730;&#x5206;&#x6D3E;actions&#x3002;"},"Testing/simple-test.html":{"title":"","path":"\\Testing\\simple-test.html","body":"简单的测试 首先，让我们从在Jasmine中写一个简单的测试开始。 1 2 3 4 5 describe( 'Testing math' , () =  it( 'multiplying should work' , () =  expect( 4 * 4 ).toEqual( 16 ); ); ); 虽然这个测试可能是微不足道的，但它说明了单元测试的基本元素。 我们使用 describe 解释这个测试是什么，我们使用 it 来断言我们从测试中得到什么样的结果。 这些是用户定义的，因此在这些消息中描述性和准确性是一个好主意。 诸如“应该工作”或“测试服务”之类的消息不能真正解释发生了什么，并且在整个应用程序上运行多个测试时可能会产生混淆。 我们的实际测试是基本的，我们使用 expect 制定一个场景，并使用 toqual 来断言我们从该场景预期的结果条件。 如果我们的断言等于结果条件，测试将通过，否则失败。 你总是希望你的测试通过 - 不要编写具有失败状态的测试结果。"},"Testing/simple-test.html#简单的测试":{"title":"&#x7B80;&#x5355;&#x7684;&#x6D4B;&#x8BD5;","path":"\\Testing\\simple-test.html#简单的测试","body":"&#x9996;&#x5148;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x4ECE;&#x5728;Jasmine&#x4E2D;&#x5199;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6D4B;&#x8BD5;&#x5F00;&#x59CB;&#x3002; 1 2 3 4 5 describe( &apos;Testing math&apos; , () = { it( &apos;multiplying should work&apos; , () = { expect( 4 * 4 ).toEqual( 16 ); }); }); &#x867D;&#x7136;&#x8FD9;&#x4E2A;&#x6D4B;&#x8BD5;&#x53EF;&#x80FD;&#x662F;&#x5FAE;&#x4E0D;&#x8DB3;&#x9053;&#x7684;&#xFF0C;&#x4F46;&#x5B83;&#x8BF4;&#x660E;&#x4E86;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x57FA;&#x672C;&#x5143;&#x7D20;&#x3002; &#x6211;&#x4EEC;&#x4F7F;&#x7528; describe &#x89E3;&#x91CA;&#x8FD9;&#x4E2A;&#x6D4B;&#x8BD5;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528; it &#x6765;&#x65AD;&#x8A00;&#x6211;&#x4EEC;&#x4ECE;&#x6D4B;&#x8BD5;&#x4E2D;&#x5F97;&#x5230;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x8FD9;&#x4E9B;&#x662F;&#x7528;&#x6237;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x8FD9;&#x4E9B;&#x6D88;&#x606F;&#x4E2D;&#x63CF;&#x8FF0;&#x6027;&#x548C;&#x51C6;&#x786E;&#x6027;&#x662F;&#x4E00;&#x4E2A;&#x597D;&#x4E3B;&#x610F;&#x3002; &#x8BF8;&#x5982;&#x201C;&#x5E94;&#x8BE5;&#x5DE5;&#x4F5C;&#x201D;&#x6216;&#x201C;&#x6D4B;&#x8BD5;&#x670D;&#x52A1;&#x201D;&#x4E4B;&#x7C7B;&#x7684;&#x6D88;&#x606F;&#x4E0D;&#x80FD;&#x771F;&#x6B63;&#x89E3;&#x91CA;&#x53D1;&#x751F;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0A;&#x8FD0;&#x884C;&#x591A;&#x4E2A;&#x6D4B;&#x8BD5;&#x65F6;&#x53EF;&#x80FD;&#x4F1A;&#x4EA7;&#x751F;&#x6DF7;&#x6DC6;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x5B9E;&#x9645;&#x6D4B;&#x8BD5;&#x662F;&#x57FA;&#x672C;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528; expect &#x5236;&#x5B9A;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; toqual &#x6765;&#x65AD;&#x8A00;&#x6211;&#x4EEC;&#x4ECE;&#x8BE5;&#x573A;&#x666F;&#x9884;&#x671F;&#x7684;&#x7ED3;&#x679C;&#x6761;&#x4EF6;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x7684;&#x65AD;&#x8A00;&#x7B49;&#x4E8E;&#x7ED3;&#x679C;&#x6761;&#x4EF6;&#xFF0C;&#x6D4B;&#x8BD5;&#x5C06;&#x901A;&#x8FC7;&#xFF0C;&#x5426;&#x5219;&#x5931;&#x8D25;&#x3002; &#x4F60;&#x603B;&#x662F;&#x5E0C;&#x671B;&#x4F60;&#x7684;&#x6D4B;&#x8BD5;&#x901A;&#x8FC7; - &#x4E0D;&#x8981;&#x7F16;&#x5199;&#x5177;&#x6709;&#x5931;&#x8D25;&#x72B6;&#x6001;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x3002;"},"Testing/strategies.html":{"title":"","path":"\\Testing\\strategies.html","body":"服务测试策略 当测试进行HTTP调用的服务时，我们不希望用真实请求访问服务器。这是因为我们想要将我们的服务的测试与任何其他外部故障点隔离开。我们的服务可能会工作，但如果API服务器失败或给出我们不期望的值，它可能给人的印象是我们的服务是失败的。此外，随着项目的增长和单元测试的数量的增加，运行大量的测试，HTTP请求将需要很长的时间，可能会给API服务器带来压力。因此，当测试服务时，我们将使用假请求模拟假数据。 注入依赖关系 像组件一样，服务通常需要依赖，Angular通过服务类的构造函数注入。由于我们在Angular的引导过程之外初始化这些类，我们必须自己显式注入这些依赖。这是通过使用TestBed配置测试模块传回所需的依赖项（如HTTP模块）来实现的。"},"Testing/strategies.html#服务测试策略":{"title":"&#x670D;&#x52A1;&#x6D4B;&#x8BD5;&#x7B56;&#x7565;","path":"\\Testing\\strategies.html#服务测试策略","body":"&#x5F53;&#x6D4B;&#x8BD5;&#x8FDB;&#x884C;HTTP&#x8C03;&#x7528;&#x7684;&#x670D;&#x52A1;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x5E0C;&#x671B;&#x7528;&#x771F;&#x5B9E;&#x8BF7;&#x6C42;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#x5668;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x7684;&#x6D4B;&#x8BD5;&#x4E0E;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x5916;&#x90E8;&#x6545;&#x969C;&#x70B9;&#x9694;&#x79BB;&#x5F00;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x53EF;&#x80FD;&#x4F1A;&#x5DE5;&#x4F5C;&#xFF0C;&#x4F46;&#x5982;&#x679C;API&#x670D;&#x52A1;&#x5668;&#x5931;&#x8D25;&#x6216;&#x7ED9;&#x51FA;&#x6211;&#x4EEC;&#x4E0D;&#x671F;&#x671B;&#x7684;&#x503C;&#xFF0C;&#x5B83;&#x53EF;&#x80FD;&#x7ED9;&#x4EBA;&#x7684;&#x5370;&#x8C61;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x662F;&#x5931;&#x8D25;&#x7684;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x968F;&#x7740;&#x9879;&#x76EE;&#x7684;&#x589E;&#x957F;&#x548C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x6570;&#x91CF;&#x7684;&#x589E;&#x52A0;&#xFF0C;&#x8FD0;&#x884C;&#x5927;&#x91CF;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;HTTP&#x8BF7;&#x6C42;&#x5C06;&#x9700;&#x8981;&#x5F88;&#x957F;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x7ED9;API&#x670D;&#x52A1;&#x5668;&#x5E26;&#x6765;&#x538B;&#x529B;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5F53;&#x6D4B;&#x8BD5;&#x670D;&#x52A1;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#x5047;&#x8BF7;&#x6C42;&#x6A21;&#x62DF;&#x5047;&#x6570;&#x636E;&#x3002;"},"Testing/strategies.html#注入依赖关系":{"title":"&#x6CE8;&#x5165;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;","path":"\\Testing\\strategies.html#注入依赖关系","body":"&#x50CF;&#x7EC4;&#x4EF6;&#x4E00;&#x6837;&#xFF0C;&#x670D;&#x52A1;&#x901A;&#x5E38;&#x9700;&#x8981;&#x4F9D;&#x8D56;&#xFF0C;Angular&#x901A;&#x8FC7;&#x670D;&#x52A1;&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x6CE8;&#x5165;&#x3002;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x5728;Angular&#x7684;&#x5F15;&#x5BFC;&#x8FC7;&#x7A0B;&#x4E4B;&#x5916;&#x521D;&#x59CB;&#x5316;&#x8FD9;&#x4E9B;&#x7C7B;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x81EA;&#x5DF1;&#x663E;&#x5F0F;&#x6CE8;&#x5165;&#x8FD9;&#x4E9B;&#x4F9D;&#x8D56;&#x3002;&#x8FD9;&#x662F;&#x901A;&#x8FC7;&#x4F7F;&#x7528;TestBed&#x914D;&#x7F6E;&#x6D4B;&#x8BD5;&#x6A21;&#x5757;&#x4F20;&#x56DE;&#x6240;&#x9700;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#xFF08;&#x5982;HTTP&#x6A21;&#x5757;&#xFF09;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002;"},"Testing/test-components.html":{"title":"","path":"\\Testing\\test-components.html","body":"测试组件 测试Angular 2组件需要深入了解Angular 2 @ angular/core/testing 模块。 虽然Jasmine的许多功能可以在Angular的测试模块中使用，但是Angular在测试组件时还 需要一些非常具体的包装器和例程。"},"Testing/test-components.html#测试组件":{"title":"&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;","path":"\\Testing\\test-components.html#测试组件","body":"&#x6D4B;&#x8BD5;Angular 2&#x7EC4;&#x4EF6;&#x9700;&#x8981;&#x6DF1;&#x5165;&#x4E86;&#x89E3;Angular 2 @ angular/core/testing &#x6A21;&#x5757;&#x3002; &#x867D;&#x7136;Jasmine&#x7684;&#x8BB8;&#x591A;&#x529F;&#x80FD;&#x53EF;&#x4EE5;&#x5728;Angular&#x7684;&#x6D4B;&#x8BD5;&#x6A21;&#x5757;&#x4E2D;&#x4F7F;&#x7528;&#xFF0C;&#x4F46;&#x662F;Angular&#x5728;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#x65F6;&#x8FD8; &#x9700;&#x8981;&#x4E00;&#x4E9B;&#x975E;&#x5E38;&#x5177;&#x4F53;&#x7684;&#x5305;&#x88C5;&#x5668;&#x548C;&#x4F8B;&#x7A0B;&#x3002;"},"Testing/testbed-configuration.html":{"title":"","path":"\\Testing\\testbed-configuration.html","body":"TestBed 配置（可选） 正如你将在测试组件中看到的，真实的组件测试通常依赖于Angular2测试实用程序 TestBed ，它需要一些配置。 最重要的是，我们需要使用 TestBed.initTestEnvironment 创建一个测试平台，然后才能使用TestBed进行单元测试。 在每次单元测试之前，必须根据需要创建，销毁和重置此测试环境。 在angular2-redux-starter中，此配置在 tests.configure.ts 文件中完成，并导入到每个单元测试中以便重新使用。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import  getTestBed, ComponentFixtureAutoDetect, TestBed,  from '@angular/core/testing' ; import  BrowserDynamicTestingModule, platformBrowserDynamicTesting,  from '@angular/platform-browser-dynamic/testing' ; export const configureTests = ( configure: ( testBed: TestBed ) = void ) =  const testBed = getTestBed(); if (testBed.platform == null )  testBed.initTestEnvironment( BrowserDynamicTestingModule, platformBrowserDynamicTesting());  testBed.configureCompiler( providers: [ provide: ComponentFixtureAutoDetect, useValue: true , ] ); configure(testBed); return testBed.compileComponents().then( () = testBed); ; tests.configure.ts 创建测试平台（如果测试平台不存在），编译模板，然后导出 configureTests， 然后在我们的单元测试中导入和使用它。 下面来看看如何使用它： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import  TestBed  from '@angular/core/testing' ; import  ExampleComponent  from './index' ; import  configureTests  from '../../tests.configure' ; import  AppModule  from '../../modules/app.module' ; describe( 'Component: Example' , () =  let fixture; beforeEach( done =  const configure = ( testBed: TestBed ) =  testBed.configureTestingModule( imports: [AppModule], ); ; configureTests(configure).then( testBed =  fixture = testBed.createComponent(ExampleComponent); fixture.detectChanges(); done(); ); );"},"Testing/testbed-configuration.html#TestBed-配置（可选）":{"title":"TestBed &#x914D;&#x7F6E;&#xFF08;&#x53EF;&#x9009;&#xFF09;","path":"\\Testing\\testbed-configuration.html#TestBed-配置（可选）","body":"&#x6B63;&#x5982;&#x4F60;&#x5C06;&#x5728;&#x6D4B;&#x8BD5;&#x7EC4;&#x4EF6;&#x4E2D;&#x770B;&#x5230;&#x7684;&#xFF0C;&#x771F;&#x5B9E;&#x7684;&#x7EC4;&#x4EF6;&#x6D4B;&#x8BD5;&#x901A;&#x5E38;&#x4F9D;&#x8D56;&#x4E8E;Angular2&#x6D4B;&#x8BD5;&#x5B9E;&#x7528;&#x7A0B;&#x5E8F; TestBed &#xFF0C;&#x5B83;&#x9700;&#x8981;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;&#x3002; &#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528; TestBed.initTestEnvironment &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x5E73;&#x53F0;&#xFF0C;&#x7136;&#x540E;&#x624D;&#x80FD;&#x4F7F;&#x7528;TestBed&#x8FDB;&#x884C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002; &#x5728;&#x6BCF;&#x6B21;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E4B;&#x524D;&#xFF0C;&#x5FC5;&#x987B;&#x6839;&#x636E;&#x9700;&#x8981;&#x521B;&#x5EFA;&#xFF0C;&#x9500;&#x6BC1;&#x548C;&#x91CD;&#x7F6E;&#x6B64;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x3002; &#x5728;angular2-redux-starter&#x4E2D;&#xFF0C;&#x6B64;&#x914D;&#x7F6E;&#x5728; tests.configure.ts &#x6587;&#x4EF6;&#x4E2D;&#x5B8C;&#x6210;&#xFF0C;&#x5E76;&#x5BFC;&#x5165;&#x5230;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E2D;&#x4EE5;&#x4FBF;&#x91CD;&#x65B0;&#x4F7F;&#x7528;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import { getTestBed, ComponentFixtureAutoDetect, TestBed, } from &apos;@angular/core/testing&apos; ; import { BrowserDynamicTestingModule, platformBrowserDynamicTesting, } from &apos;@angular/platform-browser-dynamic/testing&apos; ; export const configureTests = ( configure: ( testBed: TestBed ) = void ) = { const testBed = getTestBed(); if (testBed.platform == null ) { testBed.initTestEnvironment( BrowserDynamicTestingModule, platformBrowserDynamicTesting()); } testBed.configureCompiler({ providers: [ {provide: ComponentFixtureAutoDetect, useValue: true }, ] }); configure(testBed); return testBed.compileComponents().then( () = testBed); }; tests.configure.ts &#x521B;&#x5EFA;&#x6D4B;&#x8BD5;&#x5E73;&#x53F0;&#xFF08;&#x5982;&#x679C;&#x6D4B;&#x8BD5;&#x5E73;&#x53F0;&#x4E0D;&#x5B58;&#x5728;&#xFF09;&#xFF0C;&#x7F16;&#x8BD1;&#x6A21;&#x677F;&#xFF0C;&#x7136;&#x540E;&#x5BFC;&#x51FA; configureTests&#xFF0C; &#x7136;&#x540E;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E2D;&#x5BFC;&#x5165;&#x548C;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x4E0B;&#x9762;&#x6765;&#x770B;&#x770B;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x5B83;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import { TestBed } from &apos;@angular/core/testing&apos; ; import { ExampleComponent } from &apos;./index&apos; ; import { configureTests } from &apos;../../tests.configure&apos; ; import { AppModule } from &apos;../../modules/app.module&apos; ; describe( &apos;Component: Example&apos; , () = { let fixture; beforeEach( done = { const configure = ( testBed: TestBed ) = { testBed.configureTestingModule({ imports: [AppModule], }); }; configureTests(configure).then( testBed = { fixture = testBed.createComponent(ExampleComponent); fixture.detectChanges(); done(); }); });"},"Testing/testing.html":{"title":"","path":"\\Testing\\testing.html","body":"TDD测试 测试驱动开发是一个工程过程，开发人员编写一个初始自动测试用例，定义一个特性，然后写入最少量的代码以通过测试，最终将代码重构为可接受的标准。 单元测试 用于测试系统的各个组件。 集成测试 是测试系统作为一个整体，以及如何在生产中运行的测试。 单元测试应该只验证特定单元代码的行为。如果单元的行为被修改，则单元测试也将被更新。单元测试不应该假设你的代码库或你的依赖的其他部分的行为。当你的代码库的其他部分被修改，你的单元测试不应该失败。 （任何故障表示依赖于其他组件的测试，因此不是单元测试。）单元测试的维护成本很低，只有在修改单个单元时才更新。对于Angular中的TDD，单位最常被定义为类，管道，组件或服务。保持单位相对较小是很重要的。这有助于您编写“自我记录”的小测试，它们易于阅读和理解。"},"Testing/testing.html#TDD测试":{"title":"TDD&#x6D4B;&#x8BD5;","path":"\\Testing\\testing.html#TDD测试","body":"&#x6D4B;&#x8BD5;&#x9A71;&#x52A8;&#x5F00;&#x53D1;&#x662F;&#x4E00;&#x4E2A;&#x5DE5;&#x7A0B;&#x8FC7;&#x7A0B;&#xFF0C;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x81EA;&#x52A8;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x7279;&#x6027;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x5165;&#x6700;&#x5C11;&#x91CF;&#x7684;&#x4EE3;&#x7801;&#x4EE5;&#x901A;&#x8FC7;&#x6D4B;&#x8BD5;&#xFF0C;&#x6700;&#x7EC8;&#x5C06;&#x4EE3;&#x7801;&#x91CD;&#x6784;&#x4E3A;&#x53EF;&#x63A5;&#x53D7;&#x7684;&#x6807;&#x51C6;&#x3002; &#x5355;&#x5143;&#x6D4B;&#x8BD5; &#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x7CFB;&#x7EDF;&#x7684;&#x5404;&#x4E2A;&#x7EC4;&#x4EF6;&#x3002; &#x96C6;&#x6210;&#x6D4B;&#x8BD5; &#x662F;&#x6D4B;&#x8BD5;&#x7CFB;&#x7EDF;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#xFF0C;&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x5728;&#x751F;&#x4EA7;&#x4E2D;&#x8FD0;&#x884C;&#x7684;&#x6D4B;&#x8BD5;&#x3002; &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x5E94;&#x8BE5;&#x53EA;&#x9A8C;&#x8BC1;&#x7279;&#x5B9A;&#x5355;&#x5143;&#x4EE3;&#x7801;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x5982;&#x679C;&#x5355;&#x5143;&#x7684;&#x884C;&#x4E3A;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x5219;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E5F;&#x5C06;&#x88AB;&#x66F4;&#x65B0;&#x3002;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E0D;&#x5E94;&#x8BE5;&#x5047;&#x8BBE;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x5E93;&#x6216;&#x4F60;&#x7684;&#x4F9D;&#x8D56;&#x7684;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x5F53;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x5E93;&#x7684;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x88AB;&#x4FEE;&#x6539;&#xFF0C;&#x4F60;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E0D;&#x5E94;&#x8BE5;&#x5931;&#x8D25;&#x3002; &#xFF08;&#x4EFB;&#x4F55;&#x6545;&#x969C;&#x8868;&#x793A;&#x4F9D;&#x8D56;&#x4E8E;&#x5176;&#x4ED6;&#x7EC4;&#x4EF6;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x662F;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002;&#xFF09;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x7EF4;&#x62A4;&#x6210;&#x672C;&#x5F88;&#x4F4E;&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x4FEE;&#x6539;&#x5355;&#x4E2A;&#x5355;&#x5143;&#x65F6;&#x624D;&#x66F4;&#x65B0;&#x3002;&#x5BF9;&#x4E8E;Angular&#x4E2D;&#x7684;TDD&#xFF0C;&#x5355;&#x4F4D;&#x6700;&#x5E38;&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x7C7B;&#xFF0C;&#x7BA1;&#x9053;&#xFF0C;&#x7EC4;&#x4EF6;&#x6216;&#x670D;&#x52A1;&#x3002;&#x4FDD;&#x6301;&#x5355;&#x4F4D;&#x76F8;&#x5BF9;&#x8F83;&#x5C0F;&#x662F;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x3002;&#x8FD9;&#x6709;&#x52A9;&#x4E8E;&#x60A8;&#x7F16;&#x5199;&#x201C;&#x81EA;&#x6211;&#x8BB0;&#x5F55;&#x201D;&#x7684;&#x5C0F;&#x6D4B;&#x8BD5;&#xFF0C;&#x5B83;&#x4EEC;&#x6613;&#x4E8E;&#x9605;&#x8BFB;&#x548C;&#x7406;&#x89E3;&#x3002;"},"Testing/toolchain.html":{"title":"","path":"\\Testing\\toolchain.html","body":"测试工具链 我们的测试工具链将包括以下工具： Jasmine Karma Phantom-js Istanbul Sinon Chai Jasmine 是在Angular界最流行的测试框架。这是我们将编写我们的单元测试的核心框架。 Karma 是一个测试自动化工具，用于控制我们的测试的执行以及执行它们的浏览器。 它还允许我们生成关于结果的各种报告。 对于一个或两个测试，这可能看起来像大炮打蚊子，但随着应用程序变得越来越大，测试单元数量增加，重要的是以有效的方式组织，执行和报告测试。 Karma是无依赖的，所以我们可以使用其他测试框架与其他工具（如代码覆盖报告，spy测试，e2e等）结合。 为了测试我们的Angular 2应用程序，我们必须创造一个运行它环境，我们可以使用Chrome或Firefox浏览器来实现（Karma支持浏览器测试），或者我们可以使用无浏览器的环境中测试我们的应用程序，它可以为我们提供了自动化某些任务和管理我们的测试流程的控制。 PhantomJS 提供的JavaScript API，允许我们创建一个可以用来引导我们的角2应用程序中的无头DOM实例。然后，使用运行我们的角2的应用程序，DOM实例，我们可以运行我们的测试。 Karma使用 Istanbul 生成代码覆盖率报告，它告诉我们正在测试的应用程序的总体百分比。 这是跟踪哪些组件/服务/管道等有没有写测试的好方法。 我们可以得到一些有用的洞察，有多少应用程序正在测试和在哪里测试。 对于一些额外的测试功能，我们可以使用 Sinon 库之类的spies 测试，subs测试和mock XHR请求。这是Istanbul自带的不一定需要 spyOn 进行整合spy测试功能。 Chai 是断言库，可以与任何其他测试框架搭配。它提供了一些语法糖，让我们用不同的语言编写我们的单元测试 - 我们可以使用一个should，expect或assert接口。Chai还利用“功能链”形成类似英语的句子，用于以更加用户友好的方式描述测试。Chai不是测试所需的库，这里我们不会更深入地探讨它，但它是一个有用的工具，用于创建更清晰，更好的测试。"},"Testing/toolchain.html#测试工具链":{"title":"&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#x94FE;","path":"\\Testing\\toolchain.html#测试工具链","body":"&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x5DE5;&#x5177;&#x94FE;&#x5C06;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x5DE5;&#x5177;&#xFF1A; Jasmine Karma Phantom-js Istanbul Sinon Chai Jasmine &#x662F;&#x5728;Angular&#x754C;&#x6700;&#x6D41;&#x884C;&#x7684;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x3002;&#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x5C06;&#x7F16;&#x5199;&#x6211;&#x4EEC;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x6838;&#x5FC3;&#x6846;&#x67B6;&#x3002; Karma &#x662F;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x81EA;&#x52A8;&#x5316;&#x5DE5;&#x5177;&#xFF0C;&#x7528;&#x4E8E;&#x63A7;&#x5236;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x7684;&#x6267;&#x884C;&#x4EE5;&#x53CA;&#x6267;&#x884C;&#x5B83;&#x4EEC;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x3002; &#x5B83;&#x8FD8;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x751F;&#x6210;&#x5173;&#x4E8E;&#x7ED3;&#x679C;&#x7684;&#x5404;&#x79CD;&#x62A5;&#x544A;&#x3002; &#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x6216;&#x4E24;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF0C;&#x8FD9;&#x53EF;&#x80FD;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x5927;&#x70AE;&#x6253;&#x868A;&#x5B50;&#xFF0C;&#x4F46;&#x968F;&#x7740;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x5927;&#xFF0C;&#x6D4B;&#x8BD5;&#x5355;&#x5143;&#x6570;&#x91CF;&#x589E;&#x52A0;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x662F;&#x4EE5;&#x6709;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#x7EC4;&#x7EC7;&#xFF0C;&#x6267;&#x884C;&#x548C;&#x62A5;&#x544A;&#x6D4B;&#x8BD5;&#x3002; Karma&#x662F;&#x65E0;&#x4F9D;&#x8D56;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x4E0E;&#x5176;&#x4ED6;&#x5DE5;&#x5177;&#xFF08;&#x5982;&#x4EE3;&#x7801;&#x8986;&#x76D6;&#x62A5;&#x544A;&#xFF0C;spy&#x6D4B;&#x8BD5;&#xFF0C;e2e&#x7B49;&#xFF09;&#x7ED3;&#x5408;&#x3002; &#x4E3A;&#x4E86;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;Angular 2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x521B;&#x9020;&#x4E00;&#x4E2A;&#x8FD0;&#x884C;&#x5B83;&#x73AF;&#x5883;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Chrome&#x6216;Firefox&#x6D4F;&#x89C8;&#x5668;&#x6765;&#x5B9E;&#x73B0;&#xFF08;Karma&#x652F;&#x6301;&#x6D4F;&#x89C8;&#x5668;&#x6D4B;&#x8BD5;&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x65E0;&#x6D4F;&#x89C8;&#x5668;&#x7684;&#x73AF;&#x5883;&#x4E2D;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x81EA;&#x52A8;&#x5316;&#x67D0;&#x4E9B;&#x4EFB;&#x52A1;&#x548C;&#x7BA1;&#x7406;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;&#x7684;&#x63A7;&#x5236;&#x3002; PhantomJS &#x63D0;&#x4F9B;&#x7684;JavaScript API&#xFF0C;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5F15;&#x5BFC;&#x6211;&#x4EEC;&#x7684;&#x89D2;2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x65E0;&#x5934;DOM&#x5B9E;&#x4F8B;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x4F7F;&#x7528;&#x8FD0;&#x884C;&#x6211;&#x4EEC;&#x7684;&#x89D2;2&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;DOM&#x5B9E;&#x4F8B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x3002; Karma&#x4F7F;&#x7528; Istanbul &#x751F;&#x6210;&#x4EE3;&#x7801;&#x8986;&#x76D6;&#x7387;&#x62A5;&#x544A;&#xFF0C;&#x5B83;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x6D4B;&#x8BD5;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x603B;&#x4F53;&#x767E;&#x5206;&#x6BD4;&#x3002; &#x8FD9;&#x662F;&#x8DDF;&#x8E2A;&#x54EA;&#x4E9B;&#x7EC4;&#x4EF6;/&#x670D;&#x52A1;/&#x7BA1;&#x9053;&#x7B49;&#x6709;&#x6CA1;&#x6709;&#x5199;&#x6D4B;&#x8BD5;&#x7684;&#x597D;&#x65B9;&#x6CD5;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E9B;&#x6709;&#x7528;&#x7684;&#x6D1E;&#x5BDF;&#xFF0C;&#x6709;&#x591A;&#x5C11;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6B63;&#x5728;&#x6D4B;&#x8BD5;&#x548C;&#x5728;&#x54EA;&#x91CC;&#x6D4B;&#x8BD5;&#x3002; &#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x989D;&#x5916;&#x7684;&#x6D4B;&#x8BD5;&#x529F;&#x80FD;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Sinon &#x5E93;&#x4E4B;&#x7C7B;&#x7684;spies &#x6D4B;&#x8BD5;&#xFF0C;subs&#x6D4B;&#x8BD5;&#x548C;mock XHR&#x8BF7;&#x6C42;&#x3002;&#x8FD9;&#x662F;Istanbul&#x81EA;&#x5E26;&#x7684;&#x4E0D;&#x4E00;&#x5B9A;&#x9700;&#x8981; spyOn &#x8FDB;&#x884C;&#x6574;&#x5408;spy&#x6D4B;&#x8BD5;&#x529F;&#x80FD;&#x3002; Chai &#x662F;&#x65AD;&#x8A00;&#x5E93;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0E;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x642D;&#x914D;&#x3002;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x8BED;&#x6CD5;&#x7CD6;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x8BED;&#x8A00;&#x7F16;&#x5199;&#x6211;&#x4EEC;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5; - &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;should&#xFF0C;expect&#x6216;assert&#x63A5;&#x53E3;&#x3002;Chai&#x8FD8;&#x5229;&#x7528;&#x201C;&#x529F;&#x80FD;&#x94FE;&#x201D;&#x5F62;&#x6210;&#x7C7B;&#x4F3C;&#x82F1;&#x8BED;&#x7684;&#x53E5;&#x5B50;&#xFF0C;&#x7528;&#x4E8E;&#x4EE5;&#x66F4;&#x52A0;&#x7528;&#x6237;&#x53CB;&#x597D;&#x7684;&#x65B9;&#x5F0F;&#x63CF;&#x8FF0;&#x6D4B;&#x8BD5;&#x3002;Chai&#x4E0D;&#x662F;&#x6D4B;&#x8BD5;&#x6240;&#x9700;&#x7684;&#x5E93;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4E0D;&#x4F1A;&#x66F4;&#x6DF1;&#x5165;&#x5730;&#x63A2;&#x8BA8;&#x5B83;&#xFF0C;&#x4F46;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x7528;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x66F4;&#x6E05;&#x6670;&#xFF0C;&#x66F4;&#x597D;&#x7684;&#x6D4B;&#x8BD5;&#x3002;"},"Testing/typings.html":{"title":"","path":"\\Testing\\typings.html","body":"Typings 由于我们的项目和单元测试是用TypeScript编写的，我们需要类库定义，我们将使用（Chai和Jasmine）编写我们的测试。 在 angular2-redux-example 中，我们包含了来自 @types 的这些类型定义。 如果你遵循 angular2-redux-example 的例子，并使用 tests.entry 文件来指定你的项目测试需求，记住你还需要添加节点类型到你的依赖项。"},"Testing/typings.html#Typings":{"title":"Typings","path":"\\Testing\\typings.html#Typings","body":"&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x9879;&#x76EE;&#x548C;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x662F;&#x7528;TypeScript&#x7F16;&#x5199;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7C7B;&#x5E93;&#x5B9A;&#x4E49;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#xFF08;Chai&#x548C;Jasmine&#xFF09;&#x7F16;&#x5199;&#x6211;&#x4EEC;&#x7684;&#x6D4B;&#x8BD5;&#x3002; &#x5728; angular2-redux-example &#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5305;&#x542B;&#x4E86;&#x6765;&#x81EA; @types &#x7684;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9075;&#x5FAA; angular2-redux-example &#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5E76;&#x4F7F;&#x7528; tests.entry &#x6587;&#x4EF6;&#x6765;&#x6307;&#x5B9A;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x6D4B;&#x8BD5;&#x9700;&#x6C42;&#xFF0C;&#x8BB0;&#x4F4F;&#x4F60;&#x8FD8;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x8282;&#x70B9;&#x7C7B;&#x578B;&#x5230;&#x4F60;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#x3002;"},"Testing/using-chai.html":{"title":"","path":"\\Testing\\using-chai.html","body":"使用Chai Chai是一个断言库，有一些美味的语法糖，可以与任何其他测试框架配对。 它允许我们以TDD（测试驱动开发）风格或BDD（行为驱动开发）风格编写测试。 我们已经知道什么是TDD（阅读介绍！），那么什么是BDD？ BDD是使用TDD和自然语言结构（类似英语的句子）来表达单元测试的行为和结果的组合。 Jasmine已经使用了TDD风格，因此我们将使用Chai作为其BDD接口，主要是通过使用 should 和 expect 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 describe(&apos;Testing math&apos;, () =  it(&apos;multiplying should work&apos;, () =  let testMe = 16; // Using the expect interface chai.expect(testMe).to.be.a(&apos;number&apos;); chai.expect(testMe).to.equal(16); // Using the should interface chai.should(); testMe.should.be.a(&apos;number&apos;); testMe.should.equal(16); ); ); expect 和 should 接口都利用链接来构造类似英语的句子来描述测试。 一旦你决定了一个风格，你应该保持这种风格为所有其他测试。 每种风格都有自己独特的语法; 请参阅该 特定API的文档 。"},"Testing/using-chai.html#使用Chai":{"title":"&#x4F7F;&#x7528;Chai","path":"\\Testing\\using-chai.html#使用Chai","body":"Chai&#x662F;&#x4E00;&#x4E2A;&#x65AD;&#x8A00;&#x5E93;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x7F8E;&#x5473;&#x7684;&#x8BED;&#x6CD5;&#x7CD6;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0E;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x914D;&#x5BF9;&#x3002; &#x5B83;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x4EE5;TDD&#xFF08;&#x6D4B;&#x8BD5;&#x9A71;&#x52A8;&#x5F00;&#x53D1;&#xFF09;&#x98CE;&#x683C;&#x6216;BDD&#xFF08;&#x884C;&#x4E3A;&#x9A71;&#x52A8;&#x5F00;&#x53D1;&#xFF09;&#x98CE;&#x683C;&#x7F16;&#x5199;&#x6D4B;&#x8BD5;&#x3002; &#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x662F;TDD&#xFF08;&#x9605;&#x8BFB;&#x4ECB;&#x7ECD;&#xFF01;&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x4EC0;&#x4E48;&#x662F;BDD&#xFF1F; BDD&#x662F;&#x4F7F;&#x7528;TDD&#x548C;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x7ED3;&#x6784;&#xFF08;&#x7C7B;&#x4F3C;&#x82F1;&#x8BED;&#x7684;&#x53E5;&#x5B50;&#xFF09;&#x6765;&#x8868;&#x8FBE;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x7684;&#x884C;&#x4E3A;&#x548C;&#x7ED3;&#x679C;&#x7684;&#x7EC4;&#x5408;&#x3002; Jasmine&#x5DF2;&#x7ECF;&#x4F7F;&#x7528;&#x4E86;TDD&#x98CE;&#x683C;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;Chai&#x4F5C;&#x4E3A;&#x5176;BDD&#x63A5;&#x53E3;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7;&#x4F7F;&#x7528; should &#x548C; expect &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 describe(&apos;Testing math&apos;, () = { it(&apos;multiplying should work&apos;, () = { let testMe = 16; // Using the expect interface chai.expect(testMe).to.be.a(&apos;number&apos;); chai.expect(testMe).to.equal(16); // Using the should interface chai.should(); testMe.should.be.a(&apos;number&apos;); testMe.should.equal(16); }); }); expect &#x548C; should &#x63A5;&#x53E3;&#x90FD;&#x5229;&#x7528;&#x94FE;&#x63A5;&#x6765;&#x6784;&#x9020;&#x7C7B;&#x4F3C;&#x82F1;&#x8BED;&#x7684;&#x53E5;&#x5B50;&#x6765;&#x63CF;&#x8FF0;&#x6D4B;&#x8BD5;&#x3002; &#x4E00;&#x65E6;&#x4F60;&#x51B3;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;&#x98CE;&#x683C;&#xFF0C;&#x4F60;&#x5E94;&#x8BE5;&#x4FDD;&#x6301;&#x8FD9;&#x79CD;&#x98CE;&#x683C;&#x4E3A;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x6D4B;&#x8BD5;&#x3002; &#x6BCF;&#x79CD;&#x98CE;&#x683C;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x72EC;&#x7279;&#x7684;&#x8BED;&#x6CD5;; &#x8BF7;&#x53C2;&#x9605;&#x8BE5; &#x7279;&#x5B9A;API&#x7684;&#x6587;&#x6863; &#x3002;"},"Testing/verify.html":{"title":"","path":"\\Testing\\verify.html","body":"验证方法和属性 我们可以相当容易地测试简单Angular 2组件的属性和方法 - 毕竟，Angular 2组件是我们可以创建和接口的简单类。 说我们有一个简单的组件，保持显示一个定义的消息。 消息的内容可以通过 setMessage 函数改变，而 clearMessage 函数将会设置一个空消息。 这是一个非常小的组件，但我们将如何测试呢？ message.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import Component from '@angular/core' ; @Component ( selector: 'display-message' , template: 'h1message/h1' ) export class MessageComponent  public message: string = '' ; constructor ( )  setMessage(newMessage: string )  this .message = newMessage;  clearMessage()  this .message = '' ;   现在我们将创建两个单元测试，一个测试 setMessage 函数以查看是否显示新消息，另一个测试 clearMessage 函数以查看清除消息是否按预期工作。 message.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import MessageComponent from './message.component' ; describe( 'Testing message state in message.component' , () =  let app: MessageComponent; beforeEach( () =  app = new MessageComponent(); ); it( 'should set new message' , () =  app.setMessage( 'Testing' ); expect(app.message).toBe( 'Testing' ); ); it( 'should clear message' , () =  app.clearMessage(); expect(app.message).toBe( '' ); ); ); View Example 我们创建了两个测试：一个用于 setMessage， 另一个用于 clearMessage 。 为了调用这些函数，我们必须首先初始化 MessageComponent 类。 这是通过在执行每个测试之前调用 beforeEach 函数来实现的。 一旦我们的 MessageComponent 对象被创建，我们可以调用 setMessage 和 clearMessage 并分析这些动作的结果。 我们制定一个预期的结果，然后测试看看我们期望的结果是否是。 这里我们测试我们试图设置的消息是否将 MessageComponent 属性消息修改为我们想要的值。 如果是，那么测试成功，我们的 MessageComponent 按预期工作。"},"Testing/verify.html#验证方法和属性":{"title":"&#x9A8C;&#x8BC1;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;","path":"\\Testing\\verify.html#验证方法和属性","body":"&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F8;&#x5F53;&#x5BB9;&#x6613;&#x5730;&#x6D4B;&#x8BD5;&#x7B80;&#x5355;Angular 2&#x7EC4;&#x4EF6;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5; - &#x6BD5;&#x7ADF;&#xFF0C;Angular 2&#x7EC4;&#x4EF6;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x548C;&#x63A5;&#x53E3;&#x7684;&#x7B80;&#x5355;&#x7C7B;&#x3002; &#x8BF4;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x4FDD;&#x6301;&#x663E;&#x793A;&#x4E00;&#x4E2A;&#x5B9A;&#x4E49;&#x7684;&#x6D88;&#x606F;&#x3002; &#x6D88;&#x606F;&#x7684;&#x5185;&#x5BB9;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; setMessage &#x51FD;&#x6570;&#x6539;&#x53D8;&#xFF0C;&#x800C; clearMessage &#x51FD;&#x6570;&#x5C06;&#x4F1A;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x7A7A;&#x6D88;&#x606F;&#x3002; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5C0F;&#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x5C06;&#x5982;&#x4F55;&#x6D4B;&#x8BD5;&#x5462;&#xFF1F; message.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import {Component} from &apos;@angular/core&apos; ; @Component ({ selector: &apos;display-message&apos; , template: &apos;h1{{message}}/h1&apos; }) export class MessageComponent { public message: string = &apos;&apos; ; constructor ( ) {} setMessage(newMessage: string ) { this .message = newMessage; } clearMessage() { this .message = &apos;&apos; ; } } &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5C06;&#x521B;&#x5EFA;&#x4E24;&#x4E2A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5; setMessage &#x51FD;&#x6570;&#x4EE5;&#x67E5;&#x770B;&#x662F;&#x5426;&#x663E;&#x793A;&#x65B0;&#x6D88;&#x606F;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5; clearMessage &#x51FD;&#x6570;&#x4EE5;&#x67E5;&#x770B;&#x6E05;&#x9664;&#x6D88;&#x606F;&#x662F;&#x5426;&#x6309;&#x9884;&#x671F;&#x5DE5;&#x4F5C;&#x3002; message.spec.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import {MessageComponent} from &apos;./message.component&apos; ; describe( &apos;Testing message state in message.component&apos; , () = { let app: MessageComponent; beforeEach( () = { app = new MessageComponent(); }); it( &apos;should set new message&apos; , () = { app.setMessage( &apos;Testing&apos; ); expect(app.message).toBe( &apos;Testing&apos; ); }); it( &apos;should clear message&apos; , () = { app.clearMessage(); expect(app.message).toBe( &apos;&apos; ); }); }); View Example &#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;&#x6D4B;&#x8BD5;&#xFF1A;&#x4E00;&#x4E2A;&#x7528;&#x4E8E; setMessage&#xFF0C; &#x53E6;&#x4E00;&#x4E2A;&#x7528;&#x4E8E; clearMessage &#x3002; &#x4E3A;&#x4E86;&#x8C03;&#x7528;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x9996;&#x5148;&#x521D;&#x59CB;&#x5316; MessageComponent &#x7C7B;&#x3002; &#x8FD9;&#x662F;&#x901A;&#x8FC7;&#x5728;&#x6267;&#x884C;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x4E4B;&#x524D;&#x8C03;&#x7528; beforeEach &#x51FD;&#x6570;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002; &#x4E00;&#x65E6;&#x6211;&#x4EEC;&#x7684; MessageComponent &#x5BF9;&#x8C61;&#x88AB;&#x521B;&#x5EFA;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8C03;&#x7528; setMessage &#x548C; clearMessage &#x5E76;&#x5206;&#x6790;&#x8FD9;&#x4E9B;&#x52A8;&#x4F5C;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x6211;&#x4EEC;&#x5236;&#x5B9A;&#x4E00;&#x4E2A;&#x9884;&#x671F;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x7136;&#x540E;&#x6D4B;&#x8BD5;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x671F;&#x671B;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x5426;&#x662F;&#x3002; &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6D4B;&#x8BD5;&#x6211;&#x4EEC;&#x8BD5;&#x56FE;&#x8BBE;&#x7F6E;&#x7684;&#x6D88;&#x606F;&#x662F;&#x5426;&#x5C06; MessageComponent &#x5C5E;&#x6027;&#x6D88;&#x606F;&#x4FEE;&#x6539;&#x4E3A;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x503C;&#x3002; &#x5982;&#x679C;&#x662F;&#xFF0C;&#x90A3;&#x4E48;&#x6D4B;&#x8BD5;&#x6210;&#x529F;&#xFF0C;&#x6211;&#x4EEC;&#x7684; MessageComponent &#x6309;&#x9884;&#x671F;&#x5DE5;&#x4F5C;&#x3002;"},"a11y/a11y.html":{"title":"","path":"\\a11y\\a11y.html","body":"Angular 2 中的 Web 无障碍 可访问性是Web开发者需要始终注意的事情，Angular 2应用程序也不例外。 虽然方法和关键概念在很大程度上与其他框架相同，但重要的是检查Angular 2添加到方程式中的差异。"},"a11y/a11y.html#Angular-2-中的-Web-无障碍":{"title":"Angular 2 &#x4E2D;&#x7684; Web &#x65E0;&#x969C;&#x788D;","path":"\\a11y\\a11y.html#Angular-2-中的-Web-无障碍","body":"&#x53EF;&#x8BBF;&#x95EE;&#x6027;&#x662F;Web&#x5F00;&#x53D1;&#x8005;&#x9700;&#x8981;&#x59CB;&#x7EC8;&#x6CE8;&#x610F;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;Angular 2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E5F;&#x4E0D;&#x4F8B;&#x5916;&#x3002; &#x867D;&#x7136;&#x65B9;&#x6CD5;&#x548C;&#x5173;&#x952E;&#x6982;&#x5FF5;&#x5728;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x4E0E;&#x5176;&#x4ED6;&#x6846;&#x67B6;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x91CD;&#x8981;&#x7684;&#x662F;&#x68C0;&#x67E5;Angular 2&#x6DFB;&#x52A0;&#x5230;&#x65B9;&#x7A0B;&#x5F0F;&#x4E2D;&#x7684;&#x5DEE;&#x5F02;&#x3002;"},"a11y/key-concerns.html":{"title":"","path":"\\a11y\\key-concerns.html","body":"无障碍Web应用的关键 在使Web应用程序可访问时，最好关注以下三个方面： Semantic Markup - 允许应用程序在更一般的级别，而不只是正在呈现的内容的详细信息 Keyboard Accessibility - 仅使用键盘时，应用程序必须仍然可用 Visual Assistance - 颜色对比，元素的焦点和音频和事件的文本表示"},"a11y/key-concerns.html#无障碍Web应用的关键":{"title":"&#x65E0;&#x969C;&#x788D;Web&#x5E94;&#x7528;&#x7684;&#x5173;&#x952E;","path":"\\a11y\\key-concerns.html#无障碍Web应用的关键","body":"&#x5728;&#x4F7F;Web&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53EF;&#x8BBF;&#x95EE;&#x65F6;&#xFF0C;&#x6700;&#x597D;&#x5173;&#x6CE8;&#x4EE5;&#x4E0B;&#x4E09;&#x4E2A;&#x65B9;&#x9762;&#xFF1A; Semantic Markup - &#x5141;&#x8BB8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x66F4;&#x4E00;&#x822C;&#x7684;&#x7EA7;&#x522B;&#xFF0C;&#x800C;&#x4E0D;&#x53EA;&#x662F;&#x6B63;&#x5728;&#x5448;&#x73B0;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F; Keyboard Accessibility - &#x4EC5;&#x4F7F;&#x7528;&#x952E;&#x76D8;&#x65F6;&#xFF0C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5FC5;&#x987B;&#x4ECD;&#x7136;&#x53EF;&#x7528; Visual Assistance - &#x989C;&#x8272;&#x5BF9;&#x6BD4;&#xFF0C;&#x5143;&#x7D20;&#x7684;&#x7126;&#x70B9;&#x548C;&#x97F3;&#x9891;&#x548C;&#x4E8B;&#x4EF6;&#x7684;&#x6587;&#x672C;&#x8868;&#x793A;"},"advanced-components/access_child_components.html":{"title":"","path":"\\advanced-components\\access_child_components.html","body":"访问子组件类 @ViewChild 和 @ViewChildren @ViewChild 和 @ViewChildren 装饰器提供对包含组件的子组件类的访问。 @ViewChild 是一个装饰器函数，它将组件类的名称作为其输入，并在要绑定的包含组件的模板中找到其选择器。 @ViewChild 也可以传递一个模板引用变量。 例如，我们将组件类 Alert 绑定到其选择器 my-alert ，并将其分配给属性 alert 。 这使我们能够访问类方法，如 show() 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import Component, ViewChild from '@angular/core' ; import Alert from './alert.component' ; @Component ( selector: 'app' , template: ` my-alertMy alert/my-alert button (click)=\"showAlert()\"Show Alert/button` ) export class App  @ViewChild (Alert) alert: Alert; showAlert()  this .alert.show();   View Example 为了分离关注点，我们通常希望子元素处理自己的行为并传递 @Input() 。 然而，它可能有助于保持结构通用。 当模板中有多个嵌入式组件时，我们还可以使用 @ViewChildren 。 它收集 Alert 组件的实例列表，存储在与数组类似的QueryList 对象中。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import  Component, QueryList, ViewChildren  from '@angular/core' ; import  AlertComponent  from './alert.component' ; @Component ( selector: 'app-root' , template: ` app-alert ok=\"Next\" (close)=\"showAlert(2)\" Step 1: Learn angular /app-alert app-alert ok=\"Next\" (close)=\"showAlert(3)\" Step 2: Love angular /app-alert app-alert ok=\"Close\" Step 3: Build app /app-alert button (click)=\"showAlert(1)\"Show steps/button` ) export class AppComponent  @ViewChildren (AlertComponent) alerts: QueryListAlertComponent; alertsArr = []; ngAfterViewInit()  this .alertsArr = this .alerts.toArray();  showAlert(step)  this .alertsArr[step - 1 ].show(); // step 1 is alert index 0   View Example 如上所示，给定类型为 @ViewChild 和 @ViewChildren 的子组件或子组件的列表分别使用它们的选择器从模板中选择。 另外 @ViewChild 和 @ViewChildren 都可以传递一个选择器字符串： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @Component ( selector: 'app-root' , template: ` app-alert #first ok=\"Next\" (close)=\"showAlert(2)\" Step 1: Learn angular /app-alert app-alert ok=\"Next\" (close)=\"showAlert(3)\" Step 2: Love angular /app-alert app-alert ok=\"Close\" Step 3: Build app /app-alert button (click)=\"showAlert(1)\"Show steps/button` ) export class AppComponent  @ViewChild ( 'first' ) alert: AlertComponent; @ViewChildren (AlertComponent) alerts: QueryListAlertComponent; // ...  View Example 注意，在调用 ngAfterViewInit 生命周期钩子之前，view children 不会被设置。 @ContentChild 和 @ContentChildren @ContentChild 和 @ContentChildren 的工作方式与相应的 @ViewChild 和 @ViewChildren 相同，但是，主要区别是 @ContentChild 和 @ContentChildren 从组件中的 projected content（投影内容） 中选择。 再次注意，在 ngAfterContentInit 组件生命周期钩子之前不会设置 content children。 View Example"},"advanced-components/access_child_components.html#访问子组件类":{"title":"&#x8BBF;&#x95EE;&#x5B50;&#x7EC4;&#x4EF6;&#x7C7B;","path":"\\advanced-components\\access_child_components.html#访问子组件类","body":""},"advanced-components/access_child_components.html#ViewChild-和-ViewChildren":{"title":"@ViewChild &#x548C; @ViewChildren","path":"\\advanced-components\\access_child_components.html#ViewChild-和-ViewChildren","body":"@ViewChild &#x548C; @ViewChildren &#x88C5;&#x9970;&#x5668;&#x63D0;&#x4F9B;&#x5BF9;&#x5305;&#x542B;&#x7EC4;&#x4EF6;&#x7684;&#x5B50;&#x7EC4;&#x4EF6;&#x7C7B;&#x7684;&#x8BBF;&#x95EE;&#x3002; @ViewChild &#x662F;&#x4E00;&#x4E2A;&#x88C5;&#x9970;&#x5668;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5C06;&#x7EC4;&#x4EF6;&#x7C7B;&#x7684;&#x540D;&#x79F0;&#x4F5C;&#x4E3A;&#x5176;&#x8F93;&#x5165;&#xFF0C;&#x5E76;&#x5728;&#x8981;&#x7ED1;&#x5B9A;&#x7684;&#x5305;&#x542B;&#x7EC4;&#x4EF6;&#x7684;&#x6A21;&#x677F;&#x4E2D;&#x627E;&#x5230;&#x5176;&#x9009;&#x62E9;&#x5668;&#x3002; @ViewChild &#x4E5F;&#x53EF;&#x4EE5;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x6A21;&#x677F;&#x5F15;&#x7528;&#x53D8;&#x91CF;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x7EC4;&#x4EF6;&#x7C7B; Alert &#x7ED1;&#x5B9A;&#x5230;&#x5176;&#x9009;&#x62E9;&#x5668; my-alert &#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x5206;&#x914D;&#x7ED9;&#x5C5E;&#x6027; alert &#x3002; &#x8FD9;&#x4F7F;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x8BBF;&#x95EE;&#x7C7B;&#x65B9;&#x6CD5;&#xFF0C;&#x5982; show() &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import {Component, ViewChild} from &apos;@angular/core&apos; ; import {Alert} from &apos;./alert.component&apos; ; @Component ({ selector: &apos;app&apos; , template: ` my-alertMy alert/my-alert button (click)=showAlert()Show Alert/button` }) export class App { @ViewChild (Alert) alert: Alert; showAlert() { this .alert.show(); } } View Example &#x4E3A;&#x4E86;&#x5206;&#x79BB;&#x5173;&#x6CE8;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x5E38;&#x5E0C;&#x671B;&#x5B50;&#x5143;&#x7D20;&#x5904;&#x7406;&#x81EA;&#x5DF1;&#x7684;&#x884C;&#x4E3A;&#x5E76;&#x4F20;&#x9012; @Input() &#x3002; &#x7136;&#x800C;&#xFF0C;&#x5B83;&#x53EF;&#x80FD;&#x6709;&#x52A9;&#x4E8E;&#x4FDD;&#x6301;&#x7ED3;&#x6784;&#x901A;&#x7528;&#x3002; &#x5F53;&#x6A21;&#x677F;&#x4E2D;&#x6709;&#x591A;&#x4E2A;&#x5D4C;&#x5165;&#x5F0F;&#x7EC4;&#x4EF6;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; @ViewChildren &#x3002; &#x5B83;&#x6536;&#x96C6; Alert &#x7EC4;&#x4EF6;&#x7684;&#x5B9E;&#x4F8B;&#x5217;&#x8868;&#xFF0C;&#x5B58;&#x50A8;&#x5728;&#x4E0E;&#x6570;&#x7EC4;&#x7C7B;&#x4F3C;&#x7684;QueryList &#x5BF9;&#x8C61;&#x4E2D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import { Component, QueryList, ViewChildren } from &apos;@angular/core&apos; ; import { AlertComponent } from &apos;./alert.component&apos; ; @Component ({ selector: &apos;app-root&apos; , template: ` app-alert ok=Next (close)=showAlert(2) Step 1: Learn angular /app-alert app-alert ok=Next (close)=showAlert(3) Step 2: Love angular /app-alert app-alert ok=Close Step 3: Build app /app-alert button (click)=showAlert(1)Show steps/button` }) export class AppComponent { @ViewChildren (AlertComponent) alerts: QueryListAlertComponent; alertsArr = []; ngAfterViewInit() { this .alertsArr = this .alerts.toArray(); } showAlert(step) { this .alertsArr[step - 1 ].show(); // step 1 is alert index 0 } } View Example &#x5982;&#x4E0A;&#x6240;&#x793A;&#xFF0C;&#x7ED9;&#x5B9A;&#x7C7B;&#x578B;&#x4E3A; @ViewChild &#x548C; @ViewChildren &#x7684;&#x5B50;&#x7EC4;&#x4EF6;&#x6216;&#x5B50;&#x7EC4;&#x4EF6;&#x7684;&#x5217;&#x8868;&#x5206;&#x522B;&#x4F7F;&#x7528;&#x5B83;&#x4EEC;&#x7684;&#x9009;&#x62E9;&#x5668;&#x4ECE;&#x6A21;&#x677F;&#x4E2D;&#x9009;&#x62E9;&#x3002; &#x53E6;&#x5916; @ViewChild &#x548C; @ViewChildren &#x90FD;&#x53EF;&#x4EE5;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x9009;&#x62E9;&#x5668;&#x5B57;&#x7B26;&#x4E32;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @Component ({ selector: &apos;app-root&apos; , template: ` app-alert #first ok=Next (close)=showAlert(2) Step 1: Learn angular /app-alert app-alert ok=Next (close)=showAlert(3) Step 2: Love angular /app-alert app-alert ok=Close Step 3: Build app /app-alert button (click)=showAlert(1)Show steps/button` }) export class AppComponent { @ViewChild ( &apos;first&apos; ) alert: AlertComponent; @ViewChildren (AlertComponent) alerts: QueryListAlertComponent; // ... } View Example &#x6CE8;&#x610F;&#xFF0C;&#x5728;&#x8C03;&#x7528; ngAfterViewInit &#x751F;&#x547D;&#x5468;&#x671F;&#x94A9;&#x5B50;&#x4E4B;&#x524D;&#xFF0C;view children &#x4E0D;&#x4F1A;&#x88AB;&#x8BBE;&#x7F6E;&#x3002;"},"advanced-components/access_child_components.html#ContentChild-和-ContentChildren":{"title":"@ContentChild &#x548C; @ContentChildren","path":"\\advanced-components\\access_child_components.html#ContentChild-和-ContentChildren","body":"@ContentChild &#x548C; @ContentChildren &#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x4E0E;&#x76F8;&#x5E94;&#x7684; @ViewChild &#x548C; @ViewChildren &#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x4E3B;&#x8981;&#x533A;&#x522B;&#x662F; @ContentChild &#x548C; @ContentChildren &#x4ECE;&#x7EC4;&#x4EF6;&#x4E2D;&#x7684; projected content&#xFF08;&#x6295;&#x5F71;&#x5185;&#x5BB9;&#xFF09; &#x4E2D;&#x9009;&#x62E9;&#x3002; &#x518D;&#x6B21;&#x6CE8;&#x610F;&#xFF0C;&#x5728; ngAfterContentInit &#x7EC4;&#x4EF6;&#x751F;&#x547D;&#x5468;&#x671F;&#x94A9;&#x5B50;&#x4E4B;&#x524D;&#x4E0D;&#x4F1A;&#x8BBE;&#x7F6E; content children&#x3002; View Example"},"advanced-components/advanced-components.html":{"title":"","path":"\\advanced-components\\advanced-components.html","body":"Advanced Components Figure: GB Network PCI Card by Harke is licensed under Public Domain 现在我们熟悉了组件基础知识，可以做一些更有趣的事情。"},"advanced-components/advanced-components.html#Advanced-Components":{"title":"Advanced Components","path":"\\advanced-components\\advanced-components.html#Advanced-Components","body":"Figure: GB Network PCI Card by Harke is licensed under Public Domain &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x719F;&#x6089;&#x4E86;&#x7EC4;&#x4EF6;&#x57FA;&#x7840;&#x77E5;&#x8BC6;&#xFF0C;&#x53EF;&#x4EE5;&#x505A;&#x4E00;&#x4E9B;&#x66F4;&#x6709;&#x8DA3;&#x7684;&#x4E8B;&#x60C5;&#x3002;"},"advanced-components/component_lifecycle.html":{"title":"","path":"\\advanced-components\\component_lifecycle.html","body":"组件生命周期 组件具有由Angular本身管理的生命周期。 Angular管理创建，渲染，数据绑定属性等。它还提供了钩子，允许我们响应关键的生命周期事件。 这里是完整的生命周期钩子接口清单： ngOnChanges - 当输入绑定值更改时调用 ngOnInit - 第一次 ngOnChanges 之后 ngDoCheck - 每次运行变化检测后 ngAfterContentInit - 组件内容初始化之后 ngAfterContentChecked - 在每次检查组件内容后 ngAfterViewInit - 组件的视图被初始化之后 ngAfterViewChecked - 在每次检查组件视图后 ngOnDestroy - 只在组件被销毁之前 📄 from Component Lifecycle View Example"},"advanced-components/component_lifecycle.html#组件生命周期":{"title":"&#x7EC4;&#x4EF6;&#x751F;&#x547D;&#x5468;&#x671F;","path":"\\advanced-components\\component_lifecycle.html#组件生命周期","body":"&#x7EC4;&#x4EF6;&#x5177;&#x6709;&#x7531;Angular&#x672C;&#x8EAB;&#x7BA1;&#x7406;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x3002; Angular&#x7BA1;&#x7406;&#x521B;&#x5EFA;&#xFF0C;&#x6E32;&#x67D3;&#xFF0C;&#x6570;&#x636E;&#x7ED1;&#x5B9A;&#x5C5E;&#x6027;&#x7B49;&#x3002;&#x5B83;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x94A9;&#x5B50;&#xFF0C;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x54CD;&#x5E94;&#x5173;&#x952E;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x4E8B;&#x4EF6;&#x3002; &#x8FD9;&#x91CC;&#x662F;&#x5B8C;&#x6574;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x94A9;&#x5B50;&#x63A5;&#x53E3;&#x6E05;&#x5355;&#xFF1A; ngOnChanges - &#x5F53;&#x8F93;&#x5165;&#x7ED1;&#x5B9A;&#x503C;&#x66F4;&#x6539;&#x65F6;&#x8C03;&#x7528; ngOnInit - &#x7B2C;&#x4E00;&#x6B21; ngOnChanges &#x4E4B;&#x540E; ngDoCheck - &#x6BCF;&#x6B21;&#x8FD0;&#x884C;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x540E; ngAfterContentInit - &#x7EC4;&#x4EF6;&#x5185;&#x5BB9;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x540E; ngAfterContentChecked - &#x5728;&#x6BCF;&#x6B21;&#x68C0;&#x67E5;&#x7EC4;&#x4EF6;&#x5185;&#x5BB9;&#x540E; ngAfterViewInit - &#x7EC4;&#x4EF6;&#x7684;&#x89C6;&#x56FE;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x540E; ngAfterViewChecked - &#x5728;&#x6BCF;&#x6B21;&#x68C0;&#x67E5;&#x7EC4;&#x4EF6;&#x89C6;&#x56FE;&#x540E; ngOnDestroy - &#x53EA;&#x5728;&#x7EC4;&#x4EF6;&#x88AB;&#x9500;&#x6BC1;&#x4E4B;&#x524D; &#x1F4C4; from Component Lifecycle View Example"},"advanced-components/elementref.html":{"title":"","path":"\\advanced-components\\elementref.html","body":"ElementRef 提供对底层原生元素（DOM元素）的访问。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import  AfterContentInit, Component, ElementRef  from '@angular/core' ; @Component ( selector: 'app-root' , template: ` h1My App/h1 pre code node /code /pre ` ) export class AppComponent implements AfterContentInit  node: string ; constructor ( private elementRef: ElementRef )   ngAfterContentInit()  const tmp = document .createElement( 'div' ); const el = this .elementRef.nativeElement.cloneNode( true ); tmp.appendChild(el); this .node = tmp.innerHTML;   View Example"},"advanced-components/elementref.html#ElementRef":{"title":"ElementRef","path":"\\advanced-components\\elementref.html#ElementRef","body":"&#x63D0;&#x4F9B;&#x5BF9;&#x5E95;&#x5C42;&#x539F;&#x751F;&#x5143;&#x7D20;&#xFF08;DOM&#x5143;&#x7D20;&#xFF09;&#x7684;&#x8BBF;&#x95EE;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import { AfterContentInit, Component, ElementRef } from &apos;@angular/core&apos; ; @Component ({ selector: &apos;app-root&apos; , template: ` h1My App/h1 pre code{{ node }}/code /pre ` }) export class AppComponent implements AfterContentInit { node: string ; constructor ( private elementRef: ElementRef ) { } ngAfterContentInit() { const tmp = document .createElement( &apos;div&apos; ); const el = this .elementRef.nativeElement.cloneNode( true ); tmp.appendChild(el); this .node = tmp.innerHTML; } } View Example"},"advanced-components/view_encapsulation.html":{"title":"","path":"\\advanced-components\\view_encapsulation.html","body":"视图封装 视图封装决定组件中定义的模板和样式是否会影响整个应用程序，反之亦然。 Angular提供了三种封装策略： Emulated （默认） - 主HTML的样式传播到组件。 在此组件的 @Component 装饰器中定义的样式仅限于此组件。 Native - 来自主HTML的本地样式不会传播到组件。 在此组件的 @Component 装饰器中定义的样式仅限于此组件。 None - 来自组件的样式传播回主HTML，因此对页面上的所有组件都可见。 请注意在应用程序中包含 None 和 Native 组件的应用程序。 所有具有 None 封装的组件将使用 Native 封装在所有组件中复制其样式。 1 2 3 4 5 6 7 8 9 10 @Component ( // ... encapsulation: ViewEncapsulation.None, styles: [ // ... ] ) export class HelloComponent  // ...  View Example"},"advanced-components/view_encapsulation.html#视图封装":{"title":"&#x89C6;&#x56FE;&#x5C01;&#x88C5;","path":"\\advanced-components\\view_encapsulation.html#视图封装","body":"&#x89C6;&#x56FE;&#x5C01;&#x88C5;&#x51B3;&#x5B9A;&#x7EC4;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6A21;&#x677F;&#x548C;&#x6837;&#x5F0F;&#x662F;&#x5426;&#x4F1A;&#x5F71;&#x54CD;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x53CD;&#x4E4B;&#x4EA6;&#x7136;&#x3002; Angular&#x63D0;&#x4F9B;&#x4E86;&#x4E09;&#x79CD;&#x5C01;&#x88C5;&#x7B56;&#x7565;&#xFF1A; Emulated &#xFF08;&#x9ED8;&#x8BA4;&#xFF09; - &#x4E3B;HTML&#x7684;&#x6837;&#x5F0F;&#x4F20;&#x64AD;&#x5230;&#x7EC4;&#x4EF6;&#x3002; &#x5728;&#x6B64;&#x7EC4;&#x4EF6;&#x7684; @Component &#x88C5;&#x9970;&#x5668;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6837;&#x5F0F;&#x4EC5;&#x9650;&#x4E8E;&#x6B64;&#x7EC4;&#x4EF6;&#x3002; Native - &#x6765;&#x81EA;&#x4E3B;HTML&#x7684;&#x672C;&#x5730;&#x6837;&#x5F0F;&#x4E0D;&#x4F1A;&#x4F20;&#x64AD;&#x5230;&#x7EC4;&#x4EF6;&#x3002; &#x5728;&#x6B64;&#x7EC4;&#x4EF6;&#x7684; @Component &#x88C5;&#x9970;&#x5668;&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x6837;&#x5F0F;&#x4EC5;&#x9650;&#x4E8E;&#x6B64;&#x7EC4;&#x4EF6;&#x3002; None - &#x6765;&#x81EA;&#x7EC4;&#x4EF6;&#x7684;&#x6837;&#x5F0F;&#x4F20;&#x64AD;&#x56DE;&#x4E3B;HTML&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x9875;&#x9762;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x7EC4;&#x4EF6;&#x90FD;&#x53EF;&#x89C1;&#x3002; &#x8BF7;&#x6CE8;&#x610F;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x5305;&#x542B; None &#x548C; Native &#x7EC4;&#x4EF6;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x6240;&#x6709;&#x5177;&#x6709; None &#x5C01;&#x88C5;&#x7684;&#x7EC4;&#x4EF6;&#x5C06;&#x4F7F;&#x7528; Native &#x5C01;&#x88C5;&#x5728;&#x6240;&#x6709;&#x7EC4;&#x4EF6;&#x4E2D;&#x590D;&#x5236;&#x5176;&#x6837;&#x5F0F;&#x3002; 1 2 3 4 5 6 7 8 9 10 @Component ({ // ... encapsulation: ViewEncapsulation.None, styles: [ // ... ] }) export class HelloComponent { // ... } View Example"},"animation/index.html":{"title":"","path":"\\animation\\index.html","body":"动画 Angular动画是基于标准的Web动画API( Web Animations API )构建的。但这个IE和safari都不支持，所以我们要向引入兼容模块。 1 2 import  BrowserModule  from '@angular/platform-browser' ; import  BrowserAnimationsModule  from '@angular/platform-browser/animations' ; 这些API被设计成 CSS Animations 和 CSS Transitions 的接口，所以和CSS效果基本一致。 更多内容请参考官方文档： https://angular.cn/guide/animations ⚡️大多数动画都能用等效的css来实现，如果比较简单的动画并不推荐使用动画库。这里举个单独提一下auto属性值计算的例子，这些元素直到运行时才会知道属性的值。这种情况用CSS很难解决了，所以angular提供了 * 属性值。他会在运行时计算属性的值，然后插入动画。 1 2 3 4 5 6 7 8 9 animations: [ trigger( 'shrinkOut' , [ state( 'in' , style(height: '*' )), transition( '* = void' , [ style(height: '*' ), animate( 250 , style(height: 0 )) ]) ]) ]"},"animation/index.html#动画":{"title":"&#x52A8;&#x753B;","path":"\\animation\\index.html#动画","body":"Angular&#x52A8;&#x753B;&#x662F;&#x57FA;&#x4E8E;&#x6807;&#x51C6;&#x7684;Web&#x52A8;&#x753B;API( Web Animations API )&#x6784;&#x5EFA;&#x7684;&#x3002;&#x4F46;&#x8FD9;&#x4E2A;IE&#x548C;safari&#x90FD;&#x4E0D;&#x652F;&#x6301;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8981;&#x5411;&#x5F15;&#x5165;&#x517C;&#x5BB9;&#x6A21;&#x5757;&#x3002; 1 2 import { BrowserModule } from &apos;@angular/platform-browser&apos; ; import { BrowserAnimationsModule } from &apos;@angular/platform-browser/animations&apos; ; &#x8FD9;&#x4E9B;API&#x88AB;&#x8BBE;&#x8BA1;&#x6210; CSS Animations &#x548C; CSS Transitions &#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x6240;&#x4EE5;&#x548C;CSS&#x6548;&#x679C;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#x3002; &#x66F4;&#x591A;&#x5185;&#x5BB9;&#x8BF7;&#x53C2;&#x8003;&#x5B98;&#x65B9;&#x6587;&#x6863;&#xFF1A; https://angular.cn/guide/animations &#x26A1;&#xFE0F;&#x5927;&#x591A;&#x6570;&#x52A8;&#x753B;&#x90FD;&#x80FD;&#x7528;&#x7B49;&#x6548;&#x7684;css&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x5982;&#x679C;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x52A8;&#x753B;&#x5E76;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#x52A8;&#x753B;&#x5E93;&#x3002;&#x8FD9;&#x91CC;&#x4E3E;&#x4E2A;&#x5355;&#x72EC;&#x63D0;&#x4E00;&#x4E0B;auto&#x5C5E;&#x6027;&#x503C;&#x8BA1;&#x7B97;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x8FD9;&#x4E9B;&#x5143;&#x7D20;&#x76F4;&#x5230;&#x8FD0;&#x884C;&#x65F6;&#x624D;&#x4F1A;&#x77E5;&#x9053;&#x5C5E;&#x6027;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x7528;CSS&#x5F88;&#x96BE;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;angular&#x63D0;&#x4F9B;&#x4E86; * &#x5C5E;&#x6027;&#x503C;&#x3002;&#x4ED6;&#x4F1A;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x8BA1;&#x7B97;&#x5C5E;&#x6027;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x63D2;&#x5165;&#x52A8;&#x753B;&#x3002; 1 2 3 4 5 6 7 8 9 animations: [ trigger( &apos;shrinkOut&apos; , [ state( &apos;in&apos; , style({height: &apos;*&apos; })), transition( &apos;* = void&apos; , [ style({height: &apos;*&apos; }), animate( 250 , style({height: 0 })) ]) ]) ]"},"state-management/actions.html":{"title":"","path":"\\state-management\\actions.html","body":"Actions Redux使用一个称为Actions的概念，它描述了对应用程序的状态更改。 Redux actions 是实现@ngrx提供的 Action 接口的简单JSON对象： 1 2 3 4 export interface Action  type : string ; payload?: any ;  type 属性是用于标识您的应用程序的操作的唯一字符串。 使用 lisp-case （例如 MY_ACTION ）是一个常见的惯例，但是只要在整个项目中是一致的，您可以随意使用任何写法。 payload 属性提供了一种将附加数据传递到Redux的其他部分的方法，它是完全可选的。 示例： 1 2 3 4 5 6 7 const loginSendAction: Action =  type : 'LOGIN_SEND' , payload:  username: 'katie' , password: '35c0cd1ecbbb68c75498b83c4e79fe2b'  ; 使用平面对象，使得动作是可序列化的，并且可以重播到应用程序状态。 即使您的操作涉及异步逻辑，最终的分派操作仍将是一个简单的JSON对象。 为了简化操作创建，您可以创建一个工厂函数来处理应用程序中重复的部分： app/store/createAction.ts 1 2 3 4 5 import Action from '@ngrx/store' ; export function createAction ( type , payload? ): Action  return  type , payload ;  由此产生的 LOGIN_SEND 创建操作变得更加简洁和干净： 1 2 3 4 const loginSendAction: Action = createAction( 'LOGIN_SEND' ,  username: 'katie' , password: '35c0cd1ecbbb68c75498b83c4e79fe2b' );"},"state-management/actions.html#Actions":{"title":"Actions","path":"\\state-management\\actions.html#Actions","body":"Redux&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x79F0;&#x4E3A;Actions&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x63CF;&#x8FF0;&#x4E86;&#x5BF9;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x72B6;&#x6001;&#x66F4;&#x6539;&#x3002; Redux actions &#x662F;&#x5B9E;&#x73B0;@ngrx&#x63D0;&#x4F9B;&#x7684; Action &#x63A5;&#x53E3;&#x7684;&#x7B80;&#x5355;JSON&#x5BF9;&#x8C61;&#xFF1A; 1 2 3 4 export interface Action { type : string ; payload?: any ; } type &#x5C5E;&#x6027;&#x662F;&#x7528;&#x4E8E;&#x6807;&#x8BC6;&#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x64CD;&#x4F5C;&#x7684;&#x552F;&#x4E00;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x4F7F;&#x7528; lisp-case &#xFF08;&#x4F8B;&#x5982; MY_ACTION &#xFF09;&#x662F;&#x4E00;&#x4E2A;&#x5E38;&#x89C1;&#x7684;&#x60EF;&#x4F8B;&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x8981;&#x5728;&#x6574;&#x4E2A;&#x9879;&#x76EE;&#x4E2D;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x968F;&#x610F;&#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x5199;&#x6CD5;&#x3002; payload &#x5C5E;&#x6027;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x5C06;&#x9644;&#x52A0;&#x6570;&#x636E;&#x4F20;&#x9012;&#x5230;Redux&#x7684;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x662F;&#x5B8C;&#x5168;&#x53EF;&#x9009;&#x7684;&#x3002; &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 const loginSendAction: Action = { type : &apos;LOGIN_SEND&apos; , payload: { username: &apos;katie&apos; , password: &apos;35c0cd1ecbbb68c75498b83c4e79fe2b&apos; } }; &#x4F7F;&#x7528;&#x5E73;&#x9762;&#x5BF9;&#x8C61;&#xFF0C;&#x4F7F;&#x5F97;&#x52A8;&#x4F5C;&#x662F;&#x53EF;&#x5E8F;&#x5217;&#x5316;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x91CD;&#x64AD;&#x5230;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x3002; &#x5373;&#x4F7F;&#x60A8;&#x7684;&#x64CD;&#x4F5C;&#x6D89;&#x53CA;&#x5F02;&#x6B65;&#x903B;&#x8F91;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x5206;&#x6D3E;&#x64CD;&#x4F5C;&#x4ECD;&#x5C06;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;JSON&#x5BF9;&#x8C61;&#x3002; &#x4E3A;&#x4E86;&#x7B80;&#x5316;&#x64CD;&#x4F5C;&#x521B;&#x5EFA;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5DE5;&#x5382;&#x51FD;&#x6570;&#x6765;&#x5904;&#x7406;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x91CD;&#x590D;&#x7684;&#x90E8;&#x5206;&#xFF1A; app/store/createAction.ts 1 2 3 4 5 import {Action} from &apos;@ngrx/store&apos; ; export function createAction ( type , payload? ): Action { return { type , payload }; } &#x7531;&#x6B64;&#x4EA7;&#x751F;&#x7684; LOGIN_SEND &#x521B;&#x5EFA;&#x64CD;&#x4F5C;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x548C;&#x5E72;&#x51C0;&#xFF1A; 1 2 3 4 const loginSendAction: Action = createAction( &apos;LOGIN_SEND&apos; , { username: &apos;katie&apos; , password: &apos;35c0cd1ecbbb68c75498b83c4e79fe2b&apos; });"},"state-management/adding_ngrx_to_your_project.html":{"title":"","path":"\\state-management\\adding_ngrx_to_your_project.html","body":"将@ngrx添加到你的项目 在您的控制台中，运行以下命令将 @ngrx 添加到 package.json 中的依赖关系列表中： 1 npm install @ngrx/core @ngrx/store --save 如果你打算使用 @ngrx/effects 扩展来添加附加功能，那么还可以运行以下命令： 1 npm install @ngrx/effects --save"},"state-management/adding_ngrx_to_your_project.html#将-ngrx添加到你的项目":{"title":"&#x5C06;@ngrx&#x6DFB;&#x52A0;&#x5230;&#x4F60;&#x7684;&#x9879;&#x76EE;","path":"\\state-management\\adding_ngrx_to_your_project.html#将-ngrx添加到你的项目","body":"&#x5728;&#x60A8;&#x7684;&#x63A7;&#x5236;&#x53F0;&#x4E2D;&#xFF0C;&#x8FD0;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x5C06; @ngrx &#x6DFB;&#x52A0;&#x5230; package.json &#x4E2D;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x5217;&#x8868;&#x4E2D;&#xFF1A; 1 npm install @ngrx/core @ngrx/store --save &#x5982;&#x679C;&#x4F60;&#x6253;&#x7B97;&#x4F7F;&#x7528; @ngrx/effects &#x6269;&#x5C55;&#x6765;&#x6DFB;&#x52A0;&#x9644;&#x52A0;&#x529F;&#x80FD;&#xFF0C;&#x90A3;&#x4E48;&#x8FD8;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#xFF1A; 1 npm install @ngrx/effects --save"},"state-management/configuring_your_application.html":{"title":"","path":"\\state-management\\configuring_your_application.html","body":"配置你的应用 一旦创建了reducer，就可以配置Angular应用程序了。 在您应用的主模块中，简单的将 StoreModule.provideStore() 调用添加到 @NgModule 的导入中： app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import BrowserModule from '@angular/platform-browser' ; import NgModule from '@angular/core' ; import FormsModule from '@angular/forms' ; import HttpModule from '@angular/http' ; import StoreModule from '@ngrx/store' ; import EffectsModule from '@ngrx/effects' ; import 'rxjs/Rx' ; import rootReducer from './store/rootReducer' ; import CounterActions from './store/actions' ; import CounterEffects from './store/effects' ; import AppComponent, CounterComponent from './components' ; import CounterService from './services' ; @NgModule ( imports: [ BrowserModule, FormsModule, HttpModule, StoreModule.provideStore(rootReducer) ], declarations: [ AppComponent, CounterComponent ], providers: [ CounterActions, CounterService ], bootstrap: [AppComponent] ) export class AppModule  "},"state-management/configuring_your_application.html#配置你的应用":{"title":"&#x914D;&#x7F6E;&#x4F60;&#x7684;&#x5E94;&#x7528;","path":"\\state-management\\configuring_your_application.html#配置你的应用","body":"&#x4E00;&#x65E6;&#x521B;&#x5EFA;&#x4E86;reducer&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;Angular&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E86;&#x3002; &#x5728;&#x60A8;&#x5E94;&#x7528;&#x7684;&#x4E3B;&#x6A21;&#x5757;&#x4E2D;&#xFF0C;&#x7B80;&#x5355;&#x7684;&#x5C06; StoreModule.provideStore() &#x8C03;&#x7528;&#x6DFB;&#x52A0;&#x5230; @NgModule &#x7684;&#x5BFC;&#x5165;&#x4E2D;&#xFF1A; app/app.module.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import {BrowserModule} from &apos;@angular/platform-browser&apos; ; import {NgModule} from &apos;@angular/core&apos; ; import {FormsModule} from &apos;@angular/forms&apos; ; import {HttpModule} from &apos;@angular/http&apos; ; import {StoreModule} from &apos;@ngrx/store&apos; ; import {EffectsModule} from &apos;@ngrx/effects&apos; ; import &apos;rxjs/Rx&apos; ; import {rootReducer} from &apos;./store/rootReducer&apos; ; import {CounterActions} from &apos;./store/actions&apos; ; import {CounterEffects} from &apos;./store/effects&apos; ; import {AppComponent, CounterComponent} from &apos;./components&apos; ; import {CounterService} from &apos;./services&apos; ; @NgModule ({ imports: [ BrowserModule, FormsModule, HttpModule, StoreModule.provideStore(rootReducer) ], declarations: [ AppComponent, CounterComponent ], providers: [ CounterActions, CounterService ], bootstrap: [AppComponent] }) export class AppModule { }"},"state-management/configuring_your_application_to_use_redux.html":{"title":"","path":"\\state-management\\configuring_your_application_to_use_redux.html","body":"配置应用以使用Redux Once you have the reducers and actions created, it is time to configure your Angular 2 application to make use of Ng2-Redux. For this, we will need to: Register Ng2-Redux with Angular 2 Create our application reducer Create and configure a store Registering Ng2-Redux with Angular 2 app/index.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  NgModule  from &apos;@angular/core&apos;; import  BrowserModule  from &apos;@angular/platform-browser&apos;; import  platformBrowserDynamic  from &apos;@angular/platform-browser-dynamic&apos;; import  NgReduxModule, NgRedux  from &apos;ng2-redux&apos;; import  SimpleRedux  from &apos;./containers/app-container&apos;; @NgModule( imports: [ BrowserModule, NgReduxModule ], declarations: [ SimpleRedux ], bootstrap: [ SimpleRedux ] ) class AppModule   platformBrowserDynamic().bootstrapModule(AppModule); Here, we’re simply adding the NgReduxModule class as an import in our NgModule declaration. Create our Application Reducer app/reducers/index.ts 1 2 3 4 5 6 import  combineReducers  from &apos;redux&apos;; import counter from &apos;./counter-reducer&apos;; export default combineReducers( counter ); combineReducers allows us to break out our application into smaller reducers with a single area of concern. Each reducer that you pass into it will control a property on the state. So when we are subscribing to our state changes with Ng2-Redux’s @select decorator, we are able to select a counter property, or any other reducers you have provided. Create and Configure a Store Next we want Ng2-Redux to configure our store based on settings we provide. This should be done once, in the top-level component of your application. app/containers/app-container.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import  Component  from &apos;@angular/core&apos;; import  NgRedux  from &apos;ng2-redux&apos;; import logger from &apos;../store/configure-logger&apos;; import reducer from &apos;../reducers&apos;; @Component( // ... ) class SimpleRedux  constructor(ngRedux: NgRedux)  const initialState = ; const middleware = [ logger ]; ngRedux.configureStore(reducer, initialState, middleware);   In this example we are creating a store that uses the redux-logger middleware, which will add some logging functionality to the application."},"state-management/configuring_your_application_to_use_redux.html#配置应用以使用Redux":{"title":"&#x914D;&#x7F6E;&#x5E94;&#x7528;&#x4EE5;&#x4F7F;&#x7528;Redux","path":"\\state-management\\configuring_your_application_to_use_redux.html#配置应用以使用Redux","body":"Once you have the reducers and actions created, it is time to configure your Angular 2 application to make use of Ng2-Redux. For this, we will need to: Register Ng2-Redux with Angular 2 Create our application reducer Create and configure a store"},"state-management/configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2":{"title":"Registering Ng2-Redux with Angular 2","path":"\\state-management\\configuring_your_application_to_use_redux.html#Registering-Ng2-Redux-with-Angular-2","body":"app/index.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import { NgModule } from &apos;@angular/core&apos;; import { BrowserModule } from &apos;@angular/platform-browser&apos;; import { platformBrowserDynamic } from &apos;@angular/platform-browser-dynamic&apos;; import { NgReduxModule, NgRedux } from &apos;ng2-redux&apos;; import { SimpleRedux } from &apos;./containers/app-container&apos;; @NgModule({ imports: [ BrowserModule, NgReduxModule ], declarations: [ SimpleRedux ], bootstrap: [ SimpleRedux ] }) class AppModule { } platformBrowserDynamic().bootstrapModule(AppModule); Here, we&#x2019;re simply adding the NgReduxModule class as an import in our NgModule declaration."},"state-management/configuring_your_application_to_use_redux.html#Create-our-Application-Reducer":{"title":"Create our Application Reducer","path":"\\state-management\\configuring_your_application_to_use_redux.html#Create-our-Application-Reducer","body":"app/reducers/index.ts 1 2 3 4 5 6 import { combineReducers } from &apos;redux&apos;; import counter from &apos;./counter-reducer&apos;; export default combineReducers({ counter }); combineReducers allows us to break out our application into smaller reducers with a single area of concern. Each reducer that you pass into it will control a property on the state. So when we are subscribing to our state changes with Ng2-Redux&#x2019;s @select decorator, we are able to select a counter property, or any other reducers you have provided."},"state-management/configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store":{"title":"Create and Configure a Store","path":"\\state-management\\configuring_your_application_to_use_redux.html#Create-and-Configure-a-Store","body":"Next we want Ng2-Redux to configure our store based on settings we provide. This should be done once, in the top-level component of your application. app/containers/app-container.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import { Component } from &apos;@angular/core&apos;; import { NgRedux } from &apos;ng2-redux&apos;; import logger from &apos;../store/configure-logger&apos;; import reducer from &apos;../reducers&apos;; @Component({ // ... }) class SimpleRedux { constructor(ngRedux: NgRedux) { const initialState = {}; const middleware = [ logger ]; ngRedux.configureStore(reducer, initialState, middleware); } } In this example we are creating a store that uses the redux-logger middleware, which will add some logging functionality to the application."},"state-management/creating_your_applications_root_reducer.html":{"title":"","path":"\\state-management\\creating_your_applications_root_reducer.html","body":"创建应用的Root Reducer @ngrx允许我们将您的应用程序分解成具有单个关注领域的较小的reducer。 我们可以通过创建一个反映应用程序 AppState 的对象来组合这些reducer，其中每个属性将指向其中一个较小的reducer。 app/store/rootReducer.ts 1 2 3 4 5 import counterReducer from './counter/counter.reducer' ; export const rootReducer =  counter: counterReducer ;"},"state-management/creating_your_applications_root_reducer.html#创建应用的Root-Reducer":{"title":"&#x521B;&#x5EFA;&#x5E94;&#x7528;&#x7684;Root Reducer","path":"\\state-management\\creating_your_applications_root_reducer.html#创建应用的Root-Reducer","body":"@ngrx&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x5C06;&#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5206;&#x89E3;&#x6210;&#x5177;&#x6709;&#x5355;&#x4E2A;&#x5173;&#x6CE8;&#x9886;&#x57DF;&#x7684;&#x8F83;&#x5C0F;&#x7684;reducer&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53CD;&#x6620;&#x5E94;&#x7528;&#x7A0B;&#x5E8F; AppState &#x7684;&#x5BF9;&#x8C61;&#x6765;&#x7EC4;&#x5408;&#x8FD9;&#x4E9B;reducer&#xFF0C;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x5C06;&#x6307;&#x5411;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x8F83;&#x5C0F;&#x7684;reducer&#x3002; app/store/rootReducer.ts 1 2 3 4 5 import {counterReducer} from &apos;./counter/counter.reducer&apos; ; export const rootReducer = { counter: counterReducer };"},"state-management/defining_your_main_application_state.html":{"title":"","path":"\\state-management\\defining_your_main_application_state.html","body":"定义应用的主状态 当使用Redux构建应用程序时，首先要考虑的是“我要存储什么状态”？ 捕获所有应用程序的状态通常是一个好主意，以便在任何地方都可以访问，而且都在同一位置方便检查。 在应用程序state中，我们存储的东西如下： 通过调用API收到的数据 用户输入 视图状态，如菜单和按钮切换 Application preferences 国际化信息 主题和其他可定制的应用领域 要定义应用程序的state，请使用名为 AppState 或 IAppState 的接口，这取决于项目中使用的命名约定。 示例： app/models/appState.ts 1 2 3 4 5 6 7 8 export interface AppState  readonly colors: Colors; readonly localization: Localization; readonly login: Login; readonly projectList: ProjectList; readonly registration: Registration; readonly showMainNavigation: boolean ;  注意： 我们使用readonly来确保编译时不可变性，并且它提供了最简单的不可变实现，而不增加更多的依赖性来混淆示例。 但是，您可以自由地选择其他方法。"},"state-management/defining_your_main_application_state.html#定义应用的主状态":{"title":"&#x5B9A;&#x4E49;&#x5E94;&#x7528;&#x7684;&#x4E3B;&#x72B6;&#x6001;","path":"\\state-management\\defining_your_main_application_state.html#定义应用的主状态","body":"&#x5F53;&#x4F7F;&#x7528;Redux&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x8003;&#x8651;&#x7684;&#x662F;&#x201C;&#x6211;&#x8981;&#x5B58;&#x50A8;&#x4EC0;&#x4E48;&#x72B6;&#x6001;&#x201D;&#xFF1F; &#x6355;&#x83B7;&#x6240;&#x6709;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x72B6;&#x6001;&#x901A;&#x5E38;&#x662F;&#x4E00;&#x4E2A;&#x597D;&#x4E3B;&#x610F;&#xFF0C;&#x4EE5;&#x4FBF;&#x5728;&#x4EFB;&#x4F55;&#x5730;&#x65B9;&#x90FD;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#xFF0C;&#x800C;&#x4E14;&#x90FD;&#x5728;&#x540C;&#x4E00;&#x4F4D;&#x7F6E;&#x65B9;&#x4FBF;&#x68C0;&#x67E5;&#x3002; &#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;state&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5B58;&#x50A8;&#x7684;&#x4E1C;&#x897F;&#x5982;&#x4E0B;&#xFF1A; &#x901A;&#x8FC7;&#x8C03;&#x7528;API&#x6536;&#x5230;&#x7684;&#x6570;&#x636E; &#x7528;&#x6237;&#x8F93;&#x5165; &#x89C6;&#x56FE;&#x72B6;&#x6001;&#xFF0C;&#x5982;&#x83DC;&#x5355;&#x548C;&#x6309;&#x94AE;&#x5207;&#x6362; Application preferences &#x56FD;&#x9645;&#x5316;&#x4FE1;&#x606F; &#x4E3B;&#x9898;&#x548C;&#x5176;&#x4ED6;&#x53EF;&#x5B9A;&#x5236;&#x7684;&#x5E94;&#x7528;&#x9886;&#x57DF; &#x8981;&#x5B9A;&#x4E49;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;state&#xFF0C;&#x8BF7;&#x4F7F;&#x7528;&#x540D;&#x4E3A; AppState &#x6216; IAppState &#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x53D6;&#x51B3;&#x4E8E;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x547D;&#x540D;&#x7EA6;&#x5B9A;&#x3002; &#x793A;&#x4F8B;&#xFF1A; app/models/appState.ts 1 2 3 4 5 6 7 8 export interface AppState { readonly colors: Colors; readonly localization: Localization; readonly login: Login; readonly projectList: ProjectList; readonly registration: Registration; readonly showMainNavigation: boolean ; } &#x6CE8;&#x610F;&#xFF1A; &#x6211;&#x4EEC;&#x4F7F;&#x7528;readonly&#x6765;&#x786E;&#x4FDD;&#x7F16;&#x8BD1;&#x65F6;&#x4E0D;&#x53EF;&#x53D8;&#x6027;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x6700;&#x7B80;&#x5355;&#x7684;&#x4E0D;&#x53EF;&#x53D8;&#x5B9E;&#x73B0;&#xFF0C;&#x800C;&#x4E0D;&#x589E;&#x52A0;&#x66F4;&#x591A;&#x7684;&#x4F9D;&#x8D56;&#x6027;&#x6765;&#x6DF7;&#x6DC6;&#x793A;&#x4F8B;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x5730;&#x9009;&#x62E9;&#x5176;&#x4ED6;&#x65B9;&#x6CD5;&#x3002;"},"state-management/example_application.html":{"title":"","path":"\\state-management\\example_application.html","body":"示例应用 在本章中，您将使用@ngrx创建一个简单的计数器应用程序。 您的应用程序将允许用户将数字递增和递减1，并将该值重置为零。 这是我们将在整个示例中使用的AppState： app/models/appState.ts 1 2 3 4 5 import Counter from './counter' ; export interface AppState  readonly counter: Counter;  app/models/counter.ts 1 2 3 export interface Counter  readonly currentValue: number ;  在自己的文件中声明每个接口是很好的做法，如果您的应用程序使用了七个或更多接口，则创建一个逻辑目录结构。"},"state-management/example_application.html#示例应用":{"title":"&#x793A;&#x4F8B;&#x5E94;&#x7528;","path":"\\state-management\\example_application.html#示例应用","body":"&#x5728;&#x672C;&#x7AE0;&#x4E2D;&#xFF0C;&#x60A8;&#x5C06;&#x4F7F;&#x7528;@ngrx&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x8BA1;&#x6570;&#x5668;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5C06;&#x5141;&#x8BB8;&#x7528;&#x6237;&#x5C06;&#x6570;&#x5B57;&#x9012;&#x589E;&#x548C;&#x9012;&#x51CF;1&#xFF0C;&#x5E76;&#x5C06;&#x8BE5;&#x503C;&#x91CD;&#x7F6E;&#x4E3A;&#x96F6;&#x3002; &#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x6574;&#x4E2A;&#x793A;&#x4F8B;&#x4E2D;&#x4F7F;&#x7528;&#x7684;AppState&#xFF1A; app/models/appState.ts 1 2 3 4 5 import {Counter} from &apos;./counter&apos; ; export interface AppState { readonly counter: Counter; } app/models/counter.ts 1 2 3 export interface Counter { readonly currentValue: number ; } &#x5728;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#x58F0;&#x660E;&#x6BCF;&#x4E2A;&#x63A5;&#x53E3;&#x662F;&#x5F88;&#x597D;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x4E86;&#x4E03;&#x4E2A;&#x6216;&#x66F4;&#x591A;&#x63A5;&#x53E3;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x3002;"},"state-management/getting_more_from_redux_and_ngrx.html":{"title":"","path":"\\state-management\\getting_more_from_redux_and_ngrx.html","body":"更多Redux和Ngrx资源 Redux Redux在其生态系统中提供了许多工具和中间件，以促进优雅的应用程序开发。 Redux DevTools - 该工具显示与其存储交互的操作的线性时间线。允许重放操作和错误处理 redux-thunk - 实现动作延迟评估的中间件 redux-observable - 基于RxJS的模型用于处理action流的副作用。 * ng2-redux-router - Angular 2路由和你的redux store之间的reactive glue Ngrx Ngrx通过 ngrx/store 模块提供了大多数Redux实现。其他模块可用于更好的集成和开发。 ngrx/store-devtools - Redux DevTools的ngrx实现 ngrx/effects - 用于执行类似于 redux-saga 的副作用的模型 ngrx/router and ngrx/router-store - 用于Angular 2的路由，可以连接到您的ngrx store"},"state-management/getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源":{"title":"&#x66F4;&#x591A;Redux&#x548C;Ngrx&#x8D44;&#x6E90;","path":"\\state-management\\getting_more_from_redux_and_ngrx.html#更多Redux和Ngrx资源","body":"Redux Redux&#x5728;&#x5176;&#x751F;&#x6001;&#x7CFB;&#x7EDF;&#x4E2D;&#x63D0;&#x4F9B;&#x4E86;&#x8BB8;&#x591A;&#x5DE5;&#x5177;&#x548C;&#x4E2D;&#x95F4;&#x4EF6;&#xFF0C;&#x4EE5;&#x4FC3;&#x8FDB;&#x4F18;&#x96C5;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#x3002; Redux DevTools - &#x8BE5;&#x5DE5;&#x5177;&#x663E;&#x793A;&#x4E0E;&#x5176;&#x5B58;&#x50A8;&#x4EA4;&#x4E92;&#x7684;&#x64CD;&#x4F5C;&#x7684;&#x7EBF;&#x6027;&#x65F6;&#x95F4;&#x7EBF;&#x3002;&#x5141;&#x8BB8;&#x91CD;&#x653E;&#x64CD;&#x4F5C;&#x548C;&#x9519;&#x8BEF;&#x5904;&#x7406; redux-thunk - &#x5B9E;&#x73B0;&#x52A8;&#x4F5C;&#x5EF6;&#x8FDF;&#x8BC4;&#x4F30;&#x7684;&#x4E2D;&#x95F4;&#x4EF6; redux-observable - &#x57FA;&#x4E8E;RxJS&#x7684;&#x6A21;&#x578B;&#x7528;&#x4E8E;&#x5904;&#x7406;action&#x6D41;&#x7684;&#x526F;&#x4F5C;&#x7528;&#x3002; * ng2-redux-router - Angular 2&#x8DEF;&#x7531;&#x548C;&#x4F60;&#x7684;redux store&#x4E4B;&#x95F4;&#x7684;reactive glue Ngrx Ngrx&#x901A;&#x8FC7; ngrx/store &#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x4E86;&#x5927;&#x591A;&#x6570;Redux&#x5B9E;&#x73B0;&#x3002;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x53EF;&#x7528;&#x4E8E;&#x66F4;&#x597D;&#x7684;&#x96C6;&#x6210;&#x548C;&#x5F00;&#x53D1;&#x3002; ngrx/store-devtools - Redux DevTools&#x7684;ngrx&#x5B9E;&#x73B0; ngrx/effects - &#x7528;&#x4E8E;&#x6267;&#x884C;&#x7C7B;&#x4F3C;&#x4E8E; redux-saga &#x7684;&#x526F;&#x4F5C;&#x7528;&#x7684;&#x6A21;&#x578B; ngrx/router and ngrx/router-store - &#x7528;&#x4E8E;Angular 2&#x7684;&#x8DEF;&#x7531;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDE;&#x63A5;&#x5230;&#x60A8;&#x7684;ngrx store"},"state-management/getting_more_from_redux_and_ngrx.html#Redux":{"title":"Redux","path":"\\state-management\\getting_more_from_redux_and_ngrx.html#Redux","body":"Redux&#x5728;&#x5176;&#x751F;&#x6001;&#x7CFB;&#x7EDF;&#x4E2D;&#x63D0;&#x4F9B;&#x4E86;&#x8BB8;&#x591A;&#x5DE5;&#x5177;&#x548C;&#x4E2D;&#x95F4;&#x4EF6;&#xFF0C;&#x4EE5;&#x4FC3;&#x8FDB;&#x4F18;&#x96C5;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#x3002; Redux DevTools - &#x8BE5;&#x5DE5;&#x5177;&#x663E;&#x793A;&#x4E0E;&#x5176;&#x5B58;&#x50A8;&#x4EA4;&#x4E92;&#x7684;&#x64CD;&#x4F5C;&#x7684;&#x7EBF;&#x6027;&#x65F6;&#x95F4;&#x7EBF;&#x3002;&#x5141;&#x8BB8;&#x91CD;&#x653E;&#x64CD;&#x4F5C;&#x548C;&#x9519;&#x8BEF;&#x5904;&#x7406; redux-thunk - &#x5B9E;&#x73B0;&#x52A8;&#x4F5C;&#x5EF6;&#x8FDF;&#x8BC4;&#x4F30;&#x7684;&#x4E2D;&#x95F4;&#x4EF6; redux-observable - &#x57FA;&#x4E8E;RxJS&#x7684;&#x6A21;&#x578B;&#x7528;&#x4E8E;&#x5904;&#x7406;action&#x6D41;&#x7684;&#x526F;&#x4F5C;&#x7528;&#x3002; * ng2-redux-router - Angular 2&#x8DEF;&#x7531;&#x548C;&#x4F60;&#x7684;redux store&#x4E4B;&#x95F4;&#x7684;reactive glue"},"state-management/getting_more_from_redux_and_ngrx.html#Ngrx":{"title":"Ngrx","path":"\\state-management\\getting_more_from_redux_and_ngrx.html#Ngrx","body":"Ngrx&#x901A;&#x8FC7; ngrx/store &#x6A21;&#x5757;&#x63D0;&#x4F9B;&#x4E86;&#x5927;&#x591A;&#x6570;Redux&#x5B9E;&#x73B0;&#x3002;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x53EF;&#x7528;&#x4E8E;&#x66F4;&#x597D;&#x7684;&#x96C6;&#x6210;&#x548C;&#x5F00;&#x53D1;&#x3002; ngrx/store-devtools - Redux DevTools&#x7684;ngrx&#x5B9E;&#x73B0; ngrx/effects - &#x7528;&#x4E8E;&#x6267;&#x884C;&#x7C7B;&#x4F3C;&#x4E8E; redux-saga &#x7684;&#x526F;&#x4F5C;&#x7528;&#x7684;&#x6A21;&#x578B; ngrx/router and ngrx/router-store - &#x7528;&#x4E8E;Angular 2&#x7684;&#x8DEF;&#x7531;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDE;&#x63A5;&#x5230;&#x60A8;&#x7684;ngrx store"},"state-management/modifying_your_application_state_by_dispatching_actions.html":{"title":"","path":"\\state-management\\modifying_your_application_state_by_dispatching_actions.html","body":"通过Dispatching Actions 修改应用的 State 大多数Redux应用程序都有一组功能，称为“action creators”，用于设置和dispatch action。 在Angular中，将您的操作创建者定义为 @Injectable() 服务非常方便，将dispatch，创建和副作用逻辑与应用程序中的 @Component 类分离。 同步Actions app/store/counter/counter.actions.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import Injectable from '@angular/core' ; import Store from '@ngrx/store' ; import createAction from '../createAction' ; import AppState from '../../models/appState' ; @Injectable () export class CounterActions  static INCREMENT = 'INCREMENT' ; static DECREMENT = 'DECREMENT' ; static RESET = 'RESET' ; constructor ( private store: StoreAppState )   increment()  this .store.dispatch(createAction(CounterActions.INCREMENT));  decrement()  this .store.dispatch(createAction(CounterActions.DECREMENT));  reset()  this .store.dispatch(createAction(CounterActions.RESET));   如你所见，动作创建者是简单的函数，它dispatch包含更多描述状态修改信息的Action对象。 异步 Actions 如果必须处理异步或条件actions（react-redux 用户可能将这种模式识别为依赖注入世界中的redux-thunk），则“ActionCreatorService”模式非常方便。 app/store/counter/counter.actions.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import Injectable from '@angular/core' ; import Store from '@ngrx/store' ; import createAction from '../createAction' ; import AppState from '../../models/appState' ; @Injectable () export class CounterActions  constructor ( private store: StoreAppState )   incrementIfOdd()  this .store.select( appState = appState.counter.currentValue) .take( 1 ) .subscribe( currentValue =  if (currentValue % 2 !== 0 )  this .store.dispatch(createAction(CounterActions.INCREMENT);  );  incrementAsync(timeInMs: number = 1000 )  this .delay(timeInMs).then( () = this .store.dispatch(createAction(CounterActions.INCREMENT)));  private delay(timeInMs: number )  return new Promise ( ( resolve ) =  setTimeout( () = resolve() , timeInMs); );   在 incrementIfOdd() 动作创建者中，我们在应用程序 state 中创建一个计时器的 currentValue 的一次性订阅。在那里，我们在dispatching action之前是检查是否为奇数。 在 incrementAsync() 动作创建者中，我们延迟对 dispatch() 的实际调用。我们创造了一个在延迟后解析的 Promise 。一旦 Promise 解析了，我们可以dispatch一个action来增加计数器。 依赖其它服务的 Actions 在你的操作创建者必须使用其他角色服务的情况下，ActionCreatorService模式才是必需的。考虑下面的SessionActions服务来处理远程API调用： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import Injectable from '@angular/core' ; import Store from '@ngrx/store' ; import createAction from '../createAction' ; import AppState from '../../models/appState' ; @Injectable () export class SessionActions  static LOGIN_USER_PENDING = 'LOGIN_USER_PENDING' ; static LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS' ; static LOGIN_USER_ERROR = 'LOGIN_USER_ERROR' ; static LOGOUT_USER = 'LOGOUT_USER' ; constructor ( private store: StoreAppState, private authService: AuthService )   loginUser(credentials: any )  this .store.dispatch(createAction(SessionActions.LOGIN_USER_PENDING)); this .authService.login(credentials.username, credentials.password) .then( result = this .store.dispatch(createAction(SessionActions.LOGIN_USER_SUCCESS, result))) .catch( () = this .store.dispatch(createAction(SessionActions.LOGIN_USER_ERROR))); ; logoutUser()  this .store.dispatch(createAction(SessionActions.LOGOUT_USER)); ; "},"state-management/modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State":{"title":"&#x901A;&#x8FC7;Dispatching Actions &#x4FEE;&#x6539;&#x5E94;&#x7528;&#x7684; State","path":"\\state-management\\modifying_your_application_state_by_dispatching_actions.html#通过Dispatching-Actions-修改应用的-State","body":"&#x5927;&#x591A;&#x6570;Redux&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x90FD;&#x6709;&#x4E00;&#x7EC4;&#x529F;&#x80FD;&#xFF0C;&#x79F0;&#x4E3A;&#x201C;action creators&#x201D;&#xFF0C;&#x7528;&#x4E8E;&#x8BBE;&#x7F6E;&#x548C;dispatch action&#x3002; &#x5728;Angular&#x4E2D;&#xFF0C;&#x5C06;&#x60A8;&#x7684;&#x64CD;&#x4F5C;&#x521B;&#x5EFA;&#x8005;&#x5B9A;&#x4E49;&#x4E3A; @Injectable() &#x670D;&#x52A1;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#xFF0C;&#x5C06;dispatch&#xFF0C;&#x521B;&#x5EFA;&#x548C;&#x526F;&#x4F5C;&#x7528;&#x903B;&#x8F91;&#x4E0E;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684; @Component &#x7C7B;&#x5206;&#x79BB;&#x3002;"},"state-management/modifying_your_application_state_by_dispatching_actions.html#同步Actions":{"title":"&#x540C;&#x6B65;Actions","path":"\\state-management\\modifying_your_application_state_by_dispatching_actions.html#同步Actions","body":"app/store/counter/counter.actions.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 import {Injectable} from &apos;@angular/core&apos; ; import {Store} from &apos;@ngrx/store&apos; ; import {createAction} from &apos;../createAction&apos; ; import {AppState} from &apos;../../models/appState&apos; ; @Injectable () export class CounterActions { static INCREMENT = &apos;INCREMENT&apos; ; static DECREMENT = &apos;DECREMENT&apos; ; static RESET = &apos;RESET&apos; ; constructor ( private store: StoreAppState ) { } increment() { this .store.dispatch(createAction(CounterActions.INCREMENT)); } decrement() { this .store.dispatch(createAction(CounterActions.DECREMENT)); } reset() { this .store.dispatch(createAction(CounterActions.RESET)); } } &#x5982;&#x4F60;&#x6240;&#x89C1;&#xFF0C;&#x52A8;&#x4F5C;&#x521B;&#x5EFA;&#x8005;&#x662F;&#x7B80;&#x5355;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;dispatch&#x5305;&#x542B;&#x66F4;&#x591A;&#x63CF;&#x8FF0;&#x72B6;&#x6001;&#x4FEE;&#x6539;&#x4FE1;&#x606F;&#x7684;Action&#x5BF9;&#x8C61;&#x3002;"},"state-management/modifying_your_application_state_by_dispatching_actions.html#异步-Actions":{"title":"&#x5F02;&#x6B65; Actions","path":"\\state-management\\modifying_your_application_state_by_dispatching_actions.html#异步-Actions","body":"&#x5982;&#x679C;&#x5FC5;&#x987B;&#x5904;&#x7406;&#x5F02;&#x6B65;&#x6216;&#x6761;&#x4EF6;actions&#xFF08;react-redux &#x7528;&#x6237;&#x53EF;&#x80FD;&#x5C06;&#x8FD9;&#x79CD;&#x6A21;&#x5F0F;&#x8BC6;&#x522B;&#x4E3A;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x4E16;&#x754C;&#x4E2D;&#x7684;redux-thunk&#xFF09;&#xFF0C;&#x5219;&#x201C;ActionCreatorService&#x201D;&#x6A21;&#x5F0F;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x3002; app/store/counter/counter.actions.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 import {Injectable} from &apos;@angular/core&apos; ; import {Store} from &apos;@ngrx/store&apos; ; import {createAction} from &apos;../createAction&apos; ; import {AppState} from &apos;../../models/appState&apos; ; @Injectable () export class CounterActions { constructor ( private store: StoreAppState ) { } incrementIfOdd() { this .store.select( appState = appState.counter.currentValue) .take( 1 ) .subscribe( currentValue = { if (currentValue % 2 !== 0 ) { this .store.dispatch(createAction(CounterActions.INCREMENT); } }); } incrementAsync(timeInMs: number = 1000 ) { this .delay(timeInMs).then( () = this .store.dispatch(createAction(CounterActions.INCREMENT))); } private delay(timeInMs: number ) { return new Promise ( ( resolve ) = { setTimeout( () = resolve() , timeInMs); }); } } &#x5728; incrementIfOdd() &#x52A8;&#x4F5C;&#x521B;&#x5EFA;&#x8005;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F; state &#x4E2D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8BA1;&#x65F6;&#x5668;&#x7684; currentValue &#x7684;&#x4E00;&#x6B21;&#x6027;&#x8BA2;&#x9605;&#x3002;&#x5728;&#x90A3;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x5728;dispatching action&#x4E4B;&#x524D;&#x662F;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x4E3A;&#x5947;&#x6570;&#x3002; &#x5728; incrementAsync() &#x52A8;&#x4F5C;&#x521B;&#x5EFA;&#x8005;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5EF6;&#x8FDF;&#x5BF9; dispatch() &#x7684;&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x521B;&#x9020;&#x4E86;&#x4E00;&#x4E2A;&#x5728;&#x5EF6;&#x8FDF;&#x540E;&#x89E3;&#x6790;&#x7684; Promise &#x3002;&#x4E00;&#x65E6; Promise &#x89E3;&#x6790;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;dispatch&#x4E00;&#x4E2A;action&#x6765;&#x589E;&#x52A0;&#x8BA1;&#x6570;&#x5668;&#x3002;"},"state-management/modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions":{"title":"&#x4F9D;&#x8D56;&#x5176;&#x5B83;&#x670D;&#x52A1;&#x7684; Actions","path":"\\state-management\\modifying_your_application_state_by_dispatching_actions.html#依赖其它服务的-Actions","body":"&#x5728;&#x4F60;&#x7684;&#x64CD;&#x4F5C;&#x521B;&#x5EFA;&#x8005;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x89D2;&#x8272;&#x670D;&#x52A1;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;ActionCreatorService&#x6A21;&#x5F0F;&#x624D;&#x662F;&#x5FC5;&#x9700;&#x7684;&#x3002;&#x8003;&#x8651;&#x4E0B;&#x9762;&#x7684;SessionActions&#x670D;&#x52A1;&#x6765;&#x5904;&#x7406;&#x8FDC;&#x7A0B;API&#x8C03;&#x7528;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import {Injectable} from &apos;@angular/core&apos; ; import {Store} from &apos;@ngrx/store&apos; ; import {createAction} from &apos;../createAction&apos; ; import {AppState} from &apos;../../models/appState&apos; ; @Injectable () export class SessionActions { static LOGIN_USER_PENDING = &apos;LOGIN_USER_PENDING&apos; ; static LOGIN_USER_SUCCESS = &apos;LOGIN_USER_SUCCESS&apos; ; static LOGIN_USER_ERROR = &apos;LOGIN_USER_ERROR&apos; ; static LOGOUT_USER = &apos;LOGOUT_USER&apos; ; constructor ( private store: StoreAppState, private authService: AuthService ) { } loginUser(credentials: any ) { this .store.dispatch(createAction(SessionActions.LOGIN_USER_PENDING)); this .authService.login(credentials.username, credentials.password) .then( result = this .store.dispatch(createAction(SessionActions.LOGIN_USER_SUCCESS, result))) .catch( () = this .store.dispatch(createAction(SessionActions.LOGIN_USER_ERROR))); }; logoutUser() { this .store.dispatch(createAction(SessionActions.LOGOUT_USER)); }; }"},"state-management/reading_your_application_state_using_selectors.html":{"title":"","path":"\\state-management\\reading_your_application_state_using_selectors.html","body":"Reading your Application State using Selectors To read your application state in Redux, we need to use the select() method on @ngrx’s Store class. This method creates and returns an Observable that is bound to a specific property in your application state. For example, here’s how you would select the counter object: 1 store.select(&apos;counter&apos;); // Returns ObservableCounter And to fetch the counter’s currentValue , we can pass in a string array, where each string plucks a single property from the application state one at a time in the order specified: 1 store.select([&apos;counter&apos;, &apos;currentValue&apos;]); // Returns Observablenumber While select() allows for several variations of strings to be passed in, it has it’s shortcomings - namely you won’t actually know if the plucking is working properly until you execute your code. Because of that, select() allows you to select values using functions too, which makes things more type-safe and your selectors will be more refactorable by your IDE. 1 store.select(appState = appState.counter.currentValue); Creating a Counter Service While you could inject Store and select values directly in your Angular components, it’s considered to be a best practice to wrap this functionality into separate services. This approach encapsulates all of the selection logic and eliminates any duplication where the selection path is repeated throughout your application. Let’s tie everything together by building out a CounterService example: app/services/counter.service.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import Injectable from &apos;@angular/core&apos;; import Store from &apos;@ngrx/store&apos;; import Observable from &apos;rxjs/Observable&apos;; import AppState from &apos;../models&apos;; @Injectable() export class CounterService  constructor(private store: StoreAppState)  getCurrentValue(): Observablenumber  return this.store.select(appState = appState.counter.currentValue) .filter(Boolean);   Because select() returns an Observable , the getCurrentValue() method also applies a filter() to ensure that subscribers do not receive any falsy values. This greatly simplifies the code and templates in your components, since they don’t have to repeatedly consider the falsy case everywhere the value is used."},"state-management/reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors":{"title":"Reading your Application State using Selectors","path":"\\state-management\\reading_your_application_state_using_selectors.html#Reading-your-Application-State-using-Selectors","body":"To read your application state in Redux, we need to use the select() method on @ngrx&#x2019;s Store class. This method creates and returns an Observable that is bound to a specific property in your application state. For example, here&#x2019;s how you would select the counter object: 1 store.select(&apos;counter&apos;); // Returns ObservableCounter And to fetch the counter&#x2019;s currentValue , we can pass in a string array, where each string plucks a single property from the application state one at a time in the order specified: 1 store.select([&apos;counter&apos;, &apos;currentValue&apos;]); // Returns Observablenumber While select() allows for several variations of strings to be passed in, it has it&#x2019;s shortcomings - namely you won&#x2019;t actually know if the plucking is working properly until you execute your code. Because of that, select() allows you to select values using functions too, which makes things more type-safe and your selectors will be more refactorable by your IDE. 1 store.select(appState = appState.counter.currentValue);"},"state-management/reading_your_application_state_using_selectors.html#Creating-a-Counter-Service":{"title":"Creating a Counter Service","path":"\\state-management\\reading_your_application_state_using_selectors.html#Creating-a-Counter-Service","body":"While you could inject Store and select values directly in your Angular components, it&#x2019;s considered to be a best practice to wrap this functionality into separate services. This approach encapsulates all of the selection logic and eliminates any duplication where the selection path is repeated throughout your application. Let&#x2019;s tie everything together by building out a CounterService example: app/services/counter.service.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import {Injectable} from &apos;@angular/core&apos;; import {Store} from &apos;@ngrx/store&apos;; import {Observable} from &apos;rxjs/Observable&apos;; import {AppState} from &apos;../models&apos;; @Injectable() export class CounterService { constructor(private store: StoreAppState) {} getCurrentValue(): Observablenumber { return this.store.select(appState = appState.counter.currentValue) .filter(Boolean); } } Because select() returns an Observable , the getCurrentValue() method also applies a filter() to ensure that subscribers do not receive any falsy values. This greatly simplifies the code and templates in your components, since they don&#x2019;t have to repeatedly consider the falsy case everywhere the value is used."},"state-management/reducers_and_pure_functions.html":{"title":"","path":"\\state-management\\reducers_and_pure_functions.html","body":"Reducers 和纯函数 Redux的核心概念之一是reducer。 reducer是一个带有签名 (accumulator: T, item: U) = T 的函数。通过 Array.reduce 方法经常在JavaScript中使用Reducers ，该方法遍历每个数组的项目并累加一个值作为结果 。Reducers 应该是纯函数，意味着它们不会产生任何副作用。 reducer 的简单示例： 1 2 let x = [ 1 , 2 , 3 ].reduce( ( sum, number ) = sum + number , 0 ); // x == 6"},"state-management/reducers_and_pure_functions.html#Reducers-和纯函数":{"title":"Reducers &#x548C;&#x7EAF;&#x51FD;&#x6570;","path":"\\state-management\\reducers_and_pure_functions.html#Reducers-和纯函数","body":"Redux&#x7684;&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x4E4B;&#x4E00;&#x662F;reducer&#x3002; reducer&#x662F;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x7B7E;&#x540D; (accumulator: T, item: U) = T &#x7684;&#x51FD;&#x6570;&#x3002;&#x901A;&#x8FC7; Array.reduce &#x65B9;&#x6CD5;&#x7ECF;&#x5E38;&#x5728;JavaScript&#x4E2D;&#x4F7F;&#x7528;Reducers &#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x9879;&#x76EE;&#x5E76;&#x7D2F;&#x52A0;&#x4E00;&#x4E2A;&#x503C;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C; &#x3002;Reducers &#x5E94;&#x8BE5;&#x662F;&#x7EAF;&#x51FD;&#x6570;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x5B83;&#x4EEC;&#x4E0D;&#x4F1A;&#x4EA7;&#x751F;&#x4EFB;&#x4F55;&#x526F;&#x4F5C;&#x7528;&#x3002; reducer &#x7684;&#x7B80;&#x5355;&#x793A;&#x4F8B;&#xFF1A; 1 2 let x = [ 1 , 2 , 3 ].reduce( ( sum, number ) = sum + number , 0 ); // x == 6"},"state-management/reducers_as_state_management.html":{"title":"","path":"\\state-management\\reducers_as_state_management.html","body":"Reducers 的 State 管理 这个简单的想法证明是非常强大的。 使用Redux，你可以将一系列事件重播到reducer中，从而获得新的应用程序状态。 Redux应用程序中的Reducer不应该改变state，而是返回一个副本，并且无副作用。 这鼓励你把你的应用程序想象成从一系列事件中“计算”的UI。 让我们来看看一个简单的计数器reducer。 简单的 Reducer app/reducer/counter-reducer.ts 1 2 3 4 5 6 7 8 9 10 11 12 import  INCREMENT_COUNTER, DECREMENT_COUNTER  from '../actions/counter-actions' ; export default function counter ( state = 0, action )  switch (action.type)  case INCREMENT_COUNTER: return state + 1 ; case DECREMENT_COUNTER: return state - 1 ; default : return state;   我们可以看到，我们正在传递一个初始状态和一个动作。为了处理每个动作，我们设置了一个switch语句。而不是每个reducer需要显式订阅分发器，每个动作都会传递到每个reducer，它处理它感兴趣的动作，然后返回新状态到下一个reducer。 Reducers 应无副作用。这意味着他们不应该修改自己范围之外的东西。他们应该简单地计算下一个应用程序状态作为reducer参数的纯函数。 出于这个原因，诸如更新数据库中的记录，生成id等的副作用引起操作应该在应用中的其他地方处理，例如在动作创建者中，使用中间件例如 ‘Epics’ from redux-observable 或 ngrx/effects 。 创建reducer时的另一个考虑因素是确保它们是不可变的，而不是修改应用程序的状态。如果您改变应用程序状态，它可能会导致意外的行为。有几种方法可以帮助维护reducer的不变性。一种方法是使用ES6的新功能，如 Object.assign 或数组的展开运算符。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function immutableObjectReducer ( state =  someValue: 'value' , action )  switch (action.payload)  case SOME_ACTION: return Object .assign(, state,  someValue: action.payload.value ); default : return state;   function immutableArrayReducer ( state = [1,2,3], action )  switch (action.payload)  case ADD_ITEM: return [...state,action.payload.value] default : return state;   但是，当处理复杂或深层嵌套的对象时，可能很难使用此语法在应用程序中维护不变性。这种情况下像Immutable.js这样的库可以提供帮助。"},"state-management/reducers_as_state_management.html#Reducers-的-State-管理":{"title":"Reducers &#x7684; State &#x7BA1;&#x7406;","path":"\\state-management\\reducers_as_state_management.html#Reducers-的-State-管理","body":"&#x8FD9;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x60F3;&#x6CD5;&#x8BC1;&#x660E;&#x662F;&#x975E;&#x5E38;&#x5F3A;&#x5927;&#x7684;&#x3002; &#x4F7F;&#x7528;Redux&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5C06;&#x4E00;&#x7CFB;&#x5217;&#x4E8B;&#x4EF6;&#x91CD;&#x64AD;&#x5230;reducer&#x4E2D;&#xFF0C;&#x4ECE;&#x800C;&#x83B7;&#x5F97;&#x65B0;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x3002; Redux&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;Reducer&#x4E0D;&#x5E94;&#x8BE5;&#x6539;&#x53D8;state&#xFF0C;&#x800C;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x526F;&#x672C;&#xFF0C;&#x5E76;&#x4E14;&#x65E0;&#x526F;&#x4F5C;&#x7528;&#x3002; &#x8FD9;&#x9F13;&#x52B1;&#x4F60;&#x628A;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x60F3;&#x8C61;&#x6210;&#x4ECE;&#x4E00;&#x7CFB;&#x5217;&#x4E8B;&#x4EF6;&#x4E2D;&#x201C;&#x8BA1;&#x7B97;&#x201D;&#x7684;UI&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x8BA1;&#x6570;&#x5668;reducer&#x3002;"},"state-management/reducers_as_state_management.html#简单的-Reducer":{"title":"&#x7B80;&#x5355;&#x7684; Reducer","path":"\\state-management\\reducers_as_state_management.html#简单的-Reducer","body":"app/reducer/counter-reducer.ts 1 2 3 4 5 6 7 8 9 10 11 12 import { INCREMENT_COUNTER, DECREMENT_COUNTER } from &apos;../actions/counter-actions&apos; ; export default function counter ( state = 0, action ) { switch (action.type) { case INCREMENT_COUNTER: return state + 1 ; case DECREMENT_COUNTER: return state - 1 ; default : return state; } } &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x72B6;&#x6001;&#x548C;&#x4E00;&#x4E2A;&#x52A8;&#x4F5C;&#x3002;&#x4E3A;&#x4E86;&#x5904;&#x7406;&#x6BCF;&#x4E2A;&#x52A8;&#x4F5C;&#xFF0C;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x4E86;&#x4E00;&#x4E2A;switch&#x8BED;&#x53E5;&#x3002;&#x800C;&#x4E0D;&#x662F;&#x6BCF;&#x4E2A;reducer&#x9700;&#x8981;&#x663E;&#x5F0F;&#x8BA2;&#x9605;&#x5206;&#x53D1;&#x5668;&#xFF0C;&#x6BCF;&#x4E2A;&#x52A8;&#x4F5C;&#x90FD;&#x4F1A;&#x4F20;&#x9012;&#x5230;&#x6BCF;&#x4E2A;reducer&#xFF0C;&#x5B83;&#x5904;&#x7406;&#x5B83;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x52A8;&#x4F5C;&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x65B0;&#x72B6;&#x6001;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;reducer&#x3002; Reducers &#x5E94;&#x65E0;&#x526F;&#x4F5C;&#x7528;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x4ED6;&#x4EEC;&#x4E0D;&#x5E94;&#x8BE5;&#x4FEE;&#x6539;&#x81EA;&#x5DF1;&#x8303;&#x56F4;&#x4E4B;&#x5916;&#x7684;&#x4E1C;&#x897F;&#x3002;&#x4ED6;&#x4EEC;&#x5E94;&#x8BE5;&#x7B80;&#x5355;&#x5730;&#x8BA1;&#x7B97;&#x4E0B;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x4F5C;&#x4E3A;reducer&#x53C2;&#x6570;&#x7684;&#x7EAF;&#x51FD;&#x6570;&#x3002; &#x51FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x539F;&#x56E0;&#xFF0C;&#x8BF8;&#x5982;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x751F;&#x6210;id&#x7B49;&#x7684;&#x526F;&#x4F5C;&#x7528;&#x5F15;&#x8D77;&#x64CD;&#x4F5C;&#x5E94;&#x8BE5;&#x5728;&#x5E94;&#x7528;&#x4E2D;&#x7684;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x5904;&#x7406;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x52A8;&#x4F5C;&#x521B;&#x5EFA;&#x8005;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x4E2D;&#x95F4;&#x4EF6;&#x4F8B;&#x5982; &#x2018;Epics&#x2019; from redux-observable &#x6216; ngrx/effects &#x3002; &#x521B;&#x5EFA;reducer&#x65F6;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x8003;&#x8651;&#x56E0;&#x7D20;&#x662F;&#x786E;&#x4FDD;&#x5B83;&#x4EEC;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4FEE;&#x6539;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x72B6;&#x6001;&#x3002;&#x5982;&#x679C;&#x60A8;&#x6539;&#x53D8;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#xFF0C;&#x5B83;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x610F;&#x5916;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x6709;&#x51E0;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x7EF4;&#x62A4;reducer&#x7684;&#x4E0D;&#x53D8;&#x6027;&#x3002;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528;ES6&#x7684;&#x65B0;&#x529F;&#x80FD;&#xFF0C;&#x5982; Object.assign &#x6216;&#x6570;&#x7EC4;&#x7684;&#x5C55;&#x5F00;&#x8FD0;&#x7B97;&#x7B26;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function immutableObjectReducer ( state = { someValue: &apos;value&apos;} , action ) { switch (action.payload) { case SOME_ACTION: return Object .assign({}, state, { someValue: action.payload.value }); default : return state; } } function immutableArrayReducer ( state = [1,2,3], action ) { switch (action.payload) { case ADD_ITEM: return [...state,action.payload.value] default : return state; } } &#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x5904;&#x7406;&#x590D;&#x6742;&#x6216;&#x6DF1;&#x5C42;&#x5D4C;&#x5957;&#x7684;&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x53EF;&#x80FD;&#x5F88;&#x96BE;&#x4F7F;&#x7528;&#x6B64;&#x8BED;&#x6CD5;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7EF4;&#x62A4;&#x4E0D;&#x53D8;&#x6027;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x50CF;Immutable.js&#x8FD9;&#x6837;&#x7684;&#x5E93;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x5E2E;&#x52A9;&#x3002;"},"state-management/redux.html":{"title":"","path":"\\state-management\\redux.html","body":"Redux 和 Ngrx 什么是 Redux? Redux是JavaScript应用的状态管理器，并通过在应用程序中具有单向数据流来保持Flux架构的核心原理。 在 Flux 应用程序传统上拥有多个存储的地方，Redux应用程序只有一个全局只读应用程序状态。 该状态通过“reducing”一个集合或动作流来计算实现以可控的方式更新。 What is Ngrx? Redux的状态管理很受欢迎，并且启发了 @ngrx 的创建，@ngrx是一套实现与Redux生态系统相同的管理状态以及一些中间件和工具的模块。 @ngrx被创建为与Angular和RxJS专门使用，因为它严重依赖于可观察的范例。 我们将在应用程序中描述如何使用这种方法。 有关Redux和@ngrx的更多信息，请参阅进一步阅读部分。"},"state-management/redux.html#Redux-和-Ngrx":{"title":"Redux &#x548C; Ngrx","path":"\\state-management\\redux.html#Redux-和-Ngrx","body":""},"state-management/redux.html#什么是-Redux":{"title":"&#x4EC0;&#x4E48;&#x662F; Redux?","path":"\\state-management\\redux.html#什么是-Redux","body":"Redux&#x662F;JavaScript&#x5E94;&#x7528;&#x7684;&#x72B6;&#x6001;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x5177;&#x6709;&#x5355;&#x5411;&#x6570;&#x636E;&#x6D41;&#x6765;&#x4FDD;&#x6301;Flux&#x67B6;&#x6784;&#x7684;&#x6838;&#x5FC3;&#x539F;&#x7406;&#x3002; &#x5728; Flux &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4F20;&#x7EDF;&#x4E0A;&#x62E5;&#x6709;&#x591A;&#x4E2A;&#x5B58;&#x50A8;&#x7684;&#x5730;&#x65B9;&#xFF0C;Redux&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x53EA;&#x8BFB;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x3002; &#x8BE5;&#x72B6;&#x6001;&#x901A;&#x8FC7;&#x201C;reducing&#x201D;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x6216;&#x52A8;&#x4F5C;&#x6D41;&#x6765;&#x8BA1;&#x7B97;&#x5B9E;&#x73B0;&#x4EE5;&#x53EF;&#x63A7;&#x7684;&#x65B9;&#x5F0F;&#x66F4;&#x65B0;&#x3002;"},"state-management/redux.html#What-is-Ngrx":{"title":"What is Ngrx?","path":"\\state-management\\redux.html#What-is-Ngrx","body":"Redux&#x7684;&#x72B6;&#x6001;&#x7BA1;&#x7406;&#x5F88;&#x53D7;&#x6B22;&#x8FCE;&#xFF0C;&#x5E76;&#x4E14;&#x542F;&#x53D1;&#x4E86; @ngrx &#x7684;&#x521B;&#x5EFA;&#xFF0C;@ngrx&#x662F;&#x4E00;&#x5957;&#x5B9E;&#x73B0;&#x4E0E;Redux&#x751F;&#x6001;&#x7CFB;&#x7EDF;&#x76F8;&#x540C;&#x7684;&#x7BA1;&#x7406;&#x72B6;&#x6001;&#x4EE5;&#x53CA;&#x4E00;&#x4E9B;&#x4E2D;&#x95F4;&#x4EF6;&#x548C;&#x5DE5;&#x5177;&#x7684;&#x6A21;&#x5757;&#x3002; @ngrx&#x88AB;&#x521B;&#x5EFA;&#x4E3A;&#x4E0E;Angular&#x548C;RxJS&#x4E13;&#x95E8;&#x4F7F;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4E25;&#x91CD;&#x4F9D;&#x8D56;&#x4E8E;&#x53EF;&#x89C2;&#x5BDF;&#x7684;&#x8303;&#x4F8B;&#x3002; &#x6211;&#x4EEC;&#x5C06;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x63CF;&#x8FF0;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x3002; &#x6709;&#x5173;Redux&#x548C;@ngrx&#x7684;&#x66F4;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x8BF7;&#x53C2;&#x9605;&#x8FDB;&#x4E00;&#x6B65;&#x9605;&#x8BFB;&#x90E8;&#x5206;&#x3002;"},"state-management/redux_and_component_architecture.html":{"title":"","path":"\\state-management\\redux_and_component_architecture.html","body":"Redux和组件架构 在上面的例子中，我们的 counter 组件是一个智能组件。 它知道Redux，state的结构和它需要调用的动作。 理论上，你可以把这个组件放到你的应用程序的任何区域，只是让它工作。 但它将紧紧绑定到那个特定的状态切片和那些具体的动作。 例如，如果我们想要多个计数器跟踪页面上的不同内容怎么办？ 例如，计算红色点击次数与蓝色点击次数。 为了帮助组件更通用和可重用，值得尝试将它们分成 容器 组件和 演示 组件。 容器组件 演示组件 Location Top level, route handlers Middle and leaf components Aware of Redux Yes No To read data Subscribe to Redux state Read state from @Input properties To change data Dispatch Redux actions Invoke callbacks from @Output properties redux docs . 记住这一点，让我们重构我们的 counter 是一个演示组件。 首先，让我们修改我们的 app-container ，在它上面有两个计数器组件，就像我们现在有的一样。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import  Component  from '@angular/core' ; @Component ( selector: 'simple-redux' template: ` div h1Redux: Two components, one state./h1 div style=\"float: left; border: 1px solid red;\" h2Click Counter/h2 counter/counter /div div style=\"float: left; border: 1px solid blue;\" h2Curse Counter/h2 counter/counter /div /div ` ) export class SimpleRedux  View Example 如您在示例中可以看到的，当单击按钮时，两个组件中的数字将同步更新。 这是因为计数器组件耦合到特定的状态和动作。 看看这个例子，你可以看到已经有一个 app/reducers/curse-reducer.ts 和 app/actions-curse-actions.ts 。 它们几乎与计数器动作和计数器reducer相同，我们只是想创建一个新的reducer来保持它的状态。 要将计数器组件从智能组件转换为哑组件，我们需要更改它以将数据和回调传递到其中。 为此，我们将使用 @Inputproperties 将数据传递到组件中，并将操作回调作为 @Output 属性。 我们现在有一个很好的可重用的演示组件，它不知道Redux或我们的应用程序状态。 app/components/counter-component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import  Component, Input, Output, EventEmitter  from '@angular/core' ; import  Observable  from 'rxjs' ; @Component ( selector: 'counter' , template: ` p Clicked:  counter | async  times button (click)=\"increment.emit()\"+/button button (click)=\"decrement.emit()\"-/button button (click)=\"incrementIfOdd.emit()\"Increment if odd/button button (click)=\"incrementAsync.emit()\"Increment async/button /p ` ) export class Counter  @Input () counter: Observable number ; @Output () increment = new EventEmitter void (); @Output () decrement = new EventEmitter void (); @Output () incrementIfOdd = new EventEmitter void (); @Output () incrementAsync = new EventEmitter void ();  接下来，让我们修改主应用的容器，将这些输入和输出连接到模板。 @Component app/src/containers/app-containter.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 @Component ( selector: 'simple-redux' , providers: [ CounterActions, CurseActions ], template: ` div h1Redux: Presentational Counters/h1 div style=\"float: left; border: 1px solid red;\" h2Click Counter/h2 counter [counter]=\"counter$\" (increment)=\"counterActions.increment()\" (decrement)=\"counterActions.decrement()\" (incrementIfOdd)=\"counterActions.incrementIfOdd()\" (incrementAsync)=\"counterActions.incrementAsync()\" /counter /div div style=\"float: left; border: 1px solid blue;\" h2Curse Counter/h2 counter [counter]=\"curse$\" (increment)=\"curseActions.castCurse()\" (decrement)=\"curseActions.removeCurse()\" (incrementIfOdd)=\"curseActions.castIfOdd()\" (incrementAsync)=\"curseActions.castAsync()\" /counter /div /div ` ) 此时，模板正在尝试调用我们的两个ActionCreatorServices， CounterActions 和 CurseActions 上的操作; 我们只需要使用依赖注入来住它们： app/src/containers/app-container.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import  Component, View, Inject, OnDestroy, OnInit  from '@angular/core' ; import  select  from 'ng2-redux' ; import  Observable  from 'rxjs' ; import  CounterActions  from '../actions/counter-actions' ; import  CurseActions  from '../actions/curse-actions' ; @Component ( /* see above .... */ ) export class SimpleRedux  @select () counter$: Observable number ; @select () curse$: Observable number ; constructor ( public counterActions: CounterActions, public curseActions: CurseActions )    View Ng2-Redux Example View Ngrx Example 我们的两个 Observable ， counter$ 和 curse$ ，现在将在每次相关store属性由系统的其余部分更新时使用新值更新。"},"state-management/redux_and_component_architecture.html#Redux和组件架构":{"title":"Redux&#x548C;&#x7EC4;&#x4EF6;&#x67B6;&#x6784;","path":"\\state-management\\redux_and_component_architecture.html#Redux和组件架构","body":"&#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x7684; counter &#x7EC4;&#x4EF6;&#x662F;&#x4E00;&#x4E2A;&#x667A;&#x80FD;&#x7EC4;&#x4EF6;&#x3002; &#x5B83;&#x77E5;&#x9053;Redux&#xFF0C;state&#x7684;&#x7ED3;&#x6784;&#x548C;&#x5B83;&#x9700;&#x8981;&#x8C03;&#x7528;&#x7684;&#x52A8;&#x4F5C;&#x3002; &#x7406;&#x8BBA;&#x4E0A;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x4E2A;&#x7EC4;&#x4EF6;&#x653E;&#x5230;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4EFB;&#x4F55;&#x533A;&#x57DF;&#xFF0C;&#x53EA;&#x662F;&#x8BA9;&#x5B83;&#x5DE5;&#x4F5C;&#x3002; &#x4F46;&#x5B83;&#x5C06;&#x7D27;&#x7D27;&#x7ED1;&#x5B9A;&#x5230;&#x90A3;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x72B6;&#x6001;&#x5207;&#x7247;&#x548C;&#x90A3;&#x4E9B;&#x5177;&#x4F53;&#x7684;&#x52A8;&#x4F5C;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x591A;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x8DDF;&#x8E2A;&#x9875;&#x9762;&#x4E0A;&#x7684;&#x4E0D;&#x540C;&#x5185;&#x5BB9;&#x600E;&#x4E48;&#x529E;&#xFF1F; &#x4F8B;&#x5982;&#xFF0C;&#x8BA1;&#x7B97;&#x7EA2;&#x8272;&#x70B9;&#x51FB;&#x6B21;&#x6570;&#x4E0E;&#x84DD;&#x8272;&#x70B9;&#x51FB;&#x6B21;&#x6570;&#x3002; &#x4E3A;&#x4E86;&#x5E2E;&#x52A9;&#x7EC4;&#x4EF6;&#x66F4;&#x901A;&#x7528;&#x548C;&#x53EF;&#x91CD;&#x7528;&#xFF0C;&#x503C;&#x5F97;&#x5C1D;&#x8BD5;&#x5C06;&#x5B83;&#x4EEC;&#x5206;&#x6210; &#x5BB9;&#x5668; &#x7EC4;&#x4EF6;&#x548C; &#x6F14;&#x793A; &#x7EC4;&#x4EF6;&#x3002; &#x5BB9;&#x5668;&#x7EC4;&#x4EF6; &#x6F14;&#x793A;&#x7EC4;&#x4EF6; Location Top level, route handlers Middle and leaf components Aware of Redux Yes No To read data Subscribe to Redux state Read state from @Input properties To change data Dispatch Redux actions Invoke callbacks from @Output properties redux docs . &#x8BB0;&#x4F4F;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x91CD;&#x6784;&#x6211;&#x4EEC;&#x7684; counter &#x662F;&#x4E00;&#x4E2A;&#x6F14;&#x793A;&#x7EC4;&#x4EF6;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x4FEE;&#x6539;&#x6211;&#x4EEC;&#x7684; app-container &#xFF0C;&#x5728;&#x5B83;&#x4E0A;&#x9762;&#x6709;&#x4E24;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x7EC4;&#x4EF6;&#xFF0C;&#x5C31;&#x50CF;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x6709;&#x7684;&#x4E00;&#x6837;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import { Component } from &apos;@angular/core&apos; ; @Component ({ selector: &apos;simple-redux&apos; template: ` div h1Redux: Two components, one state./h1 div style=float: left; border: 1px solid red; h2Click Counter/h2 counter/counter /div div style=float: left; border: 1px solid blue; h2Curse Counter/h2 counter/counter /div /div ` }) export class SimpleRedux {} View Example &#x5982;&#x60A8;&#x5728;&#x793A;&#x4F8B;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7684;&#xFF0C;&#x5F53;&#x5355;&#x51FB;&#x6309;&#x94AE;&#x65F6;&#xFF0C;&#x4E24;&#x4E2A;&#x7EC4;&#x4EF6;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x5C06;&#x540C;&#x6B65;&#x66F4;&#x65B0;&#x3002; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x8BA1;&#x6570;&#x5668;&#x7EC4;&#x4EF6;&#x8026;&#x5408;&#x5230;&#x7279;&#x5B9A;&#x7684;&#x72B6;&#x6001;&#x548C;&#x52A8;&#x4F5C;&#x3002; &#x770B;&#x770B;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5DF2;&#x7ECF;&#x6709;&#x4E00;&#x4E2A; app/reducers/curse-reducer.ts &#x548C; app/actions-curse-actions.ts &#x3002; &#x5B83;&#x4EEC;&#x51E0;&#x4E4E;&#x4E0E;&#x8BA1;&#x6570;&#x5668;&#x52A8;&#x4F5C;&#x548C;&#x8BA1;&#x6570;&#x5668;reducer&#x76F8;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x60F3;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;reducer&#x6765;&#x4FDD;&#x6301;&#x5B83;&#x7684;&#x72B6;&#x6001;&#x3002; &#x8981;&#x5C06;&#x8BA1;&#x6570;&#x5668;&#x7EC4;&#x4EF6;&#x4ECE;&#x667A;&#x80FD;&#x7EC4;&#x4EF6;&#x8F6C;&#x6362;&#x4E3A;&#x54D1;&#x7EC4;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x66F4;&#x6539;&#x5B83;&#x4EE5;&#x5C06;&#x6570;&#x636E;&#x548C;&#x56DE;&#x8C03;&#x4F20;&#x9012;&#x5230;&#x5176;&#x4E2D;&#x3002; &#x4E3A;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528; @Inputproperties &#x5C06;&#x6570;&#x636E;&#x4F20;&#x9012;&#x5230;&#x7EC4;&#x4EF6;&#x4E2D;&#xFF0C;&#x5E76;&#x5C06;&#x64CD;&#x4F5C;&#x56DE;&#x8C03;&#x4F5C;&#x4E3A; @Output &#x5C5E;&#x6027;&#x3002; &#x6211;&#x4EEC;&#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x53EF;&#x91CD;&#x7528;&#x7684;&#x6F14;&#x793A;&#x7EC4;&#x4EF6;&#xFF0C;&#x5B83;&#x4E0D;&#x77E5;&#x9053;Redux&#x6216;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x3002; app/components/counter-component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import { Component, Input, Output, EventEmitter } from &apos;@angular/core&apos; ; import { Observable } from &apos;rxjs&apos; ; @Component ({ selector: &apos;counter&apos; , template: ` p Clicked: {{ counter | async }} times button (click)=increment.emit()+/button button (click)=decrement.emit()-/button button (click)=incrementIfOdd.emit()Increment if odd/button button (click)=incrementAsync.emit()Increment async/button /p ` }) export class Counter { @Input () counter: Observable number ; @Output () increment = new EventEmitter void (); @Output () decrement = new EventEmitter void (); @Output () incrementIfOdd = new EventEmitter void (); @Output () incrementAsync = new EventEmitter void (); } &#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x4FEE;&#x6539;&#x4E3B;&#x5E94;&#x7528;&#x7684;&#x5BB9;&#x5668;&#xFF0C;&#x5C06;&#x8FD9;&#x4E9B;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x8FDE;&#x63A5;&#x5230;&#x6A21;&#x677F;&#x3002; @Component app/src/containers/app-containter.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 @Component ({ selector: &apos;simple-redux&apos; , providers: [ CounterActions, CurseActions ], template: ` div h1Redux: Presentational Counters/h1 div style=float: left; border: 1px solid red; h2Click Counter/h2 counter [counter]=counter$ (increment)=counterActions.increment() (decrement)=counterActions.decrement() (incrementIfOdd)=counterActions.incrementIfOdd() (incrementAsync)=counterActions.incrementAsync() /counter /div div style=float: left; border: 1px solid blue; h2Curse Counter/h2 counter [counter]=curse$ (increment)=curseActions.castCurse() (decrement)=curseActions.removeCurse() (incrementIfOdd)=curseActions.castIfOdd() (incrementAsync)=curseActions.castAsync() /counter /div /div ` }) &#x6B64;&#x65F6;&#xFF0C;&#x6A21;&#x677F;&#x6B63;&#x5728;&#x5C1D;&#x8BD5;&#x8C03;&#x7528;&#x6211;&#x4EEC;&#x7684;&#x4E24;&#x4E2A;ActionCreatorServices&#xFF0C; CounterActions &#x548C; CurseActions &#x4E0A;&#x7684;&#x64CD;&#x4F5C;; &#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x6765;&#x4F4F;&#x5B83;&#x4EEC;&#xFF1A; app/src/containers/app-container.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import { Component, View, Inject, OnDestroy, OnInit } from &apos;@angular/core&apos; ; import { select } from &apos;ng2-redux&apos; ; import { Observable } from &apos;rxjs&apos; ; import { CounterActions } from &apos;../actions/counter-actions&apos; ; import { CurseActions } from &apos;../actions/curse-actions&apos; ; @Component ({ /* see above .... */ }) export class SimpleRedux { @select () counter$: Observable number ; @select () curse$: Observable number ; constructor ( public counterActions: CounterActions, public curseActions: CurseActions ) { } } View Ng2-Redux Example View Ngrx Example &#x6211;&#x4EEC;&#x7684;&#x4E24;&#x4E2A; Observable &#xFF0C; counter$ &#x548C; curse$ &#xFF0C;&#x73B0;&#x5728;&#x5C06;&#x5728;&#x6BCF;&#x6B21;&#x76F8;&#x5173;store&#x5C5E;&#x6027;&#x7531;&#x7CFB;&#x7EDF;&#x7684;&#x5176;&#x4F59;&#x90E8;&#x5206;&#x66F4;&#x65B0;&#x65F6;&#x4F7F;&#x7528;&#x65B0;&#x503C;&#x66F4;&#x65B0;&#x3002;"},"state-management/review_of_reducers_and_pure_functions.html":{"title":"","path":"\\state-management\\review_of_reducers_and_pure_functions.html","body":"回顾 Reducers 和纯函数 Redux的核心概念之一是reducer。 reducer是一个带签名的函数 (accumulator：T，item：U)= T 。Reduce通常通过 Array.reduce 方法在JavaScript中使用，该方法遍历每个数组的项目并累加一个值作为结果 。 Reducers应该是纯函数，意味着它们不产生任何副作用。 reducer的一个简单示例是sum函数： 1 2 let x = [ 1 , 2 , 3 ].reduce( ( value, state ) = value + state, 0 ) // x == 6"},"state-management/review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数":{"title":"&#x56DE;&#x987E; Reducers &#x548C;&#x7EAF;&#x51FD;&#x6570;","path":"\\state-management\\review_of_reducers_and_pure_functions.html#回顾-Reducers-和纯函数","body":"Redux&#x7684;&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#x4E4B;&#x4E00;&#x662F;reducer&#x3002; reducer&#x662F;&#x4E00;&#x4E2A;&#x5E26;&#x7B7E;&#x540D;&#x7684;&#x51FD;&#x6570; (accumulator&#xFF1A;T&#xFF0C;item&#xFF1A;U)= T &#x3002;Reduce&#x901A;&#x5E38;&#x901A;&#x8FC7; Array.reduce &#x65B9;&#x6CD5;&#x5728;JavaScript&#x4E2D;&#x4F7F;&#x7528;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x904D;&#x5386;&#x6BCF;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x9879;&#x76EE;&#x5E76;&#x7D2F;&#x52A0;&#x4E00;&#x4E2A;&#x503C;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C; &#x3002; Reducers&#x5E94;&#x8BE5;&#x662F;&#x7EAF;&#x51FD;&#x6570;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x5B83;&#x4EEC;&#x4E0D;&#x4EA7;&#x751F;&#x4EFB;&#x4F55;&#x526F;&#x4F5C;&#x7528;&#x3002; reducer&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x793A;&#x4F8B;&#x662F;sum&#x51FD;&#x6570;&#xFF1A; 1 2 let x = [ 1 , 2 , 3 ].reduce( ( value, state ) = value + state, 0 ) // x == 6"},"state-management/state-management.html":{"title":"","path":"\\state-management\\state-management.html","body":"状态管理 对于具有大量异步活动以及在多个组件和模块之间有很多共享状态的大型Angular应用程序，管理状态可能相当具有挑战性。 在典型的应用中，我们管理的东西如下： 来自服务器的数据以及是否挂起或导致错误 UI状态如切换，警报和错误消息 用户输入，如表单提交，过滤器和搜索查询 自定义主题，凭据和本地化 许多其他类型的状态 随着应用程序的发展，我们如何知道一个模块中的状态变化将一致而准确地反映在其他模块中？ 如果这些修改导致更多的状态更改呢？ 最终，您的应用程序中实际发生的事情变得非常困难，并导致大量的bug。 在Angular，主要有三种的方法来解决这个问题。 Redux using @ngrx Redux using ng2-redux Angular Services and RxJS（推荐）"},"state-management/state-management.html#状态管理":{"title":"&#x72B6;&#x6001;&#x7BA1;&#x7406;","path":"\\state-management\\state-management.html#状态管理","body":"&#x5BF9;&#x4E8E;&#x5177;&#x6709;&#x5927;&#x91CF;&#x5F02;&#x6B65;&#x6D3B;&#x52A8;&#x4EE5;&#x53CA;&#x5728;&#x591A;&#x4E2A;&#x7EC4;&#x4EF6;&#x548C;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x6709;&#x5F88;&#x591A;&#x5171;&#x4EAB;&#x72B6;&#x6001;&#x7684;&#x5927;&#x578B;Angular&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x7BA1;&#x7406;&#x72B6;&#x6001;&#x53EF;&#x80FD;&#x76F8;&#x5F53;&#x5177;&#x6709;&#x6311;&#x6218;&#x6027;&#x3002; &#x5728;&#x5178;&#x578B;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x7BA1;&#x7406;&#x7684;&#x4E1C;&#x897F;&#x5982;&#x4E0B;&#xFF1A; &#x6765;&#x81EA;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6570;&#x636E;&#x4EE5;&#x53CA;&#x662F;&#x5426;&#x6302;&#x8D77;&#x6216;&#x5BFC;&#x81F4;&#x9519;&#x8BEF; UI&#x72B6;&#x6001;&#x5982;&#x5207;&#x6362;&#xFF0C;&#x8B66;&#x62A5;&#x548C;&#x9519;&#x8BEF;&#x6D88;&#x606F; &#x7528;&#x6237;&#x8F93;&#x5165;&#xFF0C;&#x5982;&#x8868;&#x5355;&#x63D0;&#x4EA4;&#xFF0C;&#x8FC7;&#x6EE4;&#x5668;&#x548C;&#x641C;&#x7D22;&#x67E5;&#x8BE2; &#x81EA;&#x5B9A;&#x4E49;&#x4E3B;&#x9898;&#xFF0C;&#x51ED;&#x636E;&#x548C;&#x672C;&#x5730;&#x5316; &#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684;&#x72B6;&#x6001; &#x968F;&#x7740;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x53D1;&#x5C55;&#xFF0C;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x77E5;&#x9053;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x72B6;&#x6001;&#x53D8;&#x5316;&#x5C06;&#x4E00;&#x81F4;&#x800C;&#x51C6;&#x786E;&#x5730;&#x53CD;&#x6620;&#x5728;&#x5176;&#x4ED6;&#x6A21;&#x5757;&#x4E2D;&#xFF1F; &#x5982;&#x679C;&#x8FD9;&#x4E9B;&#x4FEE;&#x6539;&#x5BFC;&#x81F4;&#x66F4;&#x591A;&#x7684;&#x72B6;&#x6001;&#x66F4;&#x6539;&#x5462;&#xFF1F; &#x6700;&#x7EC8;&#xFF0C;&#x60A8;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x5B9E;&#x9645;&#x53D1;&#x751F;&#x7684;&#x4E8B;&#x60C5;&#x53D8;&#x5F97;&#x975E;&#x5E38;&#x56F0;&#x96BE;&#xFF0C;&#x5E76;&#x5BFC;&#x81F4;&#x5927;&#x91CF;&#x7684;bug&#x3002; &#x5728;Angular&#xFF0C;&#x4E3B;&#x8981;&#x6709;&#x4E09;&#x79CD;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; Redux using @ngrx Redux using ng2-redux Angular Services and RxJS&#xFF08;&#x63A8;&#x8350;&#xFF09;"},"state-management/using_redux_with_components.html":{"title":"","path":"\\state-management\\using_redux_with_components.html","body":"使用 Redux 与 Components 我们将使用来自Ng2-Redux的 选择模式 ( https://github.com/angular-redux/ng2-redux#the-select-pattern)将我们的组件绑定到store。为了演示它是如何工作的，让我们来看看一个带有计数器组件的小例子。 计数器示例 让我们从建立一个计数器组件开始。这个组件将负责跟踪其被点击多少次并显示该数量。 app/components/counter-component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import  Component  from '@angular/core' ; import  select  from 'ng2-redux' ; import  Observable  from 'rxjs' ; import  CounterActions  from '../actions/counter-actions' ; @Component ( selector: 'counter' , providers: [ CounterActions ], template: ` p Clicked:  counter$ | async  times button (click)=\"actions.increment()\"+/button button (click)=\"actions.decrement()\"-/button button (click)=\"actions.incrementIfOdd()\"Increment if odd/button button (click)=\"actions.incrementAsync()\"Increment async/button /p ` ) export class Counter  @select () counter$: Observable number ; constructor ( public actions: CounterActions )   View Example 现在应该熟悉模板语法，使用异步管道显示一个 Observable 计数器，并处理一些点击事件。 在这种情况下，点击事件绑定到从 CounterActions ActionCreatorService调用我们的动作创建者的表达式。 让我们来看看 @select 的使用。 @select 是Ng2-Redux的一个功能，它旨在帮助您以声明方式将 store 的状态附加到组件。您可以将其附加到组件类的属性，Ng2-Redux将创建一个 Observable 并将其绑定到该属性。 在这种情况下， @select 没有参数，因此Ng2-Redux将查找与类变量名称相同的store属性。它省略了尾随的 $ ，因为这只是 Observables 的命名约定。 所以现在，任何时间 store.counter 由reducer更新， counter$ 将收到新的值并且 | async 将在模板中更新它。 请注意， @select 支持各种各样的参数，以允许您以非常大的灵活性选择部分Redux存储。有关更多详细信息，请参阅 Ng2-Redux 文档。 Ng2-Redux“选择模式”样式与 react-redux 使用的“连接”样式有点不同;然而通过使用Angular 2的DI和TypeScript的装饰器，我们可以有一个很好的声明式绑定，其中大部分的工作是在模板中完成。我们还获得 Observa～bles 和 OnPush 变化检测的功能，以获得更好的性能。 无论哪种方式，我们仍然从Redux的基本原理和单向数据流中获益。"},"state-management/using_redux_with_components.html#使用-Redux-与-Components":{"title":"&#x4F7F;&#x7528; Redux &#x4E0E; Components","path":"\\state-management\\using_redux_with_components.html#使用-Redux-与-Components","body":"&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#x6765;&#x81EA;Ng2-Redux&#x7684; &#x9009;&#x62E9;&#x6A21;&#x5F0F; ( https://github.com/angular-redux/ng2-redux#the-select-pattern)&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x7ED1;&#x5B9A;&#x5230;store&#x3002;&#x4E3A;&#x4E86;&#x6F14;&#x793A;&#x5B83;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x8BA1;&#x6570;&#x5668;&#x7EC4;&#x4EF6;&#x7684;&#x5C0F;&#x4F8B;&#x5B50;&#x3002;"},"state-management/using_redux_with_components.html#计数器示例":{"title":"&#x8BA1;&#x6570;&#x5668;&#x793A;&#x4F8B;","path":"\\state-management\\using_redux_with_components.html#计数器示例","body":"&#x8BA9;&#x6211;&#x4EEC;&#x4ECE;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x7EC4;&#x4EF6;&#x5F00;&#x59CB;&#x3002;&#x8FD9;&#x4E2A;&#x7EC4;&#x4EF6;&#x5C06;&#x8D1F;&#x8D23;&#x8DDF;&#x8E2A;&#x5176;&#x88AB;&#x70B9;&#x51FB;&#x591A;&#x5C11;&#x6B21;&#x5E76;&#x663E;&#x793A;&#x8BE5;&#x6570;&#x91CF;&#x3002; app/components/counter-component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import { Component } from &apos;@angular/core&apos; ; import { select } from &apos;ng2-redux&apos; ; import { Observable } from &apos;rxjs&apos; ; import { CounterActions } from &apos;../actions/counter-actions&apos; ; @Component ({ selector: &apos;counter&apos; , providers: [ CounterActions ], template: ` p Clicked: {{ counter$ | async }} times button (click)=actions.increment()+/button button (click)=actions.decrement()-/button button (click)=actions.incrementIfOdd()Increment if odd/button button (click)=actions.incrementAsync()Increment async/button /p ` }) export class Counter { @select () counter$: Observable number ; constructor ( public actions: CounterActions ) {} } View Example &#x73B0;&#x5728;&#x5E94;&#x8BE5;&#x719F;&#x6089;&#x6A21;&#x677F;&#x8BED;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;&#x5F02;&#x6B65;&#x7BA1;&#x9053;&#x663E;&#x793A;&#x4E00;&#x4E2A; Observable &#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x5E76;&#x5904;&#x7406;&#x4E00;&#x4E9B;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x7ED1;&#x5B9A;&#x5230;&#x4ECE; CounterActions ActionCreatorService&#x8C03;&#x7528;&#x6211;&#x4EEC;&#x7684;&#x52A8;&#x4F5C;&#x521B;&#x5EFA;&#x8005;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x3002; &#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B; @select &#x7684;&#x4F7F;&#x7528;&#x3002; @select &#x662F;Ng2-Redux&#x7684;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#xFF0C;&#x5B83;&#x65E8;&#x5728;&#x5E2E;&#x52A9;&#x60A8;&#x4EE5;&#x58F0;&#x660E;&#x65B9;&#x5F0F;&#x5C06; store &#x7684;&#x72B6;&#x6001;&#x9644;&#x52A0;&#x5230;&#x7EC4;&#x4EF6;&#x3002;&#x60A8;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x9644;&#x52A0;&#x5230;&#x7EC4;&#x4EF6;&#x7C7B;&#x7684;&#x5C5E;&#x6027;&#xFF0C;Ng2-Redux&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; Observable &#x5E76;&#x5C06;&#x5176;&#x7ED1;&#x5B9A;&#x5230;&#x8BE5;&#x5C5E;&#x6027;&#x3002; &#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; @select &#x6CA1;&#x6709;&#x53C2;&#x6570;&#xFF0C;&#x56E0;&#x6B64;Ng2-Redux&#x5C06;&#x67E5;&#x627E;&#x4E0E;&#x7C7B;&#x53D8;&#x91CF;&#x540D;&#x79F0;&#x76F8;&#x540C;&#x7684;store&#x5C5E;&#x6027;&#x3002;&#x5B83;&#x7701;&#x7565;&#x4E86;&#x5C3E;&#x968F;&#x7684; $ &#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x53EA;&#x662F; Observables &#x7684;&#x547D;&#x540D;&#x7EA6;&#x5B9A;&#x3002; &#x6240;&#x4EE5;&#x73B0;&#x5728;&#xFF0C;&#x4EFB;&#x4F55;&#x65F6;&#x95F4; store.counter &#x7531;reducer&#x66F4;&#x65B0;&#xFF0C; counter$ &#x5C06;&#x6536;&#x5230;&#x65B0;&#x7684;&#x503C;&#x5E76;&#x4E14; | async &#x5C06;&#x5728;&#x6A21;&#x677F;&#x4E2D;&#x66F4;&#x65B0;&#x5B83;&#x3002; &#x8BF7;&#x6CE8;&#x610F;&#xFF0C; @select &#x652F;&#x6301;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4EE5;&#x5141;&#x8BB8;&#x60A8;&#x4EE5;&#x975E;&#x5E38;&#x5927;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x9009;&#x62E9;&#x90E8;&#x5206;Redux&#x5B58;&#x50A8;&#x3002;&#x6709;&#x5173;&#x66F4;&#x591A;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#xFF0C;&#x8BF7;&#x53C2;&#x9605; Ng2-Redux &#x6587;&#x6863;&#x3002; Ng2-Redux&#x201C;&#x9009;&#x62E9;&#x6A21;&#x5F0F;&#x201D;&#x6837;&#x5F0F;&#x4E0E; react-redux &#x4F7F;&#x7528;&#x7684;&#x201C;&#x8FDE;&#x63A5;&#x201D;&#x6837;&#x5F0F;&#x6709;&#x70B9;&#x4E0D;&#x540C;;&#x7136;&#x800C;&#x901A;&#x8FC7;&#x4F7F;&#x7528;Angular 2&#x7684;DI&#x548C;TypeScript&#x7684;&#x88C5;&#x9970;&#x5668;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x58F0;&#x660E;&#x5F0F;&#x7ED1;&#x5B9A;&#xFF0C;&#x5176;&#x4E2D;&#x5927;&#x90E8;&#x5206;&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#x5728;&#x6A21;&#x677F;&#x4E2D;&#x5B8C;&#x6210;&#x3002;&#x6211;&#x4EEC;&#x8FD8;&#x83B7;&#x5F97; Observa&#xFF5E;bles &#x548C; OnPush &#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4EE5;&#x83B7;&#x5F97;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002; &#x65E0;&#x8BBA;&#x54EA;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x4ECD;&#x7136;&#x4ECE;Redux&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#x548C;&#x5355;&#x5411;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x83B7;&#x76CA;&#x3002;"},"tooling/chrome.html":{"title":"","path":"\\tooling\\chrome.html","body":"Web浏览器 我们为本课程使用Google的Chrome浏览器，因为它具有尖端的JavaScript引擎和出色的调试工具。 但是，您可以自由使用其他浏览器。 不为人知的是，有一个Mozilla Firefox开发人员版本，支持伟大的开发和调试工具。 使用JavaScript编写的代码应该可以在任何现代的网络浏览器（Firefox，IE9 +，Chrome，Safari，Opera）上运行。"},"tooling/chrome.html#Web浏览器":{"title":"Web&#x6D4F;&#x89C8;&#x5668;","path":"\\tooling\\chrome.html#Web浏览器","body":"&#x6211;&#x4EEC;&#x4E3A;&#x672C;&#x8BFE;&#x7A0B;&#x4F7F;&#x7528;Google&#x7684;Chrome&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5177;&#x6709;&#x5C16;&#x7AEF;&#x7684;JavaScript&#x5F15;&#x64CE;&#x548C;&#x51FA;&#x8272;&#x7684;&#x8C03;&#x8BD5;&#x5DE5;&#x5177;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x6D4F;&#x89C8;&#x5668;&#x3002; &#x4E0D;&#x4E3A;&#x4EBA;&#x77E5;&#x7684;&#x662F;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;Mozilla Firefox&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x7248;&#x672C;&#xFF0C;&#x652F;&#x6301;&#x4F1F;&#x5927;&#x7684;&#x5F00;&#x53D1;&#x548C;&#x8C03;&#x8BD5;&#x5DE5;&#x5177;&#x3002; &#x4F7F;&#x7528;JavaScript&#x7F16;&#x5199;&#x7684;&#x4EE3;&#x7801;&#x5E94;&#x8BE5;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x4F55;&#x73B0;&#x4EE3;&#x7684;&#x7F51;&#x7EDC;&#x6D4F;&#x89C8;&#x5668;&#xFF08;Firefox&#xFF0C;IE9 +&#xFF0C;Chrome&#xFF0C;Safari&#xFF0C;Opera&#xFF09;&#x4E0A;&#x8FD0;&#x884C;&#x3002;"},"tooling/back_end_code_sharing_and_distribution.html":{"title":"","path":"\\tooling\\back_end_code_sharing_and_distribution.html","body":"后端代码共享和分发：npm npm 是“node 包管理器”。 它与NodeJS一起安装，并允许您访问各种第三方JavaScript模块。 它还为后端应用程序执行依赖关系管理。 您在名为 package.json 的文件中指定模块依赖关系; 运行 npm install 将解析，下载并安装您的后端应用程序的依赖项。"},"tooling/back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm":{"title":"&#x540E;&#x7AEF;&#x4EE3;&#x7801;&#x5171;&#x4EAB;&#x548C;&#x5206;&#x53D1;&#xFF1A;npm","path":"\\tooling\\back_end_code_sharing_and_distribution.html#后端代码共享和分发：npm","body":"npm &#x662F;&#x201C;node &#x5305;&#x7BA1;&#x7406;&#x5668;&#x201D;&#x3002; &#x5B83;&#x4E0E;NodeJS&#x4E00;&#x8D77;&#x5B89;&#x88C5;&#xFF0C;&#x5E76;&#x5141;&#x8BB8;&#x60A8;&#x8BBF;&#x95EE;&#x5404;&#x79CD;&#x7B2C;&#x4E09;&#x65B9;JavaScript&#x6A21;&#x5757;&#x3002; &#x5B83;&#x8FD8;&#x4E3A;&#x540E;&#x7AEF;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x7BA1;&#x7406;&#x3002; &#x60A8;&#x5728;&#x540D;&#x4E3A; package.json &#x7684;&#x6587;&#x4EF6;&#x4E2D;&#x6307;&#x5B9A;&#x6A21;&#x5757;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;; &#x8FD0;&#x884C; npm install &#x5C06;&#x89E3;&#x6790;&#xFF0C;&#x4E0B;&#x8F7D;&#x5E76;&#x5B89;&#x88C5;&#x60A8;&#x7684;&#x540E;&#x7AEF;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#x3002;"},"tooling/command_line_javascript.html":{"title":"","path":"\\tooling\\command_line_javascript.html","body":"JavaScript命令行：NodeJS Node.js是一个JavaScript运行时环境，允许JavaScript代码在浏览器之外使用Google V8 JavaScript引擎运行。Node.js用于在服务器上编写快速执行代码，以有效地处理事件和非阻塞I/O。 REPL（Read-Eval-Print-Loop）来快速写入和测试JavaScript代码。 V8 JavaScript解释器。 用于执行操作系统任务（如文件I/O，HTTP等）的模块。 虽然Node.js最初是用于在JavaScript中编写服务器代码，但今天它被JavaScript工具广泛使用，这使得它也与前端程序员相关。 您将在本课程中使用的很多工具都使用Node.js."},"tooling/command_line_javascript.html#JavaScript命令行：NodeJS":{"title":"JavaScript&#x547D;&#x4EE4;&#x884C;&#xFF1A;NodeJS","path":"\\tooling\\command_line_javascript.html#JavaScript命令行：NodeJS","body":"Node.js&#x662F;&#x4E00;&#x4E2A;JavaScript&#x8FD0;&#x884C;&#x65F6;&#x73AF;&#x5883;&#xFF0C;&#x5141;&#x8BB8;JavaScript&#x4EE3;&#x7801;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E4B;&#x5916;&#x4F7F;&#x7528;Google V8 JavaScript&#x5F15;&#x64CE;&#x8FD0;&#x884C;&#x3002;Node.js&#x7528;&#x4E8E;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7F16;&#x5199;&#x5FEB;&#x901F;&#x6267;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x4EE5;&#x6709;&#x6548;&#x5730;&#x5904;&#x7406;&#x4E8B;&#x4EF6;&#x548C;&#x975E;&#x963B;&#x585E;I/O&#x3002; REPL&#xFF08;Read-Eval-Print-Loop&#xFF09;&#x6765;&#x5FEB;&#x901F;&#x5199;&#x5165;&#x548C;&#x6D4B;&#x8BD5;JavaScript&#x4EE3;&#x7801;&#x3002; V8 JavaScript&#x89E3;&#x91CA;&#x5668;&#x3002; &#x7528;&#x4E8E;&#x6267;&#x884C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4EFB;&#x52A1;&#xFF08;&#x5982;&#x6587;&#x4EF6;I/O&#xFF0C;HTTP&#x7B49;&#xFF09;&#x7684;&#x6A21;&#x5757;&#x3002; &#x867D;&#x7136;Node.js&#x6700;&#x521D;&#x662F;&#x7528;&#x4E8E;&#x5728;JavaScript&#x4E2D;&#x7F16;&#x5199;&#x670D;&#x52A1;&#x5668;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x4ECA;&#x5929;&#x5B83;&#x88AB;JavaScript&#x5DE5;&#x5177;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x4F7F;&#x5F97;&#x5B83;&#x4E5F;&#x4E0E;&#x524D;&#x7AEF;&#x7A0B;&#x5E8F;&#x5458;&#x76F8;&#x5173;&#x3002; &#x60A8;&#x5C06;&#x5728;&#x672C;&#x8BFE;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5F88;&#x591A;&#x5DE5;&#x5177;&#x90FD;&#x4F7F;&#x7528;Node.js."},"tooling/module_loading_bundling_and_build_tasks.html":{"title":"","path":"\\tooling\\module_loading_bundling_and_build_tasks.html","body":"模块加载，打包和构建任务：Webpack Webpack是一个JavaScript模块打包工具。 它需要具有其依赖关系的模块，并生成表示这些模块的静态资源。 Webpack知道只有如何打包JavaScript。 要打包其他资源，如CSS，HTML，图像或引入的其他东西，它使用额外的装载器。 Webpack也可以通过插件扩展，例如压缩和混淆可以使用Webpack的UglifyJS插件完成。 ⚡️了解更多Webpack推荐访问： https://doc.webpack-china.org"},"tooling/module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack":{"title":"&#x6A21;&#x5757;&#x52A0;&#x8F7D;&#xFF0C;&#x6253;&#x5305;&#x548C;&#x6784;&#x5EFA;&#x4EFB;&#x52A1;&#xFF1A;Webpack","path":"\\tooling\\module_loading_bundling_and_build_tasks.html#模块加载，打包和构建任务：Webpack","body":"Webpack&#x662F;&#x4E00;&#x4E2A;JavaScript&#x6A21;&#x5757;&#x6253;&#x5305;&#x5DE5;&#x5177;&#x3002; &#x5B83;&#x9700;&#x8981;&#x5177;&#x6709;&#x5176;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x5E76;&#x751F;&#x6210;&#x8868;&#x793A;&#x8FD9;&#x4E9B;&#x6A21;&#x5757;&#x7684;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x3002; Webpack&#x77E5;&#x9053;&#x53EA;&#x6709;&#x5982;&#x4F55;&#x6253;&#x5305;JavaScript&#x3002; &#x8981;&#x6253;&#x5305;&#x5176;&#x4ED6;&#x8D44;&#x6E90;&#xFF0C;&#x5982;CSS&#xFF0C;HTML&#xFF0C;&#x56FE;&#x50CF;&#x6216;&#x5F15;&#x5165;&#x7684;&#x5176;&#x4ED6;&#x4E1C;&#x897F;&#xFF0C;&#x5B83;&#x4F7F;&#x7528;&#x989D;&#x5916;&#x7684;&#x88C5;&#x8F7D;&#x5668;&#x3002; Webpack&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x63D2;&#x4EF6;&#x6269;&#x5C55;&#xFF0C;&#x4F8B;&#x5982;&#x538B;&#x7F29;&#x548C;&#x6DF7;&#x6DC6;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Webpack&#x7684;UglifyJS&#x63D2;&#x4EF6;&#x5B8C;&#x6210;&#x3002; &#x26A1;&#xFE0F;&#x4E86;&#x89E3;&#x66F4;&#x591A;Webpack&#x63A8;&#x8350;&#x8BBF;&#x95EE;&#xFF1A; https://doc.webpack-china.org"},"tooling/source_control.html":{"title":"","path":"\\tooling\\source_control.html","body":"源码控制：Git 源码控制（有时称为版本控制）将变更管理带入开发过程中不同点的保存文件。我们将使用的版本控制系统（VCS）是Git。 Git 是一个分散的分布式版本控制系统，它允许程序员在同一个代码库上协作，而无需踩在对方的脚趾。 它已经成为开源开发的约定俗成的源码控制系统，因为它的分散模型和延迟的分支特征。 有关如何使用Git的更多信息，转到 Pro Git"},"tooling/source_control.html#源码控制：Git":{"title":"&#x6E90;&#x7801;&#x63A7;&#x5236;&#xFF1A;Git","path":"\\tooling\\source_control.html#源码控制：Git","body":"&#x6E90;&#x7801;&#x63A7;&#x5236;&#xFF08;&#x6709;&#x65F6;&#x79F0;&#x4E3A;&#x7248;&#x672C;&#x63A7;&#x5236;&#xFF09;&#x5C06;&#x53D8;&#x66F4;&#x7BA1;&#x7406;&#x5E26;&#x5165;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E0D;&#x540C;&#x70B9;&#x7684;&#x4FDD;&#x5B58;&#x6587;&#x4EF6;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x4F7F;&#x7528;&#x7684;&#x7248;&#x672C;&#x63A7;&#x5236;&#x7CFB;&#x7EDF;&#xFF08;VCS&#xFF09;&#x662F;Git&#x3002; Git &#x662F;&#x4E00;&#x4E2A;&#x5206;&#x6563;&#x7684;&#x5206;&#x5E03;&#x5F0F;&#x7248;&#x672C;&#x63A7;&#x5236;&#x7CFB;&#x7EDF;&#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x7A0B;&#x5E8F;&#x5458;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x4EE3;&#x7801;&#x5E93;&#x4E0A;&#x534F;&#x4F5C;&#xFF0C;&#x800C;&#x65E0;&#x9700;&#x8E29;&#x5728;&#x5BF9;&#x65B9;&#x7684;&#x811A;&#x8DBE;&#x3002; &#x5B83;&#x5DF2;&#x7ECF;&#x6210;&#x4E3A;&#x5F00;&#x6E90;&#x5F00;&#x53D1;&#x7684;&#x7EA6;&#x5B9A;&#x4FD7;&#x6210;&#x7684;&#x6E90;&#x7801;&#x63A7;&#x5236;&#x7CFB;&#x7EDF;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x7684;&#x5206;&#x6563;&#x6A21;&#x578B;&#x548C;&#x5EF6;&#x8FDF;&#x7684;&#x5206;&#x652F;&#x7279;&#x5F81;&#x3002; &#x6709;&#x5173;&#x5982;&#x4F55;&#x4F7F;&#x7528;Git&#x7684;&#x66F4;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x8F6C;&#x5230; Pro Git"},"tooling/the_command_line.html":{"title":"","path":"\\tooling\\the_command_line.html","body":"命令行 JavaScript开发工具大多面向命令行。 如果你一直在用Windows，你可能会发现这不熟悉。 但是命令行为自动化开发任务提供了更好的支持，因此值得使用它。 我们将提供本课程所需的所有命令行示例。 ⚡️推荐windows用户使用 Cmder"},"tooling/the_command_line.html#命令行":{"title":"&#x547D;&#x4EE4;&#x884C;","path":"\\tooling\\the_command_line.html#命令行","body":"JavaScript&#x5F00;&#x53D1;&#x5DE5;&#x5177;&#x5927;&#x591A;&#x9762;&#x5411;&#x547D;&#x4EE4;&#x884C;&#x3002; &#x5982;&#x679C;&#x4F60;&#x4E00;&#x76F4;&#x5728;&#x7528;Windows&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x53D1;&#x73B0;&#x8FD9;&#x4E0D;&#x719F;&#x6089;&#x3002; &#x4F46;&#x662F;&#x547D;&#x4EE4;&#x884C;&#x4E3A;&#x81EA;&#x52A8;&#x5316;&#x5F00;&#x53D1;&#x4EFB;&#x52A1;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x56E0;&#x6B64;&#x503C;&#x5F97;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x6211;&#x4EEC;&#x5C06;&#x63D0;&#x4F9B;&#x672C;&#x8BFE;&#x7A0B;&#x6240;&#x9700;&#x7684;&#x6240;&#x6709;&#x547D;&#x4EE4;&#x884C;&#x793A;&#x4F8B;&#x3002; &#x26A1;&#xFE0F;&#x63A8;&#x8350;windows&#x7528;&#x6237;&#x4F7F;&#x7528; Cmder"},"tooling/tooling.html":{"title":"","path":"\\tooling\\tooling.html","body":"JavaScript工具链 在本节中，我们将介绍您将在课程其余部分使用的工具。 Figure: Hand Tools by M338 is licensed under Public Domain ( http://commons.wikimedia.org/wiki/File:Hand_tools.jpg )"},"tooling/tooling.html#JavaScript工具链":{"title":"JavaScript&#x5DE5;&#x5177;&#x94FE;","path":"\\tooling\\tooling.html#JavaScript工具链","body":"&#x5728;&#x672C;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4ECB;&#x7ECD;&#x60A8;&#x5C06;&#x5728;&#x8BFE;&#x7A0B;&#x5176;&#x4F59;&#x90E8;&#x5206;&#x4F7F;&#x7528;&#x7684;&#x5DE5;&#x5177;&#x3002; Figure: Hand Tools by M338 is licensed under Public Domain ( http://commons.wikimedia.org/wiki/File:Hand_tools.jpg )"},"zone/context_propagation.html":{"title":"","path":"\\zone\\context_propagation.html","body":"上下文传播 上下文传播允许将数据附加到 zone。 然后，当数据在异步调用中传播时，数据与 zone 一起传输。 1 2 3 4 5 6 7 8 9 10 11 12 let rootZone = Zone.current; // Fork rootZone和attach属性 let zoneA = rootZone.fork( name : 'zoneA' , properties :  a : 1 , b : 1 ); // Fork zoneA和attach属性，其中一些覆盖zoneA。 let zoneB = zoneA.fork( name : 'zoneA' [d], properties :  a : 2 ); // 查询zoneA返回预期值 expect(zoneA.get( 'a' )).toEqual( 1 ); expect(zoneA.get( 'b' )).toEqual( 1 ); // 查询zoneB返回zoneB定义'a'为2的预期值。 expect(zoneB.get( 'a' )).toEqual( 2 ); // 查询zoneB的'b'返回zoneA的'b'，因为zoneB没有'b'的值。 expect(zoneB.get( 'b' )).toEqual( 1 ); 关键点： 附加到该区域的数据shallow-immutable。 （一旦 zone 被 fork，它的属性不能被改变。） 子 zone 继承父 zone 属性。（在子 zone 中运行的代码应该与在父 zone 中运行的代码相同，前提是子 zone 没有显式覆盖代码所依赖的值。） 因为 zone 流通过异步操作，所以相应的属性与 zone 流允许以某种形式进行通信。"},"zone/context_propagation.html#上下文传播":{"title":"&#x4E0A;&#x4E0B;&#x6587;&#x4F20;&#x64AD;","path":"\\zone\\context_propagation.html#上下文传播","body":"&#x4E0A;&#x4E0B;&#x6587;&#x4F20;&#x64AD;&#x5141;&#x8BB8;&#x5C06;&#x6570;&#x636E;&#x9644;&#x52A0;&#x5230; zone&#x3002; &#x7136;&#x540E;&#xFF0C;&#x5F53;&#x6570;&#x636E;&#x5728;&#x5F02;&#x6B65;&#x8C03;&#x7528;&#x4E2D;&#x4F20;&#x64AD;&#x65F6;&#xFF0C;&#x6570;&#x636E;&#x4E0E; zone &#x4E00;&#x8D77;&#x4F20;&#x8F93;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 let rootZone = Zone.current; // Fork rootZone&#x548C;attach&#x5C5E;&#x6027; let zoneA = rootZone.fork({ name : &apos;zoneA&apos; , properties : { a : 1 , b : 1 }}); // Fork zoneA&#x548C;attach&#x5C5E;&#x6027;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E9B;&#x8986;&#x76D6;zoneA&#x3002; let zoneB = zoneA.fork({ name : &apos;zoneA&apos; [d], properties : { a : 2 }}); // &#x67E5;&#x8BE2;zoneA&#x8FD4;&#x56DE;&#x9884;&#x671F;&#x503C; expect(zoneA.get( &apos;a&apos; )).toEqual( 1 ); expect(zoneA.get( &apos;b&apos; )).toEqual( 1 ); // &#x67E5;&#x8BE2;zoneB&#x8FD4;&#x56DE;zoneB&#x5B9A;&#x4E49;&apos;a&apos;&#x4E3A;2&#x7684;&#x9884;&#x671F;&#x503C;&#x3002; expect(zoneB.get( &apos;a&apos; )).toEqual( 2 ); // &#x67E5;&#x8BE2;zoneB&#x7684;&apos;b&apos;&#x8FD4;&#x56DE;zoneA&#x7684;&apos;b&apos;&#xFF0C;&#x56E0;&#x4E3A;zoneB&#x6CA1;&#x6709;&apos;b&apos;&#x7684;&#x503C;&#x3002; expect(zoneB.get( &apos;b&apos; )).toEqual( 1 ); &#x5173;&#x952E;&#x70B9;&#xFF1A; &#x9644;&#x52A0;&#x5230;&#x8BE5;&#x533A;&#x57DF;&#x7684;&#x6570;&#x636E;shallow-immutable&#x3002; &#xFF08;&#x4E00;&#x65E6; zone &#x88AB; fork&#xFF0C;&#x5B83;&#x7684;&#x5C5E;&#x6027;&#x4E0D;&#x80FD;&#x88AB;&#x6539;&#x53D8;&#x3002;&#xFF09; &#x5B50; zone &#x7EE7;&#x627F;&#x7236; zone &#x5C5E;&#x6027;&#x3002;&#xFF08;&#x5728;&#x5B50; zone &#x4E2D;&#x8FD0;&#x884C;&#x7684;&#x4EE3;&#x7801;&#x5E94;&#x8BE5;&#x4E0E;&#x5728;&#x7236; zone &#x4E2D;&#x8FD0;&#x884C;&#x7684;&#x4EE3;&#x7801;&#x76F8;&#x540C;&#xFF0C;&#x524D;&#x63D0;&#x662F;&#x5B50; zone &#x6CA1;&#x6709;&#x663E;&#x5F0F;&#x8986;&#x76D6;&#x4EE3;&#x7801;&#x6240;&#x4F9D;&#x8D56;&#x7684;&#x503C;&#x3002;&#xFF09; &#x56E0;&#x4E3A; zone &#x6D41;&#x901A;&#x8FC7;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x76F8;&#x5E94;&#x7684;&#x5C5E;&#x6027;&#x4E0E; zone &#x6D41;&#x5141;&#x8BB8;&#x4EE5;&#x67D0;&#x79CD;&#x5F62;&#x5F0F;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x3002;"},"zone/interception.html":{"title":"","path":"\\zone\\interception.html","body":"拦截 到目前为止，我们已经展示了如何创建和传播 Zones ，但我们还没有讨论 Zones 能提供什么价值。 为了充分利用Zones ，该 Zones 需要提供拦截不同 zone 方法调用的能力。 好处是： 与父 zones 的可组合性 任务执行的可观察性 集中式错误处理"},"zone/interception.html#拦截":{"title":"&#x62E6;&#x622A;","path":"\\zone\\interception.html#拦截","body":"&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5C55;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x548C;&#x4F20;&#x64AD; Zones &#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x8FD8;&#x6CA1;&#x6709;&#x8BA8;&#x8BBA; Zones &#x80FD;&#x63D0;&#x4F9B;&#x4EC0;&#x4E48;&#x4EF7;&#x503C;&#x3002; &#x4E3A;&#x4E86;&#x5145;&#x5206;&#x5229;&#x7528;Zones &#xFF0C;&#x8BE5; Zones &#x9700;&#x8981;&#x63D0;&#x4F9B;&#x62E6;&#x622A;&#x4E0D;&#x540C; zone &#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x7684;&#x80FD;&#x529B;&#x3002; &#x597D;&#x5904;&#x662F;&#xFF1A; &#x4E0E;&#x7236; zones &#x7684;&#x53EF;&#x7EC4;&#x5408;&#x6027; &#x4EFB;&#x52A1;&#x6267;&#x884C;&#x7684;&#x53EF;&#x89C2;&#x5BDF;&#x6027; &#x96C6;&#x4E2D;&#x5F0F;&#x9519;&#x8BEF;&#x5904;&#x7406;"},"zone/patching_async_methods.html":{"title":"","path":"\\zone\\patching_async_methods.html","body":"异步方法补丁 这里我们将看看如何通过异步回调传播zone的基本机制。 （注意：实际工作情况有点复杂，因为它们通过稍后讨论的任务调度机制进行调度，为了清楚起见，该示例进行了简化）。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // 保存原始的setTimeout引用 let originalSetTimeout = window .setTimeout; // Overwrite the API with a function which wraps callback in zone. window .setTimeout = function ( callback, delay )  // Invoke the original API but wrap the callback in zone. return originalSetTimeout( // Wrap the callback method Zone.current.wrap(callback), delay );  // Return a wrapped version of the callback which restores zone. Zone.prototype.wrap[c] = function ( callback )  // Capture the current zone let capturedZone = this ; // Return a closure which executes the original closure in zone. return function ( )  // Invoke the original callback in the captured zone. return capturedZone.runGuarded(callback, this , arguments ); ; ; 关键点： Zones 的猴子补丁方法只修补一次。 进入/离开 zone 只需更改Zone.current的值。（不需要进一步的猴子补丁） Zone.prototype.wrap method provides convenience for wrapping callbacks. (The wrapped callback is executed through Zone.prototype.runGuarded()) Zone.prototype.runGuarded() is just like Zone.prototype.run(), but with extra try-catch block for handling exceptions described later . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Save the original reference to Promise.prototype.then. let originalPromiseThen = Promise .prototype.then; // Overwrite the API with function which wraps the arguments // NOTE: this is simplified as actual API has more arguments. Promise .prototype.then = function ( callback )  // Capture the current zone let capturedZone = Zone.current; // Return a closure which executes the original closure in zone. function wrappedCallback ( )  return capturedZone.run(callback, this , arguments ); ; // Invoke the original callback in the captured zone. return originalPromiseThen.call( this , [wrappedCallback]); ; 关键点： Promises handle their own exceptions and so they can’t use Zone.prototype.wrap(). (We could have separate API, but Promise is the exception to the rule, and so I did not feel justified creating its own API.) Promise API较多，在此示例中未显式显示。"},"zone/patching_async_methods.html#异步方法补丁":{"title":"&#x5F02;&#x6B65;&#x65B9;&#x6CD5;&#x8865;&#x4E01;","path":"\\zone\\patching_async_methods.html#异步方法补丁","body":"&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5C06;&#x770B;&#x770B;&#x5982;&#x4F55;&#x901A;&#x8FC7;&#x5F02;&#x6B65;&#x56DE;&#x8C03;&#x4F20;&#x64AD;zone&#x7684;&#x57FA;&#x672C;&#x673A;&#x5236;&#x3002; &#xFF08;&#x6CE8;&#x610F;&#xFF1A;&#x5B9E;&#x9645;&#x5DE5;&#x4F5C;&#x60C5;&#x51B5;&#x6709;&#x70B9;&#x590D;&#x6742;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x901A;&#x8FC7;&#x7A0D;&#x540E;&#x8BA8;&#x8BBA;&#x7684;&#x4EFB;&#x52A1;&#x8C03;&#x5EA6;&#x673A;&#x5236;&#x8FDB;&#x884C;&#x8C03;&#x5EA6;&#xFF0C;&#x4E3A;&#x4E86;&#x6E05;&#x695A;&#x8D77;&#x89C1;&#xFF0C;&#x8BE5;&#x793A;&#x4F8B;&#x8FDB;&#x884C;&#x4E86;&#x7B80;&#x5316;&#xFF09;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // &#x4FDD;&#x5B58;&#x539F;&#x59CB;&#x7684;setTimeout&#x5F15;&#x7528; let originalSetTimeout = window .setTimeout; // Overwrite the API with a function which wraps callback in zone. window .setTimeout = function ( callback, delay ) { // Invoke the original API but wrap the callback in zone. return originalSetTimeout( // Wrap the callback method Zone.current.wrap(callback), delay ); } // Return a wrapped version of the callback which restores zone. Zone.prototype.wrap[c] = function ( callback ) { // Capture the current zone let capturedZone = this ; // Return a closure which executes the original closure in zone. return function ( ) { // Invoke the original callback in the captured zone. return capturedZone.runGuarded(callback, this , arguments ); }; }; &#x5173;&#x952E;&#x70B9;&#xFF1A; Zones &#x7684;&#x7334;&#x5B50;&#x8865;&#x4E01;&#x65B9;&#x6CD5;&#x53EA;&#x4FEE;&#x8865;&#x4E00;&#x6B21;&#x3002; &#x8FDB;&#x5165;/&#x79BB;&#x5F00; zone &#x53EA;&#x9700;&#x66F4;&#x6539;Zone.current&#x7684;&#x503C;&#x3002;&#xFF08;&#x4E0D;&#x9700;&#x8981;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x7334;&#x5B50;&#x8865;&#x4E01;&#xFF09; Zone.prototype.wrap method provides convenience for wrapping callbacks. (The wrapped callback is executed through Zone.prototype.runGuarded()) Zone.prototype.runGuarded() is just like Zone.prototype.run(), but with extra try-catch block for handling exceptions described later . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Save the original reference to Promise.prototype.then. let originalPromiseThen = Promise .prototype.then; // Overwrite the API with function which wraps the arguments // NOTE: this is simplified as actual API has more arguments. Promise .prototype.then = function ( callback ) { // Capture the current zone let capturedZone = Zone.current; // Return a closure which executes the original closure in zone. function wrappedCallback ( ) { return capturedZone.run(callback, this , arguments ); }; // Invoke the original callback in the captured zone. return originalPromiseThen.call( this , [wrappedCallback]); }; &#x5173;&#x952E;&#x70B9;&#xFF1A; Promises handle their own exceptions and so they can&#x2019;t use Zone.prototype.wrap(). (We could have separate API, but Promise is the exception to the rule, and so I did not feel justified creating its own API.) Promise API&#x8F83;&#x591A;&#xFF0C;&#x5728;&#x6B64;&#x793A;&#x4F8B;&#x4E2D;&#x672A;&#x663E;&#x5F0F;&#x663E;&#x793A;&#x3002;"},"zone/task_scheduling.html":{"title":"","path":"\\zone\\task_scheduling.html","body":"Task Scheduling To track tasks, we have to revisit how setTimeout() is monkey patched to modify the way Zone’s are tracked. 要跟踪任务，我们必须看下 setTimeout() 的猴子补丁如何修改被跟踪的 zone。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 // 保存setTimeout的原始引用 let originalSetTimeout = window .setTimeout; // 使用在 zone 中包含回调的函数覆盖API。 window .setTimeout = function ( callback, delay )  // 对当前 zone 使用scheduleTask API。 Zone.current.scheduleMacroTask( // 调试信息 'setTimeout' , // 回调需要在当前 zone 执行。 callback, // 可选数据，如任务是否重复。 null , // 默认计划行为 (task) =  return originalSetTimeout( // Use the task invoke method, so that the task can // call callback in the correct zone. task.invoke, // original delay information delay ); );  使用示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // Create a logging zone let logZone = Zone.current.fork( onScheduleTask: function ( parentZoneDelegate, currentZone, targetZone, task )  // Print when async tasks are scheduled console .log( 'Schedule' , task.source); return parentZoneDelegate.scheduleTask(targetZone, task); , onInvokeTask: function ( parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs )  // Print when async tasks are invoked console .log( 'Invoke' , task.source); return parentZoneDelegate.invokeTask( targetZone, applyThis, applyArgs);  ); console .log( 'start' ); logZone.run( () =  setTimeout( () = null , 0 ); ); console .log( 'end' ); 输出结果 1 2 3 4 start Schedule setTimeout end Invoke setTimeout 关键点： All APIs which schedule tasks use Zone.prototype.scheduleTask() instead of Zone.prototype.wrap(). Tasks use Zone.prototype.runGuarded() for callback execution, hence they handle all of the errors. Tasks are intercepted using invokeTask() whereas zones are intercepted using invoke()."},"zone/task_scheduling.html#Task-Scheduling":{"title":"Task Scheduling","path":"\\zone\\task_scheduling.html#Task-Scheduling","body":"To track tasks, we have to revisit how setTimeout() is monkey patched to modify the way Zone&#x2019;s are tracked. &#x8981;&#x8DDF;&#x8E2A;&#x4EFB;&#x52A1;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x770B;&#x4E0B; setTimeout() &#x7684;&#x7334;&#x5B50;&#x8865;&#x4E01;&#x5982;&#x4F55;&#x4FEE;&#x6539;&#x88AB;&#x8DDF;&#x8E2A;&#x7684; zone&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 // &#x4FDD;&#x5B58;setTimeout&#x7684;&#x539F;&#x59CB;&#x5F15;&#x7528; let originalSetTimeout = window .setTimeout; // &#x4F7F;&#x7528;&#x5728; zone &#x4E2D;&#x5305;&#x542B;&#x56DE;&#x8C03;&#x7684;&#x51FD;&#x6570;&#x8986;&#x76D6;API&#x3002; window .setTimeout = function ( callback, delay ) { // &#x5BF9;&#x5F53;&#x524D; zone &#x4F7F;&#x7528;scheduleTask API&#x3002; Zone.current.scheduleMacroTask( // &#x8C03;&#x8BD5;&#x4FE1;&#x606F; &apos;setTimeout&apos; , // &#x56DE;&#x8C03;&#x9700;&#x8981;&#x5728;&#x5F53;&#x524D; zone &#x6267;&#x884C;&#x3002; callback, // &#x53EF;&#x9009;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x4EFB;&#x52A1;&#x662F;&#x5426;&#x91CD;&#x590D;&#x3002; null , // &#x9ED8;&#x8BA4;&#x8BA1;&#x5212;&#x884C;&#x4E3A; (task) = { return originalSetTimeout( // Use the task invoke method, so that the task can // call callback in the correct zone. task.invoke, // original delay information delay ); }); } &#x4F7F;&#x7528;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // Create a logging zone let logZone = Zone.current.fork({ onScheduleTask: function ( parentZoneDelegate, currentZone, targetZone, task ) { // Print when async tasks are scheduled console .log( &apos;Schedule&apos; , task.source); return parentZoneDelegate.scheduleTask(targetZone, task); }, onInvokeTask: function ( parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs ) { // Print when async tasks are invoked console .log( &apos;Invoke&apos; , task.source); return parentZoneDelegate.invokeTask( targetZone, applyThis, applyArgs); } }); console .log( &apos;start&apos; ); logZone.run( () = { setTimeout( () = null , 0 ); }); console .log( &apos;end&apos; ); &#x8F93;&#x51FA;&#x7ED3;&#x679C; 1 2 3 4 start Schedule setTimeout end Invoke setTimeout &#x5173;&#x952E;&#x70B9;&#xFF1A; All APIs which schedule tasks use Zone.prototype.scheduleTask() instead of Zone.prototype.wrap(). Tasks use Zone.prototype.runGuarded() for callback execution, hence they handle all of the errors. Tasks are intercepted using invokeTask() whereas zones are intercepted using invoke()."},"zone/tasks.html":{"title":"","path":"\\zone\\tasks.html","body":"任务 So far, we have discussed how zones are created, forked and how they maintain their state across asynchronous operations. Zones are nested at runtime in the same way that execution stack frames are nested (but usually with lower depth.) There is one zone which is special in the context of nesting, and it is the top most zone. When that zone exists the execution transitions from JavaScript to native host environment. (Another way of saying it is that when the top most execution stack frame exits the control is returned to the native code.) We will call topmost zone a Task. A task is special because knowing when a task is about to exit is useful in these circumstances: Frameworks know when to render the UI. Measuring enter/leave allows knowing total script/task time. Exiting returning execution to native code allows rendering or doing I/O operations. (Knowing when it is about to happen allows for transactional behavior, ie doing things before rendering and or I/O.) Corollary to knowing when the task enters/leaves, is to know when an API call creates a Task which will/may execute in the future. Test frameworks can enforce sync tests by throwing on task creation. Test frameworks can auto detect async tests and wait for its completion by waiting until all of the scheduled tasks have been executed. Long stack traces across async boundaries, by tracking task scheduling. Tracking user perceived actions by tracking when async tasks triggered by user complete. There are three kinds of tasks of interest: MicroTask: A microtask is work which will execute as soon as possible on empty stack frame. A microtask is guaranteed to run before host environment performs rendering or I/O operations. A microtask queue must be empty before another MacroTask or EventTask runs. (i.e. Promise.then() executes in microtask) MacroTask: Macro tasks are interleaved with rendering and I/O operations of the host environment. (ie setTimeout, setInterval, etc..) Macro tasks are guaranteed to run at least once or canceled (some can run repeatedly such as setInterval). Macro tasks have an implied execution order. EventTask: Event tasks are similar to macro tasks, but unlike macro tasks they may never run. When an EventTask is run, it pre-empts whatever the next task is the macro task queue. Event tasks do not create a queue. (i.e. user click, mousemove, XHR state change.) Type Scheduled Execution MicroTask Microtasks are scheduled by promisses whenever they need to invoke the thenCallback.promise.then(thenCallback). The execution of the thenCallback runs inside a microtask. Once the microtask is scheduled it can not be canceled and it is guaranteed to run exactly once. MacroTask Macro tasks are scheduled by user code using explicit API such as setTimeout(callback), setInterval(callback), etc.. The execution of the callback runs inside a macrotask after any rendering and I/O operations has completed. Once a macro task is completed the microtask queue is drained before the execution is handed to the host environment for more rendering and I/O operations. EventTask Event tasks are scheduled using addEventListener(‘click’, eventCallback), or similar mechanisms. The execution of the event task may never happen, come at an unpredictable time, and can occur more than once, therefore there is no way to know how many times it will be executed. Why is this useful: Knowing when a task has executed and a microtask queue is empty allows frameworks to know when it is time to render the UI. Enforcing that no tasks are scheduled allows test frameworks to ensure that the test is synchronous (and hence fast and non-flaky). Tracking when all scheduled tasks are executed allows a test framework to know when an asynchronous test has completed. Tracking tasks which originated from a user action and waiting until all scheduled tasks are executed allows application to track perceived user latency of that action. Knowing when all outstanding tasks are executed allows end-to-end test frameworks to know how long to wait before asserting expectations and proceeding with the next step. (This makes the end-to-end tests faster, and reduces flakiness.) Another way to think about the need for tasks is that without task the above behaviors are not possible to implement."},"zone/tasks.html#任务":{"title":"&#x4EFB;&#x52A1;","path":"\\zone\\tasks.html#任务","body":"So far, we have discussed how zones are created, forked and how they maintain their state across asynchronous operations. Zones are nested at runtime in the same way that execution stack frames are nested (but usually with lower depth.) There is one zone which is special in the context of nesting, and it is the top most zone. When that zone exists the execution transitions from JavaScript to native host environment. (Another way of saying it is that when the top most execution stack frame exits the control is returned to the native code.) We will call topmost zone a Task. A task is special because knowing when a task is about to exit is useful in these circumstances: Frameworks know when to render the UI. Measuring enter/leave allows knowing total script/task time. Exiting returning execution to native code allows rendering or doing I/O operations. (Knowing when it is about to happen allows for transactional behavior, ie doing things before rendering and or I/O.) Corollary to knowing when the task enters/leaves, is to know when an API call creates a Task which will/may execute in the future. Test frameworks can enforce sync tests by throwing on task creation. Test frameworks can auto detect async tests and wait for its completion by waiting until all of the scheduled tasks have been executed. Long stack traces across async boundaries, by tracking task scheduling. Tracking user perceived actions by tracking when async tasks triggered by user complete. There are three kinds of tasks of interest: MicroTask: A microtask is work which will execute as soon as possible on empty stack frame. A microtask is guaranteed to run before host environment performs rendering or I/O operations. A microtask queue must be empty before another MacroTask or EventTask runs. (i.e. Promise.then() executes in microtask) MacroTask: Macro tasks are interleaved with rendering and I/O operations of the host environment. (ie setTimeout, setInterval, etc..) Macro tasks are guaranteed to run at least once or canceled (some can run repeatedly such as setInterval). Macro tasks have an implied execution order. EventTask: Event tasks are similar to macro tasks, but unlike macro tasks they may never run. When an EventTask is run, it pre-empts whatever the next task is the macro task queue. Event tasks do not create a queue. (i.e. user click, mousemove, XHR state change.) Type Scheduled Execution MicroTask Microtasks are scheduled by promisses whenever they need to invoke the thenCallback.promise.then(thenCallback). The execution of the thenCallback runs inside a microtask. Once the microtask is scheduled it can not be canceled and it is guaranteed to run exactly once. MacroTask Macro tasks are scheduled by user code using explicit API such as setTimeout(callback), setInterval(callback), etc.. The execution of the callback runs inside a macrotask after any rendering and I/O operations has completed. Once a macro task is completed the microtask queue is drained before the execution is handed to the host environment for more rendering and I/O operations. EventTask Event tasks are scheduled using addEventListener(&#x2018;click&#x2019;, eventCallback), or similar mechanisms. The execution of the event task may never happen, come at an unpredictable time, and can occur more than once, therefore there is no way to know how many times it will be executed. Why is this useful: Knowing when a task has executed and a microtask queue is empty allows frameworks to know when it is time to render the UI. Enforcing that no tasks are scheduled allows test frameworks to ensure that the test is synchronous (and hence fast and non-flaky). Tracking when all scheduled tasks are executed allows a test framework to know when an asynchronous test has completed. Tracking tasks which originated from a user action and waiting until all scheduled tasks are executed allows application to track perceived user latency of that action. Knowing when all outstanding tasks are executed allows end-to-end test frameworks to know how long to wait before asserting expectations and proceeding with the next step. (This makes the end-to-end tests faster, and reduces flakiness.) Another way to think about the need for tasks is that without task the above behaviors are not possible to implement."},"zone/tracking_async_operations.html":{"title":"","path":"\\zone\\tracking_async_operations.html","body":"跟踪异步操作 我们已经看到了如何进入和退出 zones，现在让我们看看我们如何跟踪跨异步操作的 zones 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 let rootZone = Zone.current; let zoneA = rootZone.fork( name : 'A' ); expect(Zone.current).toBe(rootZone); // setTimeout调用时的zone是rootZone expect( Error .captureStackTrace()).toEqual(rootLocation) setTimeout( function timeoutCb1 ( )  // 回调在rootZone中执行 expect(Zone.current).toEqual(rootZone); expect( Error .captureStackTrace()).toEqual(rootLocationRestored) , 0 ); zoneA.run( function run1 ( )  expect(Zone.current).toEqual(zoneA); // setTimeout调用时的zone是zoneA expect( Error .captureStackTrace()).toEqual(zoneALocation) setTimeout( function timeoutCb2 ( )  // 回调在zoneA中执行 expect(Zone.current).toEqual(zoneA); expect( Error .captureStackTrace()).toEqual(zoneALocationRestored) , 0 ); ); 1 2 3 4 5 6 7 8 9 10 11 12 rootLocation: at anonymous()[rootZone] rootLocationRestored: at timeoutCb1()[rootZone] at Zone.prototype.run()[root - root] zoneALocation: at run1()[zoneA] at Zone.prototype.run()[root - zoneA] at anonymous()[rootZone] zoneALocationRestored: at timeoutCb2()[zoneA] at Zone.prototype.run()[root - zoneA] 关键点： 当调度异步工作时，回调函数将在与调用异步API时存在的相同 zone 中执行。 这允许跨越许多异步调用来跟踪 zone。 类似示例使用promises。（Promises有点不同，因为它们在回调中处理自己的异常） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 let rootZone = Zone.current; // LibZone表示一些第三方库，开发人员无法控制。 这个zone仅用于说明目的。 // 在实践中，大多数第三方库不可能有这种细粒度zone控制。 let libZone = rootZone.fork( name : 'libZone' ); // Represents a zone of an application which the developer does // control let appZone = rootZone.fork( name : 'appZone' ); // In this Example we try to demonstrate the difference between // resolving a promise and listening to a promise. Promise // resolution could happen in a third party libZone. let promise = libZone.run( () =  return new Promise ( ( resolve, reject ) =  expect(Zone.current).toBe(libZone); // The Promise can be resolved immediately or at some later // point in time as in this example. setTimeout( () =  expect(Zone.current).toBe(libZone); // Promise is resolved in libZone, but this does not affect // the promise listeners. resolve( 'OK' ); , 500 ); ); ); appZone.run( () =  promise.then( () =  // Because the developer controls the in which zone .then() // executes, they will expect that the callback will execute // the same zone, in this case the appZone. expect(Zone.current).toBe(appZone); ); ); 关键点： 对于Promise，在 .then() 调用生效时 thenCallback 会在 zone 中被调用 。 或者，我们可以为thenCallback使用不同的 zone ，例如Promise创建 zone 或Promise解析 zone 。 这两者都不是一个好的匹配，因为一个Promise可以在一个第三方库中创建和解析，它可以有自己的 zone 。 然后将所得到的承诺传递到在其自己的 zone 中运行的应用程序中。 如果应用程序在其自己的 zone 中注册 .then() ，那么它将期望它自己的 zone 传播。 示例：调用 fetch() 返回一个promise。 内部 fetch() 可能使用自己的 zone 为自己的原因。 调用.then()的应用程序将期望应用程序 zone 。 （我们不希望 fetch() zone 泄漏到我们的应用程序中。）"},"zone/tracking_async_operations.html#跟踪异步操作":{"title":"&#x8DDF;&#x8E2A;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;","path":"\\zone\\tracking_async_operations.html#跟踪异步操作","body":"&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x770B;&#x5230;&#x4E86;&#x5982;&#x4F55;&#x8FDB;&#x5165;&#x548C;&#x9000;&#x51FA; zones&#xFF0C;&#x73B0;&#x5728;&#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x8DDF;&#x8E2A;&#x8DE8;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x7684; zones &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 let rootZone = Zone.current; let zoneA = rootZone.fork({ name : &apos;A&apos; }); expect(Zone.current).toBe(rootZone); // setTimeout&#x8C03;&#x7528;&#x65F6;&#x7684;zone&#x662F;rootZone expect( Error .captureStackTrace()).toEqual(rootLocation) setTimeout( function timeoutCb1 ( ) { // &#x56DE;&#x8C03;&#x5728;rootZone&#x4E2D;&#x6267;&#x884C; expect(Zone.current).toEqual(rootZone); expect( Error .captureStackTrace()).toEqual(rootLocationRestored) }, 0 ); zoneA.run( function run1 ( ) { expect(Zone.current).toEqual(zoneA); // setTimeout&#x8C03;&#x7528;&#x65F6;&#x7684;zone&#x662F;zoneA expect( Error .captureStackTrace()).toEqual(zoneALocation) setTimeout( function timeoutCb2 ( ) { // &#x56DE;&#x8C03;&#x5728;zoneA&#x4E2D;&#x6267;&#x884C; expect(Zone.current).toEqual(zoneA); expect( Error .captureStackTrace()).toEqual(zoneALocationRestored) }, 0 ); }); 1 2 3 4 5 6 7 8 9 10 11 12 rootLocation: at anonymous()[rootZone] rootLocationRestored: at timeoutCb1()[rootZone] at Zone.prototype.run()[root - root] zoneALocation: at run1()[zoneA] at Zone.prototype.run()[root - zoneA] at anonymous()[rootZone] zoneALocationRestored: at timeoutCb2()[zoneA] at Zone.prototype.run()[root - zoneA] &#x5173;&#x952E;&#x70B9;&#xFF1A; &#x5F53;&#x8C03;&#x5EA6;&#x5F02;&#x6B65;&#x5DE5;&#x4F5C;&#x65F6;&#xFF0C;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x5C06;&#x5728;&#x4E0E;&#x8C03;&#x7528;&#x5F02;&#x6B65;API&#x65F6;&#x5B58;&#x5728;&#x7684;&#x76F8;&#x540C; zone &#x4E2D;&#x6267;&#x884C;&#x3002; &#x8FD9;&#x5141;&#x8BB8;&#x8DE8;&#x8D8A;&#x8BB8;&#x591A;&#x5F02;&#x6B65;&#x8C03;&#x7528;&#x6765;&#x8DDF;&#x8E2A; zone&#x3002; &#x7C7B;&#x4F3C;&#x793A;&#x4F8B;&#x4F7F;&#x7528;promises&#x3002;&#xFF08;Promises&#x6709;&#x70B9;&#x4E0D;&#x540C;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x5728;&#x56DE;&#x8C03;&#x4E2D;&#x5904;&#x7406;&#x81EA;&#x5DF1;&#x7684;&#x5F02;&#x5E38;&#xFF09; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 let rootZone = Zone.current; // LibZone&#x8868;&#x793A;&#x4E00;&#x4E9B;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#xFF0C;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x65E0;&#x6CD5;&#x63A7;&#x5236;&#x3002; &#x8FD9;&#x4E2A;zone&#x4EC5;&#x7528;&#x4E8E;&#x8BF4;&#x660E;&#x76EE;&#x7684;&#x3002; // &#x5728;&#x5B9E;&#x8DF5;&#x4E2D;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x4E0D;&#x53EF;&#x80FD;&#x6709;&#x8FD9;&#x79CD;&#x7EC6;&#x7C92;&#x5EA6;zone&#x63A7;&#x5236;&#x3002; let libZone = rootZone.fork({ name : &apos;libZone&apos; }); // Represents a zone of an application which the developer does // control let appZone = rootZone.fork({ name : &apos;appZone&apos; }); // In this Example we try to demonstrate the difference between // resolving a promise and listening to a promise. Promise // resolution could happen in a third party libZone. let promise = libZone.run( () = { return new Promise ( ( resolve, reject ) = { expect(Zone.current).toBe(libZone); // The Promise can be resolved immediately or at some later // point in time as in this example. setTimeout( () = { expect(Zone.current).toBe(libZone); // Promise is resolved in libZone, but this does not affect // the promise listeners. resolve( &apos;OK&apos; ); }, 500 ); }); }); appZone.run( () = { promise.then( () = { // Because the developer controls the in which zone .then() // executes, they will expect that the callback will execute // the same zone, in this case the appZone. expect(Zone.current).toBe(appZone); }); }); &#x5173;&#x952E;&#x70B9;&#xFF1A; &#x5BF9;&#x4E8E;Promise&#xFF0C;&#x5728; .then() &#x8C03;&#x7528;&#x751F;&#x6548;&#x65F6; thenCallback &#x4F1A;&#x5728; zone &#x4E2D;&#x88AB;&#x8C03;&#x7528; &#x3002; &#x6216;&#x8005;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4E3A;thenCallback&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684; zone &#xFF0C;&#x4F8B;&#x5982;Promise&#x521B;&#x5EFA; zone &#x6216;Promise&#x89E3;&#x6790; zone &#x3002; &#x8FD9;&#x4E24;&#x8005;&#x90FD;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x597D;&#x7684;&#x5339;&#x914D;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;Promise&#x53EF;&#x4EE5;&#x5728;&#x4E00;&#x4E2A;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x4E2D;&#x521B;&#x5EFA;&#x548C;&#x89E3;&#x6790;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x6709;&#x81EA;&#x5DF1;&#x7684; zone &#x3002; &#x7136;&#x540E;&#x5C06;&#x6240;&#x5F97;&#x5230;&#x7684;&#x627F;&#x8BFA;&#x4F20;&#x9012;&#x5230;&#x5728;&#x5176;&#x81EA;&#x5DF1;&#x7684; zone &#x4E2D;&#x8FD0;&#x884C;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x3002; &#x5982;&#x679C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x5176;&#x81EA;&#x5DF1;&#x7684; zone &#x4E2D;&#x6CE8;&#x518C; .then() &#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C06;&#x671F;&#x671B;&#x5B83;&#x81EA;&#x5DF1;&#x7684; zone &#x4F20;&#x64AD;&#x3002; &#x793A;&#x4F8B;&#xFF1A;&#x8C03;&#x7528; fetch() &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;promise&#x3002; &#x5185;&#x90E8; fetch() &#x53EF;&#x80FD;&#x4F7F;&#x7528;&#x81EA;&#x5DF1;&#x7684; zone &#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x539F;&#x56E0;&#x3002; &#x8C03;&#x7528;.then()&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5C06;&#x671F;&#x671B;&#x5E94;&#x7528;&#x7A0B;&#x5E8F; zone &#x3002; &#xFF08;&#x6211;&#x4EEC;&#x4E0D;&#x5E0C;&#x671B; fetch() zone &#x6CC4;&#x6F0F;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x3002;&#xFF09;"},"zone/zone-propagation.html":{"title":"","path":"\\zone\\zone-propagation.html","body":"Zone 传播 第一章介绍如何创建 Zones，并通过异步函数传播 Entering Zones, Forking and Stack Frames 首先要了解的是如何创建 zone（forked），如何通过系统传播，以及如何形象的理解 zones 和堆栈帧。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // RootZone 环境的所以它难以与无 zone 区分。 let rootZone = Zone.current; // We create a new zone by forking an existing zone. let zoneA = rootZone.fork( name : 'zoneA' ); // Each zone has a name for debugging expect(rootZone.name).toEqual( 'root' ); expect(zoneA.name).toEqual( 'zoneA' ); // Child zone knows about its parent zone. (one way reference) expect(zoneA.parent).toBe(rootZone); function main ( )  // zones can be entered/exited using the `run` method only. zoneA.run( function fnOuter ( )  // inside the `run` method the Zone.current has been updated expect(Zone.current).toBe(zoneA); // Mental model: Each stack frame is associated with a zone expect( Error .captureStackTrace()).toEqual(outerLocation) // Zones are nested in the same way that stack frames are nested. rootZone.run( function fnInner ( )  // There is no reason why a nested stack frame must be // a child of parent stack frame zone. // This is how one can \"escape\" a zone. expect(Zone.current).toBe(rootZone); expect( Error .captureStackTrace()).toEqual(innerLocation) ); );  main(); 关键点： Assigning to Zone.current is a runtime error. The only way to change Zone.current is through Zone.prototype.run(). A given stack frame has exactly one zone associated with it. The stack frame above or below must have the same zone, unless that stack frame is Zone.prototype.run(). Child zone has a reference to parent zone (but parent does not have reference to child) having parent relationship only allows the zones to be garbage collected by simply releasing a reference to a zone. Stack Frames It is important to understand that a given stack frame can only be associated with one zone. (i.e. it is not possible for first half of a function to run in a different zone than later half of the function. It is possible that the same function will have different zone on different invocations). Zone can only be entered or left by entering or exiting Zone.prototype.run(). Zones updates stack traces to show zones for better visibility. Below are two stack snapshots from the above example which show the associated zone for each stack frame. 重要的是要理解，给定的堆栈帧只能与一个区域相关联。 （即，函数的前半部分不可能在与函数的后半部分不同的区域中运行。相同的函数可能在不同的调用上具有不同的区域）。 只能通过输入或退出Zone.prototype.run（）来输入或留下区域。 区域更新堆栈跟踪以显示区域，以提高可见性。 下面是来自上面示例的两个堆栈快照，其示出了每个堆栈帧的关联区域。 1 2 3 4 5 6 outerLocation: at fnOuter()[ZoneA]; at Zone.prototype.run()[root - zoneA] at main()[root] at anonymous()[root] 1 2 3 4 5 6 7 8 innerLocation: at fnInner()[root]; at Zone.prototype.run()[zoneA - root] at fnOuter()[zoneA]; at Zone.prototype.run()[root - zoneA] at main()[root] at anonymous()[root]"},"zone/zone-propagation.html#Zone-传播":{"title":"Zone &#x4F20;&#x64AD;","path":"\\zone\\zone-propagation.html#Zone-传播","body":"&#x7B2C;&#x4E00;&#x7AE0;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x521B;&#x5EFA; Zones&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x5F02;&#x6B65;&#x51FD;&#x6570;&#x4F20;&#x64AD;"},"zone/zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames":{"title":"Entering Zones, Forking and Stack Frames","path":"\\zone\\zone-propagation.html#Entering-Zones-Forking-and-Stack-Frames","body":"&#x9996;&#x5148;&#x8981;&#x4E86;&#x89E3;&#x7684;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA; zone&#xFF08;forked&#xFF09;&#xFF0C;&#x5982;&#x4F55;&#x901A;&#x8FC7;&#x7CFB;&#x7EDF;&#x4F20;&#x64AD;&#xFF0C;&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x5F62;&#x8C61;&#x7684;&#x7406;&#x89E3; zones &#x548C;&#x5806;&#x6808;&#x5E27;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // RootZone &#x73AF;&#x5883;&#x7684;&#x6240;&#x4EE5;&#x5B83;&#x96BE;&#x4EE5;&#x4E0E;&#x65E0; zone &#x533A;&#x5206;&#x3002; let rootZone = Zone.current; // We create a new zone by forking an existing zone. let zoneA = rootZone.fork({ name : &apos;zoneA&apos; }); // Each zone has a name for debugging expect(rootZone.name).toEqual( &apos;root&apos; ); expect(zoneA.name).toEqual( &apos;zoneA&apos; ); // Child zone knows about its parent zone. (one way reference) expect(zoneA.parent).toBe(rootZone); function main ( ) { // zones can be entered/exited using the `run` method only. zoneA.run( function fnOuter ( ) { // inside the `run` method the Zone.current has been updated expect(Zone.current).toBe(zoneA); // Mental model: Each stack frame is associated with a zone expect( Error .captureStackTrace()).toEqual(outerLocation) // Zones are nested in the same way that stack frames are nested. rootZone.run( function fnInner ( ) { // There is no reason why a nested stack frame must be // a child of parent stack frame zone. // This is how one can escape a zone. expect(Zone.current).toBe(rootZone); expect( Error .captureStackTrace()).toEqual(innerLocation) }); }); } main(); &#x5173;&#x952E;&#x70B9;&#xFF1A; Assigning to Zone.current is a runtime error. The only way to change Zone.current is through Zone.prototype.run(). A given stack frame has exactly one zone associated with it. The stack frame above or below must have the same zone, unless that stack frame is Zone.prototype.run(). Child zone has a reference to parent zone (but parent does not have reference to child) having parent relationship only allows the zones to be garbage collected by simply releasing a reference to a zone. Stack Frames It is important to understand that a given stack frame can only be associated with one zone. (i.e. it is not possible for first half of a function to run in a different zone than later half of the function. It is possible that the same function will have different zone on different invocations). Zone can only be entered or left by entering or exiting Zone.prototype.run(). Zones updates stack traces to show zones for better visibility. Below are two stack snapshots from the above example which show the associated zone for each stack frame. &#x91CD;&#x8981;&#x7684;&#x662F;&#x8981;&#x7406;&#x89E3;&#xFF0C;&#x7ED9;&#x5B9A;&#x7684;&#x5806;&#x6808;&#x5E27;&#x53EA;&#x80FD;&#x4E0E;&#x4E00;&#x4E2A;&#x533A;&#x57DF;&#x76F8;&#x5173;&#x8054;&#x3002; &#xFF08;&#x5373;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x524D;&#x534A;&#x90E8;&#x5206;&#x4E0D;&#x53EF;&#x80FD;&#x5728;&#x4E0E;&#x51FD;&#x6570;&#x7684;&#x540E;&#x534A;&#x90E8;&#x5206;&#x4E0D;&#x540C;&#x7684;&#x533A;&#x57DF;&#x4E2D;&#x8FD0;&#x884C;&#x3002;&#x76F8;&#x540C;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x80FD;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8C03;&#x7528;&#x4E0A;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x533A;&#x57DF;&#xFF09;&#x3002; &#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x8F93;&#x5165;&#x6216;&#x9000;&#x51FA;Zone.prototype.run&#xFF08;&#xFF09;&#x6765;&#x8F93;&#x5165;&#x6216;&#x7559;&#x4E0B;&#x533A;&#x57DF;&#x3002; &#x533A;&#x57DF;&#x66F4;&#x65B0;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#x4EE5;&#x663E;&#x793A;&#x533A;&#x57DF;&#xFF0C;&#x4EE5;&#x63D0;&#x9AD8;&#x53EF;&#x89C1;&#x6027;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x6765;&#x81EA;&#x4E0A;&#x9762;&#x793A;&#x4F8B;&#x7684;&#x4E24;&#x4E2A;&#x5806;&#x6808;&#x5FEB;&#x7167;&#xFF0C;&#x5176;&#x793A;&#x51FA;&#x4E86;&#x6BCF;&#x4E2A;&#x5806;&#x6808;&#x5E27;&#x7684;&#x5173;&#x8054;&#x533A;&#x57DF;&#x3002; 1 2 3 4 5 6 outerLocation: at fnOuter()[ZoneA]; at Zone.prototype.run()[root - zoneA] at main()[root] at anonymous()[root] 1 2 3 4 5 6 7 8 innerLocation: at fnInner()[root]; at Zone.prototype.run()[zoneA - root] at fnOuter()[zoneA]; at Zone.prototype.run()[root - zoneA] at main()[root] at anonymous()[root]"},"zone/zone.html":{"title":"","path":"\\zone\\zone.html","body":"Zones Zone.js 提供了一种称为区域的机制，用于封装和拦截浏览器中的异步活动（例如setTimeout，promise）。 这些区域是执行上下文，允许Angular跟踪异步活动的开始和完成，并根据需要执行任务（例如，变化检测）。 Zone.js提供了一个全局区域，可以被 fork 和扩展以进一步封装/隔离异步行为，Angular在其 NgZone 服务中通过创建一个fork并使用自己的行为扩展它。 NgZone 服务为我们提供了一些Observable和方法来确定Angular的区域的状态，并在Angular的区域内外以不同的方式执行代码。 重要的是要知道Zone.js通过 Monkey Patching（猴子补丁） 来对浏览器中的常见方法和元素进行拦截，例如 setTimeout 和 HTMLElement.prototype.onclick 。 这些拦截可能导致外部库和Angular之间的意外行为。 在某些情况下，可能优先在Angular的区域外执行第三方方法（见下文）。 在 Zone 内 NgZone公开了一组Observable，允许我们确定Angular’s区域的当前状态或稳定性。 onUnstable - 当代码已经进入并正在Angular区域内执行时通知。 onMicrotaskEmpty - 当没有更多的微任务被排队执行时通知。 Angular在内部订阅，表示它应该运行变化检测。 onStable - 在最后一个onMicroTaskEmpty运行时通知，表示所有任务已完成，并且已发生变化检测。 onError - 在发生错误时通知。 Angular在内部订阅，以将未捕获的错误发送到自己的错误处理程序，即您在控制台中看到的错误，前缀为“EXCEPTION：”。 我们订阅这些注入了 NgZone 的组件，服务等。 并订阅公共Observables。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import  Injectable, NgZone  from '@angular/core' ; @Injectable () export class OurZoneWatchingService()  constructor ( private ngZone: NgZone )  this .ngZone.onStable.subscribe( this .onZoneStable); this .ngZone.onUnstable.subscribe( this .onZoneUnstable); this .ngZone.onError.subscribe( this .onZoneError);  onZoneStable()  console .log( 'We are stable' );  onZoneUnstable()  console .log( 'We are unstable' );  onZoneError(error)  console .error( 'Error' , error instanceof Error ? error.message : error.toString());   订阅这些可以帮助您确定代码是否意外触发了不影响应用程序状态的变化检测。 变化检测 因为从Angular的区域内执行的所有异步代码都可以触发变化检测，所以当不需要变化检测时，您可能更喜欢在Angular的区域之外执行一些代码。 为了在Angular的上下文之外运行代码， NgZone 提供了一个名为 runOutsideAngular 的方法。 使用此方法，Angular的区域不会与您的代码交互，并且在全局区域变得稳定时不会接收事件。 在这个 例子 中，你将在日志中看到当代码运行在它的外部时，Angular的区域会发生什么。 你会注意到，在这两种情况下，点击按钮导致Angular区域变得不稳定，由于Zone.js补丁和监听 HTMLElement.prototype.onclick ，但是在Angular的区域之外执行的 setInterval 不会影响它的稳定性，并且不会触发变化检测 。 Debugging 通常，在异步事件链期间抛出的异常将仅包括在当前方法的堆栈跟踪中。 使用Zone.js跟踪所有的异步调用，它可以为我们提供更长，更详细的事件和调用的堆栈跟踪，让我们更容易找到导致异常的原因。 要在开发中启用长堆栈跟踪，您应该在代码中包括 long-stack-trace-zone 模块。 但最好不要包括在您的生产构建中，Angular将跳过设置更长的堆栈跟踪在生产模式（ @angular/core 中的 enableProdMode ）。 Angular will take care of forking and extending its own zone to display more meaningful stack traces. Angular将负责分叉 forking 并扩展其自己的区域以显示更有意义的堆栈跟踪。 1 2 3 4 5 if (__PRODUCTION__)  enableProdMode();  else  require(&apos;zone.js/dist/long-stack-trace-zone&apos;);  使用下面的代码，我们首先调用 startAsync ，触发一个 setTimeouts 链，导致一个未捕获的错误。 1 2 3 4 5 6 7 8 9 10 11 function startAsync()  setTimeout(stepOne, 100);  function stepOne()  setTimeout(stepTwo, 100);  function stepTwo()  throw new Error(&apos;Finished&apos;);  简单堆栈跟踪 这是一个典型的堆栈跟踪，您将在此场景中看到，没有Zone，只显示发生未处理异常的函数。 1 2 Uncaught Error: Finished(…) stepTwo @ debugging.html:28 详细的“长”堆栈跟踪 在下面的堆栈跟踪中，您可以看到在这个异步函数调用链中发生的事件的顺序，添加了“”以指出我们的函数。 你会注意到这个堆栈跟踪包括更多的信息，包括Zone自己的任务管理（例如 onScheduleTask ），以及从函数排队到执行时间的时间。 通过这个更长的堆栈跟踪可以帮助你调试Angular的特性，异步交互代码，并有助于更精确定位问题。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 debugging.html:16 Error: Finished  at stepTwo (http://localhost:3030/examples/debugging.html:28:15) at ZoneDelegate.invokeTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:265:35) at Zone.runTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:154:47) at ZoneTask.invoke (http://localhost:3030/node_modules/zone.js/dist/zone.js:335:33) at data.args.(anonymous function) (http://localhost:3030/node_modules/zone.js/dist/zone.js:970:25) ------------- Elapsed: 101 ms; At: Wed Nov 16 2016 08:23:17 GMT-0500 (EST) ------------- at Object.onScheduleTask (http://localhost:3030/node_modules/zone.js/dist/long-stack-trace-zone.js:83:18) at ZoneDelegate.scheduleTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:242:49) at Zone.scheduleMacroTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:171:39) at http://localhost:3030/node_modules/zone.js/dist/zone.js:991:33 at setTimeout (eval at createNamedFn (http://localhost:3030/node_modules/zone.js/dist/zone.js:927:17), anonymous:3:37)  at stepOne (http://localhost:3030/examples/debugging.html:23:9) at ZoneDelegate.invokeTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:265:35) at Zone.runTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:154:47) ------------- Elapsed: 105 ms; At: Wed Nov 16 2016 08:23:17 GMT-0500 (EST) ------------- at Object.onScheduleTask (http://localhost:3030/node_modules/zone.js/dist/long-stack-trace-zone.js:83:18) at ZoneDelegate.scheduleTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:242:49) at Zone.scheduleMacroTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:171:39) at http://localhost:3030/node_modules/zone.js/dist/zone.js:991:33 at setTimeout (eval at createNamedFn (http://localhost:3030/node_modules/zone.js/dist/zone.js:927:17), anonymous:3:37)  at startAsync (http://localhost:3030/examples/debugging.html:33:9) at ZoneDelegate.invoke (http://localhost:3030/node_modules/zone.js/dist/zone.js:232:26) at Zone.run (http://localhost:3030/node_modules/zone.js/dist/zone.js:114:43)"},"zone/zone.html#Zones":{"title":"Zones","path":"\\zone\\zone.html#Zones","body":"Zone.js &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x79F0;&#x4E3A;&#x533A;&#x57DF;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x7528;&#x4E8E;&#x5C01;&#x88C5;&#x548C;&#x62E6;&#x622A;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x7684;&#x5F02;&#x6B65;&#x6D3B;&#x52A8;&#xFF08;&#x4F8B;&#x5982;setTimeout&#xFF0C;promise&#xFF09;&#x3002; &#x8FD9;&#x4E9B;&#x533A;&#x57DF;&#x662F;&#x6267;&#x884C;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x5141;&#x8BB8;Angular&#x8DDF;&#x8E2A;&#x5F02;&#x6B65;&#x6D3B;&#x52A8;&#x7684;&#x5F00;&#x59CB;&#x548C;&#x5B8C;&#x6210;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x9700;&#x8981;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#xFF09;&#x3002; Zone.js&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x533A;&#x57DF;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB; fork &#x548C;&#x6269;&#x5C55;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x5C01;&#x88C5;/&#x9694;&#x79BB;&#x5F02;&#x6B65;&#x884C;&#x4E3A;&#xFF0C;Angular&#x5728;&#x5176; NgZone &#x670D;&#x52A1;&#x4E2D;&#x901A;&#x8FC7;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;fork&#x5E76;&#x4F7F;&#x7528;&#x81EA;&#x5DF1;&#x7684;&#x884C;&#x4E3A;&#x6269;&#x5C55;&#x5B83;&#x3002; NgZone &#x670D;&#x52A1;&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;Observable&#x548C;&#x65B9;&#x6CD5;&#x6765;&#x786E;&#x5B9A;Angular&#x7684;&#x533A;&#x57DF;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x5728;Angular&#x7684;&#x533A;&#x57DF;&#x5185;&#x5916;&#x4EE5;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x6267;&#x884C;&#x4EE3;&#x7801;&#x3002; &#x91CD;&#x8981;&#x7684;&#x662F;&#x8981;&#x77E5;&#x9053;Zone.js&#x901A;&#x8FC7; Monkey Patching&#xFF08;&#x7334;&#x5B50;&#x8865;&#x4E01;&#xFF09; &#x6765;&#x5BF9;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x7684;&#x5E38;&#x89C1;&#x65B9;&#x6CD5;&#x548C;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x62E6;&#x622A;&#xFF0C;&#x4F8B;&#x5982; setTimeout &#x548C; HTMLElement.prototype.onclick &#x3002; &#x8FD9;&#x4E9B;&#x62E6;&#x622A;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x5916;&#x90E8;&#x5E93;&#x548C;Angular&#x4E4B;&#x95F4;&#x7684;&#x610F;&#x5916;&#x884C;&#x4E3A;&#x3002; &#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x80FD;&#x4F18;&#x5148;&#x5728;Angular&#x7684;&#x533A;&#x57DF;&#x5916;&#x6267;&#x884C;&#x7B2C;&#x4E09;&#x65B9;&#x65B9;&#x6CD5;&#xFF08;&#x89C1;&#x4E0B;&#x6587;&#xFF09;&#x3002;"},"zone/zone.html#在-Zone-内":{"title":"&#x5728; Zone &#x5185;","path":"\\zone\\zone.html#在-Zone-内","body":"NgZone&#x516C;&#x5F00;&#x4E86;&#x4E00;&#x7EC4;Observable&#xFF0C;&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x786E;&#x5B9A;Angular&#x2019;s&#x533A;&#x57DF;&#x7684;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x6216;&#x7A33;&#x5B9A;&#x6027;&#x3002; onUnstable - &#x5F53;&#x4EE3;&#x7801;&#x5DF2;&#x7ECF;&#x8FDB;&#x5165;&#x5E76;&#x6B63;&#x5728;Angular&#x533A;&#x57DF;&#x5185;&#x6267;&#x884C;&#x65F6;&#x901A;&#x77E5;&#x3002; onMicrotaskEmpty - &#x5F53;&#x6CA1;&#x6709;&#x66F4;&#x591A;&#x7684;&#x5FAE;&#x4EFB;&#x52A1;&#x88AB;&#x6392;&#x961F;&#x6267;&#x884C;&#x65F6;&#x901A;&#x77E5;&#x3002; Angular&#x5728;&#x5185;&#x90E8;&#x8BA2;&#x9605;&#xFF0C;&#x8868;&#x793A;&#x5B83;&#x5E94;&#x8BE5;&#x8FD0;&#x884C;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x3002; onStable - &#x5728;&#x6700;&#x540E;&#x4E00;&#x4E2A;onMicroTaskEmpty&#x8FD0;&#x884C;&#x65F6;&#x901A;&#x77E5;&#xFF0C;&#x8868;&#x793A;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x5DF2;&#x5B8C;&#x6210;&#xFF0C;&#x5E76;&#x4E14;&#x5DF2;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x3002; onError - &#x5728;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x65F6;&#x901A;&#x77E5;&#x3002; Angular&#x5728;&#x5185;&#x90E8;&#x8BA2;&#x9605;&#xFF0C;&#x4EE5;&#x5C06;&#x672A;&#x6355;&#x83B7;&#x7684;&#x9519;&#x8BEF;&#x53D1;&#x9001;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x9519;&#x8BEF;&#x5904;&#x7406;&#x7A0B;&#x5E8F;&#xFF0C;&#x5373;&#x60A8;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x4E2D;&#x770B;&#x5230;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x524D;&#x7F00;&#x4E3A;&#x201C;EXCEPTION&#xFF1A;&#x201D;&#x3002; &#x6211;&#x4EEC;&#x8BA2;&#x9605;&#x8FD9;&#x4E9B;&#x6CE8;&#x5165;&#x4E86; NgZone &#x7684;&#x7EC4;&#x4EF6;&#xFF0C;&#x670D;&#x52A1;&#x7B49;&#x3002; &#x5E76;&#x8BA2;&#x9605;&#x516C;&#x5171;Observables&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import { Injectable, NgZone } from &apos;@angular/core&apos; ; @Injectable () export class OurZoneWatchingService() { constructor ( private ngZone: NgZone ) { this .ngZone.onStable.subscribe( this .onZoneStable); this .ngZone.onUnstable.subscribe( this .onZoneUnstable); this .ngZone.onError.subscribe( this .onZoneError); } onZoneStable() { console .log( &apos;We are stable&apos; ); } onZoneUnstable() { console .log( &apos;We are unstable&apos; ); } onZoneError(error) { console .error( &apos;Error&apos; , error instanceof Error ? error.message : error.toString()); } } &#x8BA2;&#x9605;&#x8FD9;&#x4E9B;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x60A8;&#x786E;&#x5B9A;&#x4EE3;&#x7801;&#x662F;&#x5426;&#x610F;&#x5916;&#x89E6;&#x53D1;&#x4E86;&#x4E0D;&#x5F71;&#x54CD;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x7684;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x3002;"},"zone/zone.html#变化检测":{"title":"&#x53D8;&#x5316;&#x68C0;&#x6D4B;","path":"\\zone\\zone.html#变化检测","body":"&#x56E0;&#x4E3A;&#x4ECE;Angular&#x7684;&#x533A;&#x57DF;&#x5185;&#x6267;&#x884C;&#x7684;&#x6240;&#x6709;&#x5F02;&#x6B65;&#x4EE3;&#x7801;&#x90FD;&#x53EF;&#x4EE5;&#x89E6;&#x53D1;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x4E0D;&#x9700;&#x8981;&#x53D8;&#x5316;&#x68C0;&#x6D4B;&#x65F6;&#xFF0C;&#x60A8;&#x53EF;&#x80FD;&#x66F4;&#x559C;&#x6B22;&#x5728;Angular&#x7684;&#x533A;&#x57DF;&#x4E4B;&#x5916;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x4EE3;&#x7801;&#x3002; &#x4E3A;&#x4E86;&#x5728;Angular&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E4B;&#x5916;&#x8FD0;&#x884C;&#x4EE3;&#x7801;&#xFF0C; NgZone &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; runOutsideAngular &#x7684;&#x65B9;&#x6CD5;&#x3002; &#x4F7F;&#x7528;&#x6B64;&#x65B9;&#x6CD5;&#xFF0C;Angular&#x7684;&#x533A;&#x57DF;&#x4E0D;&#x4F1A;&#x4E0E;&#x60A8;&#x7684;&#x4EE3;&#x7801;&#x4EA4;&#x4E92;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x5168;&#x5C40;&#x533A;&#x57DF;&#x53D8;&#x5F97;&#x7A33;&#x5B9A;&#x65F6;&#x4E0D;&#x4F1A;&#x63A5;&#x6536;&#x4E8B;&#x4EF6;&#x3002; &#x5728;&#x8FD9;&#x4E2A; &#x4F8B;&#x5B50; &#x4E2D;&#xFF0C;&#x4F60;&#x5C06;&#x5728;&#x65E5;&#x5FD7;&#x4E2D;&#x770B;&#x5230;&#x5F53;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x5728;&#x5B83;&#x7684;&#x5916;&#x90E8;&#x65F6;&#xFF0C;Angular&#x7684;&#x533A;&#x57DF;&#x4F1A;&#x53D1;&#x751F;&#x4EC0;&#x4E48;&#x3002; &#x4F60;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#xFF0C;&#x5728;&#x8FD9;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x5BFC;&#x81F4;Angular&#x533A;&#x57DF;&#x53D8;&#x5F97;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x7531;&#x4E8E;Zone.js&#x8865;&#x4E01;&#x548C;&#x76D1;&#x542C; HTMLElement.prototype.onclick &#xFF0C;&#x4F46;&#x662F;&#x5728;Angular&#x7684;&#x533A;&#x57DF;&#x4E4B;&#x5916;&#x6267;&#x884C;&#x7684; setInterval &#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5B83;&#x7684;&#x7A33;&#x5B9A;&#x6027;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x4F1A;&#x89E6;&#x53D1;&#x53D8;&#x5316;&#x68C0;&#x6D4B; &#x3002;"},"zone/zone.html#Debugging":{"title":"Debugging","path":"\\zone\\zone.html#Debugging","body":"&#x901A;&#x5E38;&#xFF0C;&#x5728;&#x5F02;&#x6B65;&#x4E8B;&#x4EF6;&#x94FE;&#x671F;&#x95F4;&#x629B;&#x51FA;&#x7684;&#x5F02;&#x5E38;&#x5C06;&#x4EC5;&#x5305;&#x62EC;&#x5728;&#x5F53;&#x524D;&#x65B9;&#x6CD5;&#x7684;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#x4E2D;&#x3002; &#x4F7F;&#x7528;Zone.js&#x8DDF;&#x8E2A;&#x6240;&#x6709;&#x7684;&#x5F02;&#x6B65;&#x8C03;&#x7528;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x66F4;&#x957F;&#xFF0C;&#x66F4;&#x8BE6;&#x7EC6;&#x7684;&#x4E8B;&#x4EF6;&#x548C;&#x8C03;&#x7528;&#x7684;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x66F4;&#x5BB9;&#x6613;&#x627E;&#x5230;&#x5BFC;&#x81F4;&#x5F02;&#x5E38;&#x7684;&#x539F;&#x56E0;&#x3002; &#x8981;&#x5728;&#x5F00;&#x53D1;&#x4E2D;&#x542F;&#x7528;&#x957F;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#xFF0C;&#x60A8;&#x5E94;&#x8BE5;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x5305;&#x62EC; long-stack-trace-zone &#x6A21;&#x5757;&#x3002; &#x4F46;&#x6700;&#x597D;&#x4E0D;&#x8981;&#x5305;&#x62EC;&#x5728;&#x60A8;&#x7684;&#x751F;&#x4EA7;&#x6784;&#x5EFA;&#x4E2D;&#xFF0C;Angular&#x5C06;&#x8DF3;&#x8FC7;&#x8BBE;&#x7F6E;&#x66F4;&#x957F;&#x7684;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#x5728;&#x751F;&#x4EA7;&#x6A21;&#x5F0F;&#xFF08; @angular/core &#x4E2D;&#x7684; enableProdMode &#xFF09;&#x3002; Angular will take care of forking and extending its own zone to display more meaningful stack traces. Angular&#x5C06;&#x8D1F;&#x8D23;&#x5206;&#x53C9; forking &#x5E76;&#x6269;&#x5C55;&#x5176;&#x81EA;&#x5DF1;&#x7684;&#x533A;&#x57DF;&#x4EE5;&#x663E;&#x793A;&#x66F4;&#x6709;&#x610F;&#x4E49;&#x7684;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#x3002; 1 2 3 4 5 if (__PRODUCTION__) { enableProdMode(); } else { require(&apos;zone.js/dist/long-stack-trace-zone&apos;); } &#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x8C03;&#x7528; startAsync &#xFF0C;&#x89E6;&#x53D1;&#x4E00;&#x4E2A; setTimeouts &#x94FE;&#xFF0C;&#x5BFC;&#x81F4;&#x4E00;&#x4E2A;&#x672A;&#x6355;&#x83B7;&#x7684;&#x9519;&#x8BEF;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 function startAsync() { setTimeout(stepOne, 100); } function stepOne() { setTimeout(stepTwo, 100); } function stepTwo() { throw new Error(&apos;Finished&apos;); } &#x7B80;&#x5355;&#x5806;&#x6808;&#x8DDF;&#x8E2A; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#xFF0C;&#x60A8;&#x5C06;&#x5728;&#x6B64;&#x573A;&#x666F;&#x4E2D;&#x770B;&#x5230;&#xFF0C;&#x6CA1;&#x6709;Zone&#xFF0C;&#x53EA;&#x663E;&#x793A;&#x53D1;&#x751F;&#x672A;&#x5904;&#x7406;&#x5F02;&#x5E38;&#x7684;&#x51FD;&#x6570;&#x3002; 1 2 Uncaught Error: Finished(&#x2026;) stepTwo @ debugging.html:28 &#x8BE6;&#x7EC6;&#x7684;&#x201C;&#x957F;&#x201D;&#x5806;&#x6808;&#x8DDF;&#x8E2A; &#x5728;&#x4E0B;&#x9762;&#x7684;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#x4E2D;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5728;&#x8FD9;&#x4E2A;&#x5F02;&#x6B65;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x94FE;&#x4E2D;&#x53D1;&#x751F;&#x7684;&#x4E8B;&#x4EF6;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x6DFB;&#x52A0;&#x4E86;&#x201C;&#x201D;&#x4EE5;&#x6307;&#x51FA;&#x6211;&#x4EEC;&#x7684;&#x51FD;&#x6570;&#x3002; &#x4F60;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#x8FD9;&#x4E2A;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#x5305;&#x62EC;&#x66F4;&#x591A;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5305;&#x62EC;Zone&#x81EA;&#x5DF1;&#x7684;&#x4EFB;&#x52A1;&#x7BA1;&#x7406;&#xFF08;&#x4F8B;&#x5982; onScheduleTask &#xFF09;&#xFF0C;&#x4EE5;&#x53CA;&#x4ECE;&#x51FD;&#x6570;&#x6392;&#x961F;&#x5230;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x7684;&#x65F6;&#x95F4;&#x3002; &#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x66F4;&#x957F;&#x7684;&#x5806;&#x6808;&#x8DDF;&#x8E2A;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x4F60;&#x8C03;&#x8BD5;Angular&#x7684;&#x7279;&#x6027;&#xFF0C;&#x5F02;&#x6B65;&#x4EA4;&#x4E92;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x6709;&#x52A9;&#x4E8E;&#x66F4;&#x7CBE;&#x786E;&#x5B9A;&#x4F4D;&#x95EE;&#x9898;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 debugging.html:16 Error: Finished  at stepTwo (http://localhost:3030/examples/debugging.html:28:15) at ZoneDelegate.invokeTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:265:35) at Zone.runTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:154:47) at ZoneTask.invoke (http://localhost:3030/node_modules/zone.js/dist/zone.js:335:33) at data.args.(anonymous function) (http://localhost:3030/node_modules/zone.js/dist/zone.js:970:25) ------------- Elapsed: 101 ms; At: Wed Nov 16 2016 08:23:17 GMT-0500 (EST) ------------- at Object.onScheduleTask (http://localhost:3030/node_modules/zone.js/dist/long-stack-trace-zone.js:83:18) at ZoneDelegate.scheduleTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:242:49) at Zone.scheduleMacroTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:171:39) at http://localhost:3030/node_modules/zone.js/dist/zone.js:991:33 at setTimeout (eval at createNamedFn (http://localhost:3030/node_modules/zone.js/dist/zone.js:927:17), anonymous:3:37)  at stepOne (http://localhost:3030/examples/debugging.html:23:9) at ZoneDelegate.invokeTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:265:35) at Zone.runTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:154:47) ------------- Elapsed: 105 ms; At: Wed Nov 16 2016 08:23:17 GMT-0500 (EST) ------------- at Object.onScheduleTask (http://localhost:3030/node_modules/zone.js/dist/long-stack-trace-zone.js:83:18) at ZoneDelegate.scheduleTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:242:49) at Zone.scheduleMacroTask (http://localhost:3030/node_modules/zone.js/dist/zone.js:171:39) at http://localhost:3030/node_modules/zone.js/dist/zone.js:991:33 at setTimeout (eval at createNamedFn (http://localhost:3030/node_modules/zone.js/dist/zone.js:927:17), anonymous:3:37)  at startAsync (http://localhost:3030/examples/debugging.html:33:9) at ZoneDelegate.invoke (http://localhost:3030/node_modules/zone.js/dist/zone.js:232:26) at Zone.run (http://localhost:3030/node_modules/zone.js/dist/zone.js:114:43)"},"zone/zoneDelegate.html":{"title":"","path":"\\zone\\zoneDelegate.html","body":"The case for ZoneDelegate 拦截 zone 事件是棘手的，因为 zone 是在运行时生成的，并且标准方法（如子类化和猴子补丁）只有在设计时已知父 zone时才起作用。 为了更好地演示这个问题，我们假设想在 run() 方法的前后进行拦截，这样我们可以测量执行时间和在控制台记录 zone。 这是一个破例来说明这个问题。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 // 在设计时，不可能知道哪个 zone 将是父 zone。 因此，父 zone 必须传递到构造函数中。 class TimingZone extends Zone  constructor (parent)  super (parent, 'timingZone' ); // We would like to intercept the run, and so we overwrite it. run()  // Capture the start time var start = performance.now(); // It may appear that calling super.run() is the right thing // to do at this point, but the super.run(), internally must // invoke parent.run. So super.run is just a red herring, // and we should rather understand what are the consequences // of parent.run(). See next example. super .run(...arguments); // Capture the end time var end = performance.now(); // Print the duration, and the current zone. console .log( this .name, 'Duration:' , end - start);   class LogZone extends Zone  constructor (parent)  super (parent, 'logZone' ); run()  // log the zone name and 'enter' console .log( this .name, 'enter' ); // The issue with calling parent.run, is that it will cause the // current zone to be changed to the parent zone. // What we need is a way of calling the parent run hooks, without // changing the current zone. this .parent.run.apply( this , arguments ); // log the zone name and 'leave' console .log( this .name, 'leave' );   让我们使用上述 zone 创建一个简单的例子。 1 2 3 4 5 6 7 // Compose several zones. let rootZone = Zone.current; let timingZone = new TimingZone(rootZone); let logZone = new LogZone(timingZone); logZone.run( () =  console .log(Zone.current.name, 'Hello World!' ); ); Here is what one would expect from the above example. Specifically the expectation is that the current zone inside the run block will be that of the logZone. 这里是上面例子的输出 1 2 3 4 logZone enter logZone Hello World; logZone Duration: 0.123 logZone leave 为什么标准工具不起作用 拦截调用（super或父级）的标准方式不起作用的原因是父 zone 在设计时是未知的。 如果父 zone 在设计时间是已知的，那么我们可以这样写： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class TimingZone extends RootZone  run()  … super .run(...arguments); …   class LogZone extends TimingZone  run()  … super .run(...arguments); …   如果我们可以在设计时决定 zone 的层次结构， super.run() 的调用将按预期工作。 然而，因为父进程在运行时之前是未知的，所以我们需要将更改 zone 的行为与调用父钩子的行为分开。 为了解决这个问题，钩子被指定为fork() 的一部分，钩子接收一个父ZoneDelagate（只处理钩子）而不是一个父 zone （这将导致一个 zone 改变）。 Zone ZoneDelegate 描述 run invoke 当执行zone run()块时，调用invoke() ZoneDelegate钩子。 这允许在不改变当前 zone 的情况下委派钩子。 wrap intercept 当zone wrap() 块被执行时，intercept() ZoneDelegate钩子被调用。 这允许委托钩子而不会重新包装回调。"},"zone/zoneDelegate.html#The-case-for-ZoneDelegate":{"title":"The case for ZoneDelegate","path":"\\zone\\zoneDelegate.html#The-case-for-ZoneDelegate","body":"&#x62E6;&#x622A; zone &#x4E8B;&#x4EF6;&#x662F;&#x68D8;&#x624B;&#x7684;&#xFF0C;&#x56E0;&#x4E3A; zone &#x662F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x751F;&#x6210;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x6807;&#x51C6;&#x65B9;&#x6CD5;&#xFF08;&#x5982;&#x5B50;&#x7C7B;&#x5316;&#x548C;&#x7334;&#x5B50;&#x8865;&#x4E01;&#xFF09;&#x53EA;&#x6709;&#x5728;&#x8BBE;&#x8BA1;&#x65F6;&#x5DF2;&#x77E5;&#x7236; zone&#x65F6;&#x624D;&#x8D77;&#x4F5C;&#x7528;&#x3002; &#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x5730;&#x6F14;&#x793A;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x60F3;&#x5728; run() &#x65B9;&#x6CD5;&#x7684;&#x524D;&#x540E;&#x8FDB;&#x884C;&#x62E6;&#x622A;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6D4B;&#x91CF;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x548C;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x8BB0;&#x5F55; zone&#x3002; &#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7834;&#x4F8B;&#x6765;&#x8BF4;&#x660E;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 // &#x5728;&#x8BBE;&#x8BA1;&#x65F6;&#xFF0C;&#x4E0D;&#x53EF;&#x80FD;&#x77E5;&#x9053;&#x54EA;&#x4E2A; zone &#x5C06;&#x662F;&#x7236; zone&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x7236; zone &#x5FC5;&#x987B;&#x4F20;&#x9012;&#x5230;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x3002; class TimingZone extends Zone { constructor (parent) { super (parent, &apos;timingZone&apos; );} // We would like to intercept the run, and so we overwrite it. run() { // Capture the start time var start = performance.now(); // It may appear that calling super.run() is the right thing // to do at this point, but the super.run(), internally must // invoke parent.run. So super.run is just a red herring, // and we should rather understand what are the consequences // of parent.run(). See next example. super .run(...arguments); // Capture the end time var end = performance.now(); // Print the duration, and the current zone. console .log( this .name, &apos;Duration:&apos; , end - start); } } class LogZone extends Zone { constructor (parent) { super (parent, &apos;logZone&apos; );} run() { // log the zone name and &apos;enter&apos; console .log( this .name, &apos;enter&apos; ); // The issue with calling parent.run, is that it will cause the // current zone to be changed to the parent zone. // What we need is a way of calling the parent run hooks, without // changing the current zone. this .parent.run.apply( this , arguments ); // log the zone name and &apos;leave&apos; console .log( this .name, &apos;leave&apos; ); } } &#x8BA9;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E0A;&#x8FF0; zone &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x4F8B;&#x5B50;&#x3002; 1 2 3 4 5 6 7 // Compose several zones. let rootZone = Zone.current; let timingZone = new TimingZone(rootZone); let logZone = new LogZone(timingZone); logZone.run( () = { console .log(Zone.current.name, &apos;Hello World!&apos; ); }); Here is what one would expect from the above example. Specifically the expectation is that the current zone inside the run block will be that of the logZone. &#x8FD9;&#x91CC;&#x662F;&#x4E0A;&#x9762;&#x4F8B;&#x5B50;&#x7684;&#x8F93;&#x51FA; 1 2 3 4 logZone enter logZone Hello World; logZone Duration: 0.123 logZone leave"},"zone/zoneDelegate.html#为什么标准工具不起作用":{"title":"&#x4E3A;&#x4EC0;&#x4E48;&#x6807;&#x51C6;&#x5DE5;&#x5177;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;","path":"\\zone\\zoneDelegate.html#为什么标准工具不起作用","body":"&#x62E6;&#x622A;&#x8C03;&#x7528;&#xFF08;super&#x6216;&#x7236;&#x7EA7;&#xFF09;&#x7684;&#x6807;&#x51C6;&#x65B9;&#x5F0F;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;&#x7684;&#x539F;&#x56E0;&#x662F;&#x7236; zone &#x5728;&#x8BBE;&#x8BA1;&#x65F6;&#x662F;&#x672A;&#x77E5;&#x7684;&#x3002; &#x5982;&#x679C;&#x7236; zone &#x5728;&#x8BBE;&#x8BA1;&#x65F6;&#x95F4;&#x662F;&#x5DF2;&#x77E5;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x5199;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class TimingZone extends RootZone { run() { &#x2026; super .run(...arguments); &#x2026; } } class LogZone extends TimingZone { run() { &#x2026; super .run(...arguments); &#x2026; } } &#x5982;&#x679C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x8BBE;&#x8BA1;&#x65F6;&#x51B3;&#x5B9A; zone &#x7684;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#xFF0C; super.run() &#x7684;&#x8C03;&#x7528;&#x5C06;&#x6309;&#x9884;&#x671F;&#x5DE5;&#x4F5C;&#x3002; &#x7136;&#x800C;&#xFF0C;&#x56E0;&#x4E3A;&#x7236;&#x8FDB;&#x7A0B;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x4E4B;&#x524D;&#x662F;&#x672A;&#x77E5;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C06;&#x66F4;&#x6539; zone &#x7684;&#x884C;&#x4E3A;&#x4E0E;&#x8C03;&#x7528;&#x7236;&#x94A9;&#x5B50;&#x7684;&#x884C;&#x4E3A;&#x5206;&#x5F00;&#x3002; &#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x94A9;&#x5B50;&#x88AB;&#x6307;&#x5B9A;&#x4E3A;fork() &#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x94A9;&#x5B50;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x7236;ZoneDelagate&#xFF08;&#x53EA;&#x5904;&#x7406;&#x94A9;&#x5B50;&#xFF09;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x7236; zone &#xFF08;&#x8FD9;&#x5C06;&#x5BFC;&#x81F4;&#x4E00;&#x4E2A; zone &#x6539;&#x53D8;&#xFF09;&#x3002; Zone ZoneDelegate &#x63CF;&#x8FF0; run invoke &#x5F53;&#x6267;&#x884C;zone run()&#x5757;&#x65F6;&#xFF0C;&#x8C03;&#x7528;invoke() ZoneDelegate&#x94A9;&#x5B50;&#x3002; &#x8FD9;&#x5141;&#x8BB8;&#x5728;&#x4E0D;&#x6539;&#x53D8;&#x5F53;&#x524D; zone &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x59D4;&#x6D3E;&#x94A9;&#x5B50;&#x3002; wrap intercept &#x5F53;zone wrap() &#x5757;&#x88AB;&#x6267;&#x884C;&#x65F6;&#xFF0C;intercept() ZoneDelegate&#x94A9;&#x5B50;&#x88AB;&#x8C03;&#x7528;&#x3002; &#x8FD9;&#x5141;&#x8BB8;&#x59D4;&#x6258;&#x94A9;&#x5B50;&#x800C;&#x4E0D;&#x4F1A;&#x91CD;&#x65B0;&#x5305;&#x88C5;&#x56DE;&#x8C03;&#x3002;"},"zone/zone_primer.html":{"title":"","path":"\\zone\\zone_primer.html","body":"概述 What? JavaScript VM嵌入在主机环境中，例如浏览器或节点，负责通过任务调度JavaScript执行。 Zone 是跨越异步任务持续的执行上下文，并且允许 zone 的创建者观察和控制 zone 内的代码的执行。 zone 负责： 在异步任务执行中保持zone。 公开主机环境的任务调度和处理的可见性（范围限制到当前 zone） Why? Zones 可用于调试，测试，分析 Zones 可以用来知道框架什么时候 render Zones 可用于跟踪跨异步操作持续的资源，并可自动释放/清除资源 Zones 是可组合的"},"zone/zone_primer.html#概述":{"title":"&#x6982;&#x8FF0;","path":"\\zone\\zone_primer.html#概述","body":""},"zone/zone_primer.html#What":{"title":"What?","path":"\\zone\\zone_primer.html#What","body":"JavaScript VM&#x5D4C;&#x5165;&#x5728;&#x4E3B;&#x673A;&#x73AF;&#x5883;&#x4E2D;&#xFF0C;&#x4F8B;&#x5982;&#x6D4F;&#x89C8;&#x5668;&#x6216;&#x8282;&#x70B9;&#xFF0C;&#x8D1F;&#x8D23;&#x901A;&#x8FC7;&#x4EFB;&#x52A1;&#x8C03;&#x5EA6;JavaScript&#x6267;&#x884C;&#x3002; Zone &#x662F;&#x8DE8;&#x8D8A;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x6301;&#x7EED;&#x7684;&#x6267;&#x884C;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x5E76;&#x4E14;&#x5141;&#x8BB8; zone &#x7684;&#x521B;&#x5EFA;&#x8005;&#x89C2;&#x5BDF;&#x548C;&#x63A7;&#x5236; zone &#x5185;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x6267;&#x884C;&#x3002; zone &#x8D1F;&#x8D23;&#xFF1A; &#x5728;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x4E2D;&#x4FDD;&#x6301;zone&#x3002; &#x516C;&#x5F00;&#x4E3B;&#x673A;&#x73AF;&#x5883;&#x7684;&#x4EFB;&#x52A1;&#x8C03;&#x5EA6;&#x548C;&#x5904;&#x7406;&#x7684;&#x53EF;&#x89C1;&#x6027;&#xFF08;&#x8303;&#x56F4;&#x9650;&#x5236;&#x5230;&#x5F53;&#x524D; zone&#xFF09;"},"zone/zone_primer.html#Why":{"title":"Why?","path":"\\zone\\zone_primer.html#Why","body":"Zones &#x53EF;&#x7528;&#x4E8E;&#x8C03;&#x8BD5;&#xFF0C;&#x6D4B;&#x8BD5;&#xFF0C;&#x5206;&#x6790; Zones &#x53EF;&#x4EE5;&#x7528;&#x6765;&#x77E5;&#x9053;&#x6846;&#x67B6;&#x4EC0;&#x4E48;&#x65F6;&#x5019; render Zones &#x53EF;&#x7528;&#x4E8E;&#x8DDF;&#x8E2A;&#x8DE8;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x6301;&#x7EED;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x5E76;&#x53EF;&#x81EA;&#x52A8;&#x91CA;&#x653E;/&#x6E05;&#x9664;&#x8D44;&#x6E90; Zones &#x662F;&#x53EF;&#x7EC4;&#x5408;&#x7684;"},"Change-detection/how_change_detection_works.html":{"title":"","path":"\\Change-detection\\how_change_detection_works.html","body":"#变化检测如何工作 让我们用一个简单的例子看看变化检测如何工作。 我们将创建一个简单的 MovieApp 来显示一个电影的信息。 这个应用程序将只包含两个组件： MovieComponent 显示有关电影的信息和 MainComponent ，它使用按钮来保存对电影的引用以执行一些动作。 我们的 AppComponent 组件将有三个属性：应用程序的 slogan ，电影的 title （标题）和 actor （主角）。 最后两个属性将被传递到模板中引用的 MovieComponent 元素。 app/app.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import Component from '@angular/core' ; import MovieComponent from './movie.component' ; import Actor from './actor.model' ; @Component ( selector: 'main' , template: ` h1MovieApp/h1 p slogan /p button type=\"button\" (click)=\"changeActorProperties()\"Change Actor Properties/button button type=\"button\" (click)=\"changeActorObject()\"Change Actor Object/button movie [title]=\"title\" [actor]=\"actor\"/movie` ) export class MainComponent  slogan: string = 'Just movie information' ; title: string = 'Terminator 1' ; actor: Actor = new Actor( 'Arnold' , 'Schwarzenegger' ); changeActorProperties()  this .actor.firstName = 'Nicholas' ; this .actor.lastName = 'Cage' ;  changeActorObject()  this .actor = new Actor( 'Bruce' , 'Willis' );   在上面的代码片段中，我们可以看到我们的组件定义了两个触发不同方法的按钮。 changeActorProperties 将通过直接更改 actor 对象的属性来更新电影的主角。 相反，方法 changeActorObject 将通过创建一个完全新的 Actor 类实例来改变 actor 的信息。 Actor模型非常简单，它只是一个定义了 actor 的 firstName 和 lastName 的类。 app/actor.model.ts 1 2 3 4 5 export class Actor  constructor ( public firstName: string , public lastName: string )   最后， MovieComponent 显示了 MainComponent 在其模板中提供的信息。 app/movie.component.ts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import Component, Input from '@angular/core' ; import Actor from './actor.model' ; @Component ( selector: 'movie' , styles: [ 'div border: 1px solid black' ], template: ` div h3 title /h3 p labelActor:/label spanactor.firstName actor.lastName/span /p /div` ) export class MovieComponent  @Input () title: string ; @Input () actor: Actor;  View Example"},"license.html":{"title":"","path":"\\license.html","body":"License Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) This is a human-readable summary of (and not a substitute for) the license . You are free to: Share — copy and redistribute the material in any medium or format Adapt — remix, transform and build upon the material for any purpose, even commercially. The licensor cannot revoke these freedoms as long as you follow the license terms. Under the following terms: Attribution — You must give appropriate credit, provide a link to the license , and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. ShareAlike — If you remix, transform or build upon the material, you must distribute your contributions under the same license as the original. No additional restrictions — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits."},"license.html#License":{"title":"License","path":"\\license.html#License","body":"Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) This is a human-readable summary of (and not a substitute for) the license ."},"license.html#You-are-free-to":{"title":"You are free to:","path":"\\license.html#You-are-free-to","body":"Share &#x2014; copy and redistribute the material in any medium or format Adapt &#x2014; remix, transform and build upon the material for any purpose, even commercially. The licensor cannot revoke these freedoms as long as you follow the license terms."},"license.html#Under-the-following-terms":{"title":"Under the following terms:","path":"\\license.html#Under-the-following-terms","body":"Attribution &#x2014; You must give appropriate credit, provide a link to the license , and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. ShareAlike &#x2014; If you remix, transform or build upon the material, you must distribute your contributions under the same license as the original. No additional restrictions &#x2014; You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits."},"index.html":{"title":"hexo-theme-doc-seed","path":"\\index.html","body":"hexo-theme-doc-seed This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme. Getting Started To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running. More Informations For more informations please visit the user documentation website ."},"index.html#hexo-theme-doc-seed":{"title":"hexo-theme-doc-seed","path":"\\index.html#hexo-theme-doc-seed","body":"This project is a skeleton for a documentation website using Hexo and hexo-theme-doc . You can use it to quickly bootstrap your documentation website. The seed contains the required structure and files to use Hexo and the theme, plus dummy content to show the usage of the main features of the theme."},"index.html#Getting-Started":{"title":"Getting Started","path":"\\index.html#Getting-Started","body":"To get started have a look first to the requirements , then install hexo-cli with: 1 $ npm install -g hexo-cli Now just clone hexo-theme-doc-seed repository: 1 $ git clone https://github.com/zalando-incubator/hexo-theme-doc-seed.git directory Go into the resulting directory and install dependencies: 1 $ npm install Start the preview server locally with: 1 hexo s If you open your browser at http://localhost:4000 you should see the documentation website up and running."},"index.html#More-Informations":{"title":"More Informations","path":"\\index.html#More-Informations","body":"For more informations please visit the user documentation website ."},"README.html":{"title":"","path":"\\README.html","body":"Rangle’s Angular 2 Training Book 在过去三年半的时间里，AngularJS已经成为世界上数十万程序员的领先开源JavaScript应用程序框架。 AngularJS的“1.x”版本已被广泛使用，并且变得非常受欢迎的复杂应用程序。 新的“Angular 2”也宣布了其最终版本。 About Rangle’s Angular 2 Training Book 我们开发这本书被用作 Rangle 的Angular 2训练 的课程材料，但是很多人发现它对自己学习Angular 2是有用的。 本书将涵盖最重要的Angular 2主题，从使用Angular 2工具链入门到能够以可扩展和可维护的方式编写Angular 2应用程序。 如果您认为这种材料有用，您还应该考虑注册一个 Rangle的培训课程 ，这有助于实践学习，非常适合需要将他们的技术转换到Angular 2的公司，或者想要提高技能水平的个人。 Rangle.io还有一本 Angular 1.x 的书，适合于以Angular 2风格编写Angular 1.x应用程序。 我们希望你喜欢这本书。 我们欢迎您在讨论区的反馈。 ⚡️：文中包含此标签的的段落或句子均为译者额外添加。"},"README.html#Rangle’s-Angular-2-Training-Book":{"title":"Rangle&#x2019;s Angular 2 Training Book","path":"\\README.html#Rangle’s-Angular-2-Training-Book","body":"&#x5728;&#x8FC7;&#x53BB;&#x4E09;&#x5E74;&#x534A;&#x7684;&#x65F6;&#x95F4;&#x91CC;&#xFF0C;AngularJS&#x5DF2;&#x7ECF;&#x6210;&#x4E3A;&#x4E16;&#x754C;&#x4E0A;&#x6570;&#x5341;&#x4E07;&#x7A0B;&#x5E8F;&#x5458;&#x7684;&#x9886;&#x5148;&#x5F00;&#x6E90;JavaScript&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6846;&#x67B6;&#x3002; AngularJS&#x7684;&#x201C;1.x&#x201D;&#x7248;&#x672C;&#x5DF2;&#x88AB;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#xFF0C;&#x5E76;&#x4E14;&#x53D8;&#x5F97;&#x975E;&#x5E38;&#x53D7;&#x6B22;&#x8FCE;&#x7684;&#x590D;&#x6742;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x65B0;&#x7684;&#x201C;Angular 2&#x201D;&#x4E5F;&#x5BA3;&#x5E03;&#x4E86;&#x5176;&#x6700;&#x7EC8;&#x7248;&#x672C;&#x3002;"},"README.html#About-Rangle’s-Angular-2-Training-Book":{"title":"About Rangle&#x2019;s Angular 2 Training Book","path":"\\README.html#About-Rangle’s-Angular-2-Training-Book","body":"&#x6211;&#x4EEC;&#x5F00;&#x53D1;&#x8FD9;&#x672C;&#x4E66;&#x88AB;&#x7528;&#x4F5C; Rangle &#x7684;Angular 2&#x8BAD;&#x7EC3; &#x7684;&#x8BFE;&#x7A0B;&#x6750;&#x6599;&#xFF0C;&#x4F46;&#x662F;&#x5F88;&#x591A;&#x4EBA;&#x53D1;&#x73B0;&#x5B83;&#x5BF9;&#x81EA;&#x5DF1;&#x5B66;&#x4E60;Angular 2&#x662F;&#x6709;&#x7528;&#x7684;&#x3002; &#x672C;&#x4E66;&#x5C06;&#x6DB5;&#x76D6;&#x6700;&#x91CD;&#x8981;&#x7684;Angular 2&#x4E3B;&#x9898;&#xFF0C;&#x4ECE;&#x4F7F;&#x7528;Angular 2&#x5DE5;&#x5177;&#x94FE;&#x5165;&#x95E8;&#x5230;&#x80FD;&#x591F;&#x4EE5;&#x53EF;&#x6269;&#x5C55;&#x548C;&#x53EF;&#x7EF4;&#x62A4;&#x7684;&#x65B9;&#x5F0F;&#x7F16;&#x5199;Angular 2&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x5982;&#x679C;&#x60A8;&#x8BA4;&#x4E3A;&#x8FD9;&#x79CD;&#x6750;&#x6599;&#x6709;&#x7528;&#xFF0C;&#x60A8;&#x8FD8;&#x5E94;&#x8BE5;&#x8003;&#x8651;&#x6CE8;&#x518C;&#x4E00;&#x4E2A; Rangle&#x7684;&#x57F9;&#x8BAD;&#x8BFE;&#x7A0B; &#xFF0C;&#x8FD9;&#x6709;&#x52A9;&#x4E8E;&#x5B9E;&#x8DF5;&#x5B66;&#x4E60;&#xFF0C;&#x975E;&#x5E38;&#x9002;&#x5408;&#x9700;&#x8981;&#x5C06;&#x4ED6;&#x4EEC;&#x7684;&#x6280;&#x672F;&#x8F6C;&#x6362;&#x5230;Angular 2&#x7684;&#x516C;&#x53F8;&#xFF0C;&#x6216;&#x8005;&#x60F3;&#x8981;&#x63D0;&#x9AD8;&#x6280;&#x80FD;&#x6C34;&#x5E73;&#x7684;&#x4E2A;&#x4EBA;&#x3002; Rangle.io&#x8FD8;&#x6709;&#x4E00;&#x672C; Angular 1.x &#x7684;&#x4E66;&#xFF0C;&#x9002;&#x5408;&#x4E8E;&#x4EE5;Angular 2&#x98CE;&#x683C;&#x7F16;&#x5199;Angular 1.x&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002; &#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x4F60;&#x559C;&#x6B22;&#x8FD9;&#x672C;&#x4E66;&#x3002; &#x6211;&#x4EEC;&#x6B22;&#x8FCE;&#x60A8;&#x5728;&#x8BA8;&#x8BBA;&#x533A;&#x7684;&#x53CD;&#x9988;&#x3002; &#x26A1;&#xFE0F;&#xFF1A;&#x6587;&#x4E2D;&#x5305;&#x542B;&#x6B64;&#x6807;&#x7B7E;&#x7684;&#x7684;&#x6BB5;&#x843D;&#x6216;&#x53E5;&#x5B50;&#x5747;&#x4E3A;&#x8BD1;&#x8005;&#x989D;&#x5916;&#x6DFB;&#x52A0;&#x3002;"},"a11y/why-a11y.html":{"title":"","path":"\\a11y\\why-a11y.html","body":"为什么需要无障碍 让网站无障碍会花费更多的时间开发，但是有很多原因，你应该让你的应用程序无障碍。 向每个人伸出援手 多项研究表明，约15-20％的人口生活在某种类型的残疾。相比之下，该数字高于目前除Chrome以外的任何一个浏览器受众特征。 在开发应用程序时不考虑这些用户意味着排除大量的人无法使用它舒适或完全。 与用户体验和SEO叠加 采用技术使网站可访问的网站将确保其符合所有人的最低可用性标准。 无障碍最初旨在用户可以经常光顾，用于电话的语音控制模式是一个这样的例子。 除此之外，诸如语义标记的可访问性技术帮助搜索引擎更好地理解应用程序，从而增加曝光度。 无障碍法 世界各国都有不同的可访问性规则，主要围绕两个主要指南集合： Web Content Accessibilities (WCAG) 2.0 和 Section 508 。不遵守这些规则会使您承担责任。"},"a11y/why-a11y.html#为什么需要无障碍":{"title":"&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x65E0;&#x969C;&#x788D;","path":"\\a11y\\why-a11y.html#为什么需要无障碍","body":"&#x8BA9;&#x7F51;&#x7AD9;&#x65E0;&#x969C;&#x788D;&#x4F1A;&#x82B1;&#x8D39;&#x66F4;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x5F00;&#x53D1;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x5F88;&#x591A;&#x539F;&#x56E0;&#xFF0C;&#x4F60;&#x5E94;&#x8BE5;&#x8BA9;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x65E0;&#x969C;&#x788D;&#x3002;"},"a11y/why-a11y.html#向每个人伸出援手":{"title":"&#x5411;&#x6BCF;&#x4E2A;&#x4EBA;&#x4F38;&#x51FA;&#x63F4;&#x624B;","path":"\\a11y\\why-a11y.html#向每个人伸出援手","body":"&#x591A;&#x9879;&#x7814;&#x7A76;&#x8868;&#x660E;&#xFF0C;&#x7EA6;15-20&#xFF05;&#x7684;&#x4EBA;&#x53E3;&#x751F;&#x6D3B;&#x5728;&#x67D0;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x6B8B;&#x75BE;&#x3002;&#x76F8;&#x6BD4;&#x4E4B;&#x4E0B;&#xFF0C;&#x8BE5;&#x6570;&#x5B57;&#x9AD8;&#x4E8E;&#x76EE;&#x524D;&#x9664;Chrome&#x4EE5;&#x5916;&#x7684;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#x53D7;&#x4F17;&#x7279;&#x5F81;&#x3002; &#x5728;&#x5F00;&#x53D1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x65F6;&#x4E0D;&#x8003;&#x8651;&#x8FD9;&#x4E9B;&#x7528;&#x6237;&#x610F;&#x5473;&#x7740;&#x6392;&#x9664;&#x5927;&#x91CF;&#x7684;&#x4EBA;&#x65E0;&#x6CD5;&#x4F7F;&#x7528;&#x5B83;&#x8212;&#x9002;&#x6216;&#x5B8C;&#x5168;&#x3002;"},"a11y/why-a11y.html#与用户体验和SEO叠加":{"title":"&#x4E0E;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#x548C;SEO&#x53E0;&#x52A0;","path":"\\a11y\\why-a11y.html#与用户体验和SEO叠加","body":"&#x91C7;&#x7528;&#x6280;&#x672F;&#x4F7F;&#x7F51;&#x7AD9;&#x53EF;&#x8BBF;&#x95EE;&#x7684;&#x7F51;&#x7AD9;&#x5C06;&#x786E;&#x4FDD;&#x5176;&#x7B26;&#x5408;&#x6240;&#x6709;&#x4EBA;&#x7684;&#x6700;&#x4F4E;&#x53EF;&#x7528;&#x6027;&#x6807;&#x51C6;&#x3002; &#x65E0;&#x969C;&#x788D;&#x6700;&#x521D;&#x65E8;&#x5728;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x7ECF;&#x5E38;&#x5149;&#x987E;&#xFF0C;&#x7528;&#x4E8E;&#x7535;&#x8BDD;&#x7684;&#x8BED;&#x97F3;&#x63A7;&#x5236;&#x6A21;&#x5F0F;&#x662F;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x4F8B;&#x5B50;&#x3002; &#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x8BF8;&#x5982;&#x8BED;&#x4E49;&#x6807;&#x8BB0;&#x7684;&#x53EF;&#x8BBF;&#x95EE;&#x6027;&#x6280;&#x672F;&#x5E2E;&#x52A9;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x66F4;&#x597D;&#x5730;&#x7406;&#x89E3;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x4ECE;&#x800C;&#x589E;&#x52A0;&#x66DD;&#x5149;&#x5EA6;&#x3002;"},"a11y/why-a11y.html#无障碍法":{"title":"&#x65E0;&#x969C;&#x788D;&#x6CD5;","path":"\\a11y\\why-a11y.html#无障碍法","body":"&#x4E16;&#x754C;&#x5404;&#x56FD;&#x90FD;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x53EF;&#x8BBF;&#x95EE;&#x6027;&#x89C4;&#x5219;&#xFF0C;&#x4E3B;&#x8981;&#x56F4;&#x7ED5;&#x4E24;&#x4E2A;&#x4E3B;&#x8981;&#x6307;&#x5357;&#x96C6;&#x5408;&#xFF1A; Web Content Accessibilities (WCAG) 2.0 &#x548C; Section 508 &#x3002;&#x4E0D;&#x9075;&#x5B88;&#x8FD9;&#x4E9B;&#x89C4;&#x5219;&#x4F1A;&#x4F7F;&#x60A8;&#x627F;&#x62C5;&#x8D23;&#x4EFB;&#x3002;"},"why_TypeScript.html":{"title":"","path":"\\why_TypeScript.html","body":"Angular: Why TypeScript? Angular 2 is written in TypeScript. In this article I will talk about why we made the decision. I’ll also share my experience of working with TypeScript: how it affects the way I write and refactor my code. I like TypeScript, but you don’t have to Even though Angular 2 is written in TypeScript, you don’t have to use it to write Angular 2 applications. The framework also works great with ES5, ES6, and Dart. TypeScript Has Great Tools The biggest selling point of TypeScript is tooling. It provides advanced autocompletion, navigation, and refactoring. Having such tools is almost a requirement for large projects. Without them the fear changing the code puts the code base in a semi-read-only state, and makes large-scale refactorings very risky and costly. TypeScript is not the only typed language that compiles to JavaScript. There are other languages with stronger type systems that in theory can provide absolutely phenomenal tooling. But in practice most of them do not have anything other than a compiler. This is because building rich dev tools has to be an explicit goal from day one, which it has been for the TypeScript team. That is why they built language services that can be used by editors to provide type checking and autocompletion. If you have wondered why there are so many editors with great TypeScript supports, the answer is the language services. The fact that intellisense and basic refactorings (e.g., rename a symbol) are reliable makes a huge impact on the process of writing and especially refactoring code. Although it is hard to measure, I feel that the refactorings that would have taken a few days before now can be done in less than a day. While TypeScript greatly improves the code editing experience, it makes the dev setup more complex, especially comparing to dropping an ES5 script on a page. In addition, you cannot use tools analyzing JavaScript source code (e.g., JSHint), but there are usually adequate replacements. TypeScript is a Superset of JavaScript Since TypeScript is a superset of JavaScript, you don’t need to go through a big rewrite to migrate to it. You can do it gradually, one module at a time. Just pick a module, rename the .js files into .ts, then incrementally add type annotations. When you are done with this module, pick the next one. Once the whole code base is typed, you can start tweaking the compiler settings to make it more strict. This process can take some time, but it was not a big problem for Angular 2, when we were migrating to TypeScript. Doing it gradually allowed us to keep developing new functionality and fixing bugs during the transition. TypeScript Makes Abstractions Explicit A good design is all about well-defined interfaces. And it is much easier to express the idea of an interface in a language that supports them. For instance, imagine a book-selling application where a purchase can be made by either a registered user through the UI or by an external system through some sort of an API. As you can see, both classes play the role of a purchaser. Despite being extremely important for the application, the notion of a purchaser is not clearly expressed in the code. There is no file named purchaser.js. And as a result, it is possible for someone modifying the code to miss the fact that this role even exists. It is hard, just by looking at the code to tell what objects can play the role of a purchaser, and what methods this role has. We do not know for sure, and we will not get much help from our tools. We have to infer this information manually, which is slow and error-prone. Now, compare it with a version where we explicitly define the Purchaser interface. The typed version clearly states that we have the Purchaser interface, and the User and ExternalSystem classes implement it. So TypeScript interfaces allow us to define abstractions/protocols/roles. It is important to realize that TypeScript does not force us to introduce extra abstractions. The Purchaser abstraction is present in the JavaScript version of the code, but it is not explicitly defined. In a statically-typed language, boundaries between subsystems are defined using interfaces. Since JavaScript lacks interfaces, boundaries are not well expressed in plain JavaScript. Not being able to clearly see the boundaries, developers start depending on concrete types instead of abstract interfaces, which leads to tight coupling. My experience of working on Angular 2 before and after our transition to TypeScript reinforced this belief. Defining an interface forces me to think about the API boundaries, helps me define the public interfaces of subsystems, and exposes incidental coupling. TypeScript Makes Code Easier to Read and Understand Yes, I know it does not seem intuitive. Let me try to illustrate what I mean with an example. Let’s look at this function jQuery.ajax(). What kind of information can we get from its signature? The only thing we can tell for sure is that the function takes two arguments. We can guess the types. Maybe the first one is a string and the second one is a configuration object. But it is just a guess, and we might be wrong. We have no idea what options go into the settings object (neither their names nor their types), or what this function returns. There is no way we can call this function without checking the source code or the documentation. Checking the source code is not a good option — the point of having functions and classes is to be able to use them without knowing how they are implemented. In other words, we should rely on their interfaces, not on their implementation. We can check the documentation, but it is not the best developer experience — it takes additional time, and the docs are often out-of-date. So although it is easy to read jQuery.ajax(url, settings), to really understand how to call this function we need to either read its implementation or its docs. Now, contrast it with a typed version. It gives us a lot more information. The first argument of this function is a string. The settings argument is optional. We can see all the options that can be passed into the function, and not only their names, but also their types. The function returns a JQueryXHR object, and we can see its properties and functions. The typed signature is certainly longer than the untyped one, but :string, :JQueryAjaxSettings, and JQueryXHR are not clutter. They are important documentation that improves the comprehensibility of the code. We can understand the code to a much greater degree without having to dive into the implementation or reading the docs. My personal experience is that I can read the typed code faster because types provide more context to understand the code. But if any of the readers can find a study on how types affect code readability, please leave a comment. One thing that is different about TypeScript comparing to many other languages compiled to JavaScript is that its type annotations are optional, and jQuery.ajax(url, settings) is still valid TypeScript. So instead of an on-off switch, TypeScript’s types are more of a dial. If you find that the code is trivial to read and understand without type annotations, do not use them. Use types only when they add value. Does TypeScript Limit Expressiveness? Dynamically-typed languages have inferior tooling, but they are more malleable and expressive. I think using TypeScript makes your code more rigid, but to a much lesser degree than people think. Let me show you what I mean. Let’s say I use ImmutableJS to define the Person record. How do we type the record? Let’s start with defining an interface called Person: If we try to do the following: the TypeScript compiler will complain. It does not know that PersonRecord is actually compatible with Person because PersonRecord is created reflectively. Some of you with the FP background are probably saying: “If only TypeScript had dependent types!” But it does not. TypeScript’s type system is not the most advanced one. But its goal is different. It is not here to prove that the program is 100% correct. It is about giving you more information and enable greater tooling. So it is OK to take shortcuts when the type system is not flexible enough. So we can just cast the created record, as follows: The typed example: The reason why it works is because the type system is structural. As long as the created object has the right fields — name and age — we are good. You need to embrace the mindset that it is OK to take shortcuts when working with TypeScript. Only then you will find using the language enjoyable. For instance, don’t try to add types to some funky metaprogramming code — most likely you won’t be able to express it statically. Type everything around that code, and tell the typechecker to ignore the funky bit. In this case you will not lose a lot of expressiveness, and the bulk of your code will remain toolable and analyzable. This is similar to trying to get 100% unit test code coverage. Whereas getting 95% is usually not that difficult, getting 100% can be challenging, and may negatively affect the architecture of your application. The optional type system also preserves the JavaScript development workflow. Large parts of your application’s code base can be “broken”, but you can still run it. TypeScript will keep generating JavaScript, even when the type checker complains. This is extremely useful during development. Why TypeScript? There are a lot of options available to frontend devs today: ES5, ES6 (Babel), TypeScript, Dart, PureScript, Elm, etc.. So why TypeScript? Let’s start with ES5. ES5 has one significant advantage over TypeScript: it does not require a transpiler. This allows you to keep your build setup simple. You do not need to set up file watchers, transpile code, generate source maps. It just works. ES6 requires a transpiler, so the build setup will not be much different from TypeScript. But it is a standard, which means that every single editor and build tool either supports ES6 or will support it. This is a weaker argument that it used to be as most editors at this point have excellent TypeScript support. Elm and PureScript are elegant languages with powerful type systems that can prove a lot more about your program than TypeScript can. The code written in Elm and PureScript can be a lot terser than similar code written in ES5. Each of these options has pros and cons, but I think TypeScript is in a sweet spot that makes it a great choice for most projects. TypeScript takes 95% of the usefulness of a good statically-typed language and brings it to the JavaScript ecosystem. You still feel like you write ES6: you keep using the same standard library, same third-party libraries, same idioms, and many of the same tools (e.g., Chrome dev tools). It gives you a lot without forcing you out of the JavaScript ecosystem."},"why_TypeScript.html#Angular-Why-TypeScript":{"title":"Angular: Why TypeScript?","path":"\\why_TypeScript.html#Angular-Why-TypeScript","body":"Angular 2 is written in TypeScript. In this article I will talk about why we made the decision. I&#x2019;ll also share my experience of working with TypeScript: how it affects the way I write and refactor my code. I like TypeScript, but you don&#x2019;t have to Even though Angular 2 is written in TypeScript, you don&#x2019;t have to use it to write Angular 2 applications. The framework also works great with ES5, ES6, and Dart. TypeScript Has Great Tools The biggest selling point of TypeScript is tooling. It provides advanced autocompletion, navigation, and refactoring. Having such tools is almost a requirement for large projects. Without them the fear changing the code puts the code base in a semi-read-only state, and makes large-scale refactorings very risky and costly. TypeScript is not the only typed language that compiles to JavaScript. There are other languages with stronger type systems that in theory can provide absolutely phenomenal tooling. But in practice most of them do not have anything other than a compiler. This is because building rich dev tools has to be an explicit goal from day one, which it has been for the TypeScript team. That is why they built language services that can be used by editors to provide type checking and autocompletion. If you have wondered why there are so many editors with great TypeScript supports, the answer is the language services. The fact that intellisense and basic refactorings (e.g., rename a symbol) are reliable makes a huge impact on the process of writing and especially refactoring code. Although it is hard to measure, I feel that the refactorings that would have taken a few days before now can be done in less than a day. While TypeScript greatly improves the code editing experience, it makes the dev setup more complex, especially comparing to dropping an ES5 script on a page. In addition, you cannot use tools analyzing JavaScript source code (e.g., JSHint), but there are usually adequate replacements. TypeScript is a Superset of JavaScript Since TypeScript is a superset of JavaScript, you don&#x2019;t need to go through a big rewrite to migrate to it. You can do it gradually, one module at a time. Just pick a module, rename the .js files into .ts, then incrementally add type annotations. When you are done with this module, pick the next one. Once the whole code base is typed, you can start tweaking the compiler settings to make it more strict. This process can take some time, but it was not a big problem for Angular 2, when we were migrating to TypeScript. Doing it gradually allowed us to keep developing new functionality and fixing bugs during the transition. TypeScript Makes Abstractions Explicit A good design is all about well-defined interfaces. And it is much easier to express the idea of an interface in a language that supports them. For instance, imagine a book-selling application where a purchase can be made by either a registered user through the UI or by an external system through some sort of an API. As you can see, both classes play the role of a purchaser. Despite being extremely important for the application, the notion of a purchaser is not clearly expressed in the code. There is no file named purchaser.js. And as a result, it is possible for someone modifying the code to miss the fact that this role even exists. It is hard, just by looking at the code to tell what objects can play the role of a purchaser, and what methods this role has. We do not know for sure, and we will not get much help from our tools. We have to infer this information manually, which is slow and error-prone. Now, compare it with a version where we explicitly define the Purchaser interface. The typed version clearly states that we have the Purchaser interface, and the User and ExternalSystem classes implement it. So TypeScript interfaces allow us to define abstractions/protocols/roles. It is important to realize that TypeScript does not force us to introduce extra abstractions. The Purchaser abstraction is present in the JavaScript version of the code, but it is not explicitly defined. In a statically-typed language, boundaries between subsystems are defined using interfaces. Since JavaScript lacks interfaces, boundaries are not well expressed in plain JavaScript. Not being able to clearly see the boundaries, developers start depending on concrete types instead of abstract interfaces, which leads to tight coupling. My experience of working on Angular 2 before and after our transition to TypeScript reinforced this belief. Defining an interface forces me to think about the API boundaries, helps me define the public interfaces of subsystems, and exposes incidental coupling. TypeScript Makes Code Easier to Read and Understand Yes, I know it does not seem intuitive. Let me try to illustrate what I mean with an example. Let&#x2019;s look at this function jQuery.ajax(). What kind of information can we get from its signature? The only thing we can tell for sure is that the function takes two arguments. We can guess the types. Maybe the first one is a string and the second one is a configuration object. But it is just a guess, and we might be wrong. We have no idea what options go into the settings object (neither their names nor their types), or what this function returns. There is no way we can call this function without checking the source code or the documentation. Checking the source code is not a good option&#x200A;&#x2014;&#x200A;the point of having functions and classes is to be able to use them without knowing how they are implemented. In other words, we should rely on their interfaces, not on their implementation. We can check the documentation, but it is not the best developer experience&#x200A;&#x2014;&#x200A;it takes additional time, and the docs are often out-of-date. So although it is easy to read jQuery.ajax(url, settings), to really understand how to call this function we need to either read its implementation or its docs. Now, contrast it with a typed version. It gives us a lot more information. The first argument of this function is a string. The settings argument is optional. We can see all the options that can be passed into the function, and not only their names, but also their types. The function returns a JQueryXHR object, and we can see its properties and functions. The typed signature is certainly longer than the untyped one, but :string, :JQueryAjaxSettings, and JQueryXHR are not clutter. They are important documentation that improves the comprehensibility of the code. We can understand the code to a much greater degree without having to dive into the implementation or reading the docs. My personal experience is that I can read the typed code faster because types provide more context to understand the code. But if any of the readers can find a study on how types affect code readability, please leave a comment. One thing that is different about TypeScript comparing to many other languages compiled to JavaScript is that its type annotations are optional, and jQuery.ajax(url, settings) is still valid TypeScript. So instead of an on-off switch, TypeScript&#x2019;s types are more of a dial. If you find that the code is trivial to read and understand without type annotations, do not use them. Use types only when they add value. Does TypeScript Limit Expressiveness? Dynamically-typed languages have inferior tooling, but they are more malleable and expressive. I think using TypeScript makes your code more rigid, but to a much lesser degree than people think. Let me show you what I mean. Let&#x2019;s say I use ImmutableJS to define the Person record. How do we type the record? Let&#x2019;s start with defining an interface called Person: If we try to do the following: the TypeScript compiler will complain. It does not know that PersonRecord is actually compatible with Person because PersonRecord is created reflectively. Some of you with the FP background are probably saying: &#x201C;If only TypeScript had dependent types!&#x201D; But it does not. TypeScript&#x2019;s type system is not the most advanced one. But its goal is different. It is not here to prove that the program is 100% correct. It is about giving you more information and enable greater tooling. So it is OK to take shortcuts when the type system is not flexible enough. So we can just cast the created record, as follows: The typed example: The reason why it works is because the type system is structural. As long as the created object has the right fields&#x200A;&#x2014;&#x200A;name and age&#x200A;&#x2014;&#x200A;we are good. You need to embrace the mindset that it is OK to take shortcuts when working with TypeScript. Only then you will find using the language enjoyable. For instance, don&#x2019;t try to add types to some funky metaprogramming code&#x200A;&#x2014;&#x200A;most likely you won&#x2019;t be able to express it statically. Type everything around that code, and tell the typechecker to ignore the funky bit. In this case you will not lose a lot of expressiveness, and the bulk of your code will remain toolable and analyzable. This is similar to trying to get 100% unit test code coverage. Whereas getting 95% is usually not that difficult, getting 100% can be challenging, and may negatively affect the architecture of your application. The optional type system also preserves the JavaScript development workflow. Large parts of your application&#x2019;s code base can be &#x201C;broken&#x201D;, but you can still run it. TypeScript will keep generating JavaScript, even when the type checker complains. This is extremely useful during development. Why TypeScript? There are a lot of options available to frontend devs today: ES5, ES6 (Babel), TypeScript, Dart, PureScript, Elm, etc.. So why TypeScript? Let&#x2019;s start with ES5. ES5 has one significant advantage over TypeScript: it does not require a transpiler. This allows you to keep your build setup simple. You do not need to set up file watchers, transpile code, generate source maps. It just works. ES6 requires a transpiler, so the build setup will not be much different from TypeScript. But it is a standard, which means that every single editor and build tool either supports ES6 or will support it. This is a weaker argument that it used to be as most editors at this point have excellent TypeScript support. Elm and PureScript are elegant languages with powerful type systems that can prove a lot more about your program than TypeScript can. The code written in Elm and PureScript can be a lot terser than similar code written in ES5. Each of these options has pros and cons, but I think TypeScript is in a sweet spot that makes it a great choice for most projects. TypeScript takes 95% of the usefulness of a good statically-typed language and brings it to the JavaScript ecosystem. You still feel like you write ES6: you keep using the same standard library, same third-party libraries, same idioms, and many of the same tools (e.g., Chrome dev tools). It gives you a lot without forcing you out of the JavaScript ecosystem."}}}